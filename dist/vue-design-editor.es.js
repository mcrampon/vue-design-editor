import { createElementBlock as Kt, openBlock as St, normalizeStyle as Dg, normalizeClass as Xs, createCommentVNode as ri, createElementVNode as $i, Fragment as vo, renderList as Mo, createBlock as Va, resolveDynamicComponent as ap, createSlots as I3, withCtx as Yy, defineComponent as z3, getCurrentInstance as L3, ref as Ig, watchEffect as B3, computed as Qy, h as q3, onUnmounted as F3, onMounted as U3, watch as zg, unref as V3, resolveComponent as Fc, toDisplayString as Aa, createTextVNode as W3, createVNode as HS, markRaw as H3 } from "vue";
const id = (t, e) => {
  const n = t.__vccOpts || t;
  for (const [r, i] of e)
    n[r] = i;
  return n;
}, K3 = [
  "top-left",
  "top-center",
  "top-right",
  "center-right",
  "bottom-right",
  "bottom-center",
  "bottom-left",
  "center-left"
], G3 = ["center-right", "bottom-right", "bottom-center"], J3 = {
  props: {
    embeddedComponent: {
      type: Object,
      required: !0
    },
    selected: {
      type: Boolean,
      required: !0
    },
    interactable: {
      type: Boolean,
      required: !0
    },
    canvasScale: {
      type: Number,
      default: 1
    },
    slotInEditMode: {
      type: String,
      default: ""
    }
  },
  emits: ["mounted", "resize"],
  data: function() {
    return {
      resizers: K3,
      slotResizers: G3
    };
  },
  computed: {
    rendered: function() {
      return this.embeddedComponent.render(this.embeddedComponent.props);
    },
    nonDefaultSlots: function() {
      const t = "default", { [t]: e, ...n } = this.embeddedComponent.canvasData.slots || {};
      return n;
    },
    defaultSlot: function() {
      return this.embeddedComponent.canvasData.slots?.default;
    },
    transform: function() {
      return this.embeddedComponent.canvasData.transform;
    },
    width: function() {
      return this.size(this.embeddedComponent.canvasData.width);
    },
    height: function() {
      return this.size(this.embeddedComponent.canvasData.height);
    },
    borderSize: function() {
      return Math.max(1, 2 / this.canvasScale) + "px";
    },
    handleSize: function() {
      return Math.max(4, 16 / this.canvasScale) + "px";
    },
    offsetSize: function() {
      return -Math.max(2, 8 / this.canvasScale) + "px";
    }
  },
  mounted: function() {
    this.$emit("mounted", this);
  },
  methods: {
    onMouseDown: function(t, e) {
      t.stopPropagation(), this.$emit("resize", t, e);
    },
    renderedSlot: function(t) {
      return t.render();
    },
    editingSlot: function(t) {
      return this.slotInEditMode === t;
    },
    slotWidth: function(t) {
      return this.size(
        this.embeddedComponent.canvasData.slots[t]?.canvasData?.width
      );
    },
    slotHeight: function(t) {
      return this.size(
        this.embeddedComponent.canvasData.slots[t]?.canvasData?.height
      );
    },
    size: function(t) {
      return t === "auto" ? "auto" : `${t}px`;
    }
  }
}, Y3 = {
  key: 0,
  class: "resizers-wrapper"
}, Q3 = ["onMousedown"], X3 = {
  key: 0,
  class: "resizers-wrapper"
}, Z3 = ["onMousedown"], eM = {
  key: 0,
  class: "resizers-wrapper"
}, tM = ["onMousedown"];
function nM(t, e, n, r, i, o) {
  return St(), Kt("div", {
    ref: "wrapper",
    class: Xs(["selectable-component-wrapper", { selected: n.selected }]),
    style: Dg({
      transform: o.transform,
      width: o.width,
      height: o.height,
      "--borderSize": o.borderSize,
      "--handleSize": o.handleSize,
      "--offsetSize": o.offsetSize
    })
  }, [
    n.selected && !n.slotInEditMode ? (St(), Kt("div", Y3, [
      (St(!0), Kt(vo, null, Mo(t.resizers, (s) => (St(), Kt("div", {
        key: s,
        class: Xs(s),
        draggable: "false",
        onMousedown: (a) => o.onMouseDown(a, s)
      }, null, 42, Q3))), 128))
    ])) : ri("", !0),
    $i("div", {
      class: Xs(["embedded-comp", { interactable: n.interactable }])
    }, [
      (St(), Va(ap(o.rendered), null, I3({
        default: Yy(() => [
          o.defaultSlot ? (St(), Kt("div", {
            key: 0,
            ref: "slot:default",
            class: "slot",
            style: Dg({
              width: o.slotWidth("default"),
              height: o.slotHeight("default")
            })
          }, [
            o.editingSlot("default") ? (St(), Kt("div", X3, [
              (St(!0), Kt(vo, null, Mo(t.slotResizers, (s) => (St(), Kt("div", {
                key: s,
                class: Xs(s),
                draggable: "false",
                onMousedown: (a) => o.onMouseDown(a, s)
              }, null, 42, Z3))), 128))
            ])) : ri("", !0),
            (St(), Va(ap(o.renderedSlot(o.defaultSlot))))
          ], 4)) : ri("", !0)
        ]),
        _: 2
      }, [
        Mo(o.nonDefaultSlots, (s) => ({
          name: s,
          fn: Yy(() => [
            $i("div", {
              class: "slot",
              style: Dg({ width: o.slotWidth(s), height: o.slotHeight(s) })
            }, [
              o.editingSlot(s) ? (St(), Kt("div", eM, [
                (St(!0), Kt(vo, null, Mo(t.slotResizers, (a) => (St(), Kt("div", {
                  key: a,
                  class: Xs(a),
                  draggable: "false",
                  onMousedown: (l) => o.onMouseDown(l, a)
                }, null, 42, tM))), 128))
              ])) : ri("", !0),
              (St(), Va(ap(o.renderedSlot(s))))
            ], 4)
          ])
        }))
      ]), 1024))
    ], 2)
  ], 6);
}
const rM = /* @__PURE__ */ id(J3, [["render", nM], ["__scopeId", "data-v-2e350b16"]]);
function Dr(t) {
  return Array.isArray(t);
}
function Ur(t) {
  return t !== null && typeof t == "object" && (t.constructor === void 0 || // for example Object.create(null)
  t.constructor.name === "Object");
}
function KS(t) {
  return t && typeof t == "object" ? t.op === "add" : !1;
}
function GS(t) {
  return t && typeof t == "object" ? t.op === "remove" : !1;
}
function Zb(t) {
  return t && typeof t == "object" ? t.op === "replace" : !1;
}
function i0(t) {
  return t && typeof t == "object" ? t.op === "copy" : !1;
}
function Dl(t) {
  return t && typeof t == "object" ? t.op === "move" : !1;
}
function iM(t, e) {
  return JSON.stringify(t) === JSON.stringify(e);
}
function oM(t, e) {
  return t === e;
}
function JS(t) {
  return t.slice(0, t.length - 1);
}
function sM(t) {
  return t[t.length - 1];
}
function aM(t, e) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : oM;
  if (t.length < e.length)
    return !1;
  for (let r = 0; r < e.length; r++)
    if (!n(t[r], e[r]))
      return !1;
  return !0;
}
function YS(t) {
  return typeof t == "object" && t !== null;
}
function e1(t) {
  if (Dr(t)) {
    const e = t.slice();
    return Object.getOwnPropertySymbols(t).forEach((n) => {
      e[n] = t[n];
    }), e;
  }
  if (Ur(t)) {
    const e = {
      ...t
    };
    return Object.getOwnPropertySymbols(t).forEach((n) => {
      e[n] = t[n];
    }), e;
  }
  return t;
}
function t1(t, e, n) {
  if (t[e] === n)
    return t;
  const r = e1(t);
  return r[e] = n, r;
}
function Ze(t, e) {
  let n = t, r = 0;
  for (; r < e.length; )
    Ur(n) ? n = n[e[r]] : Dr(n) ? n = n[Number.parseInt(e[r])] : n = void 0, r++;
  return n;
}
function Ji(t, e, n) {
  let r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
  if (e.length === 0)
    return n;
  const i = e[0], o = Ji(t ? t[i] : void 0, e.slice(1), n, r);
  if (Ur(t) || Dr(t))
    return t1(t, i, o);
  if (r) {
    const s = lM.test(i) ? [] : {};
    return s[i] = o, s;
  }
  throw new Error("Path does not exist");
}
const lM = /^\d+$/;
function n1(t, e, n) {
  if (e.length === 0)
    return n(t);
  if (!YS(t))
    throw new Error("Path doesn't exist");
  const r = e[0], i = n1(t[r], e.slice(1), n);
  return t1(t, r, i);
}
function zm(t, e) {
  if (e.length === 0)
    return t;
  if (!YS(t))
    throw new Error("Path does not exist");
  if (e.length === 1) {
    const i = e[0];
    if (!(i in t))
      return t;
    const o = e1(t);
    return Dr(o) && o.splice(Number.parseInt(i), 1), Ur(o) && delete o[i], o;
  }
  const n = e[0], r = zm(t[n], e.slice(1));
  return t1(t, n, r);
}
function r1(t, e, n) {
  const r = e.slice(0, e.length - 1), i = e[e.length - 1];
  return n1(t, r, (o) => {
    if (!Array.isArray(o))
      throw new TypeError(`Array expected at path ${JSON.stringify(r)}`);
    const s = e1(o);
    return s.splice(Number.parseInt(i), 0, n), s;
  });
}
function ro(t, e) {
  return t === void 0 ? !1 : e.length === 0 ? !0 : t === null ? !1 : ro(t[e[0]], e.slice(1));
}
function io(t) {
  const e = t.split("/");
  return e.shift(), e.map((n) => n.replace(/~1/g, "/").replace(/~0/g, "~"));
}
function bt(t) {
  return t.map(QS).join("");
}
function QS(t) {
  return `/${String(t).replace(/~/g, "~0").replace(/\//g, "~1")}`;
}
function Ad(t, e) {
  return t + QS(e);
}
function Go(t, e, n) {
  let r = t;
  for (let i = 0; i < e.length; i++) {
    gM(e[i]);
    let o = e[i];
    if (n?.before) {
      const l = n.before(r, o);
      if (l !== void 0) {
        if (l.document !== void 0 && (r = l.document), l.json !== void 0)
          throw new Error('Deprecation warning: returned object property ".json" has been renamed to ".document"');
        l.operation !== void 0 && (o = l.operation);
      }
    }
    const s = r, a = Jo(r, o.path);
    if (o.op === "add")
      r = fM(r, a, o.value);
    else if (o.op === "remove")
      r = uM(r, a);
    else if (o.op === "replace")
      r = cM(r, a, o.value);
    else if (o.op === "copy")
      r = dM(r, a, o0(o.from));
    else if (o.op === "move")
      r = hM(r, a, o0(o.from));
    else if (o.op === "test")
      pM(r, a, o.value);
    else
      throw new Error(`Unknown JSONPatch operation ${JSON.stringify(o)}`);
    if (n?.after) {
      const l = n.after(r, o, s);
      l !== void 0 && (r = l);
    }
  }
  return r;
}
function cM(t, e, n) {
  return ro(t, e) ? Ji(t, e, n) : t;
}
function uM(t, e) {
  return zm(t, e);
}
function fM(t, e, n) {
  return od(t, e) ? r1(t, e, n) : Ji(t, e, n);
}
function dM(t, e, n) {
  const r = Ze(t, n);
  return od(t, e) ? r1(t, e, r) : Ji(t, e, r);
}
function hM(t, e, n) {
  const r = Ze(t, n), i = zm(t, n);
  return od(i, e) ? r1(i, e, r) : Ji(i, e, r);
}
function pM(t, e, n) {
  if (n === void 0)
    throw new Error(`Test failed: no value provided (path: "${bt(e)}")`);
  if (!ro(t, e))
    throw new Error(`Test failed: path not found (path: "${bt(e)}")`);
  const r = Ze(t, e);
  if (!iM(r, n))
    throw new Error(`Test failed, value differs (path: "${bt(e)}")`);
}
function od(t, e) {
  if (e.length === 0)
    return !1;
  const n = Ze(t, JS(e));
  return Array.isArray(n);
}
function mM(t, e) {
  if (sM(e) !== "-")
    return e;
  const n = JS(e), r = Ze(t, n);
  return n.concat(r.length);
}
function gM(t) {
  if (!["add", "remove", "replace", "copy", "move", "test"].includes(t.op))
    throw new Error(`Unknown JSONPatch op ${JSON.stringify(t.op)}`);
  if (typeof t.path != "string")
    throw new Error(`Required property "path" missing or not a string in operation ${JSON.stringify(t)}`);
  if ((t.op === "copy" || t.op === "move") && typeof t.from != "string")
    throw new Error(`Required property "from" missing or not a string in operation ${JSON.stringify(t)}`);
}
function Jo(t, e) {
  return mM(t, io(e));
}
function o0(t) {
  return io(t);
}
function XS(t, e, n) {
  let r = [];
  return Go(t, e, {
    before: (o, s) => {
      let a;
      const l = Jo(o, s.path);
      if (s.op === "add")
        a = tC(o, l);
      else if (s.op === "remove")
        a = eC(o, l);
      else if (s.op === "replace")
        a = ZS(o, l);
      else if (s.op === "copy")
        a = vM(o, l);
      else if (s.op === "move")
        a = bM(o, l, o0(s.from));
      else if (s.op === "test")
        a = [];
      else
        throw new Error(`Unknown JSONPatch operation ${JSON.stringify(s)}`);
      let u;
      if (n?.before) {
        const f = n.before(o, s, a);
        if (f?.revertOperations && (a = f.revertOperations), f?.document && (u = f.document), f?.json)
          throw new Error('Deprecation warning: returned object property ".json" has been renamed to ".document"');
      }
      if (r = a.concat(r), u !== void 0)
        return {
          document: u
        };
    }
  }), r;
}
function ZS(t, e) {
  return ro(t, e) ? [{
    op: "replace",
    path: bt(e),
    value: Ze(t, e)
  }] : [];
}
function eC(t, e) {
  return [{
    op: "add",
    path: bt(e),
    value: Ze(t, e)
  }];
}
function tC(t, e) {
  return od(t, e) || !ro(t, e) ? [{
    op: "remove",
    path: bt(e)
  }] : ZS(t, e);
}
function vM(t, e) {
  return tC(t, e);
}
function bM(t, e, n) {
  if (e.length < n.length && aM(n, e))
    return [{
      op: "replace",
      path: bt(e),
      value: t
    }];
  const r = {
    op: "move",
    from: bt(e),
    path: bt(n)
  };
  return !od(t, e) && ro(t, e) ? [r, ...eC(t, e)] : [r];
}
function nC(t) {
  return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t;
}
var Md = {}, Xy;
function yM() {
  if (Xy) return Md;
  Xy = 1;
  var t = {
    b: "\b",
    f: "\f",
    n: `
`,
    r: "\r",
    t: "	",
    '"': '"',
    "/": "/",
    "\\": "\\"
  }, e = 97;
  Md.parse = function(m, v, g) {
    var b = {}, x = 0, w = 0, j = 0, y = g && g.bigint && typeof BigInt < "u";
    return {
      data: k("", !0),
      pointers: b
    };
    function k(R, O) {
      S();
      var $;
      Ee(R, "value");
      var ne = W();
      switch (ne) {
        case "t":
          L("rue"), $ = !0;
          break;
        case "f":
          L("alse"), $ = !1;
          break;
        case "n":
          L("ull"), $ = null;
          break;
        case '"':
          $ = T();
          break;
        case "[":
          $ = N(R);
          break;
        case "{":
          $ = z(R);
          break;
        default:
          ce(), "-0123456789".indexOf(ne) >= 0 ? $ = M() : G();
      }
      return Ee(R, "valueEnd"), S(), O && j < m.length && G(), $;
    }
    function S() {
      e:
        for (; j < m.length; ) {
          switch (m[j]) {
            case " ":
              w++;
              break;
            case "	":
              w += 4;
              break;
            case "\r":
              w = 0;
              break;
            case `
`:
              w = 0, x++;
              break;
            default:
              break e;
          }
          j++;
        }
    }
    function T() {
      for (var R = "", O; O = W(), O != '"'; )
        O == "\\" ? (O = W(), O in t ? R += t[O] : O == "u" ? R += te() : B()) : R += O;
      return R;
    }
    function M() {
      var R = "", O = !0;
      m[j] == "-" && (R += W()), R += m[j] == "0" ? W() : we(), m[j] == "." && (R += W() + we(), O = !1), (m[j] == "e" || m[j] == "E") && (R += W(), (m[j] == "+" || m[j] == "-") && (R += W()), R += we(), O = !1);
      var $ = +R;
      return y && O && ($ > Number.MAX_SAFE_INTEGER || $ < Number.MIN_SAFE_INTEGER) ? BigInt(R) : $;
    }
    function N(R) {
      S();
      var O = [], $ = 0;
      if (W() == "]") return O;
      for (ce(); ; ) {
        var ne = R + "/" + $;
        O.push(k(ne)), S();
        var je = W();
        if (je == "]") break;
        je != "," && B(), S(), $++;
      }
      return O;
    }
    function z(R) {
      S();
      var O = {};
      if (W() == "}") return O;
      for (ce(); ; ) {
        var $ = re();
        W() != '"' && B();
        var ne = T(), je = R + "/" + p(ne);
        ae(je, "key", $), Ee(je, "keyEnd"), S(), W() != ":" && B(), S(), O[ne] = k(je), S();
        var J = W();
        if (J == "}") break;
        J != "," && B(), S();
      }
      return O;
    }
    function L(R) {
      for (var O = 0; O < R.length; O++)
        W() !== R[O] && B();
    }
    function W() {
      ie();
      var R = m[j];
      return j++, w++, R;
    }
    function ce() {
      j--, w--;
    }
    function te() {
      for (var R = 4, O = 0; R--; ) {
        O <<= 4;
        var $ = W().toLowerCase();
        $ >= "a" && $ <= "f" ? O += $.charCodeAt() - e + 10 : $ >= "0" && $ <= "9" ? O += +$ : B();
      }
      return String.fromCharCode(O);
    }
    function we() {
      for (var R = ""; m[j] >= "0" && m[j] <= "9"; )
        R += W();
      if (R.length) return R;
      ie(), G();
    }
    function Ee(R, O) {
      ae(R, O, re());
    }
    function ae(R, O, $) {
      b[R] = b[R] || {}, b[R][O] = $;
    }
    function re() {
      return {
        line: x,
        column: w,
        pos: j
      };
    }
    function G() {
      throw new SyntaxError("Unexpected token " + m[j] + " in JSON at position " + j);
    }
    function B() {
      ce(), G();
    }
    function ie() {
      if (j >= m.length)
        throw new SyntaxError("Unexpected end of JSON input");
    }
  }, Md.stringify = function(m, v, g) {
    if (!r(m)) return;
    var b = 0, x, w, j = typeof g == "object" ? g.space : g;
    switch (typeof j) {
      case "number":
        var y = j > 10 ? 10 : j < 0 ? 0 : Math.floor(j);
        j = y && ae(y, " "), x = y, w = y;
        break;
      case "string":
        j = j.slice(0, 10), x = 0, w = 0;
        for (var k = 0; k < j.length; k++) {
          var S = j[k];
          switch (S) {
            case " ":
              w++;
              break;
            case "	":
              w += 4;
              break;
            case "\r":
              w = 0;
              break;
            case `
`:
              w = 0, b++;
              break;
            default:
              throw new Error("whitespace characters not allowed in JSON");
          }
          x++;
        }
        break;
      default:
        j = void 0;
    }
    var T = "", M = {}, N = 0, z = 0, L = 0, W = g && g.es6 && typeof Map == "function";
    return ce(m, 0, ""), {
      json: T,
      pointers: M
    };
    function ce(re, G, B) {
      switch (Ee(B, "value"), typeof re) {
        case "number":
        case "bigint":
        case "boolean":
          te("" + re);
          break;
        case "string":
          te(f(re));
          break;
        case "object":
          re === null ? te("null") : typeof re.toJSON == "function" ? te(f(re.toJSON())) : Array.isArray(re) ? ie() : W ? re.constructor.BYTES_PER_ELEMENT ? ie() : re instanceof Map ? O() : re instanceof Set ? O(!0) : R() : R();
      }
      Ee(B, "valueEnd");
      function ie() {
        if (re.length) {
          te("[");
          for (var $ = G + 1, ne = 0; ne < re.length; ne++) {
            ne && te(","), we($);
            var je = r(re[ne]) ? re[ne] : null, J = B + "/" + ne;
            ce(je, $, J);
          }
          we(G), te("]");
        } else
          te("[]");
      }
      function R() {
        var $ = Object.keys(re);
        if ($.length) {
          te("{");
          for (var ne = G + 1, je = 0; je < $.length; je++) {
            var J = $[je], H = re[J];
            if (r(H)) {
              je && te(",");
              var ue = B + "/" + p(J);
              we(ne), Ee(ue, "key"), te(f(J)), Ee(ue, "keyEnd"), te(":"), j && te(" "), ce(H, ne, ue);
            }
          }
          we(G), te("}");
        } else
          te("{}");
      }
      function O($) {
        if (re.size) {
          te("{");
          for (var ne = G + 1, je = !0, J = re.entries(), H = J.next(); !H.done; ) {
            var ue = H.value, P = ue[0], V = $ ? !0 : ue[1];
            if (r(V)) {
              je || te(","), je = !1;
              var U = B + "/" + p(P);
              we(ne), Ee(U, "key"), te(f(P)), Ee(U, "keyEnd"), te(":"), j && te(" "), ce(V, ne, U);
            }
            H = J.next();
          }
          we(G), te("}");
        } else
          te("{}");
      }
    }
    function te(re) {
      z += re.length, L += re.length, T += re;
    }
    function we(re) {
      if (j) {
        for (T += `
` + ae(re, j), N++, z = 0; re--; )
          b ? (N += b, z = w) : z += w, L += x;
        L += 1;
      }
    }
    function Ee(re, G) {
      M[re] = M[re] || {}, M[re][G] = {
        line: N,
        column: z,
        pos: L
      };
    }
    function ae(re, G) {
      return Array(re + 1).join(G);
    }
  };
  var n = ["number", "bigint", "boolean", "string", "object"];
  function r(m) {
    return n.indexOf(typeof m) >= 0;
  }
  var i = /"|\\/g, o = /[\b]/g, s = /\f/g, a = /\n/g, l = /\r/g, u = /\t/g;
  function f(m) {
    return m = m.replace(i, "\\$&").replace(s, "\\f").replace(o, "\\b").replace(a, "\\n").replace(l, "\\r").replace(u, "\\t"), '"' + m + '"';
  }
  var d = /~/g, h = /\//g;
  function p(m) {
    return m.replace(d, "~0").replace(h, "~1");
  }
  return Md;
}
var xM = yM();
const rC = /* @__PURE__ */ nC(xM);
class vc extends Error {
  constructor(e, n) {
    super(`${e} at position ${n}`), this.position = n;
  }
}
const iC = 32, wM = 10, oC = 9, sC = 13, jM = 160, kM = 8192, SM = 8202, CM = 8239, OM = 8287, EM = 12288;
function _M(t) {
  return /^[0-9A-Fa-f]$/.test(t);
}
function jl(t) {
  return t >= "0" && t <= "9";
}
function AM(t) {
  return t >= " ";
}
function Td(t) {
  return `,:[]/{}()
+`.includes(t);
}
function Zy(t) {
  return t >= "a" && t <= "z" || t >= "A" && t <= "Z" || t === "_" || t === "$";
}
function ex(t) {
  return t >= "a" && t <= "z" || t >= "A" && t <= "Z" || t === "_" || t === "$" || t >= "0" && t <= "9";
}
const tx = /^(http|https|ftp|mailto|file|data|irc):\/\/$/, nx = /^[A-Za-z0-9-._~:/?#@!$&'()*+;=]$/;
function rx(t) {
  return `,[]/{}
+`.includes(t);
}
function ix(t) {
  return lp(t) || MM.test(t);
}
const MM = /^[[{\w-]$/;
function TM(t) {
  return t === `
` || t === "\r" || t === "	" || t === "\b" || t === "\f";
}
function Al(t, e) {
  const n = t.charCodeAt(e);
  return n === iC || n === wM || n === oC || n === sC;
}
function $M(t, e) {
  const n = t.charCodeAt(e);
  return n === iC || n === oC || n === sC;
}
function PM(t, e) {
  const n = t.charCodeAt(e);
  return n === jM || n >= kM && n <= SM || n === CM || n === OM || n === EM;
}
function lp(t) {
  return aC(t) || s0(t);
}
function aC(t) {
  return t === '"' || t === "“" || t === "”";
}
function ox(t) {
  return t === '"';
}
function s0(t) {
  return t === "'" || t === "‘" || t === "’" || t === "`" || t === "´";
}
function sx(t) {
  return t === "'";
}
function Ru(t, e) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  const r = t.lastIndexOf(e);
  return r !== -1 ? t.substring(0, r) + (n ? "" : t.substring(r + 1)) : t;
}
function Fo(t, e) {
  let n = t.length;
  if (!Al(t, n - 1))
    return t + e;
  for (; Al(t, n - 1); )
    n--;
  return t.substring(0, n) + e + t.substring(n);
}
function RM(t, e, n) {
  return t.substring(0, e) + t.substring(e + n);
}
function NM(t) {
  return /[,\n][ \t\r]*$/.test(t);
}
const DM = {
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t"
}, IM = {
  '"': '"',
  "\\": "\\",
  "/": "/",
  b: "\b",
  f: "\f",
  n: `
`,
  r: "\r",
  t: "	"
  // note that \u is handled separately in parseString()
};
function _s(t) {
  let e = 0, n = "";
  u(["```", "[```", "{```"]), o() || ce(), u(["```", "```]", "```}"]);
  const i = d(",");
  for (i && s(), ix(t[e]) && NM(n) ? (i || (n = Fo(n, ",")), b()) : i && (n = Ru(n, ",")); t[e] === "}" || t[e] === "]"; )
    e++, s();
  if (e >= t.length)
    return n;
  W();
  function o() {
    s();
    const ae = v() || g() || x() || j() || y() || S(!1) || T();
    return s(), ae;
  }
  function s() {
    let ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
    const re = e;
    let G = a(ae);
    do
      G = l(), G && (G = a(ae));
    while (G);
    return e > re;
  }
  function a(ae) {
    const re = ae ? Al : $M;
    let G = "";
    for (; ; )
      if (re(t, e))
        G += t[e], e++;
      else if (PM(t, e))
        G += " ", e++;
      else
        break;
    return G.length > 0 ? (n += G, !0) : !1;
  }
  function l() {
    if (t[e] === "/" && t[e + 1] === "*") {
      for (; e < t.length && !zM(t, e); )
        e++;
      return e += 2, !0;
    }
    if (t[e] === "/" && t[e + 1] === "/") {
      for (; e < t.length && t[e] !== `
`; )
        e++;
      return !0;
    }
    return !1;
  }
  function u(ae) {
    if (f(ae)) {
      if (Zy(t[e]))
        for (; e < t.length && ex(t[e]); )
          e++;
      return s(), !0;
    }
    return !1;
  }
  function f(ae) {
    for (const re of ae) {
      const G = e + re.length;
      if (t.slice(e, G) === re)
        return e = G, !0;
    }
    return !1;
  }
  function d(ae) {
    return t[e] === ae ? (n += t[e], e++, !0) : !1;
  }
  function h(ae) {
    return t[e] === ae ? (e++, !0) : !1;
  }
  function p() {
    return h("\\");
  }
  function m() {
    return s(), t[e] === "." && t[e + 1] === "." && t[e + 2] === "." ? (e += 3, s(), h(","), !0) : !1;
  }
  function v() {
    if (t[e] === "{") {
      n += "{", e++, s(), h(",") && s();
      let ae = !0;
      for (; e < t.length && t[e] !== "}"; ) {
        let re;
        if (ae ? (re = !0, ae = !1) : (re = d(","), re || (n = Fo(n, ",")), s()), m(), !(x() || S(!0))) {
          t[e] === "}" || t[e] === "{" || t[e] === "]" || t[e] === "[" || t[e] === void 0 ? n = Ru(n, ",") : te();
          break;
        }
        s();
        const B = d(":"), ie = e >= t.length;
        B || (ix(t[e]) || ie ? n = Fo(n, ":") : we()), o() || (B || ie ? n += "null" : we());
      }
      return t[e] === "}" ? (n += "}", e++) : n = Fo(n, "}"), !0;
    }
    return !1;
  }
  function g() {
    if (t[e] === "[") {
      n += "[", e++, s(), h(",") && s();
      let ae = !0;
      for (; e < t.length && t[e] !== "]"; )
        if (ae ? ae = !1 : d(",") || (n = Fo(n, ",")), m(), !o()) {
          n = Ru(n, ",");
          break;
        }
      return t[e] === "]" ? (n += "]", e++) : n = Fo(n, "]"), !0;
    }
    return !1;
  }
  function b() {
    let ae = !0, re = !0;
    for (; re; )
      ae ? ae = !1 : d(",") || (n = Fo(n, ",")), re = o();
    re || (n = Ru(n, ",")), n = `[
${n}
]`;
  }
  function x() {
    let ae = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, re = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1, G = t[e] === "\\";
    if (G && (e++, G = !0), lp(t[e])) {
      const B = ox(t[e]) ? ox : sx(t[e]) ? sx : s0(t[e]) ? s0 : aC, ie = e, R = n.length;
      let O = '"';
      for (e++; ; ) {
        if (e >= t.length) {
          const $ = M(e - 1);
          return !ae && Td(t.charAt($)) ? (e = ie, n = n.substring(0, R), x(!0)) : (O = Fo(O, '"'), n += O, !0);
        }
        if (e === re)
          return O = Fo(O, '"'), n += O, !0;
        if (B(t[e])) {
          const $ = e, ne = O.length;
          if (O += '"', e++, n += O, s(!1), ae || e >= t.length || Td(t[e]) || lp(t[e]) || jl(t[e]))
            return w(), !0;
          const je = M($ - 1), J = t.charAt(je);
          if (J === ",")
            return e = ie, n = n.substring(0, R), x(!1, je);
          if (Td(J))
            return e = ie, n = n.substring(0, R), x(!0);
          n = n.substring(0, R), e = $ + 1, O = `${O.substring(0, ne)}\\${O.substring(ne)}`;
        } else if (ae && rx(t[e])) {
          if (t[e - 1] === ":" && tx.test(t.substring(ie + 1, e + 2)))
            for (; e < t.length && nx.test(t[e]); )
              O += t[e], e++;
          return O = Fo(O, '"'), n += O, w(), !0;
        } else if (t[e] === "\\") {
          const $ = t.charAt(e + 1);
          if (IM[$] !== void 0)
            O += t.slice(e, e + 2), e += 2;
          else if ($ === "u") {
            let je = 2;
            for (; je < 6 && _M(t[e + je]); )
              je++;
            je === 6 ? (O += t.slice(e, e + 6), e += 6) : e + je >= t.length ? e = t.length : Ee();
          } else
            O += $, e += 2;
        } else {
          const $ = t.charAt(e);
          $ === '"' && t[e - 1] !== "\\" ? (O += `\\${$}`, e++) : TM($) ? (O += DM[$], e++) : (AM($) || L($), O += $, e++);
        }
        G && p();
      }
    }
    return !1;
  }
  function w() {
    let ae = !1;
    for (s(); t[e] === "+"; ) {
      ae = !0, e++, s(), n = Ru(n, '"', !0);
      const re = n.length;
      x() ? n = RM(n, re, 1) : n = Fo(n, '"');
    }
    return ae;
  }
  function j() {
    const ae = e;
    if (t[e] === "-") {
      if (e++, N())
        return z(ae), !0;
      if (!jl(t[e]))
        return e = ae, !1;
    }
    for (; jl(t[e]); )
      e++;
    if (t[e] === ".") {
      if (e++, N())
        return z(ae), !0;
      if (!jl(t[e]))
        return e = ae, !1;
      for (; jl(t[e]); )
        e++;
    }
    if (t[e] === "e" || t[e] === "E") {
      if (e++, (t[e] === "-" || t[e] === "+") && e++, N())
        return z(ae), !0;
      if (!jl(t[e]))
        return e = ae, !1;
      for (; jl(t[e]); )
        e++;
    }
    if (!N())
      return e = ae, !1;
    if (e > ae) {
      const re = t.slice(ae, e), G = /^0\d/.test(re);
      return n += G ? `"${re}"` : re, !0;
    }
    return !1;
  }
  function y() {
    return k("true", "true") || k("false", "false") || k("null", "null") || // repair Python keywords True, False, None
    k("True", "true") || k("False", "false") || k("None", "null");
  }
  function k(ae, re) {
    return t.slice(e, e + ae.length) === ae ? (n += re, e += ae.length, !0) : !1;
  }
  function S(ae) {
    const re = e;
    if (Zy(t[e])) {
      for (; e < t.length && ex(t[e]); )
        e++;
      let G = e;
      for (; Al(t, G); )
        G++;
      if (t[G] === "(")
        return e = G + 1, o(), t[e] === ")" && (e++, t[e] === ";" && e++), !0;
    }
    for (; e < t.length && !rx(t[e]) && !lp(t[e]) && (!ae || t[e] !== ":"); )
      e++;
    if (t[e - 1] === ":" && tx.test(t.substring(re, e + 2)))
      for (; e < t.length && nx.test(t[e]); )
        e++;
    if (e > re) {
      for (; Al(t, e - 1) && e > 0; )
        e--;
      const G = t.slice(re, e);
      return n += G === "undefined" ? "null" : JSON.stringify(G), t[e] === '"' && e++, !0;
    }
  }
  function T() {
    if (t[e] === "/") {
      const ae = e;
      for (e++; e < t.length && (t[e] !== "/" || t[e - 1] === "\\"); )
        e++;
      return e++, n += `"${t.substring(ae, e)}"`, !0;
    }
  }
  function M(ae) {
    let re = ae;
    for (; re > 0 && Al(t, re); )
      re--;
    return re;
  }
  function N() {
    return e >= t.length || Td(t[e]) || Al(t, e);
  }
  function z(ae) {
    n += `${t.slice(ae, e)}0`;
  }
  function L(ae) {
    throw new vc(`Invalid character ${JSON.stringify(ae)}`, e);
  }
  function W() {
    throw new vc(`Unexpected character ${JSON.stringify(t[e])}`, e);
  }
  function ce() {
    throw new vc("Unexpected end of json string", t.length);
  }
  function te() {
    throw new vc("Object key expected", e);
  }
  function we() {
    throw new vc("Colon expected", e);
  }
  function Ee() {
    const ae = t.slice(e, e + 6);
    throw new vc(`Invalid unicode character "${ae}"`, e);
  }
}
function zM(t, e) {
  return t[e] === "*" && t[e + 1] === "/";
}
var lC = typeof global == "object" && global && global.Object === Object && global, LM = typeof self == "object" && self && self.Object === Object && self, ls = lC || LM || Function("return this")(), Ro = ls.Symbol, cC = Object.prototype, BM = cC.hasOwnProperty, qM = cC.toString, Nu = Ro ? Ro.toStringTag : void 0;
function FM(t) {
  var e = BM.call(t, Nu), n = t[Nu];
  try {
    t[Nu] = void 0;
    var r = !0;
  } catch {
  }
  var i = qM.call(t);
  return r && (e ? t[Nu] = n : delete t[Nu]), i;
}
var UM = Object.prototype, VM = UM.toString;
function WM(t) {
  return VM.call(t);
}
var HM = "[object Null]", KM = "[object Undefined]", ax = Ro ? Ro.toStringTag : void 0;
function yu(t) {
  return t == null ? t === void 0 ? KM : HM : ax && ax in Object(t) ? FM(t) : WM(t);
}
function Qa(t) {
  return t != null && typeof t == "object";
}
var GM = "[object Symbol]";
function Vl(t) {
  return typeof t == "symbol" || Qa(t) && yu(t) == GM;
}
function af(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = Array(r); ++n < r; )
    i[n] = e(t[n], n, t);
  return i;
}
var Li = Array.isArray, lx = Ro ? Ro.prototype : void 0, cx = lx ? lx.toString : void 0;
function uC(t) {
  if (typeof t == "string")
    return t;
  if (Li(t))
    return af(t, uC) + "";
  if (Vl(t))
    return cx ? cx.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
var JM = /\s/;
function YM(t) {
  for (var e = t.length; e-- && JM.test(t.charAt(e)); )
    ;
  return e;
}
var QM = /^\s+/;
function XM(t) {
  return t && t.slice(0, YM(t) + 1).replace(QM, "");
}
function ha(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var ux = NaN, ZM = /^[-+]0x[0-9a-f]+$/i, eT = /^0b[01]+$/i, tT = /^0o[0-7]+$/i, nT = parseInt;
function a0(t) {
  if (typeof t == "number")
    return t;
  if (Vl(t))
    return ux;
  if (ha(t)) {
    var e = typeof t.valueOf == "function" ? t.valueOf() : t;
    t = ha(e) ? e + "" : e;
  }
  if (typeof t != "string")
    return t === 0 ? t : +t;
  t = XM(t);
  var n = eT.test(t);
  return n || tT.test(t) ? nT(t.slice(2), n ? 2 : 8) : ZM.test(t) ? ux : +t;
}
var fx = 1 / 0, rT = 17976931348623157e292;
function cp(t) {
  if (!t)
    return t === 0 ? t : 0;
  if (t = a0(t), t === fx || t === -fx) {
    var e = t < 0 ? -1 : 1;
    return e * rT;
  }
  return t === t ? t : 0;
}
function iT(t) {
  var e = cp(t), n = e % 1;
  return e === e ? n ? e - n : e : 0;
}
function sd(t) {
  return t;
}
var oT = "[object AsyncFunction]", sT = "[object Function]", aT = "[object GeneratorFunction]", lT = "[object Proxy]";
function fC(t) {
  if (!ha(t))
    return !1;
  var e = yu(t);
  return e == sT || e == aT || e == oT || e == lT;
}
var Lg = ls["__core-js_shared__"], dx = (function() {
  var t = /[^.]+$/.exec(Lg && Lg.keys && Lg.keys.IE_PROTO || "");
  return t ? "Symbol(src)_1." + t : "";
})();
function cT(t) {
  return !!dx && dx in t;
}
var uT = Function.prototype, fT = uT.toString;
function sc(t) {
  if (t != null) {
    try {
      return fT.call(t);
    } catch {
    }
    try {
      return t + "";
    } catch {
    }
  }
  return "";
}
var dT = /[\\^$.*+?()[\]{}|]/g, hT = /^\[object .+?Constructor\]$/, pT = Function.prototype, mT = Object.prototype, gT = pT.toString, vT = mT.hasOwnProperty, bT = RegExp(
  "^" + gT.call(vT).replace(dT, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function yT(t) {
  if (!ha(t) || cT(t))
    return !1;
  var e = fC(t) ? bT : hT;
  return e.test(sc(t));
}
function xT(t, e) {
  return t?.[e];
}
function ac(t, e) {
  var n = xT(t, e);
  return yT(n) ? n : void 0;
}
var l0 = ac(ls, "WeakMap"), hx = Object.create, wT = /* @__PURE__ */ (function() {
  function t() {
  }
  return function(e) {
    if (!ha(e))
      return {};
    if (hx)
      return hx(e);
    t.prototype = e;
    var n = new t();
    return t.prototype = void 0, n;
  };
})();
function jT(t, e, n) {
  switch (n.length) {
    case 0:
      return t.call(e);
    case 1:
      return t.call(e, n[0]);
    case 2:
      return t.call(e, n[0], n[1]);
    case 3:
      return t.call(e, n[0], n[1], n[2]);
  }
  return t.apply(e, n);
}
function Zr() {
}
var kT = 800, ST = 16, CT = Date.now;
function OT(t) {
  var e = 0, n = 0;
  return function() {
    var r = CT(), i = ST - (r - n);
    if (n = r, i > 0) {
      if (++e >= kT)
        return arguments[0];
    } else
      e = 0;
    return t.apply(void 0, arguments);
  };
}
function ET(t) {
  return function() {
    return t;
  };
}
var Tp = (function() {
  try {
    var t = ac(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {
  }
})(), _T = Tp ? function(t, e) {
  return Tp(t, "toString", {
    configurable: !0,
    enumerable: !1,
    value: ET(e),
    writable: !0
  });
} : sd, AT = OT(_T);
function MT(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r && e(t[n], n, t) !== !1; )
    ;
  return t;
}
var TT = 9007199254740991, $T = /^(?:0|[1-9]\d*)$/;
function i1(t, e) {
  var n = typeof t;
  return e = e ?? TT, !!e && (n == "number" || n != "symbol" && $T.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
function o1(t, e, n) {
  e == "__proto__" && Tp ? Tp(t, e, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : t[e] = n;
}
function Lm(t, e) {
  return t === e || t !== t && e !== e;
}
var PT = Object.prototype, RT = PT.hasOwnProperty;
function NT(t, e, n) {
  var r = t[e];
  (!(RT.call(t, e) && Lm(r, n)) || n === void 0 && !(e in t)) && o1(t, e, n);
}
var px = Math.max;
function DT(t, e, n) {
  return e = px(e === void 0 ? t.length - 1 : e, 0), function() {
    for (var r = arguments, i = -1, o = px(r.length - e, 0), s = Array(o); ++i < o; )
      s[i] = r[e + i];
    i = -1;
    for (var a = Array(e + 1); ++i < e; )
      a[i] = r[i];
    return a[e] = n(s), jT(t, this, a);
  };
}
function IT(t, e) {
  return AT(DT(t, e, sd), t + "");
}
var zT = 9007199254740991;
function s1(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= zT;
}
function ad(t) {
  return t != null && s1(t.length) && !fC(t);
}
function c0(t, e, n) {
  if (!ha(n))
    return !1;
  var r = typeof e;
  return (r == "number" ? ad(n) && i1(e, n.length) : r == "string" && e in n) ? Lm(n[e], t) : !1;
}
var LT = Object.prototype;
function a1(t) {
  var e = t && t.constructor, n = typeof e == "function" && e.prototype || LT;
  return t === n;
}
function dC(t, e) {
  for (var n = -1, r = Array(t); ++n < t; )
    r[n] = e(n);
  return r;
}
var BT = "[object Arguments]";
function mx(t) {
  return Qa(t) && yu(t) == BT;
}
var hC = Object.prototype, qT = hC.hasOwnProperty, FT = hC.propertyIsEnumerable, Bm = mx(/* @__PURE__ */ (function() {
  return arguments;
})()) ? mx : function(t) {
  return Qa(t) && qT.call(t, "callee") && !FT.call(t, "callee");
};
function UT() {
  return !1;
}
var pC = typeof exports == "object" && exports && !exports.nodeType && exports, gx = pC && typeof module == "object" && module && !module.nodeType && module, VT = gx && gx.exports === pC, vx = VT ? ls.Buffer : void 0, WT = vx ? vx.isBuffer : void 0, xf = WT || UT, HT = "[object Arguments]", KT = "[object Array]", GT = "[object Boolean]", JT = "[object Date]", YT = "[object Error]", QT = "[object Function]", XT = "[object Map]", ZT = "[object Number]", e$ = "[object Object]", t$ = "[object RegExp]", n$ = "[object Set]", r$ = "[object String]", i$ = "[object WeakMap]", o$ = "[object ArrayBuffer]", s$ = "[object DataView]", a$ = "[object Float32Array]", l$ = "[object Float64Array]", c$ = "[object Int8Array]", u$ = "[object Int16Array]", f$ = "[object Int32Array]", d$ = "[object Uint8Array]", h$ = "[object Uint8ClampedArray]", p$ = "[object Uint16Array]", m$ = "[object Uint32Array]", Tr = {};
Tr[a$] = Tr[l$] = Tr[c$] = Tr[u$] = Tr[f$] = Tr[d$] = Tr[h$] = Tr[p$] = Tr[m$] = !0;
Tr[HT] = Tr[KT] = Tr[o$] = Tr[GT] = Tr[s$] = Tr[JT] = Tr[YT] = Tr[QT] = Tr[XT] = Tr[ZT] = Tr[e$] = Tr[t$] = Tr[n$] = Tr[r$] = Tr[i$] = !1;
function g$(t) {
  return Qa(t) && s1(t.length) && !!Tr[yu(t)];
}
function qm(t) {
  return function(e) {
    return t(e);
  };
}
var mC = typeof exports == "object" && exports && !exports.nodeType && exports, lf = mC && typeof module == "object" && module && !module.nodeType && module, v$ = lf && lf.exports === mC, Bg = v$ && lC.process, tu = (function() {
  try {
    var t = lf && lf.require && lf.require("util").types;
    return t || Bg && Bg.binding && Bg.binding("util");
  } catch {
  }
})(), bx = tu && tu.isTypedArray, l1 = bx ? qm(bx) : g$, b$ = Object.prototype, y$ = b$.hasOwnProperty;
function x$(t, e) {
  var n = Li(t), r = !n && Bm(t), i = !n && !r && xf(t), o = !n && !r && !i && l1(t), s = n || r || i || o, a = s ? dC(t.length, String) : [], l = a.length;
  for (var u in t)
    y$.call(t, u) && !(s && // Safari 9 has enumerable `arguments.length` in strict mode.
    (u == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (u == "offset" || u == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    o && (u == "buffer" || u == "byteLength" || u == "byteOffset") || // Skip index properties.
    i1(u, l))) && a.push(u);
  return a;
}
function gC(t, e) {
  return function(n) {
    return t(e(n));
  };
}
var w$ = gC(Object.keys, Object), j$ = Object.prototype, k$ = j$.hasOwnProperty;
function vC(t) {
  if (!a1(t))
    return w$(t);
  var e = [];
  for (var n in Object(t))
    k$.call(t, n) && n != "constructor" && e.push(n);
  return e;
}
function Fm(t) {
  return ad(t) ? x$(t) : vC(t);
}
var S$ = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, C$ = /^\w*$/;
function c1(t, e) {
  if (Li(t))
    return !1;
  var n = typeof t;
  return n == "number" || n == "symbol" || n == "boolean" || t == null || Vl(t) ? !0 : C$.test(t) || !S$.test(t) || e != null && t in Object(e);
}
var wf = ac(Object, "create");
function O$() {
  this.__data__ = wf ? wf(null) : {}, this.size = 0;
}
function E$(t) {
  var e = this.has(t) && delete this.__data__[t];
  return this.size -= e ? 1 : 0, e;
}
var _$ = "__lodash_hash_undefined__", A$ = Object.prototype, M$ = A$.hasOwnProperty;
function T$(t) {
  var e = this.__data__;
  if (wf) {
    var n = e[t];
    return n === _$ ? void 0 : n;
  }
  return M$.call(e, t) ? e[t] : void 0;
}
var $$ = Object.prototype, P$ = $$.hasOwnProperty;
function R$(t) {
  var e = this.__data__;
  return wf ? e[t] !== void 0 : P$.call(e, t);
}
var N$ = "__lodash_hash_undefined__";
function D$(t, e) {
  var n = this.__data__;
  return this.size += this.has(t) ? 0 : 1, n[t] = wf && e === void 0 ? N$ : e, this;
}
function Wl(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
Wl.prototype.clear = O$;
Wl.prototype.delete = E$;
Wl.prototype.get = T$;
Wl.prototype.has = R$;
Wl.prototype.set = D$;
function I$() {
  this.__data__ = [], this.size = 0;
}
function Um(t, e) {
  for (var n = t.length; n--; )
    if (Lm(t[n][0], e))
      return n;
  return -1;
}
var z$ = Array.prototype, L$ = z$.splice;
function B$(t) {
  var e = this.__data__, n = Um(e, t);
  if (n < 0)
    return !1;
  var r = e.length - 1;
  return n == r ? e.pop() : L$.call(e, n, 1), --this.size, !0;
}
function q$(t) {
  var e = this.__data__, n = Um(e, t);
  return n < 0 ? void 0 : e[n][1];
}
function F$(t) {
  return Um(this.__data__, t) > -1;
}
function U$(t, e) {
  var n = this.__data__, r = Um(n, t);
  return r < 0 ? (++this.size, n.push([t, e])) : n[r][1] = e, this;
}
function ya(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
ya.prototype.clear = I$;
ya.prototype.delete = B$;
ya.prototype.get = q$;
ya.prototype.has = F$;
ya.prototype.set = U$;
var jf = ac(ls, "Map");
function V$() {
  this.size = 0, this.__data__ = {
    hash: new Wl(),
    map: new (jf || ya)(),
    string: new Wl()
  };
}
function W$(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null;
}
function Vm(t, e) {
  var n = t.__data__;
  return W$(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
}
function H$(t) {
  var e = Vm(this, t).delete(t);
  return this.size -= e ? 1 : 0, e;
}
function K$(t) {
  return Vm(this, t).get(t);
}
function G$(t) {
  return Vm(this, t).has(t);
}
function J$(t, e) {
  var n = Vm(this, t), r = n.size;
  return n.set(t, e), this.size += n.size == r ? 0 : 1, this;
}
function xa(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
xa.prototype.clear = V$;
xa.prototype.delete = H$;
xa.prototype.get = K$;
xa.prototype.has = G$;
xa.prototype.set = J$;
var Y$ = "Expected a function";
function u1(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function")
    throw new TypeError(Y$);
  var n = function() {
    var r = arguments, i = e ? e.apply(this, r) : r[0], o = n.cache;
    if (o.has(i))
      return o.get(i);
    var s = t.apply(this, r);
    return n.cache = o.set(i, s) || o, s;
  };
  return n.cache = new (u1.Cache || xa)(), n;
}
u1.Cache = xa;
var Q$ = 500;
function X$(t) {
  var e = u1(t, function(r) {
    return n.size === Q$ && n.clear(), r;
  }), n = e.cache;
  return e;
}
var Z$ = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, eP = /\\(\\)?/g, tP = X$(function(t) {
  var e = [];
  return t.charCodeAt(0) === 46 && e.push(""), t.replace(Z$, function(n, r, i, o) {
    e.push(i ? o.replace(eP, "$1") : r || n);
  }), e;
});
function bC(t) {
  return t == null ? "" : uC(t);
}
function yC(t, e) {
  return Li(t) ? t : c1(t, e) ? [t] : tP(bC(t));
}
function Wm(t) {
  if (typeof t == "string" || Vl(t))
    return t;
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
function f1(t, e) {
  e = yC(e, t);
  for (var n = 0, r = e.length; t != null && n < r; )
    t = t[Wm(e[n++])];
  return n && n == r ? t : void 0;
}
function nP(t, e, n) {
  var r = t == null ? void 0 : f1(t, e);
  return r === void 0 ? n : r;
}
function xC(t, e) {
  for (var n = -1, r = e.length, i = t.length; ++n < r; )
    t[i + n] = e[n];
  return t;
}
var yx = Ro ? Ro.isConcatSpreadable : void 0;
function rP(t) {
  return Li(t) || Bm(t) || !!(yx && t && t[yx]);
}
function iP(t, e, n, r, i) {
  var o = -1, s = t.length;
  for (n || (n = rP), i || (i = []); ++o < s; ) {
    var a = t[o];
    n(a) ? xC(i, a) : i[i.length] = a;
  }
  return i;
}
var oP = gC(Object.getPrototypeOf, Object);
function sP(t, e, n) {
  var r = -1, i = t.length;
  e < 0 && (e = -e > i ? 0 : i + e), n = n > i ? i : n, n < 0 && (n += i), i = e > n ? 0 : n - e >>> 0, e >>>= 0;
  for (var o = Array(i); ++r < i; )
    o[r] = t[r + e];
  return o;
}
function aP() {
  this.__data__ = new ya(), this.size = 0;
}
function lP(t) {
  var e = this.__data__, n = e.delete(t);
  return this.size = e.size, n;
}
function cP(t) {
  return this.__data__.get(t);
}
function uP(t) {
  return this.__data__.has(t);
}
var fP = 200;
function dP(t, e) {
  var n = this.__data__;
  if (n instanceof ya) {
    var r = n.__data__;
    if (!jf || r.length < fP - 1)
      return r.push([t, e]), this.size = ++n.size, this;
    n = this.__data__ = new xa(r);
  }
  return n.set(t, e), this.size = n.size, this;
}
function As(t) {
  var e = this.__data__ = new ya(t);
  this.size = e.size;
}
As.prototype.clear = aP;
As.prototype.delete = lP;
As.prototype.get = cP;
As.prototype.has = uP;
As.prototype.set = dP;
var wC = typeof exports == "object" && exports && !exports.nodeType && exports, xx = wC && typeof module == "object" && module && !module.nodeType && module, hP = xx && xx.exports === wC, wx = hP ? ls.Buffer : void 0;
wx && wx.allocUnsafe;
function pP(t, e) {
  return t.slice();
}
function mP(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = 0, o = []; ++n < r; ) {
    var s = t[n];
    e(s, n, t) && (o[i++] = s);
  }
  return o;
}
function gP() {
  return [];
}
var vP = Object.prototype, bP = vP.propertyIsEnumerable, jx = Object.getOwnPropertySymbols, yP = jx ? function(t) {
  return t == null ? [] : (t = Object(t), mP(jx(t), function(e) {
    return bP.call(t, e);
  }));
} : gP;
function xP(t, e, n) {
  var r = e(t);
  return Li(t) ? r : xC(r, n(t));
}
function u0(t) {
  return xP(t, Fm, yP);
}
var f0 = ac(ls, "DataView"), d0 = ac(ls, "Promise"), h0 = ac(ls, "Set"), kx = "[object Map]", wP = "[object Object]", Sx = "[object Promise]", Cx = "[object Set]", Ox = "[object WeakMap]", Ex = "[object DataView]", jP = sc(f0), kP = sc(jf), SP = sc(d0), CP = sc(h0), OP = sc(l0), _o = yu;
(f0 && _o(new f0(new ArrayBuffer(1))) != Ex || jf && _o(new jf()) != kx || d0 && _o(d0.resolve()) != Sx || h0 && _o(new h0()) != Cx || l0 && _o(new l0()) != Ox) && (_o = function(t) {
  var e = yu(t), n = e == wP ? t.constructor : void 0, r = n ? sc(n) : "";
  if (r)
    switch (r) {
      case jP:
        return Ex;
      case kP:
        return kx;
      case SP:
        return Sx;
      case CP:
        return Cx;
      case OP:
        return Ox;
    }
  return e;
});
var EP = Object.prototype, _P = EP.hasOwnProperty;
function AP(t) {
  var e = t.length, n = new t.constructor(e);
  return e && typeof t[0] == "string" && _P.call(t, "index") && (n.index = t.index, n.input = t.input), n;
}
var $p = ls.Uint8Array;
function d1(t) {
  var e = new t.constructor(t.byteLength);
  return new $p(e).set(new $p(t)), e;
}
function MP(t, e) {
  var n = d1(t.buffer);
  return new t.constructor(n, t.byteOffset, t.byteLength);
}
var TP = /\w*$/;
function $P(t) {
  var e = new t.constructor(t.source, TP.exec(t));
  return e.lastIndex = t.lastIndex, e;
}
var _x = Ro ? Ro.prototype : void 0, Ax = _x ? _x.valueOf : void 0;
function PP(t) {
  return Ax ? Object(Ax.call(t)) : {};
}
function RP(t, e) {
  var n = d1(t.buffer);
  return new t.constructor(n, t.byteOffset, t.length);
}
var NP = "[object Boolean]", DP = "[object Date]", IP = "[object Map]", zP = "[object Number]", LP = "[object RegExp]", BP = "[object Set]", qP = "[object String]", FP = "[object Symbol]", UP = "[object ArrayBuffer]", VP = "[object DataView]", WP = "[object Float32Array]", HP = "[object Float64Array]", KP = "[object Int8Array]", GP = "[object Int16Array]", JP = "[object Int32Array]", YP = "[object Uint8Array]", QP = "[object Uint8ClampedArray]", XP = "[object Uint16Array]", ZP = "[object Uint32Array]";
function e8(t, e, n) {
  var r = t.constructor;
  switch (e) {
    case UP:
      return d1(t);
    case NP:
    case DP:
      return new r(+t);
    case VP:
      return MP(t);
    case WP:
    case HP:
    case KP:
    case GP:
    case JP:
    case YP:
    case QP:
    case XP:
    case ZP:
      return RP(t);
    case IP:
      return new r();
    case zP:
    case qP:
      return new r(t);
    case LP:
      return $P(t);
    case BP:
      return new r();
    case FP:
      return PP(t);
  }
}
function t8(t) {
  return typeof t.constructor == "function" && !a1(t) ? wT(oP(t)) : {};
}
var n8 = "[object Map]";
function r8(t) {
  return Qa(t) && _o(t) == n8;
}
var Mx = tu && tu.isMap, i8 = Mx ? qm(Mx) : r8, o8 = "[object Set]";
function s8(t) {
  return Qa(t) && _o(t) == o8;
}
var Tx = tu && tu.isSet, a8 = Tx ? qm(Tx) : s8, jC = "[object Arguments]", l8 = "[object Array]", c8 = "[object Boolean]", u8 = "[object Date]", f8 = "[object Error]", kC = "[object Function]", d8 = "[object GeneratorFunction]", h8 = "[object Map]", p8 = "[object Number]", SC = "[object Object]", m8 = "[object RegExp]", g8 = "[object Set]", v8 = "[object String]", b8 = "[object Symbol]", y8 = "[object WeakMap]", x8 = "[object ArrayBuffer]", w8 = "[object DataView]", j8 = "[object Float32Array]", k8 = "[object Float64Array]", S8 = "[object Int8Array]", C8 = "[object Int16Array]", O8 = "[object Int32Array]", E8 = "[object Uint8Array]", _8 = "[object Uint8ClampedArray]", A8 = "[object Uint16Array]", M8 = "[object Uint32Array]", Sr = {};
Sr[jC] = Sr[l8] = Sr[x8] = Sr[w8] = Sr[c8] = Sr[u8] = Sr[j8] = Sr[k8] = Sr[S8] = Sr[C8] = Sr[O8] = Sr[h8] = Sr[p8] = Sr[SC] = Sr[m8] = Sr[g8] = Sr[v8] = Sr[b8] = Sr[E8] = Sr[_8] = Sr[A8] = Sr[M8] = !0;
Sr[f8] = Sr[kC] = Sr[y8] = !1;
function cf(t, e, n, r, i, o) {
  var s;
  if (n && (s = i ? n(t, r, i, o) : n(t)), s !== void 0)
    return s;
  if (!ha(t))
    return t;
  var a = Li(t);
  if (a)
    s = AP(t);
  else {
    var l = _o(t), u = l == kC || l == d8;
    if (xf(t))
      return pP(t);
    if (l == SC || l == jC || u && !i)
      s = u ? {} : t8(t);
    else {
      if (!Sr[l])
        return i ? t : {};
      s = e8(t, l);
    }
  }
  o || (o = new As());
  var f = o.get(t);
  if (f)
    return f;
  o.set(t, s), a8(t) ? t.forEach(function(p) {
    s.add(cf(p, e, n, p, t, o));
  }) : i8(t) && t.forEach(function(p, m) {
    s.set(m, cf(p, e, n, m, t, o));
  });
  var d = u0, h = a ? void 0 : d(t);
  return MT(h || t, function(p, m) {
    h && (m = p, p = t[m]), NT(s, m, cf(p, e, n, m, t, o));
  }), s;
}
var T8 = 1, $8 = 4;
function p0(t) {
  return cf(t, T8 | $8);
}
var P8 = 1, R8 = 4;
function N8(t, e) {
  return e = typeof e == "function" ? e : void 0, cf(t, P8 | R8, e);
}
var D8 = "__lodash_hash_undefined__";
function I8(t) {
  return this.__data__.set(t, D8), this;
}
function z8(t) {
  return this.__data__.has(t);
}
function Pp(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.__data__ = new xa(); ++e < n; )
    this.add(t[e]);
}
Pp.prototype.add = Pp.prototype.push = I8;
Pp.prototype.has = z8;
function L8(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
    if (e(t[n], n, t))
      return !0;
  return !1;
}
function B8(t, e) {
  return t.has(e);
}
var q8 = 1, F8 = 2;
function CC(t, e, n, r, i, o) {
  var s = n & q8, a = t.length, l = e.length;
  if (a != l && !(s && l > a))
    return !1;
  var u = o.get(t), f = o.get(e);
  if (u && f)
    return u == e && f == t;
  var d = -1, h = !0, p = n & F8 ? new Pp() : void 0;
  for (o.set(t, e), o.set(e, t); ++d < a; ) {
    var m = t[d], v = e[d];
    if (r)
      var g = s ? r(v, m, d, e, t, o) : r(m, v, d, t, e, o);
    if (g !== void 0) {
      if (g)
        continue;
      h = !1;
      break;
    }
    if (p) {
      if (!L8(e, function(b, x) {
        if (!B8(p, x) && (m === b || i(m, b, n, r, o)))
          return p.push(x);
      })) {
        h = !1;
        break;
      }
    } else if (!(m === v || i(m, v, n, r, o))) {
      h = !1;
      break;
    }
  }
  return o.delete(t), o.delete(e), h;
}
function U8(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r, i) {
    n[++e] = [i, r];
  }), n;
}
function V8(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r) {
    n[++e] = r;
  }), n;
}
var W8 = 1, H8 = 2, K8 = "[object Boolean]", G8 = "[object Date]", J8 = "[object Error]", Y8 = "[object Map]", Q8 = "[object Number]", X8 = "[object RegExp]", Z8 = "[object Set]", e5 = "[object String]", t5 = "[object Symbol]", n5 = "[object ArrayBuffer]", r5 = "[object DataView]", $x = Ro ? Ro.prototype : void 0, qg = $x ? $x.valueOf : void 0;
function i5(t, e, n, r, i, o, s) {
  switch (n) {
    case r5:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      t = t.buffer, e = e.buffer;
    case n5:
      return !(t.byteLength != e.byteLength || !o(new $p(t), new $p(e)));
    case K8:
    case G8:
    case Q8:
      return Lm(+t, +e);
    case J8:
      return t.name == e.name && t.message == e.message;
    case X8:
    case e5:
      return t == e + "";
    case Y8:
      var a = U8;
    case Z8:
      var l = r & W8;
      if (a || (a = V8), t.size != e.size && !l)
        return !1;
      var u = s.get(t);
      if (u)
        return u == e;
      r |= H8, s.set(t, e);
      var f = CC(a(t), a(e), r, i, o, s);
      return s.delete(t), f;
    case t5:
      if (qg)
        return qg.call(t) == qg.call(e);
  }
  return !1;
}
var o5 = 1, s5 = Object.prototype, a5 = s5.hasOwnProperty;
function l5(t, e, n, r, i, o) {
  var s = n & o5, a = u0(t), l = a.length, u = u0(e), f = u.length;
  if (l != f && !s)
    return !1;
  for (var d = l; d--; ) {
    var h = a[d];
    if (!(s ? h in e : a5.call(e, h)))
      return !1;
  }
  var p = o.get(t), m = o.get(e);
  if (p && m)
    return p == e && m == t;
  var v = !0;
  o.set(t, e), o.set(e, t);
  for (var g = s; ++d < l; ) {
    h = a[d];
    var b = t[h], x = e[h];
    if (r)
      var w = s ? r(x, b, h, e, t, o) : r(b, x, h, t, e, o);
    if (!(w === void 0 ? b === x || i(b, x, n, r, o) : w)) {
      v = !1;
      break;
    }
    g || (g = h == "constructor");
  }
  if (v && !g) {
    var j = t.constructor, y = e.constructor;
    j != y && "constructor" in t && "constructor" in e && !(typeof j == "function" && j instanceof j && typeof y == "function" && y instanceof y) && (v = !1);
  }
  return o.delete(t), o.delete(e), v;
}
var c5 = 1, Px = "[object Arguments]", Rx = "[object Array]", $d = "[object Object]", u5 = Object.prototype, Nx = u5.hasOwnProperty;
function f5(t, e, n, r, i, o) {
  var s = Li(t), a = Li(e), l = s ? Rx : _o(t), u = a ? Rx : _o(e);
  l = l == Px ? $d : l, u = u == Px ? $d : u;
  var f = l == $d, d = u == $d, h = l == u;
  if (h && xf(t)) {
    if (!xf(e))
      return !1;
    s = !0, f = !1;
  }
  if (h && !f)
    return o || (o = new As()), s || l1(t) ? CC(t, e, n, r, i, o) : i5(t, e, l, n, r, i, o);
  if (!(n & c5)) {
    var p = f && Nx.call(t, "__wrapped__"), m = d && Nx.call(e, "__wrapped__");
    if (p || m) {
      var v = p ? t.value() : t, g = m ? e.value() : e;
      return o || (o = new As()), i(v, g, n, r, o);
    }
  }
  return h ? (o || (o = new As()), l5(t, e, n, r, i, o)) : !1;
}
function Hm(t, e, n, r, i) {
  return t === e ? !0 : t == null || e == null || !Qa(t) && !Qa(e) ? t !== t && e !== e : f5(t, e, n, r, Hm, i);
}
var d5 = 1, h5 = 2;
function p5(t, e, n, r) {
  var i = n.length, o = i;
  if (t == null)
    return !o;
  for (t = Object(t); i--; ) {
    var s = n[i];
    if (s[2] ? s[1] !== t[s[0]] : !(s[0] in t))
      return !1;
  }
  for (; ++i < o; ) {
    s = n[i];
    var a = s[0], l = t[a], u = s[1];
    if (s[2]) {
      if (l === void 0 && !(a in t))
        return !1;
    } else {
      var f = new As(), d;
      if (!(d === void 0 ? Hm(u, l, d5 | h5, r, f) : d))
        return !1;
    }
  }
  return !0;
}
function OC(t) {
  return t === t && !ha(t);
}
function m5(t) {
  for (var e = Fm(t), n = e.length; n--; ) {
    var r = e[n], i = t[r];
    e[n] = [r, i, OC(i)];
  }
  return e;
}
function EC(t, e) {
  return function(n) {
    return n == null ? !1 : n[t] === e && (e !== void 0 || t in Object(n));
  };
}
function g5(t) {
  var e = m5(t);
  return e.length == 1 && e[0][2] ? EC(e[0][0], e[0][1]) : function(n) {
    return n === t || p5(n, t, e);
  };
}
function v5(t, e) {
  return t != null && e in Object(t);
}
function b5(t, e, n) {
  e = yC(e, t);
  for (var r = -1, i = e.length, o = !1; ++r < i; ) {
    var s = Wm(e[r]);
    if (!(o = t != null && n(t, s)))
      break;
    t = t[s];
  }
  return o || ++r != i ? o : (i = t == null ? 0 : t.length, !!i && s1(i) && i1(s, i) && (Li(t) || Bm(t)));
}
function y5(t, e) {
  return t != null && b5(t, e, v5);
}
var x5 = 1, w5 = 2;
function j5(t, e) {
  return c1(t) && OC(e) ? EC(Wm(t), e) : function(n) {
    var r = nP(n, t);
    return r === void 0 && r === e ? y5(n, t) : Hm(e, r, x5 | w5);
  };
}
function k5(t) {
  return function(e) {
    return e?.[t];
  };
}
function S5(t) {
  return function(e) {
    return f1(e, t);
  };
}
function C5(t) {
  return c1(t) ? k5(Wm(t)) : S5(t);
}
function ld(t) {
  return typeof t == "function" ? t : t == null ? sd : typeof t == "object" ? Li(t) ? j5(t[0], t[1]) : g5(t) : C5(t);
}
function O5(t, e, n, r) {
  for (var i = -1, o = t == null ? 0 : t.length; ++i < o; ) {
    var s = t[i];
    e(r, s, n(s), t);
  }
  return r;
}
function _C(t) {
  return function(e, n, r) {
    for (var i = -1, o = Object(e), s = r(e), a = s.length; a--; ) {
      var l = s[t ? a : ++i];
      if (n(o[l], l, o) === !1)
        break;
    }
    return e;
  };
}
var E5 = _C();
function AC(t, e) {
  return t && E5(t, e, Fm);
}
function MC(t, e) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!ad(n))
      return t(n, r);
    for (var i = n.length, o = e ? i : -1, s = Object(n); (e ? o-- : ++o < i) && r(s[o], o, s) !== !1; )
      ;
    return n;
  };
}
var TC = MC(AC);
function _5(t, e, n, r) {
  return TC(t, function(i, o, s) {
    e(r, i, n(i), s);
  }), r;
}
function $C(t, e) {
  return function(n, r) {
    var i = Li(n) ? O5 : _5, o = e ? e() : {};
    return i(n, t, ld(r), o);
  };
}
var Fg = function() {
  return ls.Date.now();
}, A5 = "Expected a function", M5 = Math.max, T5 = Math.min;
function Rp(t, e, n) {
  var r, i, o, s, a, l, u = 0, f = !1, d = !1, h = !0;
  if (typeof t != "function")
    throw new TypeError(A5);
  e = a0(e) || 0, ha(n) && (f = !!n.leading, d = "maxWait" in n, o = d ? M5(a0(n.maxWait) || 0, e) : o, h = "trailing" in n ? !!n.trailing : h);
  function p(k) {
    var S = r, T = i;
    return r = i = void 0, u = k, s = t.apply(T, S), s;
  }
  function m(k) {
    return u = k, a = setTimeout(b, e), f ? p(k) : s;
  }
  function v(k) {
    var S = k - l, T = k - u, M = e - S;
    return d ? T5(M, o - T) : M;
  }
  function g(k) {
    var S = k - l, T = k - u;
    return l === void 0 || S >= e || S < 0 || d && T >= o;
  }
  function b() {
    var k = Fg();
    if (g(k))
      return x(k);
    a = setTimeout(b, v(k));
  }
  function x(k) {
    return a = void 0, h && r ? p(k) : (r = i = void 0, s);
  }
  function w() {
    a !== void 0 && clearTimeout(a), u = 0, r = l = i = a = void 0;
  }
  function j() {
    return a === void 0 ? s : x(Fg());
  }
  function y() {
    var k = Fg(), S = g(k);
    if (r = arguments, i = this, l = k, S) {
      if (a === void 0)
        return m(l);
      if (d)
        return clearTimeout(a), a = setTimeout(b, e), p(l);
    }
    return a === void 0 && (a = setTimeout(b, e)), s;
  }
  return y.cancel = w, y.flush = j, y;
}
function rn(t) {
  var e = t == null ? 0 : t.length;
  return e ? t[e - 1] : void 0;
}
function PC(t) {
  return typeof t == "function" ? t : sd;
}
function $5(t, e) {
  for (var n = t == null ? 0 : t.length; n-- && e(t[n], n, t) !== !1; )
    ;
  return t;
}
var P5 = _C(!0);
function R5(t, e) {
  return t && P5(t, e, Fm);
}
var N5 = MC(R5, !0);
function D5(t, e) {
  var n = Li(t) ? $5 : N5;
  return n(t, PC(e));
}
function oa(t) {
  return t && t.length ? t[0] : void 0;
}
function RC(t, e) {
  var n = -1, r = ad(t) ? Array(t.length) : [];
  return TC(t, function(i, o, s) {
    r[++n] = e(i, o, s);
  }), r;
}
function I5(t, e) {
  var n = Li(t) ? af : RC;
  return n(t, ld(e));
}
var z5 = Object.prototype, L5 = z5.hasOwnProperty, B5 = $C(function(t, e, n) {
  L5.call(t, n) ? t[n].push(e) : o1(t, n, [e]);
});
function mn(t) {
  var e = t == null ? 0 : t.length;
  return e ? sP(t, 0, -1) : [];
}
var q5 = "[object Map]", F5 = "[object Set]", U5 = Object.prototype, V5 = U5.hasOwnProperty;
function Sn(t) {
  if (t == null)
    return !0;
  if (ad(t) && (Li(t) || typeof t == "string" || typeof t.splice == "function" || xf(t) || l1(t) || Bm(t)))
    return !t.length;
  var e = _o(t);
  if (e == q5 || e == F5)
    return !t.size;
  if (a1(t))
    return !vC(t).length;
  for (var n in t)
    if (V5.call(t, n))
      return !1;
  return !0;
}
function Zt(t, e) {
  return Hm(t, e);
}
function W5(t, e) {
  return t < e;
}
function H5(t, e) {
  var n = {};
  return e = ld(e), AC(t, function(r, i, o) {
    o1(n, i, e(r, i, o));
  }), n;
}
function K5(t, e, n) {
  for (var r = -1, i = t.length; ++r < i; ) {
    var o = t[r], s = e(o);
    if (s != null && (a === void 0 ? s === s && !Vl(s) : n(s, a)))
      var a = s, l = o;
  }
  return l;
}
function Pd(t, e) {
  return t && t.length ? K5(t, ld(e), W5) : void 0;
}
function G5(t, e) {
  var n = t.length;
  for (t.sort(e); n--; )
    t[n] = t[n].value;
  return t;
}
function J5(t, e) {
  if (t !== e) {
    var n = t !== void 0, r = t === null, i = t === t, o = Vl(t), s = e !== void 0, a = e === null, l = e === e, u = Vl(e);
    if (!a && !u && !o && t > e || o && s && l && !a && !u || r && s && l || !n && l || !i)
      return 1;
    if (!r && !o && !u && t < e || u && n && i && !r && !o || a && n && i || !s && i || !l)
      return -1;
  }
  return 0;
}
function Y5(t, e, n) {
  for (var r = -1, i = t.criteria, o = e.criteria, s = i.length, a = n.length; ++r < s; ) {
    var l = J5(i[r], o[r]);
    if (l) {
      if (r >= a)
        return l;
      var u = n[r];
      return l * (u == "desc" ? -1 : 1);
    }
  }
  return t.index - e.index;
}
function Q5(t, e, n) {
  e.length ? e = af(e, function(o) {
    return Li(o) ? function(s) {
      return f1(s, o.length === 1 ? o[0] : o);
    } : o;
  }) : e = [sd];
  var r = -1;
  e = af(e, qm(ld));
  var i = RC(t, function(o, s, a) {
    var l = af(e, function(u) {
      return u(o);
    });
    return { criteria: l, index: ++r, value: o };
  });
  return G5(i, function(o, s) {
    return Y5(o, s, n);
  });
}
var X5 = $C(function(t, e, n) {
  t[n ? 0 : 1].push(e);
}, function() {
  return [[], []];
}), Z5 = Math.ceil, e6 = Math.max;
function t6(t, e, n, r) {
  for (var i = -1, o = e6(Z5((e - t) / (n || 1)), 0), s = Array(o); o--; )
    s[++i] = t, t += n;
  return s;
}
function n6(t) {
  return function(e, n, r) {
    return r && typeof r != "number" && c0(e, n, r) && (n = r = void 0), e = cp(e), n === void 0 ? (n = e, e = 0) : n = cp(n), r = r === void 0 ? e < n ? 1 : -1 : cp(r), t6(e, n, r);
  };
}
var NC = n6(), r6 = IT(function(t, e) {
  if (t == null)
    return [];
  var n = e.length;
  return n > 1 && c0(t, e[0], e[1]) ? e = [] : n > 2 && c0(e[0], e[1], e[2]) && (e = [e[0]]), Q5(t, iP(e), []);
}), i6 = 9007199254740991, Ug = 4294967295, o6 = Math.min;
function s6(t, e) {
  if (t = iT(t), t < 1 || t > i6)
    return [];
  var n = Ug, r = o6(t, Ug);
  e = PC(e), t -= Ug;
  for (var i = dC(r, e); ++n < t; )
    e(n);
  return i;
}
var a6 = 0;
function nu(t) {
  var e = ++a6;
  return bC(t) + e;
}
const Wa = (t) => Array.isArray(t), l6 = (t) => t !== null && typeof t == "object" && !Wa(t), c6 = (t) => typeof t == "string", Pl = (t, e) => t === e ? !0 : t !== null && e !== null && typeof t == "object" && typeof e == "object" && Object.keys(t).length === Object.keys(e).length && Object.entries(t).every(([n, r]) => Pl(r, e[n]));
function ei(t) {
  return (...e) => {
    const n = e.map((o) => di(o)), r = n[0], i = n[1];
    return n.length === 1 ? (o) => t(r(o)) : n.length === 2 ? (o) => t(r(o), i(o)) : (o) => t(...n.map((s) => s(o)));
  };
}
const uf = { boolean: 0, number: 1, string: 2 }, Dx = 3, DC = (t, e) => typeof t == typeof e && typeof t in uf ? t > e : !1, u6 = (t, e) => Pl(t, e) || DC(t, e), IC = (t, e) => typeof t == typeof e && typeof t in uf ? t < e : !1, f6 = (t, e) => Pl(t, e) || IC(t, e), Qu = {
  pipe: (...t) => {
    const e = t.map((n) => di(n));
    return (n) => e.reduce((r, i) => i(r), n);
  },
  object: (t) => {
    const e = Object.keys(t).map((n) => [n, di(t[n])]);
    return (n) => {
      const r = {};
      for (const [i, o] of e)
        r[i] = o(n);
      return r;
    };
  },
  array: (...t) => {
    const e = t.map((n) => di(n));
    return (n) => e.map((r) => r(n));
  },
  get: (...t) => {
    if (t.length === 0)
      return (e) => e ?? null;
    if (t.length === 1) {
      const e = t[0];
      return (n) => n?.[e] ?? null;
    }
    return (e) => {
      let n = e;
      for (const r of t)
        n = n?.[r];
      return n ?? null;
    };
  },
  map: (t) => {
    const e = di(t);
    return (n) => n.map(e);
  },
  mapObject: (t) => {
    const e = di(t);
    return (n) => {
      const r = {};
      for (const i of Object.keys(n)) {
        const o = e({ key: i, value: n[i] });
        r[o.key] = o.value;
      }
      return r;
    };
  },
  mapKeys: (t) => {
    const e = di(t);
    return (n) => {
      const r = {};
      for (const i of Object.keys(n)) {
        const o = e(i);
        r[o] = n[i];
      }
      return r;
    };
  },
  mapValues: (t) => {
    const e = di(t);
    return (n) => {
      const r = {};
      for (const i of Object.keys(n))
        r[i] = e(n[i]);
      return r;
    };
  },
  filter: (t) => {
    const e = di(t);
    return (n) => n.filter((r) => Ix(e(r)));
  },
  sort: (t = ["get"], e) => {
    const n = di(t), r = e === "desc" ? -1 : 1;
    function i(o, s) {
      const a = n(o), l = n(s);
      if (typeof a != typeof l) {
        const u = uf[typeof a] ?? Dx, f = uf[typeof l] ?? Dx;
        return u > f ? r : u < f ? -r : 0;
      }
      return typeof a in uf ? a > l ? r : a < l ? -r : 0 : 0;
    }
    return (o) => o.slice().sort(i);
  },
  reverse: () => (t) => t.toReversed(),
  pick: (...t) => {
    const e = t.map(
      ([r, ...i]) => [i[i.length - 1], Qu.get(...i)]
    ), n = (r, i) => {
      const o = {};
      for (const [s, a] of i)
        o[s] = a(r);
      return o;
    };
    return (r) => Wa(r) ? r.map((i) => n(i, e)) : n(r, e);
  },
  groupBy: (t) => {
    const e = di(t);
    return (n) => {
      const r = {};
      for (const i of n) {
        const o = e(i);
        r[o] ? r[o].push(i) : r[o] = [i];
      }
      return r;
    };
  },
  keyBy: (t) => {
    const e = di(t);
    return (n) => {
      const r = {};
      for (const i of n) {
        const o = e(i);
        o in r || (r[o] = i);
      }
      return r;
    };
  },
  flatten: () => (t) => t.flat(),
  join: (t = "") => (e) => e.join(t),
  split: ei(
    (t, e) => e !== void 0 ? t.split(e) : t.trim().split(/\s+/)
  ),
  substring: ei(
    (t, e, n) => t.slice(Math.max(e, 0), n)
  ),
  uniq: () => (t) => {
    const e = [];
    for (const n of t)
      e.findIndex((r) => Pl(r, n)) === -1 && e.push(n);
    return e;
  },
  uniqBy: (t) => (e) => Object.values(Qu.keyBy(t)(e)),
  limit: (t) => (e) => e.slice(0, Math.max(t, 0)),
  size: () => (t) => t.length,
  keys: () => Object.keys,
  values: () => Object.values,
  prod: () => (t) => Du(t, (e, n) => e * n),
  sum: () => (t) => Wa(t) ? t.reduce((e, n) => e + n, 0) : m0(),
  average: () => (t) => Wa(t) ? t.length > 0 ? t.reduce((e, n) => e + n) / t.length : null : m0(),
  min: () => (t) => Du(t, (e, n) => Math.min(e, n)),
  max: () => (t) => Du(t, (e, n) => Math.max(e, n)),
  and: ei((...t) => Du(t, (e, n) => !!(e && n))),
  or: ei((...t) => Du(t, (e, n) => !!(e || n))),
  not: ei((t) => !t),
  exists: (t) => {
    const e = t.slice(1), n = e.pop(), r = Qu.get(...e);
    return (i) => {
      const o = r(i);
      return !!o && Object.hasOwnProperty.call(o, n);
    };
  },
  if: (t, e, n) => {
    const r = di(t), i = di(e), o = di(n);
    return (s) => Ix(r(s)) ? i(s) : o(s);
  },
  in: (t, e) => {
    const n = di(t), r = di(e);
    return (i) => {
      const o = n(i);
      return r(i).findIndex((s) => Pl(s, o)) !== -1;
    };
  },
  "not in": (t, e) => {
    const n = Qu.in(t, e);
    return (r) => !n(r);
  },
  regex: (t, e, n) => {
    const r = new RegExp(e, n), i = di(t);
    return (o) => r.test(i(o));
  },
  eq: ei(Pl),
  gt: ei(DC),
  gte: ei(u6),
  lt: ei(IC),
  lte: ei(f6),
  ne: ei((t, e) => !Pl(t, e)),
  add: ei((t, e) => t + e),
  subtract: ei((t, e) => t - e),
  multiply: ei((t, e) => t * e),
  divide: ei((t, e) => t / e),
  mod: ei((t, e) => t % e),
  pow: ei((t, e) => t ** e),
  abs: ei(Math.abs),
  round: ei((t, e = 0) => +`${Math.round(+`${t}e${e}`)}e${-e}`),
  number: ei((t) => {
    const e = Number(t);
    return Number.isNaN(Number(t)) ? null : e;
  }),
  string: ei(String)
}, Ix = (t) => t !== null && t !== 0 && t !== !1, Du = (t, e) => (Wa(t) || m0(), t.length === 0 ? null : t.reduce(e)), m0 = () => {
  h1("Array expected");
}, h1 = (t) => {
  throw new TypeError(t);
}, Rd = [];
function di(t, e) {
  Rd.unshift({ ...Qu, ...Rd[0] });
  try {
    const n = Wa(t) ? d6(t, Rd[0]) : l6(t) ? h1(
      `Function notation ["object", {...}] expected but got ${JSON.stringify(t)}`
    ) : () => t;
    return (r) => {
      try {
        return n(r);
      } catch (i) {
        throw i.jsonquery = [{ data: r, query: t }, ...i.jsonquery ?? []], i;
      }
    };
  } finally {
    Rd.shift();
  }
}
function d6(t, e) {
  const [n, ...r] = t, i = e[n];
  return i || h1(`Unknown function '${n}'`), i(...r);
}
const zC = [
  { pow: "^" },
  { multiply: "*", divide: "/", mod: "%" },
  { add: "+", subtract: "-" },
  { gt: ">", gte: ">=", lt: "<", lte: "<=", in: "in", "not in": "not in" },
  { eq: "==", ne: "!=" },
  { and: "and" },
  { or: "or" },
  { pipe: "|" }
], h6 = ["|", "and", "or"], LC = ["|", "and", "or", "*", "/", "%", "+", "-"];
function BC(t, e) {
  if (!Wa(e))
    throw new Error("Invalid custom operators");
  return e.reduce(p6, t);
}
function p6(t, { name: e, op: n, at: r, after: i, before: o }) {
  if (r)
    return t.map((l) => Object.values(l).includes(r) ? { ...l, [e]: n } : l);
  const s = i ?? o, a = t.findIndex((l) => Object.values(l).includes(s));
  if (a !== -1)
    return t.toSpliced(a + (i ? 1 : 0), 0, { [e]: n });
  throw new Error("Invalid custom operator");
}
const m6 = /^[a-zA-Z_$][a-zA-Z\d_$]*$/, g6 = /^[a-zA-Z_$][a-zA-Z\d_$]*/, v6 = /^"(?:[^"\\]|\\.)*"/, b6 = /^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?/, y6 = /^(0|[1-9][0-9]*)/, x6 = /^(true|false|null)/, w6 = /^[ \n\t\r]+/;
function qC(t, e) {
  const n = [], r = BC(zC, n), i = Object.assign({}, ...r), o = h6.concat(
    n.filter((N) => N.vararg).map((N) => N.op)
  ), s = LC.concat(
    n.filter((N) => N.leftAssociative).map((N) => N.op)
  ), a = (N = r.length - 1) => {
    const z = r[N];
    if (!z)
      return u();
    const L = t[T] === "(";
    let W = a(N - 1);
    for (; ; ) {
      y();
      const ce = T, te = l(z);
      if (!te)
        break;
      const we = a(N - 1), Ee = W[0], ae = te === Ee && !L;
      if (ae && !s.includes(i[te])) {
        T = ce;
        break;
      }
      W = ae && o.includes(i[te]) ? [...W, we] : [te, W, we];
    }
    return W;
  }, l = (N) => {
    const z = Object.keys(N).sort((L, W) => W.length - L.length);
    for (const L of z) {
      const W = N[L];
      if (t.substring(T, T + W.length) === W)
        return T += W.length, y(), L;
    }
  }, u = () => {
    if (y(), t[T] === "(") {
      T++;
      const N = a();
      return k(")"), N;
    }
    return f();
  }, f = () => {
    if (t[T] === ".") {
      const N = [];
      for (; t[T] === "."; )
        T++, N.push(
          m() ?? v() ?? b() ?? S("Property expected")
        );
      return ["get", ...N];
    }
    return d();
  }, d = () => {
    const N = T, z = v();
    if (y(), !z || t[T] !== "(")
      return T = N, h();
    T++, y();
    const L = t[T] !== ")" ? [a()] : [];
    for (; T < t.length && t[T] !== ")"; )
      y(), k(","), L.push(a());
    return k(")"), [z, ...L];
  }, h = () => {
    if (t[T] === "{") {
      T++, y();
      const N = {};
      let z = !0;
      for (; T < t.length && t[T] !== "}"; ) {
        z ? z = !1 : (k(","), y());
        const L = m() ?? v() ?? b() ?? S("Key expected");
        y(), k(":"), N[L] = a();
      }
      return k("}"), ["object", N];
    }
    return p();
  }, p = () => {
    if (t[T] === "[") {
      T++, y();
      const N = [];
      let z = !0;
      for (; T < t.length && t[T] !== "]"; )
        z ? z = !1 : (k(","), y()), N.push(a());
      return k("]"), ["array", ...N];
    }
    return m() ?? g() ?? x();
  }, m = () => j(v6, JSON.parse), v = () => j(g6, (N) => N), g = () => j(b6, JSON.parse), b = () => j(y6, JSON.parse), x = () => {
    const N = j(x6, JSON.parse);
    if (N !== void 0)
      return N;
    S("Value expected");
  }, w = () => {
    y(), T < t.length && S(`Unexpected part '${t.substring(T)}'`);
  }, j = (N, z) => {
    const L = t.substring(T).match(N);
    if (L)
      return T += L[0].length, z(L[0]);
  }, y = () => j(w6, (N) => N), k = (N) => {
    t[T] !== N && S(`Character '${N}' expected`), T++;
  }, S = (N, z = T) => {
    throw new SyntaxError(`${N} (pos: ${z})`);
  };
  let T = 0;
  const M = a();
  return w(), M;
}
const j6 = 40, k6 = "  ", S6 = (t, e) => {
  const n = k6, r = [], i = BC(zC, r), o = Object.assign({}, ...i), s = LC.concat(
    r.filter((p) => p.leftAssociative).map((p) => p.op)
  ), a = (p, m, v = !1) => Wa(p) ? l(p, m, v) : JSON.stringify(p), l = (p, m, v) => {
    const [g, ...b] = p;
    if (g === "get" && b.length > 0)
      return f(b);
    if (g === "object")
      return u(b[0], m);
    if (g === "array") {
      const y = b.map((k) => a(k, m));
      return h(
        y,
        ["[", ", ", "]"],
        [`[
${m + n}`, `,
${m + n}`, `
${m}]`]
      );
    }
    const x = o[g];
    if (x) {
      const y = v ? "(" : "", k = v ? ")" : "", S = b.map((T, M) => {
        const N = T?.[0], z = i.findIndex((ce) => g in ce), L = i.findIndex((ce) => N in ce), W = z < L || z === L && M > 0 || g === N && !s.includes(x);
        return a(T, m + n, W);
      });
      return h(S, [y, ` ${x} `, k], [y, `
${m + n}${x} `, k]);
    }
    const w = b.length === 1 ? m : m + n, j = b.map((y) => a(y, w));
    return h(
      j,
      [`${g}(`, ", ", ")"],
      b.length === 1 ? [`${g}(`, `,
${m}`, ")"] : [`${g}(
${w}`, `,
${w}`, `
${m})`]
    );
  }, u = (p, m) => {
    const v = m + n, g = Object.entries(p).map(([b, x]) => `${d(b)}: ${a(x, v)}`);
    return h(
      g,
      ["{ ", ", ", " }"],
      [`{
${v}`, `,
${v}`, `
${m}}`]
    );
  }, f = (p) => p.map((m) => `.${d(m)}`).join(""), d = (p) => m6.test(p) ? p : JSON.stringify(p), h = (p, [m, v, g], [b, x, w]) => m.length + p.reduce((j, y) => j + y.length + v.length, 0) - v.length + g.length <= j6 ? m + p.join(v) + g : b + p.join(x) + w;
  return a(t, "");
};
function C6(t, e, n) {
  return di(c6(e) ? qC(e) : e)(t);
}
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
const O6 = {
  prefix: "far",
  iconName: "lightbulb",
  icon: [384, 512, [128161], "f0eb", "M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7c0 0 0 0 0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5L109 384c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8c0 0 0 0 0 0s0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4c0 0 0 0 0 0s0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5l-48.6 0c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8c0 0 0 0 0 0s0 0 0 0s0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80l0-16 160 0 0 16c0 44.2-35.8 80-80 80z"]
}, E6 = {
  prefix: "far",
  iconName: "square-check",
  icon: [448, 512, [9745, 9989, 61510, "check-square"], "f14a", "M64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80zM0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96zM337 209L209 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L303 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z"]
}, FC = E6, UC = {
  prefix: "far",
  iconName: "square",
  icon: [448, 512, [9632, 9723, 9724, 61590], "f0c8", "M384 80c8.8 0 16 7.2 16 16l0 320c0 8.8-7.2 16-16 16L64 432c-8.8 0-16-7.2-16-16L48 96c0-8.8 7.2-16 16-16l320 0zM64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32z"]
}, _6 = {
  prefix: "far",
  iconName: "clock",
  icon: [512, 512, [128339, "clock-four"], "f017", "M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z"]
};
/*!
 * Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com
 * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)
 * Copyright 2024 Fonticons, Inc.
 */
const g0 = {
  prefix: "fas",
  iconName: "trash-can",
  icon: [448, 512, [61460, "trash-alt"], "f2ed", "M135.2 17.7C140.6 6.8 151.7 0 163.8 0L284.2 0c12.1 0 23.2 6.8 28.6 17.7L320 32l96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 96C14.3 96 0 81.7 0 64S14.3 32 32 32l96 0 7.2-14.3zM32 128l384 0 0 320c0 35.3-28.7 64-64 64L96 512c-35.3 0-64-28.7-64-64l0-320zm96 64c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16l0 224c0 8.8 7.2 16 16 16s16-7.2 16-16l0-224c0-8.8-7.2-16-16-16z"]
}, A6 = {
  prefix: "fas",
  iconName: "down-left-and-up-right-to-center",
  icon: [512, 512, ["compress-alt"], "f422", "M439 7c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8l-144 0c-13.3 0-24-10.7-24-24l0-144c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39L439 7zM72 272l144 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39L73 505c-9.4 9.4-24.6 9.4-33.9 0L7 473c-9.4-9.4-9.4-24.6 0-33.9l87-87L55 313c-6.9-6.9-8.9-17.2-5.2-26.2s12.5-14.8 22.2-14.8z"]
}, kf = {
  prefix: "fas",
  iconName: "caret-right",
  icon: [256, 512, [], "f0da", "M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z"]
}, VC = {
  prefix: "fas",
  iconName: "paste",
  icon: [512, 512, ["file-clipboard"], "f0ea", "M160 0c-23.7 0-44.4 12.9-55.4 32L48 32C21.5 32 0 53.5 0 80L0 400c0 26.5 21.5 48 48 48l144 0 0-272c0-44.2 35.8-80 80-80l48 0 0-16c0-26.5-21.5-48-48-48l-56.6 0C204.4 12.9 183.7 0 160 0zM272 128c-26.5 0-48 21.5-48 48l0 272 0 16c0 26.5 21.5 48 48 48l192 0c26.5 0 48-21.5 48-48l0-220.1c0-12.7-5.1-24.9-14.1-33.9l-67.9-67.9c-9-9-21.2-14.1-33.9-14.1L320 128l-48 0zM160 40a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"]
}, M6 = {
  prefix: "fas",
  iconName: "circle-notch",
  icon: [512, 512, [], "f1ce", "M222.7 32.1c5 16.9-4.6 34.8-21.5 39.8C121.8 95.6 64 169.1 64 256c0 106 86 192 192 192s192-86 192-192c0-86.9-57.8-160.4-137.1-184.1c-16.9-5-26.6-22.9-21.5-39.8s22.9-26.6 39.8-21.5C434.9 42.1 512 140 512 256c0 141.4-114.6 256-256 256S0 397.4 0 256C0 140 77.1 42.1 182.9 10.6c16.9-5 34.8 4.6 39.8 21.5z"]
}, T6 = {
  prefix: "fas",
  iconName: "scissors",
  icon: [512, 512, [9984, 9986, 9988, "cut"], "f0c4", "M256 192l-39.5-39.5c4.9-12.6 7.5-26.2 7.5-40.5C224 50.1 173.9 0 112 0S0 50.1 0 112s50.1 112 112 112c14.3 0 27.9-2.7 40.5-7.5L192 256l-39.5 39.5c-12.6-4.9-26.2-7.5-40.5-7.5C50.1 288 0 338.1 0 400s50.1 112 112 112s112-50.1 112-112c0-14.3-2.7-27.9-7.5-40.5L499.2 76.8c7.1-7.1 7.1-18.5 0-25.6c-28.3-28.3-74.1-28.3-102.4 0L256 192zm22.6 150.6L396.8 460.8c28.3 28.3 74.1 28.3 102.4 0c7.1-7.1 7.1-18.5 0-25.6L342.6 278.6l-64 64zM64 112a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm48 240a48 48 0 1 1 0 96 48 48 0 1 1 0-96z"]
}, Uc = T6, $6 = {
  prefix: "fas",
  iconName: "square-caret-down",
  icon: [448, 512, ["caret-square-down"], "f150", "M384 480c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0zM224 352c-6.7 0-13-2.8-17.6-7.7l-104-112c-6.5-7-8.2-17.2-4.4-25.9s12.5-14.4 22-14.4l208 0c9.5 0 18.2 5.7 22 14.4s2.1 18.9-4.4 25.9l-104 112c-4.5 4.9-10.9 7.7-17.6 7.7z"]
}, P6 = $6, R6 = {
  prefix: "fas",
  iconName: "caret-left",
  icon: [256, 512, [], "f0d9", "M9.4 278.6c-12.5-12.5-12.5-32.8 0-45.3l128-128c9.2-9.2 22.9-11.9 34.9-6.9s19.8 16.6 19.8 29.6l0 256c0 12.9-7.8 24.6-19.8 29.6s-25.7 2.2-34.9-6.9l-128-128z"]
}, N6 = {
  prefix: "fas",
  iconName: "square-check",
  icon: [448, 512, [9745, 9989, 61510, "check-square"], "f14a", "M64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32zM337 209L209 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L303 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z"]
}, WC = N6, D6 = {
  prefix: "fas",
  iconName: "pen-to-square",
  icon: [512, 512, ["edit"], "f044", "M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160L0 416c0 53 43 96 96 96l256 0c53 0 96-43 96-96l0-96c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 96c0 17.7-14.3 32-32 32L96 448c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l96 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 64z"]
}, I6 = D6, z6 = {
  prefix: "fas",
  iconName: "chevron-up",
  icon: [512, 512, [], "f077", "M233.4 105.4c12.5-12.5 32.8-12.5 45.3 0l192 192c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L256 173.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l192-192z"]
}, HC = {
  prefix: "fas",
  iconName: "angle-right",
  icon: [320, 512, [8250], "f105", "M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z"]
}, L6 = {
  prefix: "fas",
  iconName: "square-caret-up",
  icon: [448, 512, ["caret-square-up"], "f151", "M64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l320 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32zM224 160c6.7 0 13 2.8 17.6 7.7l104 112c6.5 7 8.2 17.2 4.4 25.9s-12.5 14.4-22 14.4l-208 0c-9.5 0-18.2-5.7-22-14.4s-2.1-18.9 4.4-25.9l104-112c4.5-4.9 10.9-7.7 17.6-7.7z"]
}, B6 = L6, zx = {
  prefix: "fas",
  iconName: "caret-up",
  icon: [320, 512, [], "f0d8", "M182.6 137.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-9.2 9.2-11.9 22.9-6.9 34.9s16.6 19.8 29.6 19.8l256 0c12.9 0 24.6-7.8 29.6-19.8s2.2-25.7-6.9-34.9l-128-128z"]
}, KC = {
  prefix: "fas",
  iconName: "square",
  icon: [448, 512, [9632, 9723, 9724, 61590], "f0c8", "M0 96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96z"]
}, Np = {
  prefix: "fas",
  iconName: "filter",
  icon: [512, 512, [], "f0b0", "M3.9 54.9C10.5 40.9 24.5 32 40 32l432 0c15.5 0 29.5 8.9 36.1 22.9s4.6 30.5-5.2 42.5L320 320.9 320 448c0 12.1-6.8 23.2-17.7 28.6s-23.8 4.3-33.5-3l-64-48c-8.1-6-12.8-15.5-12.8-25.6l0-79.1L9 97.3C-.7 85.4-2.8 68.8 3.9 54.9z"]
}, Dp = {
  prefix: "fas",
  iconName: "code",
  icon: [640, 512, [], "f121", "M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z"]
}, Xa = {
  prefix: "fas",
  iconName: "wrench",
  icon: [512, 512, [128295], "f0ad", "M352 320c88.4 0 160-71.6 160-160c0-15.3-2.2-30.1-6.2-44.2c-3.1-10.8-16.4-13.2-24.3-5.3l-76.8 76.8c-3 3-7.1 4.7-11.3 4.7L336 192c-8.8 0-16-7.2-16-16l0-57.4c0-4.2 1.7-8.3 4.7-11.3l76.8-76.8c7.9-7.9 5.4-21.2-5.3-24.3C382.1 2.2 367.3 0 352 0C263.6 0 192 71.6 192 160c0 19.1 3.4 37.5 9.5 54.5L19.9 396.1C7.2 408.8 0 426.1 0 444.1C0 481.6 30.4 512 67.9 512c18 0 35.3-7.2 48-19.9L297.5 310.5c17 6.2 35.4 9.5 54.5 9.5zM80 408a24 24 0 1 1 0 48 24 24 0 1 1 0-48z"]
}, q6 = {
  prefix: "fas",
  iconName: "eye",
  icon: [576, 512, [128065], "f06e", "M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4C142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zM144 256a144 144 0 1 1 288 0 144 144 0 1 1 -288 0zm144-64c0 35.3-28.7 64-64 64c-7.1 0-13.9-1.2-20.3-3.3c-5.5-1.8-11.9 1.6-11.7 7.4c.3 6.9 1.3 13.8 3.2 20.7c13.7 51.2 66.4 81.6 117.6 67.9s81.6-66.4 67.9-117.6c-11.1-41.5-47.8-69.4-88.6-71.1c-5.8-.2-9.2 6.1-7.4 11.7c2.1 6.4 3.3 13.2 3.3 20.3z"]
}, Vc = {
  prefix: "fas",
  iconName: "pen",
  icon: [512, 512, [128394], "f304", "M362.7 19.3L314.3 67.7 444.3 197.7l48.4-48.4c25-25 25-65.5 0-90.5L453.3 19.3c-25-25-65.5-25-90.5 0zm-71 71L58.6 323.5c-10.4 10.4-18 23.3-22.2 37.4L1 481.2C-1.5 489.7 .8 498.8 7 505s15.3 8.5 23.7 6.1l120.3-35.4c14.1-4.2 27-11.8 37.4-22.2L421.7 220.3 291.7 90.3z"]
}, F6 = {
  prefix: "fas",
  iconName: "arrow-rotate-right",
  icon: [512, 512, [8635, "arrow-right-rotate", "arrow-rotate-forward", "redo"], "f01e", "M386.3 160L336 160c-17.7 0-32 14.3-32 32s14.3 32 32 32l128 0c17.7 0 32-14.3 32-32l0-128c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 51.2L414.4 97.6c-87.5-87.5-229.3-87.5-316.8 0s-87.5 229.3 0 316.8s229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3s163.8-62.5 226.3 0L386.3 160z"]
}, p1 = F6, U6 = {
  prefix: "fas",
  iconName: "arrow-rotate-left",
  icon: [512, 512, [8634, "arrow-left-rotate", "arrow-rotate-back", "arrow-rotate-backward", "undo"], "f0e2", "M125.7 160l50.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L48 224c-17.7 0-32-14.3-32-32L16 64c0-17.7 14.3-32 32-32s32 14.3 32 32l0 51.2L97.6 97.6c87.5-87.5 229.3-87.5 316.8 0s87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3s-163.8-62.5-226.3 0L125.7 160z"]
}, m1 = U6, V6 = {
  prefix: "fas",
  iconName: "crop-simple",
  icon: [512, 512, ["crop-alt"], "f565", "M128 32c0-17.7-14.3-32-32-32S64 14.3 64 32l0 32L32 64C14.3 64 0 78.3 0 96s14.3 32 32 32l32 0 0 256c0 35.3 28.7 64 64 64l224 0 0-64-224 0 0-352zM384 480c0 17.7 14.3 32 32 32s32-14.3 32-32l0-32 32 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-32 0 0-256c0-35.3-28.7-64-64-64L160 64l0 64 224 0 0 352z"]
}, W6 = V6, H6 = {
  prefix: "fas",
  iconName: "gear",
  icon: [512, 512, [9881, "cog"], "f013", "M495.9 166.6c3.2 8.7 .5 18.4-6.4 24.6l-43.3 39.4c1.1 8.3 1.7 16.8 1.7 25.4s-.6 17.1-1.7 25.4l43.3 39.4c6.9 6.2 9.6 15.9 6.4 24.6c-4.4 11.9-9.7 23.3-15.8 34.3l-4.7 8.1c-6.6 11-14 21.4-22.1 31.2c-5.9 7.2-15.7 9.6-24.5 6.8l-55.7-17.7c-13.4 10.3-28.2 18.9-44 25.4l-12.5 57.1c-2 9.1-9 16.3-18.2 17.8c-13.8 2.3-28 3.5-42.5 3.5s-28.7-1.2-42.5-3.5c-9.2-1.5-16.2-8.7-18.2-17.8l-12.5-57.1c-15.8-6.5-30.6-15.1-44-25.4L83.1 425.9c-8.8 2.8-18.6 .3-24.5-6.8c-8.1-9.8-15.5-20.2-22.1-31.2l-4.7-8.1c-6.1-11-11.4-22.4-15.8-34.3c-3.2-8.7-.5-18.4 6.4-24.6l43.3-39.4C64.6 273.1 64 264.6 64 256s.6-17.1 1.7-25.4L22.4 191.2c-6.9-6.2-9.6-15.9-6.4-24.6c4.4-11.9 9.7-23.3 15.8-34.3l4.7-8.1c6.6-11 14-21.4 22.1-31.2c5.9-7.2 15.7-9.6 24.5-6.8l55.7 17.7c13.4-10.3 28.2-18.9 44-25.4l12.5-57.1c2-9.1 9-16.3 18.2-17.8C227.3 1.2 241.5 0 256 0s28.7 1.2 42.5 3.5c9.2 1.5 16.2 8.7 18.2 17.8l12.5 57.1c15.8 6.5 30.6 15.1 44 25.4l55.7-17.7c8.8-2.8 18.6-.3 24.5 6.8c8.1 9.8 15.5 20.2 22.1 31.2l4.7 8.1c6.1 11 11.4 22.4 15.8 34.3zM256 336a80 80 0 1 0 0-160 80 80 0 1 0 0 160z"]
}, K6 = H6, pa = {
  prefix: "fas",
  iconName: "caret-down",
  icon: [320, 512, [], "f0d7", "M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"]
}, G6 = {
  prefix: "fas",
  iconName: "ellipsis-vertical",
  icon: [128, 512, ["ellipsis-v"], "f142", "M64 360a56 56 0 1 0 0 112 56 56 0 1 0 0-112zm0-160a56 56 0 1 0 0 112 56 56 0 1 0 0-112zM120 96A56 56 0 1 0 8 96a56 56 0 1 0 112 0z"]
}, GC = G6, Nd = {
  prefix: "fas",
  iconName: "arrow-right-arrow-left",
  icon: [448, 512, [8644, "exchange"], "f0ec", "M438.6 150.6c12.5-12.5 12.5-32.8 0-45.3l-96-96c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.7 96 32 96C14.3 96 0 110.3 0 128s14.3 32 32 32l306.7 0-41.4 41.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l96-96zm-333.3 352c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 416 416 416c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0 41.4-41.4c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3l96 96z"]
}, J6 = {
  prefix: "fas",
  iconName: "arrow-down-short-wide",
  icon: [576, 512, ["sort-amount-desc", "sort-amount-down-alt"], "f884", "M151.6 469.6C145.5 476.2 137 480 128 480s-17.5-3.8-23.6-10.4l-88-96c-11.9-13-11.1-33.3 2-45.2s33.3-11.1 45.2 2L96 365.7 96 64c0-17.7 14.3-32 32-32s32 14.3 32 32l0 301.7 32.4-35.4c11.9-13 32.2-13.9 45.2-2s13.9 32.2 2 45.2l-88 96zM320 32l32 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-32 0c-17.7 0-32-14.3-32-32s14.3-32 32-32zm0 128l96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-96 0c-17.7 0-32-14.3-32-32s14.3-32 32-32zm0 128l160 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-160 0c-17.7 0-32-14.3-32-32s14.3-32 32-32zm0 128l224 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-224 0c-17.7 0-32-14.3-32-32s14.3-32 32-32z"]
}, Ip = J6, Y6 = {
  prefix: "fas",
  iconName: "angle-down",
  icon: [448, 512, [8964], "f107", "M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
}, Lx = {
  prefix: "fas",
  iconName: "arrow-down",
  icon: [384, 512, [8595], "f063", "M169.4 470.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 370.8 224 64c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 306.7L54.6 265.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"]
}, Q6 = {
  prefix: "fas",
  iconName: "magnifying-glass",
  icon: [512, 512, [128269, "search"], "f002", "M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"]
}, Km = Q6, X6 = {
  prefix: "fas",
  iconName: "chevron-down",
  icon: [512, 512, [], "f078", "M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"]
}, Na = {
  prefix: "fas",
  iconName: "copy",
  icon: [448, 512, [], "f0c5", "M208 0L332.1 0c12.7 0 24.9 5.1 33.9 14.1l67.9 67.9c9 9 14.1 21.2 14.1 33.9L448 336c0 26.5-21.5 48-48 48l-192 0c-26.5 0-48-21.5-48-48l0-288c0-26.5 21.5-48 48-48zM48 128l80 0 0 64-64 0 0 256 192 0 0-32 64 0 0 48c0 26.5-21.5 48-48 48L48 512c-26.5 0-48-21.5-48-48L0 176c0-26.5 21.5-48 48-48z"]
}, $c = {
  prefix: "fas",
  iconName: "plus",
  icon: [448, 512, [10133, 61543, "add"], "2b", "M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"]
}, JC = {
  prefix: "fas",
  iconName: "xmark",
  icon: [384, 512, [128473, 10005, 10006, 10060, 215, "close", "multiply", "remove", "times"], "f00d", "M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"]
}, Z6 = JC, Gm = JC, eR = {
  prefix: "fas",
  iconName: "rotate",
  icon: [512, 512, [128260, "sync-alt"], "f2f1", "M142.9 142.9c-17.5 17.5-30.1 38-37.8 59.8c-5.9 16.7-24.2 25.4-40.8 19.5s-25.4-24.2-19.5-40.8C55.6 150.7 73.2 122 97.6 97.6c87.2-87.2 228.3-87.5 315.8-1L455 55c6.9-6.9 17.2-8.9 26.2-5.2s14.8 12.5 14.8 22.2l0 128c0 13.3-10.7 24-24 24l-8.4 0c0 0 0 0 0 0L344 224c-9.7 0-18.5-5.8-22.2-14.8s-1.7-19.3 5.2-26.2l41.1-41.1c-62.6-61.5-163.1-61.2-225.3 1zM16 312c0-13.3 10.7-24 24-24l7.6 0 .7 0L168 288c9.7 0 18.5 5.8 22.2 14.8s1.7 19.3-5.2 26.2l-41.1 41.1c62.6 61.5 163.1 61.2 225.3-1c17.5-17.5 30.1-38 37.8-59.8c5.9-16.7 24.2-25.4 40.8-19.5s25.4 24.2 19.5 40.8c-10.8 30.6-28.4 59.3-52.9 83.8c-87.2 87.2-228.3 87.5-315.8 1L57 457c-6.9 6.9-17.2 8.9-26.2 5.2S16 449.7 16 440l0-119.6 0-.7 0-7.6z"]
}, tR = {
  prefix: "fas",
  iconName: "up-right-and-down-left-from-center",
  icon: [512, 512, ["expand-alt"], "f424", "M344 0L488 0c13.3 0 24 10.7 24 24l0 144c0 9.7-5.8 18.5-14.8 22.2s-19.3 1.7-26.2-5.2l-39-39-87 87c-9.4 9.4-24.6 9.4-33.9 0l-32-32c-9.4-9.4-9.4-24.6 0-33.9l87-87L327 41c-6.9-6.9-8.9-17.2-5.2-26.2S334.3 0 344 0zM168 512L24 512c-13.3 0-24-10.7-24-24L0 344c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2l39 39 87-87c9.4-9.4 24.6-9.4 33.9 0l32 32c9.4 9.4 9.4 24.6 0 33.9l-87 87 39 39c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8z"]
}, YC = {
  prefix: "fas",
  iconName: "clone",
  icon: [512, 512, [], "f24d", "M288 448L64 448l0-224 64 0 0-64-64 0c-35.3 0-64 28.7-64 64L0 448c0 35.3 28.7 64 64 64l224 0c35.3 0 64-28.7 64-64l0-64-64 0 0 64zm-64-96l224 0c35.3 0 64-28.7 64-64l0-224c0-35.3-28.7-64-64-64L224 0c-35.3 0-64 28.7-64 64l0 224c0 35.3 28.7 64 64 64z"]
}, g1 = {
  prefix: "fas",
  iconName: "check",
  icon: [448, 512, [10003, 10004], "f00c", "M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"]
}, nR = {
  prefix: "fas",
  iconName: "triangle-exclamation",
  icon: [512, 512, [9888, "exclamation-triangle", "warning"], "f071", "M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z"]
}, Hl = nR;
var Vg = { exports: {} }, Bx;
function rR() {
  if (Bx) return Vg.exports;
  Bx = 1;
  /*
   * @version    1.4.0
   * @date       2015-10-26
   * @stability  3 - Stable
   * @author     Lauri Rooden (https://github.com/litejs/natural-compare-lite)
   * @license    MIT License
   */
  var t = function(e, n) {
    var r, i, o = 1, s = 0, a = 0, l = String.alphabet;
    function u(f, d, h) {
      if (h) {
        for (r = d; h = u(f, r), h < 76 && h > 65; ) ++r;
        return +f.slice(d - 1, r);
      }
      return h = l && l.indexOf(f.charAt(d)), h > -1 ? h + 76 : (h = f.charCodeAt(d) || 0, h < 45 || h > 127 ? h : h < 46 ? 65 : h < 48 ? h - 1 : h < 58 ? h + 18 : h < 65 ? h - 11 : h < 91 ? h + 11 : h < 97 ? h - 37 : h < 123 ? h + 5 : h - 63);
    }
    if ((e += "") != (n += "")) {
      for (; o; )
        if (i = u(e, s++), o = u(n, a++), i < 76 && o < 76 && i > 66 && o > 66 && (i = u(e, s, s), o = u(n, a, s = r), a = r), i != o) return i < o ? -1 : 1;
    }
    return 0;
  };
  try {
    Vg.exports = t;
  } catch {
    String.naturalCompare = t;
  }
  return Vg.exports;
}
var iR = rR();
const oR = /* @__PURE__ */ nC(iR);
var qx = Number.isNaN || function(e) {
  return typeof e == "number" && e !== e;
};
function sR(t, e) {
  return !!(t === e || qx(t) && qx(e));
}
function aR(t, e) {
  if (t.length !== e.length)
    return !1;
  for (var n = 0; n < t.length; n++)
    if (!sR(t[n], e[n]))
      return !1;
  return !0;
}
function Sf(t, e) {
  e === void 0 && (e = aR);
  var n = null;
  function r() {
    for (var i = [], o = 0; o < arguments.length; o++)
      i[o] = arguments[o];
    if (n && n.lastThis === this && e(i, n.lastArgs))
      return n.lastResult;
    var s = t.apply(this, i);
    return n = {
      lastResult: s,
      lastArgs: i,
      lastThis: this
    }, s;
  }
  return r.clear = function() {
    n = null;
  }, r;
}
var Dd = { exports: {} }, Wg = {}, Ws = {}, kl = {}, Hg = {}, Kg = {}, Gg = {}, Fx;
function zp() {
  return Fx || (Fx = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.regexpCode = t.getEsmExportName = t.getProperty = t.safeStringify = t.stringify = t.strConcat = t.addCodeArg = t.str = t._ = t.nil = t._Code = t.Name = t.IDENTIFIER = t._CodeOrName = void 0;
    class e {
    }
    t._CodeOrName = e, t.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
    class n extends e {
      constructor(x) {
        if (super(), !t.IDENTIFIER.test(x))
          throw new Error("CodeGen: name must be a valid identifier");
        this.str = x;
      }
      toString() {
        return this.str;
      }
      emptyStr() {
        return !1;
      }
      get names() {
        return { [this.str]: 1 };
      }
    }
    t.Name = n;
    class r extends e {
      constructor(x) {
        super(), this._items = typeof x == "string" ? [x] : x;
      }
      toString() {
        return this.str;
      }
      emptyStr() {
        if (this._items.length > 1)
          return !1;
        const x = this._items[0];
        return x === "" || x === '""';
      }
      get str() {
        var x;
        return (x = this._str) !== null && x !== void 0 ? x : this._str = this._items.reduce((w, j) => `${w}${j}`, "");
      }
      get names() {
        var x;
        return (x = this._names) !== null && x !== void 0 ? x : this._names = this._items.reduce((w, j) => (j instanceof n && (w[j.str] = (w[j.str] || 0) + 1), w), {});
      }
    }
    t._Code = r, t.nil = new r("");
    function i(b, ...x) {
      const w = [b[0]];
      let j = 0;
      for (; j < x.length; )
        a(w, x[j]), w.push(b[++j]);
      return new r(w);
    }
    t._ = i;
    const o = new r("+");
    function s(b, ...x) {
      const w = [p(b[0])];
      let j = 0;
      for (; j < x.length; )
        w.push(o), a(w, x[j]), w.push(o, p(b[++j]));
      return l(w), new r(w);
    }
    t.str = s;
    function a(b, x) {
      x instanceof r ? b.push(...x._items) : x instanceof n ? b.push(x) : b.push(d(x));
    }
    t.addCodeArg = a;
    function l(b) {
      let x = 1;
      for (; x < b.length - 1; ) {
        if (b[x] === o) {
          const w = u(b[x - 1], b[x + 1]);
          if (w !== void 0) {
            b.splice(x - 1, 3, w);
            continue;
          }
          b[x++] = "+";
        }
        x++;
      }
    }
    function u(b, x) {
      if (x === '""')
        return b;
      if (b === '""')
        return x;
      if (typeof b == "string")
        return x instanceof n || b[b.length - 1] !== '"' ? void 0 : typeof x != "string" ? `${b.slice(0, -1)}${x}"` : x[0] === '"' ? b.slice(0, -1) + x.slice(1) : void 0;
      if (typeof x == "string" && x[0] === '"' && !(b instanceof n))
        return `"${b}${x.slice(1)}`;
    }
    function f(b, x) {
      return x.emptyStr() ? b : b.emptyStr() ? x : s`${b}${x}`;
    }
    t.strConcat = f;
    function d(b) {
      return typeof b == "number" || typeof b == "boolean" || b === null ? b : p(Array.isArray(b) ? b.join(",") : b);
    }
    function h(b) {
      return new r(p(b));
    }
    t.stringify = h;
    function p(b) {
      return JSON.stringify(b).replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029");
    }
    t.safeStringify = p;
    function m(b) {
      return typeof b == "string" && t.IDENTIFIER.test(b) ? new r(`.${b}`) : i`[${b}]`;
    }
    t.getProperty = m;
    function v(b) {
      if (typeof b == "string" && t.IDENTIFIER.test(b))
        return new r(`${b}`);
      throw new Error(`CodeGen: invalid export name: ${b}, use explicit $id name mapping`);
    }
    t.getEsmExportName = v;
    function g(b) {
      return new r(b.toString());
    }
    t.regexpCode = g;
  })(Gg)), Gg;
}
var Jg = {}, Ux;
function Vx() {
  return Ux || (Ux = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.ValueScope = t.ValueScopeName = t.Scope = t.varKinds = t.UsedValueState = void 0;
    const e = zp();
    class n extends Error {
      constructor(u) {
        super(`CodeGen: "code" for ${u} not defined`), this.value = u.value;
      }
    }
    var r;
    (function(l) {
      l[l.Started = 0] = "Started", l[l.Completed = 1] = "Completed";
    })(r || (t.UsedValueState = r = {})), t.varKinds = {
      const: new e.Name("const"),
      let: new e.Name("let"),
      var: new e.Name("var")
    };
    class i {
      constructor({ prefixes: u, parent: f } = {}) {
        this._names = {}, this._prefixes = u, this._parent = f;
      }
      toName(u) {
        return u instanceof e.Name ? u : this.name(u);
      }
      name(u) {
        return new e.Name(this._newName(u));
      }
      _newName(u) {
        const f = this._names[u] || this._nameGroup(u);
        return `${u}${f.index++}`;
      }
      _nameGroup(u) {
        var f, d;
        if (!((d = (f = this._parent) === null || f === void 0 ? void 0 : f._prefixes) === null || d === void 0) && d.has(u) || this._prefixes && !this._prefixes.has(u))
          throw new Error(`CodeGen: prefix "${u}" is not allowed in this scope`);
        return this._names[u] = { prefix: u, index: 0 };
      }
    }
    t.Scope = i;
    class o extends e.Name {
      constructor(u, f) {
        super(f), this.prefix = u;
      }
      setValue(u, { property: f, itemIndex: d }) {
        this.value = u, this.scopePath = (0, e._)`.${new e.Name(f)}[${d}]`;
      }
    }
    t.ValueScopeName = o;
    const s = (0, e._)`\n`;
    class a extends i {
      constructor(u) {
        super(u), this._values = {}, this._scope = u.scope, this.opts = { ...u, _n: u.lines ? s : e.nil };
      }
      get() {
        return this._scope;
      }
      name(u) {
        return new o(u, this._newName(u));
      }
      value(u, f) {
        var d;
        if (f.ref === void 0)
          throw new Error("CodeGen: ref must be passed in value");
        const h = this.toName(u), { prefix: p } = h, m = (d = f.key) !== null && d !== void 0 ? d : f.ref;
        let v = this._values[p];
        if (v) {
          const x = v.get(m);
          if (x)
            return x;
        } else
          v = this._values[p] = /* @__PURE__ */ new Map();
        v.set(m, h);
        const g = this._scope[p] || (this._scope[p] = []), b = g.length;
        return g[b] = f.ref, h.setValue(f, { property: p, itemIndex: b }), h;
      }
      getValue(u, f) {
        const d = this._values[u];
        if (d)
          return d.get(f);
      }
      scopeRefs(u, f = this._values) {
        return this._reduceValues(f, (d) => {
          if (d.scopePath === void 0)
            throw new Error(`CodeGen: name "${d}" has no value`);
          return (0, e._)`${u}${d.scopePath}`;
        });
      }
      scopeCode(u = this._values, f, d) {
        return this._reduceValues(u, (h) => {
          if (h.value === void 0)
            throw new Error(`CodeGen: name "${h}" has no value`);
          return h.value.code;
        }, f, d);
      }
      _reduceValues(u, f, d = {}, h) {
        let p = e.nil;
        for (const m in u) {
          const v = u[m];
          if (!v)
            continue;
          const g = d[m] = d[m] || /* @__PURE__ */ new Map();
          v.forEach((b) => {
            if (g.has(b))
              return;
            g.set(b, r.Started);
            let x = f(b);
            if (x) {
              const w = this.opts.es5 ? t.varKinds.var : t.varKinds.const;
              p = (0, e._)`${p}${w} ${b} = ${x};${this.opts._n}`;
            } else if (x = h?.(b))
              p = (0, e._)`${p}${x}${this.opts._n}`;
            else
              throw new n(b);
            g.set(b, r.Completed);
          });
        }
        return p;
      }
    }
    t.ValueScope = a;
  })(Jg)), Jg;
}
var Wx;
function An() {
  return Wx || (Wx = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.or = t.and = t.not = t.CodeGen = t.operators = t.varKinds = t.ValueScopeName = t.ValueScope = t.Scope = t.Name = t.regexpCode = t.stringify = t.getProperty = t.nil = t.strConcat = t.str = t._ = void 0;
    const e = zp(), n = Vx();
    var r = zp();
    Object.defineProperty(t, "_", { enumerable: !0, get: function() {
      return r._;
    } }), Object.defineProperty(t, "str", { enumerable: !0, get: function() {
      return r.str;
    } }), Object.defineProperty(t, "strConcat", { enumerable: !0, get: function() {
      return r.strConcat;
    } }), Object.defineProperty(t, "nil", { enumerable: !0, get: function() {
      return r.nil;
    } }), Object.defineProperty(t, "getProperty", { enumerable: !0, get: function() {
      return r.getProperty;
    } }), Object.defineProperty(t, "stringify", { enumerable: !0, get: function() {
      return r.stringify;
    } }), Object.defineProperty(t, "regexpCode", { enumerable: !0, get: function() {
      return r.regexpCode;
    } }), Object.defineProperty(t, "Name", { enumerable: !0, get: function() {
      return r.Name;
    } });
    var i = Vx();
    Object.defineProperty(t, "Scope", { enumerable: !0, get: function() {
      return i.Scope;
    } }), Object.defineProperty(t, "ValueScope", { enumerable: !0, get: function() {
      return i.ValueScope;
    } }), Object.defineProperty(t, "ValueScopeName", { enumerable: !0, get: function() {
      return i.ValueScopeName;
    } }), Object.defineProperty(t, "varKinds", { enumerable: !0, get: function() {
      return i.varKinds;
    } }), t.operators = {
      GT: new e._Code(">"),
      GTE: new e._Code(">="),
      LT: new e._Code("<"),
      LTE: new e._Code("<="),
      EQ: new e._Code("==="),
      NEQ: new e._Code("!=="),
      NOT: new e._Code("!"),
      OR: new e._Code("||"),
      AND: new e._Code("&&"),
      ADD: new e._Code("+")
    };
    class o {
      optimizeNodes() {
        return this;
      }
      optimizeNames(O, $) {
        return this;
      }
    }
    class s extends o {
      constructor(O, $, ne) {
        super(), this.varKind = O, this.name = $, this.rhs = ne;
      }
      render({ es5: O, _n: $ }) {
        const ne = O ? n.varKinds.var : this.varKind, je = this.rhs === void 0 ? "" : ` = ${this.rhs}`;
        return `${ne} ${this.name}${je};` + $;
      }
      optimizeNames(O, $) {
        if (O[this.name.str])
          return this.rhs && (this.rhs = ce(this.rhs, O, $)), this;
      }
      get names() {
        return this.rhs instanceof e._CodeOrName ? this.rhs.names : {};
      }
    }
    class a extends o {
      constructor(O, $, ne) {
        super(), this.lhs = O, this.rhs = $, this.sideEffects = ne;
      }
      render({ _n: O }) {
        return `${this.lhs} = ${this.rhs};` + O;
      }
      optimizeNames(O, $) {
        if (!(this.lhs instanceof e.Name && !O[this.lhs.str] && !this.sideEffects))
          return this.rhs = ce(this.rhs, O, $), this;
      }
      get names() {
        const O = this.lhs instanceof e.Name ? {} : { ...this.lhs.names };
        return W(O, this.rhs);
      }
    }
    class l extends a {
      constructor(O, $, ne, je) {
        super(O, ne, je), this.op = $;
      }
      render({ _n: O }) {
        return `${this.lhs} ${this.op}= ${this.rhs};` + O;
      }
    }
    class u extends o {
      constructor(O) {
        super(), this.label = O, this.names = {};
      }
      render({ _n: O }) {
        return `${this.label}:` + O;
      }
    }
    class f extends o {
      constructor(O) {
        super(), this.label = O, this.names = {};
      }
      render({ _n: O }) {
        return `break${this.label ? ` ${this.label}` : ""};` + O;
      }
    }
    class d extends o {
      constructor(O) {
        super(), this.error = O;
      }
      render({ _n: O }) {
        return `throw ${this.error};` + O;
      }
      get names() {
        return this.error.names;
      }
    }
    class h extends o {
      constructor(O) {
        super(), this.code = O;
      }
      render({ _n: O }) {
        return `${this.code};` + O;
      }
      optimizeNodes() {
        return `${this.code}` ? this : void 0;
      }
      optimizeNames(O, $) {
        return this.code = ce(this.code, O, $), this;
      }
      get names() {
        return this.code instanceof e._CodeOrName ? this.code.names : {};
      }
    }
    class p extends o {
      constructor(O = []) {
        super(), this.nodes = O;
      }
      render(O) {
        return this.nodes.reduce(($, ne) => $ + ne.render(O), "");
      }
      optimizeNodes() {
        const { nodes: O } = this;
        let $ = O.length;
        for (; $--; ) {
          const ne = O[$].optimizeNodes();
          Array.isArray(ne) ? O.splice($, 1, ...ne) : ne ? O[$] = ne : O.splice($, 1);
        }
        return O.length > 0 ? this : void 0;
      }
      optimizeNames(O, $) {
        const { nodes: ne } = this;
        let je = ne.length;
        for (; je--; ) {
          const J = ne[je];
          J.optimizeNames(O, $) || (te(O, J.names), ne.splice(je, 1));
        }
        return ne.length > 0 ? this : void 0;
      }
      get names() {
        return this.nodes.reduce((O, $) => L(O, $.names), {});
      }
    }
    class m extends p {
      render(O) {
        return "{" + O._n + super.render(O) + "}" + O._n;
      }
    }
    class v extends p {
    }
    class g extends m {
    }
    g.kind = "else";
    class b extends m {
      constructor(O, $) {
        super($), this.condition = O;
      }
      render(O) {
        let $ = `if(${this.condition})` + super.render(O);
        return this.else && ($ += "else " + this.else.render(O)), $;
      }
      optimizeNodes() {
        super.optimizeNodes();
        const O = this.condition;
        if (O === !0)
          return this.nodes;
        let $ = this.else;
        if ($) {
          const ne = $.optimizeNodes();
          $ = this.else = Array.isArray(ne) ? new g(ne) : ne;
        }
        if ($)
          return O === !1 ? $ instanceof b ? $ : $.nodes : this.nodes.length ? this : new b(we(O), $ instanceof b ? [$] : $.nodes);
        if (!(O === !1 || !this.nodes.length))
          return this;
      }
      optimizeNames(O, $) {
        var ne;
        if (this.else = (ne = this.else) === null || ne === void 0 ? void 0 : ne.optimizeNames(O, $), !!(super.optimizeNames(O, $) || this.else))
          return this.condition = ce(this.condition, O, $), this;
      }
      get names() {
        const O = super.names;
        return W(O, this.condition), this.else && L(O, this.else.names), O;
      }
    }
    b.kind = "if";
    class x extends m {
    }
    x.kind = "for";
    class w extends x {
      constructor(O) {
        super(), this.iteration = O;
      }
      render(O) {
        return `for(${this.iteration})` + super.render(O);
      }
      optimizeNames(O, $) {
        if (super.optimizeNames(O, $))
          return this.iteration = ce(this.iteration, O, $), this;
      }
      get names() {
        return L(super.names, this.iteration.names);
      }
    }
    class j extends x {
      constructor(O, $, ne, je) {
        super(), this.varKind = O, this.name = $, this.from = ne, this.to = je;
      }
      render(O) {
        const $ = O.es5 ? n.varKinds.var : this.varKind, { name: ne, from: je, to: J } = this;
        return `for(${$} ${ne}=${je}; ${ne}<${J}; ${ne}++)` + super.render(O);
      }
      get names() {
        const O = W(super.names, this.from);
        return W(O, this.to);
      }
    }
    class y extends x {
      constructor(O, $, ne, je) {
        super(), this.loop = O, this.varKind = $, this.name = ne, this.iterable = je;
      }
      render(O) {
        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(O);
      }
      optimizeNames(O, $) {
        if (super.optimizeNames(O, $))
          return this.iterable = ce(this.iterable, O, $), this;
      }
      get names() {
        return L(super.names, this.iterable.names);
      }
    }
    class k extends m {
      constructor(O, $, ne) {
        super(), this.name = O, this.args = $, this.async = ne;
      }
      render(O) {
        return `${this.async ? "async " : ""}function ${this.name}(${this.args})` + super.render(O);
      }
    }
    k.kind = "func";
    class S extends p {
      render(O) {
        return "return " + super.render(O);
      }
    }
    S.kind = "return";
    class T extends m {
      render(O) {
        let $ = "try" + super.render(O);
        return this.catch && ($ += this.catch.render(O)), this.finally && ($ += this.finally.render(O)), $;
      }
      optimizeNodes() {
        var O, $;
        return super.optimizeNodes(), (O = this.catch) === null || O === void 0 || O.optimizeNodes(), ($ = this.finally) === null || $ === void 0 || $.optimizeNodes(), this;
      }
      optimizeNames(O, $) {
        var ne, je;
        return super.optimizeNames(O, $), (ne = this.catch) === null || ne === void 0 || ne.optimizeNames(O, $), (je = this.finally) === null || je === void 0 || je.optimizeNames(O, $), this;
      }
      get names() {
        const O = super.names;
        return this.catch && L(O, this.catch.names), this.finally && L(O, this.finally.names), O;
      }
    }
    class M extends m {
      constructor(O) {
        super(), this.error = O;
      }
      render(O) {
        return `catch(${this.error})` + super.render(O);
      }
    }
    M.kind = "catch";
    class N extends m {
      render(O) {
        return "finally" + super.render(O);
      }
    }
    N.kind = "finally";
    class z {
      constructor(O, $ = {}) {
        this._values = {}, this._blockStarts = [], this._constants = {}, this.opts = { ...$, _n: $.lines ? `
` : "" }, this._extScope = O, this._scope = new n.Scope({ parent: O }), this._nodes = [new v()];
      }
      toString() {
        return this._root.render(this.opts);
      }
      // returns unique name in the internal scope
      name(O) {
        return this._scope.name(O);
      }
      // reserves unique name in the external scope
      scopeName(O) {
        return this._extScope.name(O);
      }
      // reserves unique name in the external scope and assigns value to it
      scopeValue(O, $) {
        const ne = this._extScope.value(O, $);
        return (this._values[ne.prefix] || (this._values[ne.prefix] = /* @__PURE__ */ new Set())).add(ne), ne;
      }
      getScopeValue(O, $) {
        return this._extScope.getValue(O, $);
      }
      // return code that assigns values in the external scope to the names that are used internally
      // (same names that were returned by gen.scopeName or gen.scopeValue)
      scopeRefs(O) {
        return this._extScope.scopeRefs(O, this._values);
      }
      scopeCode() {
        return this._extScope.scopeCode(this._values);
      }
      _def(O, $, ne, je) {
        const J = this._scope.toName($);
        return ne !== void 0 && je && (this._constants[J.str] = ne), this._leafNode(new s(O, J, ne)), J;
      }
      // `const` declaration (`var` in es5 mode)
      const(O, $, ne) {
        return this._def(n.varKinds.const, O, $, ne);
      }
      // `let` declaration with optional assignment (`var` in es5 mode)
      let(O, $, ne) {
        return this._def(n.varKinds.let, O, $, ne);
      }
      // `var` declaration with optional assignment
      var(O, $, ne) {
        return this._def(n.varKinds.var, O, $, ne);
      }
      // assignment code
      assign(O, $, ne) {
        return this._leafNode(new a(O, $, ne));
      }
      // `+=` code
      add(O, $) {
        return this._leafNode(new l(O, t.operators.ADD, $));
      }
      // appends passed SafeExpr to code or executes Block
      code(O) {
        return typeof O == "function" ? O() : O !== e.nil && this._leafNode(new h(O)), this;
      }
      // returns code for object literal for the passed argument list of key-value pairs
      object(...O) {
        const $ = ["{"];
        for (const [ne, je] of O)
          $.length > 1 && $.push(","), $.push(ne), (ne !== je || this.opts.es5) && ($.push(":"), (0, e.addCodeArg)($, je));
        return $.push("}"), new e._Code($);
      }
      // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)
      if(O, $, ne) {
        if (this._blockNode(new b(O)), $ && ne)
          this.code($).else().code(ne).endIf();
        else if ($)
          this.code($).endIf();
        else if (ne)
          throw new Error('CodeGen: "else" body without "then" body');
        return this;
      }
      // `else if` clause - invalid without `if` or after `else` clauses
      elseIf(O) {
        return this._elseNode(new b(O));
      }
      // `else` clause - only valid after `if` or `else if` clauses
      else() {
        return this._elseNode(new g());
      }
      // end `if` statement (needed if gen.if was used only with condition)
      endIf() {
        return this._endBlockNode(b, g);
      }
      _for(O, $) {
        return this._blockNode(O), $ && this.code($).endFor(), this;
      }
      // a generic `for` clause (or statement if `forBody` is passed)
      for(O, $) {
        return this._for(new w(O), $);
      }
      // `for` statement for a range of values
      forRange(O, $, ne, je, J = this.opts.es5 ? n.varKinds.var : n.varKinds.let) {
        const H = this._scope.toName(O);
        return this._for(new j(J, H, $, ne), () => je(H));
      }
      // `for-of` statement (in es5 mode replace with a normal for loop)
      forOf(O, $, ne, je = n.varKinds.const) {
        const J = this._scope.toName(O);
        if (this.opts.es5) {
          const H = $ instanceof e.Name ? $ : this.var("_arr", $);
          return this.forRange("_i", 0, (0, e._)`${H}.length`, (ue) => {
            this.var(J, (0, e._)`${H}[${ue}]`), ne(J);
          });
        }
        return this._for(new y("of", je, J, $), () => ne(J));
      }
      // `for-in` statement.
      // With option `ownProperties` replaced with a `for-of` loop for object keys
      forIn(O, $, ne, je = this.opts.es5 ? n.varKinds.var : n.varKinds.const) {
        if (this.opts.ownProperties)
          return this.forOf(O, (0, e._)`Object.keys(${$})`, ne);
        const J = this._scope.toName(O);
        return this._for(new y("in", je, J, $), () => ne(J));
      }
      // end `for` loop
      endFor() {
        return this._endBlockNode(x);
      }
      // `label` statement
      label(O) {
        return this._leafNode(new u(O));
      }
      // `break` statement
      break(O) {
        return this._leafNode(new f(O));
      }
      // `return` statement
      return(O) {
        const $ = new S();
        if (this._blockNode($), this.code(O), $.nodes.length !== 1)
          throw new Error('CodeGen: "return" should have one node');
        return this._endBlockNode(S);
      }
      // `try` statement
      try(O, $, ne) {
        if (!$ && !ne)
          throw new Error('CodeGen: "try" without "catch" and "finally"');
        const je = new T();
        if (this._blockNode(je), this.code(O), $) {
          const J = this.name("e");
          this._currNode = je.catch = new M(J), $(J);
        }
        return ne && (this._currNode = je.finally = new N(), this.code(ne)), this._endBlockNode(M, N);
      }
      // `throw` statement
      throw(O) {
        return this._leafNode(new d(O));
      }
      // start self-balancing block
      block(O, $) {
        return this._blockStarts.push(this._nodes.length), O && this.code(O).endBlock($), this;
      }
      // end the current self-balancing block
      endBlock(O) {
        const $ = this._blockStarts.pop();
        if ($ === void 0)
          throw new Error("CodeGen: not in self-balancing block");
        const ne = this._nodes.length - $;
        if (ne < 0 || O !== void 0 && ne !== O)
          throw new Error(`CodeGen: wrong number of nodes: ${ne} vs ${O} expected`);
        return this._nodes.length = $, this;
      }
      // `function` heading (or definition if funcBody is passed)
      func(O, $ = e.nil, ne, je) {
        return this._blockNode(new k(O, $, ne)), je && this.code(je).endFunc(), this;
      }
      // end function definition
      endFunc() {
        return this._endBlockNode(k);
      }
      optimize(O = 1) {
        for (; O-- > 0; )
          this._root.optimizeNodes(), this._root.optimizeNames(this._root.names, this._constants);
      }
      _leafNode(O) {
        return this._currNode.nodes.push(O), this;
      }
      _blockNode(O) {
        this._currNode.nodes.push(O), this._nodes.push(O);
      }
      _endBlockNode(O, $) {
        const ne = this._currNode;
        if (ne instanceof O || $ && ne instanceof $)
          return this._nodes.pop(), this;
        throw new Error(`CodeGen: not in block "${$ ? `${O.kind}/${$.kind}` : O.kind}"`);
      }
      _elseNode(O) {
        const $ = this._currNode;
        if (!($ instanceof b))
          throw new Error('CodeGen: "else" without "if"');
        return this._currNode = $.else = O, this;
      }
      get _root() {
        return this._nodes[0];
      }
      get _currNode() {
        const O = this._nodes;
        return O[O.length - 1];
      }
      set _currNode(O) {
        const $ = this._nodes;
        $[$.length - 1] = O;
      }
    }
    t.CodeGen = z;
    function L(R, O) {
      for (const $ in O)
        R[$] = (R[$] || 0) + (O[$] || 0);
      return R;
    }
    function W(R, O) {
      return O instanceof e._CodeOrName ? L(R, O.names) : R;
    }
    function ce(R, O, $) {
      if (R instanceof e.Name)
        return ne(R);
      if (!je(R))
        return R;
      return new e._Code(R._items.reduce((J, H) => (H instanceof e.Name && (H = ne(H)), H instanceof e._Code ? J.push(...H._items) : J.push(H), J), []));
      function ne(J) {
        const H = $[J.str];
        return H === void 0 || O[J.str] !== 1 ? J : (delete O[J.str], H);
      }
      function je(J) {
        return J instanceof e._Code && J._items.some((H) => H instanceof e.Name && O[H.str] === 1 && $[H.str] !== void 0);
      }
    }
    function te(R, O) {
      for (const $ in O)
        R[$] = (R[$] || 0) - (O[$] || 0);
    }
    function we(R) {
      return typeof R == "boolean" || typeof R == "number" || R === null ? !R : (0, e._)`!${ie(R)}`;
    }
    t.not = we;
    const Ee = B(t.operators.AND);
    function ae(...R) {
      return R.reduce(Ee);
    }
    t.and = ae;
    const re = B(t.operators.OR);
    function G(...R) {
      return R.reduce(re);
    }
    t.or = G;
    function B(R) {
      return (O, $) => O === e.nil ? $ : $ === e.nil ? O : (0, e._)`${ie(O)} ${R} ${ie($)}`;
    }
    function ie(R) {
      return R instanceof e.Name ? R : (0, e._)`(${R})`;
    }
  })(Kg)), Kg;
}
var kn = {}, Hx;
function Xn() {
  if (Hx) return kn;
  Hx = 1, Object.defineProperty(kn, "__esModule", { value: !0 }), kn.checkStrictMode = kn.getErrorPath = kn.Type = kn.useFunc = kn.setEvaluated = kn.evaluatedPropsToName = kn.mergeEvaluated = kn.eachItem = kn.unescapeJsonPointer = kn.escapeJsonPointer = kn.escapeFragment = kn.unescapeFragment = kn.schemaRefOrVal = kn.schemaHasRulesButRef = kn.schemaHasRules = kn.checkUnknownRules = kn.alwaysValidSchema = kn.toHash = void 0;
  const t = An(), e = zp();
  function n(y) {
    const k = {};
    for (const S of y)
      k[S] = !0;
    return k;
  }
  kn.toHash = n;
  function r(y, k) {
    return typeof k == "boolean" ? k : Object.keys(k).length === 0 ? !0 : (i(y, k), !o(k, y.self.RULES.all));
  }
  kn.alwaysValidSchema = r;
  function i(y, k = y.schema) {
    const { opts: S, self: T } = y;
    if (!S.strictSchema || typeof k == "boolean")
      return;
    const M = T.RULES.keywords;
    for (const N in k)
      M[N] || j(y, `unknown keyword: "${N}"`);
  }
  kn.checkUnknownRules = i;
  function o(y, k) {
    if (typeof y == "boolean")
      return !y;
    for (const S in y)
      if (k[S])
        return !0;
    return !1;
  }
  kn.schemaHasRules = o;
  function s(y, k) {
    if (typeof y == "boolean")
      return !y;
    for (const S in y)
      if (S !== "$ref" && k.all[S])
        return !0;
    return !1;
  }
  kn.schemaHasRulesButRef = s;
  function a({ topSchemaRef: y, schemaPath: k }, S, T, M) {
    if (!M) {
      if (typeof S == "number" || typeof S == "boolean")
        return S;
      if (typeof S == "string")
        return (0, t._)`${S}`;
    }
    return (0, t._)`${y}${k}${(0, t.getProperty)(T)}`;
  }
  kn.schemaRefOrVal = a;
  function l(y) {
    return d(decodeURIComponent(y));
  }
  kn.unescapeFragment = l;
  function u(y) {
    return encodeURIComponent(f(y));
  }
  kn.escapeFragment = u;
  function f(y) {
    return typeof y == "number" ? `${y}` : y.replace(/~/g, "~0").replace(/\//g, "~1");
  }
  kn.escapeJsonPointer = f;
  function d(y) {
    return y.replace(/~1/g, "/").replace(/~0/g, "~");
  }
  kn.unescapeJsonPointer = d;
  function h(y, k) {
    if (Array.isArray(y))
      for (const S of y)
        k(S);
    else
      k(y);
  }
  kn.eachItem = h;
  function p({ mergeNames: y, mergeToName: k, mergeValues: S, resultToName: T }) {
    return (M, N, z, L) => {
      const W = z === void 0 ? N : z instanceof t.Name ? (N instanceof t.Name ? y(M, N, z) : k(M, N, z), z) : N instanceof t.Name ? (k(M, z, N), N) : S(N, z);
      return L === t.Name && !(W instanceof t.Name) ? T(M, W) : W;
    };
  }
  kn.mergeEvaluated = {
    props: p({
      mergeNames: (y, k, S) => y.if((0, t._)`${S} !== true && ${k} !== undefined`, () => {
        y.if((0, t._)`${k} === true`, () => y.assign(S, !0), () => y.assign(S, (0, t._)`${S} || {}`).code((0, t._)`Object.assign(${S}, ${k})`));
      }),
      mergeToName: (y, k, S) => y.if((0, t._)`${S} !== true`, () => {
        k === !0 ? y.assign(S, !0) : (y.assign(S, (0, t._)`${S} || {}`), v(y, S, k));
      }),
      mergeValues: (y, k) => y === !0 ? !0 : { ...y, ...k },
      resultToName: m
    }),
    items: p({
      mergeNames: (y, k, S) => y.if((0, t._)`${S} !== true && ${k} !== undefined`, () => y.assign(S, (0, t._)`${k} === true ? true : ${S} > ${k} ? ${S} : ${k}`)),
      mergeToName: (y, k, S) => y.if((0, t._)`${S} !== true`, () => y.assign(S, k === !0 ? !0 : (0, t._)`${S} > ${k} ? ${S} : ${k}`)),
      mergeValues: (y, k) => y === !0 ? !0 : Math.max(y, k),
      resultToName: (y, k) => y.var("items", k)
    })
  };
  function m(y, k) {
    if (k === !0)
      return y.var("props", !0);
    const S = y.var("props", (0, t._)`{}`);
    return k !== void 0 && v(y, S, k), S;
  }
  kn.evaluatedPropsToName = m;
  function v(y, k, S) {
    Object.keys(S).forEach((T) => y.assign((0, t._)`${k}${(0, t.getProperty)(T)}`, !0));
  }
  kn.setEvaluated = v;
  const g = {};
  function b(y, k) {
    return y.scopeValue("func", {
      ref: k,
      code: g[k.code] || (g[k.code] = new e._Code(k.code))
    });
  }
  kn.useFunc = b;
  var x;
  (function(y) {
    y[y.Num = 0] = "Num", y[y.Str = 1] = "Str";
  })(x || (kn.Type = x = {}));
  function w(y, k, S) {
    if (y instanceof t.Name) {
      const T = k === x.Num;
      return S ? T ? (0, t._)`"[" + ${y} + "]"` : (0, t._)`"['" + ${y} + "']"` : T ? (0, t._)`"/" + ${y}` : (0, t._)`"/" + ${y}.replace(/~/g, "~0").replace(/\\//g, "~1")`;
    }
    return S ? (0, t.getProperty)(y).toString() : "/" + f(y);
  }
  kn.getErrorPath = w;
  function j(y, k, S = y.opts.strictSchema) {
    if (S) {
      if (k = `strict mode: ${k}`, S === !0)
        throw new Error(k);
      y.self.logger.warn(k);
    }
  }
  return kn.checkStrictMode = j, kn;
}
var Id = {}, Kx;
function dl() {
  if (Kx) return Id;
  Kx = 1, Object.defineProperty(Id, "__esModule", { value: !0 });
  const t = An(), e = {
    // validation function arguments
    data: new t.Name("data"),
    // data passed to validation function
    // args passed from referencing schema
    valCxt: new t.Name("valCxt"),
    // validation/data context - should not be used directly, it is destructured to the names below
    instancePath: new t.Name("instancePath"),
    parentData: new t.Name("parentData"),
    parentDataProperty: new t.Name("parentDataProperty"),
    rootData: new t.Name("rootData"),
    // root data - same as the data passed to the first/top validation function
    dynamicAnchors: new t.Name("dynamicAnchors"),
    // used to support recursiveRef and dynamicRef
    // function scoped variables
    vErrors: new t.Name("vErrors"),
    // null or array of validation errors
    errors: new t.Name("errors"),
    // counter of validation errors
    this: new t.Name("this"),
    // "globals"
    self: new t.Name("self"),
    scope: new t.Name("scope"),
    // JTD serialize/parse name for JSON string and position
    json: new t.Name("json"),
    jsonPos: new t.Name("jsonPos"),
    jsonLen: new t.Name("jsonLen"),
    jsonPart: new t.Name("jsonPart")
  };
  return Id.default = e, Id;
}
var Gx;
function Jm() {
  return Gx || (Gx = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.extendErrors = t.resetErrorsCount = t.reportExtraError = t.reportError = t.keyword$DataError = t.keywordError = void 0;
    const e = An(), n = Xn(), r = dl();
    t.keywordError = {
      message: ({ keyword: g }) => (0, e.str)`must pass "${g}" keyword validation`
    }, t.keyword$DataError = {
      message: ({ keyword: g, schemaType: b }) => b ? (0, e.str)`"${g}" keyword must be ${b} ($data)` : (0, e.str)`"${g}" keyword is invalid ($data)`
    };
    function i(g, b = t.keywordError, x, w) {
      const { it: j } = g, { gen: y, compositeRule: k, allErrors: S } = j, T = d(g, b, x);
      w ?? (k || S) ? l(y, T) : u(j, (0, e._)`[${T}]`);
    }
    t.reportError = i;
    function o(g, b = t.keywordError, x) {
      const { it: w } = g, { gen: j, compositeRule: y, allErrors: k } = w, S = d(g, b, x);
      l(j, S), y || k || u(w, r.default.vErrors);
    }
    t.reportExtraError = o;
    function s(g, b) {
      g.assign(r.default.errors, b), g.if((0, e._)`${r.default.vErrors} !== null`, () => g.if(b, () => g.assign((0, e._)`${r.default.vErrors}.length`, b), () => g.assign(r.default.vErrors, null)));
    }
    t.resetErrorsCount = s;
    function a({ gen: g, keyword: b, schemaValue: x, data: w, errsCount: j, it: y }) {
      if (j === void 0)
        throw new Error("ajv implementation error");
      const k = g.name("err");
      g.forRange("i", j, r.default.errors, (S) => {
        g.const(k, (0, e._)`${r.default.vErrors}[${S}]`), g.if((0, e._)`${k}.instancePath === undefined`, () => g.assign((0, e._)`${k}.instancePath`, (0, e.strConcat)(r.default.instancePath, y.errorPath))), g.assign((0, e._)`${k}.schemaPath`, (0, e.str)`${y.errSchemaPath}/${b}`), y.opts.verbose && (g.assign((0, e._)`${k}.schema`, x), g.assign((0, e._)`${k}.data`, w));
      });
    }
    t.extendErrors = a;
    function l(g, b) {
      const x = g.const("err", b);
      g.if((0, e._)`${r.default.vErrors} === null`, () => g.assign(r.default.vErrors, (0, e._)`[${x}]`), (0, e._)`${r.default.vErrors}.push(${x})`), g.code((0, e._)`${r.default.errors}++`);
    }
    function u(g, b) {
      const { gen: x, validateName: w, schemaEnv: j } = g;
      j.$async ? x.throw((0, e._)`new ${g.ValidationError}(${b})`) : (x.assign((0, e._)`${w}.errors`, b), x.return(!1));
    }
    const f = {
      keyword: new e.Name("keyword"),
      schemaPath: new e.Name("schemaPath"),
      // also used in JTD errors
      params: new e.Name("params"),
      propertyName: new e.Name("propertyName"),
      message: new e.Name("message"),
      schema: new e.Name("schema"),
      parentSchema: new e.Name("parentSchema")
    };
    function d(g, b, x) {
      const { createErrors: w } = g.it;
      return w === !1 ? (0, e._)`{}` : h(g, b, x);
    }
    function h(g, b, x = {}) {
      const { gen: w, it: j } = g, y = [
        p(j, x),
        m(g, x)
      ];
      return v(g, b, y), w.object(...y);
    }
    function p({ errorPath: g }, { instancePath: b }) {
      const x = b ? (0, e.str)`${g}${(0, n.getErrorPath)(b, n.Type.Str)}` : g;
      return [r.default.instancePath, (0, e.strConcat)(r.default.instancePath, x)];
    }
    function m({ keyword: g, it: { errSchemaPath: b } }, { schemaPath: x, parentSchema: w }) {
      let j = w ? b : (0, e.str)`${b}/${g}`;
      return x && (j = (0, e.str)`${j}${(0, n.getErrorPath)(x, n.Type.Str)}`), [f.schemaPath, j];
    }
    function v(g, { params: b, message: x }, w) {
      const { keyword: j, data: y, schemaValue: k, it: S } = g, { opts: T, propertyName: M, topSchemaRef: N, schemaPath: z } = S;
      w.push([f.keyword, j], [f.params, typeof b == "function" ? b(g) : b || (0, e._)`{}`]), T.messages && w.push([f.message, typeof x == "function" ? x(g) : x]), T.verbose && w.push([f.schema, k], [f.parentSchema, (0, e._)`${N}${z}`], [r.default.data, y]), M && w.push([f.propertyName, M]);
    }
  })(Hg)), Hg;
}
var Jx;
function lR() {
  if (Jx) return kl;
  Jx = 1, Object.defineProperty(kl, "__esModule", { value: !0 }), kl.boolOrEmptySchema = kl.topBoolOrEmptySchema = void 0;
  const t = Jm(), e = An(), n = dl(), r = {
    message: "boolean schema is false"
  };
  function i(a) {
    const { gen: l, schema: u, validateName: f } = a;
    u === !1 ? s(a, !1) : typeof u == "object" && u.$async === !0 ? l.return(n.default.data) : (l.assign((0, e._)`${f}.errors`, null), l.return(!0));
  }
  kl.topBoolOrEmptySchema = i;
  function o(a, l) {
    const { gen: u, schema: f } = a;
    f === !1 ? (u.var(l, !1), s(a)) : u.var(l, !0);
  }
  kl.boolOrEmptySchema = o;
  function s(a, l) {
    const { gen: u, data: f } = a, d = {
      gen: u,
      keyword: "false schema",
      data: f,
      schema: !1,
      schemaCode: !1,
      schemaValue: !1,
      params: {},
      it: a
    };
    (0, t.reportError)(d, r, void 0, l);
  }
  return kl;
}
var Oi = {}, Sl = {}, Yx;
function QC() {
  if (Yx) return Sl;
  Yx = 1, Object.defineProperty(Sl, "__esModule", { value: !0 }), Sl.getRules = Sl.isJSONType = void 0;
  const t = ["string", "number", "integer", "boolean", "null", "object", "array"], e = new Set(t);
  function n(i) {
    return typeof i == "string" && e.has(i);
  }
  Sl.isJSONType = n;
  function r() {
    const i = {
      number: { type: "number", rules: [] },
      string: { type: "string", rules: [] },
      array: { type: "array", rules: [] },
      object: { type: "object", rules: [] }
    };
    return {
      types: { ...i, integer: !0, boolean: !0, null: !0 },
      rules: [{ rules: [] }, i.number, i.string, i.array, i.object],
      post: { rules: [] },
      all: {},
      keywords: {}
    };
  }
  return Sl.getRules = r, Sl;
}
var Hs = {}, Qx;
function XC() {
  if (Qx) return Hs;
  Qx = 1, Object.defineProperty(Hs, "__esModule", { value: !0 }), Hs.shouldUseRule = Hs.shouldUseGroup = Hs.schemaHasRulesForType = void 0;
  function t({ schema: r, self: i }, o) {
    const s = i.RULES.types[o];
    return s && s !== !0 && e(r, s);
  }
  Hs.schemaHasRulesForType = t;
  function e(r, i) {
    return i.rules.some((o) => n(r, o));
  }
  Hs.shouldUseGroup = e;
  function n(r, i) {
    var o;
    return r[i.keyword] !== void 0 || ((o = i.definition.implements) === null || o === void 0 ? void 0 : o.some((s) => r[s] !== void 0));
  }
  return Hs.shouldUseRule = n, Hs;
}
var Xx;
function Lp() {
  if (Xx) return Oi;
  Xx = 1, Object.defineProperty(Oi, "__esModule", { value: !0 }), Oi.reportTypeError = Oi.checkDataTypes = Oi.checkDataType = Oi.coerceAndCheckDataType = Oi.getJSONTypes = Oi.getSchemaTypes = Oi.DataType = void 0;
  const t = QC(), e = XC(), n = Jm(), r = An(), i = Xn();
  var o;
  (function(x) {
    x[x.Correct = 0] = "Correct", x[x.Wrong = 1] = "Wrong";
  })(o || (Oi.DataType = o = {}));
  function s(x) {
    const w = a(x.type);
    if (w.includes("null")) {
      if (x.nullable === !1)
        throw new Error("type: null contradicts nullable: false");
    } else {
      if (!w.length && x.nullable !== void 0)
        throw new Error('"nullable" cannot be used without "type"');
      x.nullable === !0 && w.push("null");
    }
    return w;
  }
  Oi.getSchemaTypes = s;
  function a(x) {
    const w = Array.isArray(x) ? x : x ? [x] : [];
    if (w.every(t.isJSONType))
      return w;
    throw new Error("type must be JSONType or JSONType[]: " + w.join(","));
  }
  Oi.getJSONTypes = a;
  function l(x, w) {
    const { gen: j, data: y, opts: k } = x, S = f(w, k.coerceTypes), T = w.length > 0 && !(S.length === 0 && w.length === 1 && (0, e.schemaHasRulesForType)(x, w[0]));
    if (T) {
      const M = m(w, y, k.strictNumbers, o.Wrong);
      j.if(M, () => {
        S.length ? d(x, w, S) : g(x);
      });
    }
    return T;
  }
  Oi.coerceAndCheckDataType = l;
  const u = /* @__PURE__ */ new Set(["string", "number", "integer", "boolean", "null"]);
  function f(x, w) {
    return w ? x.filter((j) => u.has(j) || w === "array" && j === "array") : [];
  }
  function d(x, w, j) {
    const { gen: y, data: k, opts: S } = x, T = y.let("dataType", (0, r._)`typeof ${k}`), M = y.let("coerced", (0, r._)`undefined`);
    S.coerceTypes === "array" && y.if((0, r._)`${T} == 'object' && Array.isArray(${k}) && ${k}.length == 1`, () => y.assign(k, (0, r._)`${k}[0]`).assign(T, (0, r._)`typeof ${k}`).if(m(w, k, S.strictNumbers), () => y.assign(M, k))), y.if((0, r._)`${M} !== undefined`);
    for (const z of j)
      (u.has(z) || z === "array" && S.coerceTypes === "array") && N(z);
    y.else(), g(x), y.endIf(), y.if((0, r._)`${M} !== undefined`, () => {
      y.assign(k, M), h(x, M);
    });
    function N(z) {
      switch (z) {
        case "string":
          y.elseIf((0, r._)`${T} == "number" || ${T} == "boolean"`).assign(M, (0, r._)`"" + ${k}`).elseIf((0, r._)`${k} === null`).assign(M, (0, r._)`""`);
          return;
        case "number":
          y.elseIf((0, r._)`${T} == "boolean" || ${k} === null
              || (${T} == "string" && ${k} && ${k} == +${k})`).assign(M, (0, r._)`+${k}`);
          return;
        case "integer":
          y.elseIf((0, r._)`${T} === "boolean" || ${k} === null
              || (${T} === "string" && ${k} && ${k} == +${k} && !(${k} % 1))`).assign(M, (0, r._)`+${k}`);
          return;
        case "boolean":
          y.elseIf((0, r._)`${k} === "false" || ${k} === 0 || ${k} === null`).assign(M, !1).elseIf((0, r._)`${k} === "true" || ${k} === 1`).assign(M, !0);
          return;
        case "null":
          y.elseIf((0, r._)`${k} === "" || ${k} === 0 || ${k} === false`), y.assign(M, null);
          return;
        case "array":
          y.elseIf((0, r._)`${T} === "string" || ${T} === "number"
              || ${T} === "boolean" || ${k} === null`).assign(M, (0, r._)`[${k}]`);
      }
    }
  }
  function h({ gen: x, parentData: w, parentDataProperty: j }, y) {
    x.if((0, r._)`${w} !== undefined`, () => x.assign((0, r._)`${w}[${j}]`, y));
  }
  function p(x, w, j, y = o.Correct) {
    const k = y === o.Correct ? r.operators.EQ : r.operators.NEQ;
    let S;
    switch (x) {
      case "null":
        return (0, r._)`${w} ${k} null`;
      case "array":
        S = (0, r._)`Array.isArray(${w})`;
        break;
      case "object":
        S = (0, r._)`${w} && typeof ${w} == "object" && !Array.isArray(${w})`;
        break;
      case "integer":
        S = T((0, r._)`!(${w} % 1) && !isNaN(${w})`);
        break;
      case "number":
        S = T();
        break;
      default:
        return (0, r._)`typeof ${w} ${k} ${x}`;
    }
    return y === o.Correct ? S : (0, r.not)(S);
    function T(M = r.nil) {
      return (0, r.and)((0, r._)`typeof ${w} == "number"`, M, j ? (0, r._)`isFinite(${w})` : r.nil);
    }
  }
  Oi.checkDataType = p;
  function m(x, w, j, y) {
    if (x.length === 1)
      return p(x[0], w, j, y);
    let k;
    const S = (0, i.toHash)(x);
    if (S.array && S.object) {
      const T = (0, r._)`typeof ${w} != "object"`;
      k = S.null ? T : (0, r._)`!${w} || ${T}`, delete S.null, delete S.array, delete S.object;
    } else
      k = r.nil;
    S.number && delete S.integer;
    for (const T in S)
      k = (0, r.and)(k, p(T, w, j, y));
    return k;
  }
  Oi.checkDataTypes = m;
  const v = {
    message: ({ schema: x }) => `must be ${x}`,
    params: ({ schema: x, schemaValue: w }) => typeof x == "string" ? (0, r._)`{type: ${x}}` : (0, r._)`{type: ${w}}`
  };
  function g(x) {
    const w = b(x);
    (0, n.reportError)(w, v);
  }
  Oi.reportTypeError = g;
  function b(x) {
    const { gen: w, data: j, schema: y } = x, k = (0, i.schemaRefOrVal)(x, y, "type");
    return {
      gen: w,
      keyword: "type",
      data: j,
      schema: y.type,
      schemaCode: k,
      schemaValue: k,
      parentSchema: y,
      params: {},
      it: x
    };
  }
  return Oi;
}
var Iu = {}, Zx;
function cR() {
  if (Zx) return Iu;
  Zx = 1, Object.defineProperty(Iu, "__esModule", { value: !0 }), Iu.assignDefaults = void 0;
  const t = An(), e = Xn();
  function n(i, o) {
    const { properties: s, items: a } = i.schema;
    if (o === "object" && s)
      for (const l in s)
        r(i, l, s[l].default);
    else o === "array" && Array.isArray(a) && a.forEach((l, u) => r(i, u, l.default));
  }
  Iu.assignDefaults = n;
  function r(i, o, s) {
    const { gen: a, compositeRule: l, data: u, opts: f } = i;
    if (s === void 0)
      return;
    const d = (0, t._)`${u}${(0, t.getProperty)(o)}`;
    if (l) {
      (0, e.checkStrictMode)(i, `default is ignored for: ${d}`);
      return;
    }
    let h = (0, t._)`${d} === undefined`;
    f.useDefaults === "empty" && (h = (0, t._)`${h} || ${d} === null || ${d} === ""`), a.if(h, (0, t._)`${d} = ${(0, t.stringify)(s)}`);
  }
  return Iu;
}
var Uo = {}, ur = {}, ew;
function cs() {
  if (ew) return ur;
  ew = 1, Object.defineProperty(ur, "__esModule", { value: !0 }), ur.validateUnion = ur.validateArray = ur.usePattern = ur.callValidateCode = ur.schemaProperties = ur.allSchemaProperties = ur.noPropertyInData = ur.propertyInData = ur.isOwnProperty = ur.hasPropFunc = ur.reportMissingProp = ur.checkMissingProp = ur.checkReportMissingProp = void 0;
  const t = An(), e = Xn(), n = dl(), r = Xn();
  function i(x, w) {
    const { gen: j, data: y, it: k } = x;
    j.if(f(j, y, w, k.opts.ownProperties), () => {
      x.setParams({ missingProperty: (0, t._)`${w}` }, !0), x.error();
    });
  }
  ur.checkReportMissingProp = i;
  function o({ gen: x, data: w, it: { opts: j } }, y, k) {
    return (0, t.or)(...y.map((S) => (0, t.and)(f(x, w, S, j.ownProperties), (0, t._)`${k} = ${S}`)));
  }
  ur.checkMissingProp = o;
  function s(x, w) {
    x.setParams({ missingProperty: w }, !0), x.error();
  }
  ur.reportMissingProp = s;
  function a(x) {
    return x.scopeValue("func", {
      // eslint-disable-next-line @typescript-eslint/unbound-method
      ref: Object.prototype.hasOwnProperty,
      code: (0, t._)`Object.prototype.hasOwnProperty`
    });
  }
  ur.hasPropFunc = a;
  function l(x, w, j) {
    return (0, t._)`${a(x)}.call(${w}, ${j})`;
  }
  ur.isOwnProperty = l;
  function u(x, w, j, y) {
    const k = (0, t._)`${w}${(0, t.getProperty)(j)} !== undefined`;
    return y ? (0, t._)`${k} && ${l(x, w, j)}` : k;
  }
  ur.propertyInData = u;
  function f(x, w, j, y) {
    const k = (0, t._)`${w}${(0, t.getProperty)(j)} === undefined`;
    return y ? (0, t.or)(k, (0, t.not)(l(x, w, j))) : k;
  }
  ur.noPropertyInData = f;
  function d(x) {
    return x ? Object.keys(x).filter((w) => w !== "__proto__") : [];
  }
  ur.allSchemaProperties = d;
  function h(x, w) {
    return d(w).filter((j) => !(0, e.alwaysValidSchema)(x, w[j]));
  }
  ur.schemaProperties = h;
  function p({ schemaCode: x, data: w, it: { gen: j, topSchemaRef: y, schemaPath: k, errorPath: S }, it: T }, M, N, z) {
    const L = z ? (0, t._)`${x}, ${w}, ${y}${k}` : w, W = [
      [n.default.instancePath, (0, t.strConcat)(n.default.instancePath, S)],
      [n.default.parentData, T.parentData],
      [n.default.parentDataProperty, T.parentDataProperty],
      [n.default.rootData, n.default.rootData]
    ];
    T.opts.dynamicRef && W.push([n.default.dynamicAnchors, n.default.dynamicAnchors]);
    const ce = (0, t._)`${L}, ${j.object(...W)}`;
    return N !== t.nil ? (0, t._)`${M}.call(${N}, ${ce})` : (0, t._)`${M}(${ce})`;
  }
  ur.callValidateCode = p;
  const m = (0, t._)`new RegExp`;
  function v({ gen: x, it: { opts: w } }, j) {
    const y = w.unicodeRegExp ? "u" : "", { regExp: k } = w.code, S = k(j, y);
    return x.scopeValue("pattern", {
      key: S.toString(),
      ref: S,
      code: (0, t._)`${k.code === "new RegExp" ? m : (0, r.useFunc)(x, k)}(${j}, ${y})`
    });
  }
  ur.usePattern = v;
  function g(x) {
    const { gen: w, data: j, keyword: y, it: k } = x, S = w.name("valid");
    if (k.allErrors) {
      const M = w.let("valid", !0);
      return T(() => w.assign(M, !1)), M;
    }
    return w.var(S, !0), T(() => w.break()), S;
    function T(M) {
      const N = w.const("len", (0, t._)`${j}.length`);
      w.forRange("i", 0, N, (z) => {
        x.subschema({
          keyword: y,
          dataProp: z,
          dataPropType: e.Type.Num
        }, S), w.if((0, t.not)(S), M);
      });
    }
  }
  ur.validateArray = g;
  function b(x) {
    const { gen: w, schema: j, keyword: y, it: k } = x;
    if (!Array.isArray(j))
      throw new Error("ajv implementation error");
    if (j.some((N) => (0, e.alwaysValidSchema)(k, N)) && !k.opts.unevaluated)
      return;
    const T = w.let("valid", !1), M = w.name("_valid");
    w.block(() => j.forEach((N, z) => {
      const L = x.subschema({
        keyword: y,
        schemaProp: z,
        compositeRule: !0
      }, M);
      w.assign(T, (0, t._)`${T} || ${M}`), x.mergeValidEvaluated(L, M) || w.if((0, t.not)(T));
    })), x.result(T, () => x.reset(), () => x.error(!0));
  }
  return ur.validateUnion = b, ur;
}
var tw;
function uR() {
  if (tw) return Uo;
  tw = 1, Object.defineProperty(Uo, "__esModule", { value: !0 }), Uo.validateKeywordUsage = Uo.validSchemaType = Uo.funcKeywordCode = Uo.macroKeywordCode = void 0;
  const t = An(), e = dl(), n = cs(), r = Jm();
  function i(h, p) {
    const { gen: m, keyword: v, schema: g, parentSchema: b, it: x } = h, w = p.macro.call(x.self, g, b, x), j = u(m, v, w);
    x.opts.validateSchema !== !1 && x.self.validateSchema(w, !0);
    const y = m.name("valid");
    h.subschema({
      schema: w,
      schemaPath: t.nil,
      errSchemaPath: `${x.errSchemaPath}/${v}`,
      topSchemaRef: j,
      compositeRule: !0
    }, y), h.pass(y, () => h.error(!0));
  }
  Uo.macroKeywordCode = i;
  function o(h, p) {
    var m;
    const { gen: v, keyword: g, schema: b, parentSchema: x, $data: w, it: j } = h;
    l(j, p);
    const y = !w && p.compile ? p.compile.call(j.self, b, x, j) : p.validate, k = u(v, g, y), S = v.let("valid");
    h.block$data(S, T), h.ok((m = p.valid) !== null && m !== void 0 ? m : S);
    function T() {
      if (p.errors === !1)
        z(), p.modifying && s(h), L(() => h.error());
      else {
        const W = p.async ? M() : N();
        p.modifying && s(h), L(() => a(h, W));
      }
    }
    function M() {
      const W = v.let("ruleErrs", null);
      return v.try(() => z((0, t._)`await `), (ce) => v.assign(S, !1).if((0, t._)`${ce} instanceof ${j.ValidationError}`, () => v.assign(W, (0, t._)`${ce}.errors`), () => v.throw(ce))), W;
    }
    function N() {
      const W = (0, t._)`${k}.errors`;
      return v.assign(W, null), z(t.nil), W;
    }
    function z(W = p.async ? (0, t._)`await ` : t.nil) {
      const ce = j.opts.passContext ? e.default.this : e.default.self, te = !("compile" in p && !w || p.schema === !1);
      v.assign(S, (0, t._)`${W}${(0, n.callValidateCode)(h, k, ce, te)}`, p.modifying);
    }
    function L(W) {
      var ce;
      v.if((0, t.not)((ce = p.valid) !== null && ce !== void 0 ? ce : S), W);
    }
  }
  Uo.funcKeywordCode = o;
  function s(h) {
    const { gen: p, data: m, it: v } = h;
    p.if(v.parentData, () => p.assign(m, (0, t._)`${v.parentData}[${v.parentDataProperty}]`));
  }
  function a(h, p) {
    const { gen: m } = h;
    m.if((0, t._)`Array.isArray(${p})`, () => {
      m.assign(e.default.vErrors, (0, t._)`${e.default.vErrors} === null ? ${p} : ${e.default.vErrors}.concat(${p})`).assign(e.default.errors, (0, t._)`${e.default.vErrors}.length`), (0, r.extendErrors)(h);
    }, () => h.error());
  }
  function l({ schemaEnv: h }, p) {
    if (p.async && !h.$async)
      throw new Error("async keyword in sync schema");
  }
  function u(h, p, m) {
    if (m === void 0)
      throw new Error(`keyword "${p}" failed to compile`);
    return h.scopeValue("keyword", typeof m == "function" ? { ref: m } : { ref: m, code: (0, t.stringify)(m) });
  }
  function f(h, p, m = !1) {
    return !p.length || p.some((v) => v === "array" ? Array.isArray(h) : v === "object" ? h && typeof h == "object" && !Array.isArray(h) : typeof h == v || m && typeof h > "u");
  }
  Uo.validSchemaType = f;
  function d({ schema: h, opts: p, self: m, errSchemaPath: v }, g, b) {
    if (Array.isArray(g.keyword) ? !g.keyword.includes(b) : g.keyword !== b)
      throw new Error("ajv implementation error");
    const x = g.dependencies;
    if (x?.some((w) => !Object.prototype.hasOwnProperty.call(h, w)))
      throw new Error(`parent schema must have dependencies of ${b}: ${x.join(",")}`);
    if (g.validateSchema && !g.validateSchema(h[b])) {
      const j = `keyword "${b}" value is invalid at path "${v}": ` + m.errorsText(g.validateSchema.errors);
      if (p.validateSchema === "log")
        m.logger.error(j);
      else
        throw new Error(j);
    }
  }
  return Uo.validateKeywordUsage = d, Uo;
}
var Ks = {}, nw;
function fR() {
  if (nw) return Ks;
  nw = 1, Object.defineProperty(Ks, "__esModule", { value: !0 }), Ks.extendSubschemaMode = Ks.extendSubschemaData = Ks.getSubschema = void 0;
  const t = An(), e = Xn();
  function n(o, { keyword: s, schemaProp: a, schema: l, schemaPath: u, errSchemaPath: f, topSchemaRef: d }) {
    if (s !== void 0 && l !== void 0)
      throw new Error('both "keyword" and "schema" passed, only one allowed');
    if (s !== void 0) {
      const h = o.schema[s];
      return a === void 0 ? {
        schema: h,
        schemaPath: (0, t._)`${o.schemaPath}${(0, t.getProperty)(s)}`,
        errSchemaPath: `${o.errSchemaPath}/${s}`
      } : {
        schema: h[a],
        schemaPath: (0, t._)`${o.schemaPath}${(0, t.getProperty)(s)}${(0, t.getProperty)(a)}`,
        errSchemaPath: `${o.errSchemaPath}/${s}/${(0, e.escapeFragment)(a)}`
      };
    }
    if (l !== void 0) {
      if (u === void 0 || f === void 0 || d === void 0)
        throw new Error('"schemaPath", "errSchemaPath" and "topSchemaRef" are required with "schema"');
      return {
        schema: l,
        schemaPath: u,
        topSchemaRef: d,
        errSchemaPath: f
      };
    }
    throw new Error('either "keyword" or "schema" must be passed');
  }
  Ks.getSubschema = n;
  function r(o, s, { dataProp: a, dataPropType: l, data: u, dataTypes: f, propertyName: d }) {
    if (u !== void 0 && a !== void 0)
      throw new Error('both "data" and "dataProp" passed, only one allowed');
    const { gen: h } = s;
    if (a !== void 0) {
      const { errorPath: m, dataPathArr: v, opts: g } = s, b = h.let("data", (0, t._)`${s.data}${(0, t.getProperty)(a)}`, !0);
      p(b), o.errorPath = (0, t.str)`${m}${(0, e.getErrorPath)(a, l, g.jsPropertySyntax)}`, o.parentDataProperty = (0, t._)`${a}`, o.dataPathArr = [...v, o.parentDataProperty];
    }
    if (u !== void 0) {
      const m = u instanceof t.Name ? u : h.let("data", u, !0);
      p(m), d !== void 0 && (o.propertyName = d);
    }
    f && (o.dataTypes = f);
    function p(m) {
      o.data = m, o.dataLevel = s.dataLevel + 1, o.dataTypes = [], s.definedProperties = /* @__PURE__ */ new Set(), o.parentData = s.data, o.dataNames = [...s.dataNames, m];
    }
  }
  Ks.extendSubschemaData = r;
  function i(o, { jtdDiscriminator: s, jtdMetadata: a, compositeRule: l, createErrors: u, allErrors: f }) {
    l !== void 0 && (o.compositeRule = l), u !== void 0 && (o.createErrors = u), f !== void 0 && (o.allErrors = f), o.jtdDiscriminator = s, o.jtdMetadata = a;
  }
  return Ks.extendSubschemaMode = i, Ks;
}
var Fi = {}, Yg, rw;
function ZC() {
  return rw || (rw = 1, Yg = function t(e, n) {
    if (e === n) return !0;
    if (e && n && typeof e == "object" && typeof n == "object") {
      if (e.constructor !== n.constructor) return !1;
      var r, i, o;
      if (Array.isArray(e)) {
        if (r = e.length, r != n.length) return !1;
        for (i = r; i-- !== 0; )
          if (!t(e[i], n[i])) return !1;
        return !0;
      }
      if (e.constructor === RegExp) return e.source === n.source && e.flags === n.flags;
      if (e.valueOf !== Object.prototype.valueOf) return e.valueOf() === n.valueOf();
      if (e.toString !== Object.prototype.toString) return e.toString() === n.toString();
      if (o = Object.keys(e), r = o.length, r !== Object.keys(n).length) return !1;
      for (i = r; i-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(n, o[i])) return !1;
      for (i = r; i-- !== 0; ) {
        var s = o[i];
        if (!t(e[s], n[s])) return !1;
      }
      return !0;
    }
    return e !== e && n !== n;
  }), Yg;
}
var Qg = { exports: {} }, iw;
function dR() {
  if (iw) return Qg.exports;
  iw = 1;
  var t = Qg.exports = function(r, i, o) {
    typeof i == "function" && (o = i, i = {}), o = i.cb || o;
    var s = typeof o == "function" ? o : o.pre || function() {
    }, a = o.post || function() {
    };
    e(i, s, a, r, "", r);
  };
  t.keywords = {
    additionalItems: !0,
    items: !0,
    contains: !0,
    additionalProperties: !0,
    propertyNames: !0,
    not: !0,
    if: !0,
    then: !0,
    else: !0
  }, t.arrayKeywords = {
    items: !0,
    allOf: !0,
    anyOf: !0,
    oneOf: !0
  }, t.propsKeywords = {
    $defs: !0,
    definitions: !0,
    properties: !0,
    patternProperties: !0,
    dependencies: !0
  }, t.skipKeywords = {
    default: !0,
    enum: !0,
    const: !0,
    required: !0,
    maximum: !0,
    minimum: !0,
    exclusiveMaximum: !0,
    exclusiveMinimum: !0,
    multipleOf: !0,
    maxLength: !0,
    minLength: !0,
    pattern: !0,
    format: !0,
    maxItems: !0,
    minItems: !0,
    uniqueItems: !0,
    maxProperties: !0,
    minProperties: !0
  };
  function e(r, i, o, s, a, l, u, f, d, h) {
    if (s && typeof s == "object" && !Array.isArray(s)) {
      i(s, a, l, u, f, d, h);
      for (var p in s) {
        var m = s[p];
        if (Array.isArray(m)) {
          if (p in t.arrayKeywords)
            for (var v = 0; v < m.length; v++)
              e(r, i, o, m[v], a + "/" + p + "/" + v, l, a, p, s, v);
        } else if (p in t.propsKeywords) {
          if (m && typeof m == "object")
            for (var g in m)
              e(r, i, o, m[g], a + "/" + p + "/" + n(g), l, a, p, s, g);
        } else (p in t.keywords || r.allKeys && !(p in t.skipKeywords)) && e(r, i, o, m, a + "/" + p, l, a, p, s);
      }
      o(s, a, l, u, f, d, h);
    }
  }
  function n(r) {
    return r.replace(/~/g, "~0").replace(/\//g, "~1");
  }
  return Qg.exports;
}
var ow;
function Ym() {
  if (ow) return Fi;
  ow = 1, Object.defineProperty(Fi, "__esModule", { value: !0 }), Fi.getSchemaRefs = Fi.resolveUrl = Fi.normalizeId = Fi._getFullPath = Fi.getFullPath = Fi.inlineRef = void 0;
  const t = Xn(), e = ZC(), n = dR(), r = /* @__PURE__ */ new Set([
    "type",
    "format",
    "pattern",
    "maxLength",
    "minLength",
    "maxProperties",
    "minProperties",
    "maxItems",
    "minItems",
    "maximum",
    "minimum",
    "uniqueItems",
    "multipleOf",
    "required",
    "enum",
    "const"
  ]);
  function i(v, g = !0) {
    return typeof v == "boolean" ? !0 : g === !0 ? !s(v) : g ? a(v) <= g : !1;
  }
  Fi.inlineRef = i;
  const o = /* @__PURE__ */ new Set([
    "$ref",
    "$recursiveRef",
    "$recursiveAnchor",
    "$dynamicRef",
    "$dynamicAnchor"
  ]);
  function s(v) {
    for (const g in v) {
      if (o.has(g))
        return !0;
      const b = v[g];
      if (Array.isArray(b) && b.some(s) || typeof b == "object" && s(b))
        return !0;
    }
    return !1;
  }
  function a(v) {
    let g = 0;
    for (const b in v) {
      if (b === "$ref")
        return 1 / 0;
      if (g++, !r.has(b) && (typeof v[b] == "object" && (0, t.eachItem)(v[b], (x) => g += a(x)), g === 1 / 0))
        return 1 / 0;
    }
    return g;
  }
  function l(v, g = "", b) {
    b !== !1 && (g = d(g));
    const x = v.parse(g);
    return u(v, x);
  }
  Fi.getFullPath = l;
  function u(v, g) {
    return v.serialize(g).split("#")[0] + "#";
  }
  Fi._getFullPath = u;
  const f = /#\/?$/;
  function d(v) {
    return v ? v.replace(f, "") : "";
  }
  Fi.normalizeId = d;
  function h(v, g, b) {
    return b = d(b), v.resolve(g, b);
  }
  Fi.resolveUrl = h;
  const p = /^[a-z_][-a-z0-9._]*$/i;
  function m(v, g) {
    if (typeof v == "boolean")
      return {};
    const { schemaId: b, uriResolver: x } = this.opts, w = d(v[b] || g), j = { "": w }, y = l(x, w, !1), k = {}, S = /* @__PURE__ */ new Set();
    return n(v, { allKeys: !0 }, (N, z, L, W) => {
      if (W === void 0)
        return;
      const ce = y + z;
      let te = j[W];
      typeof N[b] == "string" && (te = we.call(this, N[b])), Ee.call(this, N.$anchor), Ee.call(this, N.$dynamicAnchor), j[z] = te;
      function we(ae) {
        const re = this.opts.uriResolver.resolve;
        if (ae = d(te ? re(te, ae) : ae), S.has(ae))
          throw M(ae);
        S.add(ae);
        let G = this.refs[ae];
        return typeof G == "string" && (G = this.refs[G]), typeof G == "object" ? T(N, G.schema, ae) : ae !== d(ce) && (ae[0] === "#" ? (T(N, k[ae], ae), k[ae] = N) : this.refs[ae] = ce), ae;
      }
      function Ee(ae) {
        if (typeof ae == "string") {
          if (!p.test(ae))
            throw new Error(`invalid anchor "${ae}"`);
          we.call(this, `#${ae}`);
        }
      }
    }), k;
    function T(N, z, L) {
      if (z !== void 0 && !e(N, z))
        throw M(L);
    }
    function M(N) {
      return new Error(`reference "${N}" resolves to more than one schema`);
    }
  }
  return Fi.getSchemaRefs = m, Fi;
}
var sw;
function Qm() {
  if (sw) return Ws;
  sw = 1, Object.defineProperty(Ws, "__esModule", { value: !0 }), Ws.getData = Ws.KeywordCxt = Ws.validateFunctionCode = void 0;
  const t = lR(), e = Lp(), n = XC(), r = Lp(), i = cR(), o = uR(), s = fR(), a = An(), l = dl(), u = Ym(), f = Xn(), d = Jm();
  function h(P) {
    if (y(P) && (S(P), j(P))) {
      g(P);
      return;
    }
    p(P, () => (0, t.topBoolOrEmptySchema)(P));
  }
  Ws.validateFunctionCode = h;
  function p({ gen: P, validateName: V, schema: U, schemaEnv: me, opts: X }, K) {
    X.code.es5 ? P.func(V, (0, a._)`${l.default.data}, ${l.default.valCxt}`, me.$async, () => {
      P.code((0, a._)`"use strict"; ${x(U, X)}`), v(P, X), P.code(K);
    }) : P.func(V, (0, a._)`${l.default.data}, ${m(X)}`, me.$async, () => P.code(x(U, X)).code(K));
  }
  function m(P) {
    return (0, a._)`{${l.default.instancePath}="", ${l.default.parentData}, ${l.default.parentDataProperty}, ${l.default.rootData}=${l.default.data}${P.dynamicRef ? (0, a._)`, ${l.default.dynamicAnchors}={}` : a.nil}}={}`;
  }
  function v(P, V) {
    P.if(l.default.valCxt, () => {
      P.var(l.default.instancePath, (0, a._)`${l.default.valCxt}.${l.default.instancePath}`), P.var(l.default.parentData, (0, a._)`${l.default.valCxt}.${l.default.parentData}`), P.var(l.default.parentDataProperty, (0, a._)`${l.default.valCxt}.${l.default.parentDataProperty}`), P.var(l.default.rootData, (0, a._)`${l.default.valCxt}.${l.default.rootData}`), V.dynamicRef && P.var(l.default.dynamicAnchors, (0, a._)`${l.default.valCxt}.${l.default.dynamicAnchors}`);
    }, () => {
      P.var(l.default.instancePath, (0, a._)`""`), P.var(l.default.parentData, (0, a._)`undefined`), P.var(l.default.parentDataProperty, (0, a._)`undefined`), P.var(l.default.rootData, l.default.data), V.dynamicRef && P.var(l.default.dynamicAnchors, (0, a._)`{}`);
    });
  }
  function g(P) {
    const { schema: V, opts: U, gen: me } = P;
    p(P, () => {
      U.$comment && V.$comment && W(P), N(P), me.let(l.default.vErrors, null), me.let(l.default.errors, 0), U.unevaluated && b(P), T(P), ce(P);
    });
  }
  function b(P) {
    const { gen: V, validateName: U } = P;
    P.evaluated = V.const("evaluated", (0, a._)`${U}.evaluated`), V.if((0, a._)`${P.evaluated}.dynamicProps`, () => V.assign((0, a._)`${P.evaluated}.props`, (0, a._)`undefined`)), V.if((0, a._)`${P.evaluated}.dynamicItems`, () => V.assign((0, a._)`${P.evaluated}.items`, (0, a._)`undefined`));
  }
  function x(P, V) {
    const U = typeof P == "object" && P[V.schemaId];
    return U && (V.code.source || V.code.process) ? (0, a._)`/*# sourceURL=${U} */` : a.nil;
  }
  function w(P, V) {
    if (y(P) && (S(P), j(P))) {
      k(P, V);
      return;
    }
    (0, t.boolOrEmptySchema)(P, V);
  }
  function j({ schema: P, self: V }) {
    if (typeof P == "boolean")
      return !P;
    for (const U in P)
      if (V.RULES.all[U])
        return !0;
    return !1;
  }
  function y(P) {
    return typeof P.schema != "boolean";
  }
  function k(P, V) {
    const { schema: U, gen: me, opts: X } = P;
    X.$comment && U.$comment && W(P), z(P), L(P);
    const K = me.const("_errs", l.default.errors);
    T(P, K), me.var(V, (0, a._)`${K} === ${l.default.errors}`);
  }
  function S(P) {
    (0, f.checkUnknownRules)(P), M(P);
  }
  function T(P, V) {
    if (P.opts.jtd)
      return we(P, [], !1, V);
    const U = (0, e.getSchemaTypes)(P.schema), me = (0, e.coerceAndCheckDataType)(P, U);
    we(P, U, !me, V);
  }
  function M(P) {
    const { schema: V, errSchemaPath: U, opts: me, self: X } = P;
    V.$ref && me.ignoreKeywordsWithRef && (0, f.schemaHasRulesButRef)(V, X.RULES) && X.logger.warn(`$ref: keywords ignored in schema at path "${U}"`);
  }
  function N(P) {
    const { schema: V, opts: U } = P;
    V.default !== void 0 && U.useDefaults && U.strictSchema && (0, f.checkStrictMode)(P, "default is ignored in the schema root");
  }
  function z(P) {
    const V = P.schema[P.opts.schemaId];
    V && (P.baseId = (0, u.resolveUrl)(P.opts.uriResolver, P.baseId, V));
  }
  function L(P) {
    if (P.schema.$async && !P.schemaEnv.$async)
      throw new Error("async schema in sync schema");
  }
  function W({ gen: P, schemaEnv: V, schema: U, errSchemaPath: me, opts: X }) {
    const K = U.$comment;
    if (X.$comment === !0)
      P.code((0, a._)`${l.default.self}.logger.log(${K})`);
    else if (typeof X.$comment == "function") {
      const rt = (0, a.str)`${me}/$comment`, Qe = P.scopeValue("root", { ref: V.root });
      P.code((0, a._)`${l.default.self}.opts.$comment(${K}, ${rt}, ${Qe}.schema)`);
    }
  }
  function ce(P) {
    const { gen: V, schemaEnv: U, validateName: me, ValidationError: X, opts: K } = P;
    U.$async ? V.if((0, a._)`${l.default.errors} === 0`, () => V.return(l.default.data), () => V.throw((0, a._)`new ${X}(${l.default.vErrors})`)) : (V.assign((0, a._)`${me}.errors`, l.default.vErrors), K.unevaluated && te(P), V.return((0, a._)`${l.default.errors} === 0`));
  }
  function te({ gen: P, evaluated: V, props: U, items: me }) {
    U instanceof a.Name && P.assign((0, a._)`${V}.props`, U), me instanceof a.Name && P.assign((0, a._)`${V}.items`, me);
  }
  function we(P, V, U, me) {
    const { gen: X, schema: K, data: rt, allErrors: Qe, opts: Ae, self: tt } = P, { RULES: Re } = tt;
    if (K.$ref && (Ae.ignoreKeywordsWithRef || !(0, f.schemaHasRulesButRef)(K, Re))) {
      X.block(() => je(P, "$ref", Re.all.$ref.definition));
      return;
    }
    Ae.jtd || ae(P, V), X.block(() => {
      for (const pt of Re.rules)
        qe(pt);
      qe(Re.post);
    });
    function qe(pt) {
      (0, n.shouldUseGroup)(K, pt) && (pt.type ? (X.if((0, r.checkDataType)(pt.type, rt, Ae.strictNumbers)), Ee(P, pt), V.length === 1 && V[0] === pt.type && U && (X.else(), (0, r.reportTypeError)(P)), X.endIf()) : Ee(P, pt), Qe || X.if((0, a._)`${l.default.errors} === ${me || 0}`));
    }
  }
  function Ee(P, V) {
    const { gen: U, schema: me, opts: { useDefaults: X } } = P;
    X && (0, i.assignDefaults)(P, V.type), U.block(() => {
      for (const K of V.rules)
        (0, n.shouldUseRule)(me, K) && je(P, K.keyword, K.definition, V.type);
    });
  }
  function ae(P, V) {
    P.schemaEnv.meta || !P.opts.strictTypes || (re(P, V), P.opts.allowUnionTypes || G(P, V), B(P, P.dataTypes));
  }
  function re(P, V) {
    if (V.length) {
      if (!P.dataTypes.length) {
        P.dataTypes = V;
        return;
      }
      V.forEach((U) => {
        R(P.dataTypes, U) || $(P, `type "${U}" not allowed by context "${P.dataTypes.join(",")}"`);
      }), O(P, V);
    }
  }
  function G(P, V) {
    V.length > 1 && !(V.length === 2 && V.includes("null")) && $(P, "use allowUnionTypes to allow union type keyword");
  }
  function B(P, V) {
    const U = P.self.RULES.all;
    for (const me in U) {
      const X = U[me];
      if (typeof X == "object" && (0, n.shouldUseRule)(P.schema, X)) {
        const { type: K } = X.definition;
        K.length && !K.some((rt) => ie(V, rt)) && $(P, `missing type "${K.join(",")}" for keyword "${me}"`);
      }
    }
  }
  function ie(P, V) {
    return P.includes(V) || V === "number" && P.includes("integer");
  }
  function R(P, V) {
    return P.includes(V) || V === "integer" && P.includes("number");
  }
  function O(P, V) {
    const U = [];
    for (const me of P.dataTypes)
      R(V, me) ? U.push(me) : V.includes("integer") && me === "number" && U.push("integer");
    P.dataTypes = U;
  }
  function $(P, V) {
    const U = P.schemaEnv.baseId + P.errSchemaPath;
    V += ` at "${U}" (strictTypes)`, (0, f.checkStrictMode)(P, V, P.opts.strictTypes);
  }
  class ne {
    constructor(V, U, me) {
      if ((0, o.validateKeywordUsage)(V, U, me), this.gen = V.gen, this.allErrors = V.allErrors, this.keyword = me, this.data = V.data, this.schema = V.schema[me], this.$data = U.$data && V.opts.$data && this.schema && this.schema.$data, this.schemaValue = (0, f.schemaRefOrVal)(V, this.schema, me, this.$data), this.schemaType = U.schemaType, this.parentSchema = V.schema, this.params = {}, this.it = V, this.def = U, this.$data)
        this.schemaCode = V.gen.const("vSchema", ue(this.$data, V));
      else if (this.schemaCode = this.schemaValue, !(0, o.validSchemaType)(this.schema, U.schemaType, U.allowUndefined))
        throw new Error(`${me} value must be ${JSON.stringify(U.schemaType)}`);
      ("code" in U ? U.trackErrors : U.errors !== !1) && (this.errsCount = V.gen.const("_errs", l.default.errors));
    }
    result(V, U, me) {
      this.failResult((0, a.not)(V), U, me);
    }
    failResult(V, U, me) {
      this.gen.if(V), me ? me() : this.error(), U ? (this.gen.else(), U(), this.allErrors && this.gen.endIf()) : this.allErrors ? this.gen.endIf() : this.gen.else();
    }
    pass(V, U) {
      this.failResult((0, a.not)(V), void 0, U);
    }
    fail(V) {
      if (V === void 0) {
        this.error(), this.allErrors || this.gen.if(!1);
        return;
      }
      this.gen.if(V), this.error(), this.allErrors ? this.gen.endIf() : this.gen.else();
    }
    fail$data(V) {
      if (!this.$data)
        return this.fail(V);
      const { schemaCode: U } = this;
      this.fail((0, a._)`${U} !== undefined && (${(0, a.or)(this.invalid$data(), V)})`);
    }
    error(V, U, me) {
      if (U) {
        this.setParams(U), this._error(V, me), this.setParams({});
        return;
      }
      this._error(V, me);
    }
    _error(V, U) {
      (V ? d.reportExtraError : d.reportError)(this, this.def.error, U);
    }
    $dataError() {
      (0, d.reportError)(this, this.def.$dataError || d.keyword$DataError);
    }
    reset() {
      if (this.errsCount === void 0)
        throw new Error('add "trackErrors" to keyword definition');
      (0, d.resetErrorsCount)(this.gen, this.errsCount);
    }
    ok(V) {
      this.allErrors || this.gen.if(V);
    }
    setParams(V, U) {
      U ? Object.assign(this.params, V) : this.params = V;
    }
    block$data(V, U, me = a.nil) {
      this.gen.block(() => {
        this.check$data(V, me), U();
      });
    }
    check$data(V = a.nil, U = a.nil) {
      if (!this.$data)
        return;
      const { gen: me, schemaCode: X, schemaType: K, def: rt } = this;
      me.if((0, a.or)((0, a._)`${X} === undefined`, U)), V !== a.nil && me.assign(V, !0), (K.length || rt.validateSchema) && (me.elseIf(this.invalid$data()), this.$dataError(), V !== a.nil && me.assign(V, !1)), me.else();
    }
    invalid$data() {
      const { gen: V, schemaCode: U, schemaType: me, def: X, it: K } = this;
      return (0, a.or)(rt(), Qe());
      function rt() {
        if (me.length) {
          if (!(U instanceof a.Name))
            throw new Error("ajv implementation error");
          const Ae = Array.isArray(me) ? me : [me];
          return (0, a._)`${(0, r.checkDataTypes)(Ae, U, K.opts.strictNumbers, r.DataType.Wrong)}`;
        }
        return a.nil;
      }
      function Qe() {
        if (X.validateSchema) {
          const Ae = V.scopeValue("validate$data", { ref: X.validateSchema });
          return (0, a._)`!${Ae}(${U})`;
        }
        return a.nil;
      }
    }
    subschema(V, U) {
      const me = (0, s.getSubschema)(this.it, V);
      (0, s.extendSubschemaData)(me, this.it, V), (0, s.extendSubschemaMode)(me, V);
      const X = { ...this.it, ...me, items: void 0, props: void 0 };
      return w(X, U), X;
    }
    mergeEvaluated(V, U) {
      const { it: me, gen: X } = this;
      me.opts.unevaluated && (me.props !== !0 && V.props !== void 0 && (me.props = f.mergeEvaluated.props(X, V.props, me.props, U)), me.items !== !0 && V.items !== void 0 && (me.items = f.mergeEvaluated.items(X, V.items, me.items, U)));
    }
    mergeValidEvaluated(V, U) {
      const { it: me, gen: X } = this;
      if (me.opts.unevaluated && (me.props !== !0 || me.items !== !0))
        return X.if(U, () => this.mergeEvaluated(V, a.Name)), !0;
    }
  }
  Ws.KeywordCxt = ne;
  function je(P, V, U, me) {
    const X = new ne(P, U, V);
    "code" in U ? U.code(X, me) : X.$data && U.validate ? (0, o.funcKeywordCode)(X, U) : "macro" in U ? (0, o.macroKeywordCode)(X, U) : (U.compile || U.validate) && (0, o.funcKeywordCode)(X, U);
  }
  const J = /^\/(?:[^~]|~0|~1)*$/, H = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
  function ue(P, { dataLevel: V, dataNames: U, dataPathArr: me }) {
    let X, K;
    if (P === "")
      return l.default.rootData;
    if (P[0] === "/") {
      if (!J.test(P))
        throw new Error(`Invalid JSON-pointer: ${P}`);
      X = P, K = l.default.rootData;
    } else {
      const tt = H.exec(P);
      if (!tt)
        throw new Error(`Invalid JSON-pointer: ${P}`);
      const Re = +tt[1];
      if (X = tt[2], X === "#") {
        if (Re >= V)
          throw new Error(Ae("property/index", Re));
        return me[V - Re];
      }
      if (Re > V)
        throw new Error(Ae("data", Re));
      if (K = U[V - Re], !X)
        return K;
    }
    let rt = K;
    const Qe = X.split("/");
    for (const tt of Qe)
      tt && (K = (0, a._)`${K}${(0, a.getProperty)((0, f.unescapeJsonPointer)(tt))}`, rt = (0, a._)`${rt} && ${K}`);
    return rt;
    function Ae(tt, Re) {
      return `Cannot access ${tt} ${Re} levels up, current level is ${V}`;
    }
  }
  return Ws.getData = ue, Ws;
}
var zd = {}, aw;
function v1() {
  if (aw) return zd;
  aw = 1, Object.defineProperty(zd, "__esModule", { value: !0 });
  class t extends Error {
    constructor(n) {
      super("validation failed"), this.errors = n, this.ajv = this.validation = !0;
    }
  }
  return zd.default = t, zd;
}
var Ld = {}, lw;
function Xm() {
  if (lw) return Ld;
  lw = 1, Object.defineProperty(Ld, "__esModule", { value: !0 });
  const t = Ym();
  class e extends Error {
    constructor(r, i, o, s) {
      super(s || `can't resolve reference ${o} from id ${i}`), this.missingRef = (0, t.resolveUrl)(r, i, o), this.missingSchema = (0, t.normalizeId)((0, t.getFullPath)(r, this.missingRef));
    }
  }
  return Ld.default = e, Ld;
}
var uo = {}, cw;
function b1() {
  if (cw) return uo;
  cw = 1, Object.defineProperty(uo, "__esModule", { value: !0 }), uo.resolveSchema = uo.getCompilingSchema = uo.resolveRef = uo.compileSchema = uo.SchemaEnv = void 0;
  const t = An(), e = v1(), n = dl(), r = Ym(), i = Xn(), o = Qm();
  class s {
    constructor(b) {
      var x;
      this.refs = {}, this.dynamicAnchors = {};
      let w;
      typeof b.schema == "object" && (w = b.schema), this.schema = b.schema, this.schemaId = b.schemaId, this.root = b.root || this, this.baseId = (x = b.baseId) !== null && x !== void 0 ? x : (0, r.normalizeId)(w?.[b.schemaId || "$id"]), this.schemaPath = b.schemaPath, this.localRefs = b.localRefs, this.meta = b.meta, this.$async = w?.$async, this.refs = {};
    }
  }
  uo.SchemaEnv = s;
  function a(g) {
    const b = f.call(this, g);
    if (b)
      return b;
    const x = (0, r.getFullPath)(this.opts.uriResolver, g.root.baseId), { es5: w, lines: j } = this.opts.code, { ownProperties: y } = this.opts, k = new t.CodeGen(this.scope, { es5: w, lines: j, ownProperties: y });
    let S;
    g.$async && (S = k.scopeValue("Error", {
      ref: e.default,
      code: (0, t._)`require("ajv/dist/runtime/validation_error").default`
    }));
    const T = k.scopeName("validate");
    g.validateName = T;
    const M = {
      gen: k,
      allErrors: this.opts.allErrors,
      data: n.default.data,
      parentData: n.default.parentData,
      parentDataProperty: n.default.parentDataProperty,
      dataNames: [n.default.data],
      dataPathArr: [t.nil],
      // TODO can its length be used as dataLevel if nil is removed?
      dataLevel: 0,
      dataTypes: [],
      definedProperties: /* @__PURE__ */ new Set(),
      topSchemaRef: k.scopeValue("schema", this.opts.code.source === !0 ? { ref: g.schema, code: (0, t.stringify)(g.schema) } : { ref: g.schema }),
      validateName: T,
      ValidationError: S,
      schema: g.schema,
      schemaEnv: g,
      rootId: x,
      baseId: g.baseId || x,
      schemaPath: t.nil,
      errSchemaPath: g.schemaPath || (this.opts.jtd ? "" : "#"),
      errorPath: (0, t._)`""`,
      opts: this.opts,
      self: this
    };
    let N;
    try {
      this._compilations.add(g), (0, o.validateFunctionCode)(M), k.optimize(this.opts.code.optimize);
      const z = k.toString();
      N = `${k.scopeRefs(n.default.scope)}return ${z}`, this.opts.code.process && (N = this.opts.code.process(N, g));
      const W = new Function(`${n.default.self}`, `${n.default.scope}`, N)(this, this.scope.get());
      if (this.scope.value(T, { ref: W }), W.errors = null, W.schema = g.schema, W.schemaEnv = g, g.$async && (W.$async = !0), this.opts.code.source === !0 && (W.source = { validateName: T, validateCode: z, scopeValues: k._values }), this.opts.unevaluated) {
        const { props: ce, items: te } = M;
        W.evaluated = {
          props: ce instanceof t.Name ? void 0 : ce,
          items: te instanceof t.Name ? void 0 : te,
          dynamicProps: ce instanceof t.Name,
          dynamicItems: te instanceof t.Name
        }, W.source && (W.source.evaluated = (0, t.stringify)(W.evaluated));
      }
      return g.validate = W, g;
    } catch (z) {
      throw delete g.validate, delete g.validateName, N && this.logger.error("Error compiling schema, function code:", N), z;
    } finally {
      this._compilations.delete(g);
    }
  }
  uo.compileSchema = a;
  function l(g, b, x) {
    var w;
    x = (0, r.resolveUrl)(this.opts.uriResolver, b, x);
    const j = g.refs[x];
    if (j)
      return j;
    let y = h.call(this, g, x);
    if (y === void 0) {
      const k = (w = g.localRefs) === null || w === void 0 ? void 0 : w[x], { schemaId: S } = this.opts;
      k && (y = new s({ schema: k, schemaId: S, root: g, baseId: b }));
    }
    if (y !== void 0)
      return g.refs[x] = u.call(this, y);
  }
  uo.resolveRef = l;
  function u(g) {
    return (0, r.inlineRef)(g.schema, this.opts.inlineRefs) ? g.schema : g.validate ? g : a.call(this, g);
  }
  function f(g) {
    for (const b of this._compilations)
      if (d(b, g))
        return b;
  }
  uo.getCompilingSchema = f;
  function d(g, b) {
    return g.schema === b.schema && g.root === b.root && g.baseId === b.baseId;
  }
  function h(g, b) {
    let x;
    for (; typeof (x = this.refs[b]) == "string"; )
      b = x;
    return x || this.schemas[b] || p.call(this, g, b);
  }
  function p(g, b) {
    const x = this.opts.uriResolver.parse(b), w = (0, r._getFullPath)(this.opts.uriResolver, x);
    let j = (0, r.getFullPath)(this.opts.uriResolver, g.baseId, void 0);
    if (Object.keys(g.schema).length > 0 && w === j)
      return v.call(this, x, g);
    const y = (0, r.normalizeId)(w), k = this.refs[y] || this.schemas[y];
    if (typeof k == "string") {
      const S = p.call(this, g, k);
      return typeof S?.schema != "object" ? void 0 : v.call(this, x, S);
    }
    if (typeof k?.schema == "object") {
      if (k.validate || a.call(this, k), y === (0, r.normalizeId)(b)) {
        const { schema: S } = k, { schemaId: T } = this.opts, M = S[T];
        return M && (j = (0, r.resolveUrl)(this.opts.uriResolver, j, M)), new s({ schema: S, schemaId: T, root: g, baseId: j });
      }
      return v.call(this, x, k);
    }
  }
  uo.resolveSchema = p;
  const m = /* @__PURE__ */ new Set([
    "properties",
    "patternProperties",
    "enum",
    "dependencies",
    "definitions"
  ]);
  function v(g, { baseId: b, schema: x, root: w }) {
    var j;
    if (((j = g.fragment) === null || j === void 0 ? void 0 : j[0]) !== "/")
      return;
    for (const S of g.fragment.slice(1).split("/")) {
      if (typeof x == "boolean")
        return;
      const T = x[(0, i.unescapeFragment)(S)];
      if (T === void 0)
        return;
      x = T;
      const M = typeof x == "object" && x[this.opts.schemaId];
      !m.has(S) && M && (b = (0, r.resolveUrl)(this.opts.uriResolver, b, M));
    }
    let y;
    if (typeof x != "boolean" && x.$ref && !(0, i.schemaHasRulesButRef)(x, this.RULES)) {
      const S = (0, r.resolveUrl)(this.opts.uriResolver, b, x.$ref);
      y = p.call(this, w, S);
    }
    const { schemaId: k } = this.opts;
    if (y = y || new s({ schema: x, schemaId: k, root: w, baseId: b }), y.schema !== y.root.schema)
      return y;
  }
  return uo;
}
const hR = "https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#", pR = "Meta-schema for $data reference (JSON AnySchema extension proposal)", mR = "object", gR = ["$data"], vR = { $data: { type: "string", anyOf: [{ format: "relative-json-pointer" }, { format: "json-pointer" }] } }, bR = !1, yR = {
  $id: hR,
  description: pR,
  type: mR,
  required: gR,
  properties: vR,
  additionalProperties: bR
};
var Bd = {}, zu = { exports: {} }, Xg, uw;
function eO() {
  if (uw) return Xg;
  uw = 1;
  const t = RegExp.prototype.test.bind(/^[\da-f]{8}-[\da-f]{4}-[\da-f]{4}-[\da-f]{4}-[\da-f]{12}$/iu), e = RegExp.prototype.test.bind(/^(?:(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d{2}|[1-9]\d|\d)$/u);
  function n(h) {
    let p = "", m = 0, v = 0;
    for (v = 0; v < h.length; v++)
      if (m = h[v].charCodeAt(0), m !== 48) {
        if (!(m >= 48 && m <= 57 || m >= 65 && m <= 70 || m >= 97 && m <= 102))
          return "";
        p += h[v];
        break;
      }
    for (v += 1; v < h.length; v++) {
      if (m = h[v].charCodeAt(0), !(m >= 48 && m <= 57 || m >= 65 && m <= 70 || m >= 97 && m <= 102))
        return "";
      p += h[v];
    }
    return p;
  }
  const r = RegExp.prototype.test.bind(/[^!"$&'()*+,\-.;=_`a-z{}~]/u);
  function i(h) {
    return h.length = 0, !0;
  }
  function o(h, p, m) {
    if (h.length) {
      const v = n(h);
      if (v !== "")
        p.push(v);
      else
        return m.error = !0, !1;
      h.length = 0;
    }
    return !0;
  }
  function s(h) {
    let p = 0;
    const m = { error: !1, address: "", zone: "" }, v = [], g = [];
    let b = !1, x = !1, w = o;
    for (let j = 0; j < h.length; j++) {
      const y = h[j];
      if (!(y === "[" || y === "]"))
        if (y === ":") {
          if (b === !0 && (x = !0), !w(g, v, m))
            break;
          if (++p > 7) {
            m.error = !0;
            break;
          }
          j > 0 && h[j - 1] === ":" && (b = !0), v.push(":");
          continue;
        } else if (y === "%") {
          if (!w(g, v, m))
            break;
          w = i;
        } else {
          g.push(y);
          continue;
        }
    }
    return g.length && (w === i ? m.zone = g.join("") : x ? v.push(g.join("")) : v.push(n(g))), m.address = v.join(""), m;
  }
  function a(h) {
    if (l(h, ":") < 2)
      return { host: h, isIPV6: !1 };
    const p = s(h);
    if (p.error)
      return { host: h, isIPV6: !1 };
    {
      let m = p.address, v = p.address;
      return p.zone && (m += "%" + p.zone, v += "%25" + p.zone), { host: m, isIPV6: !0, escapedHost: v };
    }
  }
  function l(h, p) {
    let m = 0;
    for (let v = 0; v < h.length; v++)
      h[v] === p && m++;
    return m;
  }
  function u(h) {
    let p = h;
    const m = [];
    let v = -1, g = 0;
    for (; g = p.length; ) {
      if (g === 1) {
        if (p === ".")
          break;
        if (p === "/") {
          m.push("/");
          break;
        } else {
          m.push(p);
          break;
        }
      } else if (g === 2) {
        if (p[0] === ".") {
          if (p[1] === ".")
            break;
          if (p[1] === "/") {
            p = p.slice(2);
            continue;
          }
        } else if (p[0] === "/" && (p[1] === "." || p[1] === "/")) {
          m.push("/");
          break;
        }
      } else if (g === 3 && p === "/..") {
        m.length !== 0 && m.pop(), m.push("/");
        break;
      }
      if (p[0] === ".") {
        if (p[1] === ".") {
          if (p[2] === "/") {
            p = p.slice(3);
            continue;
          }
        } else if (p[1] === "/") {
          p = p.slice(2);
          continue;
        }
      } else if (p[0] === "/" && p[1] === ".") {
        if (p[2] === "/") {
          p = p.slice(2);
          continue;
        } else if (p[2] === "." && p[3] === "/") {
          p = p.slice(3), m.length !== 0 && m.pop();
          continue;
        }
      }
      if ((v = p.indexOf("/", 1)) === -1) {
        m.push(p);
        break;
      } else
        m.push(p.slice(0, v)), p = p.slice(v);
    }
    return m.join("");
  }
  function f(h, p) {
    const m = p !== !0 ? escape : unescape;
    return h.scheme !== void 0 && (h.scheme = m(h.scheme)), h.userinfo !== void 0 && (h.userinfo = m(h.userinfo)), h.host !== void 0 && (h.host = m(h.host)), h.path !== void 0 && (h.path = m(h.path)), h.query !== void 0 && (h.query = m(h.query)), h.fragment !== void 0 && (h.fragment = m(h.fragment)), h;
  }
  function d(h) {
    const p = [];
    if (h.userinfo !== void 0 && (p.push(h.userinfo), p.push("@")), h.host !== void 0) {
      let m = unescape(h.host);
      if (!e(m)) {
        const v = a(m);
        v.isIPV6 === !0 ? m = `[${v.escapedHost}]` : m = h.host;
      }
      p.push(m);
    }
    return (typeof h.port == "number" || typeof h.port == "string") && (p.push(":"), p.push(String(h.port))), p.length ? p.join("") : void 0;
  }
  return Xg = {
    nonSimpleDomain: r,
    recomposeAuthority: d,
    normalizeComponentEncoding: f,
    removeDotSegments: u,
    isIPv4: e,
    isUUID: t,
    normalizeIPv6: a,
    stringArrayToHexStripped: n
  }, Xg;
}
var Zg, fw;
function xR() {
  if (fw) return Zg;
  fw = 1;
  const { isUUID: t } = eO(), e = /([\da-z][\d\-a-z]{0,31}):((?:[\w!$'()*+,\-.:;=@]|%[\da-f]{2})+)/iu, n = (
    /** @type {const} */
    [
      "http",
      "https",
      "ws",
      "wss",
      "urn",
      "urn:uuid"
    ]
  );
  function r(y) {
    return n.indexOf(
      /** @type {*} */
      y
    ) !== -1;
  }
  function i(y) {
    return y.secure === !0 ? !0 : y.secure === !1 ? !1 : y.scheme ? y.scheme.length === 3 && (y.scheme[0] === "w" || y.scheme[0] === "W") && (y.scheme[1] === "s" || y.scheme[1] === "S") && (y.scheme[2] === "s" || y.scheme[2] === "S") : !1;
  }
  function o(y) {
    return y.host || (y.error = y.error || "HTTP URIs must have a host."), y;
  }
  function s(y) {
    const k = String(y.scheme).toLowerCase() === "https";
    return (y.port === (k ? 443 : 80) || y.port === "") && (y.port = void 0), y.path || (y.path = "/"), y;
  }
  function a(y) {
    return y.secure = i(y), y.resourceName = (y.path || "/") + (y.query ? "?" + y.query : ""), y.path = void 0, y.query = void 0, y;
  }
  function l(y) {
    if ((y.port === (i(y) ? 443 : 80) || y.port === "") && (y.port = void 0), typeof y.secure == "boolean" && (y.scheme = y.secure ? "wss" : "ws", y.secure = void 0), y.resourceName) {
      const [k, S] = y.resourceName.split("?");
      y.path = k && k !== "/" ? k : void 0, y.query = S, y.resourceName = void 0;
    }
    return y.fragment = void 0, y;
  }
  function u(y, k) {
    if (!y.path)
      return y.error = "URN can not be parsed", y;
    const S = y.path.match(e);
    if (S) {
      const T = k.scheme || y.scheme || "urn";
      y.nid = S[1].toLowerCase(), y.nss = S[2];
      const M = `${T}:${k.nid || y.nid}`, N = j(M);
      y.path = void 0, N && (y = N.parse(y, k));
    } else
      y.error = y.error || "URN can not be parsed.";
    return y;
  }
  function f(y, k) {
    if (y.nid === void 0)
      throw new Error("URN without nid cannot be serialized");
    const S = k.scheme || y.scheme || "urn", T = y.nid.toLowerCase(), M = `${S}:${k.nid || T}`, N = j(M);
    N && (y = N.serialize(y, k));
    const z = y, L = y.nss;
    return z.path = `${T || k.nid}:${L}`, k.skipEscape = !0, z;
  }
  function d(y, k) {
    const S = y;
    return S.uuid = S.nss, S.nss = void 0, !k.tolerant && (!S.uuid || !t(S.uuid)) && (S.error = S.error || "UUID is not valid."), S;
  }
  function h(y) {
    const k = y;
    return k.nss = (y.uuid || "").toLowerCase(), k;
  }
  const p = (
    /** @type {SchemeHandler} */
    {
      scheme: "http",
      domainHost: !0,
      parse: o,
      serialize: s
    }
  ), m = (
    /** @type {SchemeHandler} */
    {
      scheme: "https",
      domainHost: p.domainHost,
      parse: o,
      serialize: s
    }
  ), v = (
    /** @type {SchemeHandler} */
    {
      scheme: "ws",
      domainHost: !0,
      parse: a,
      serialize: l
    }
  ), g = (
    /** @type {SchemeHandler} */
    {
      scheme: "wss",
      domainHost: v.domainHost,
      parse: v.parse,
      serialize: v.serialize
    }
  ), w = (
    /** @type {Record<SchemeName, SchemeHandler>} */
    {
      http: p,
      https: m,
      ws: v,
      wss: g,
      urn: (
        /** @type {SchemeHandler} */
        {
          scheme: "urn",
          parse: u,
          serialize: f,
          skipNormalize: !0
        }
      ),
      "urn:uuid": (
        /** @type {SchemeHandler} */
        {
          scheme: "urn:uuid",
          parse: d,
          serialize: h,
          skipNormalize: !0
        }
      )
    }
  );
  Object.setPrototypeOf(w, null);
  function j(y) {
    return y && (w[
      /** @type {SchemeName} */
      y
    ] || w[
      /** @type {SchemeName} */
      y.toLowerCase()
    ]) || void 0;
  }
  return Zg = {
    wsIsSecure: i,
    SCHEMES: w,
    isValidSchemeName: r,
    getSchemeHandler: j
  }, Zg;
}
var dw;
function wR() {
  if (dw) return zu.exports;
  dw = 1;
  const { normalizeIPv6: t, removeDotSegments: e, recomposeAuthority: n, normalizeComponentEncoding: r, isIPv4: i, nonSimpleDomain: o } = eO(), { SCHEMES: s, getSchemeHandler: a } = xR();
  function l(g, b) {
    return typeof g == "string" ? g = /** @type {T} */
    h(m(g, b), b) : typeof g == "object" && (g = /** @type {T} */
    m(h(g, b), b)), g;
  }
  function u(g, b, x) {
    const w = x ? Object.assign({ scheme: "null" }, x) : { scheme: "null" }, j = f(m(g, w), m(b, w), w, !0);
    return w.skipEscape = !0, h(j, w);
  }
  function f(g, b, x, w) {
    const j = {};
    return w || (g = m(h(g, x), x), b = m(h(b, x), x)), x = x || {}, !x.tolerant && b.scheme ? (j.scheme = b.scheme, j.userinfo = b.userinfo, j.host = b.host, j.port = b.port, j.path = e(b.path || ""), j.query = b.query) : (b.userinfo !== void 0 || b.host !== void 0 || b.port !== void 0 ? (j.userinfo = b.userinfo, j.host = b.host, j.port = b.port, j.path = e(b.path || ""), j.query = b.query) : (b.path ? (b.path[0] === "/" ? j.path = e(b.path) : ((g.userinfo !== void 0 || g.host !== void 0 || g.port !== void 0) && !g.path ? j.path = "/" + b.path : g.path ? j.path = g.path.slice(0, g.path.lastIndexOf("/") + 1) + b.path : j.path = b.path, j.path = e(j.path)), j.query = b.query) : (j.path = g.path, b.query !== void 0 ? j.query = b.query : j.query = g.query), j.userinfo = g.userinfo, j.host = g.host, j.port = g.port), j.scheme = g.scheme), j.fragment = b.fragment, j;
  }
  function d(g, b, x) {
    return typeof g == "string" ? (g = unescape(g), g = h(r(m(g, x), !0), { ...x, skipEscape: !0 })) : typeof g == "object" && (g = h(r(g, !0), { ...x, skipEscape: !0 })), typeof b == "string" ? (b = unescape(b), b = h(r(m(b, x), !0), { ...x, skipEscape: !0 })) : typeof b == "object" && (b = h(r(b, !0), { ...x, skipEscape: !0 })), g.toLowerCase() === b.toLowerCase();
  }
  function h(g, b) {
    const x = {
      host: g.host,
      scheme: g.scheme,
      userinfo: g.userinfo,
      port: g.port,
      path: g.path,
      query: g.query,
      nid: g.nid,
      nss: g.nss,
      uuid: g.uuid,
      fragment: g.fragment,
      reference: g.reference,
      resourceName: g.resourceName,
      secure: g.secure,
      error: ""
    }, w = Object.assign({}, b), j = [], y = a(w.scheme || x.scheme);
    y && y.serialize && y.serialize(x, w), x.path !== void 0 && (w.skipEscape ? x.path = unescape(x.path) : (x.path = escape(x.path), x.scheme !== void 0 && (x.path = x.path.split("%3A").join(":")))), w.reference !== "suffix" && x.scheme && j.push(x.scheme, ":");
    const k = n(x);
    if (k !== void 0 && (w.reference !== "suffix" && j.push("//"), j.push(k), x.path && x.path[0] !== "/" && j.push("/")), x.path !== void 0) {
      let S = x.path;
      !w.absolutePath && (!y || !y.absolutePath) && (S = e(S)), k === void 0 && S[0] === "/" && S[1] === "/" && (S = "/%2F" + S.slice(2)), j.push(S);
    }
    return x.query !== void 0 && j.push("?", x.query), x.fragment !== void 0 && j.push("#", x.fragment), j.join("");
  }
  const p = /^(?:([^#/:?]+):)?(?:\/\/((?:([^#/?@]*)@)?(\[[^#/?\]]+\]|[^#/:?]*)(?::(\d*))?))?([^#?]*)(?:\?([^#]*))?(?:#((?:.|[\n\r])*))?/u;
  function m(g, b) {
    const x = Object.assign({}, b), w = {
      scheme: void 0,
      userinfo: void 0,
      host: "",
      port: void 0,
      path: "",
      query: void 0,
      fragment: void 0
    };
    let j = !1;
    x.reference === "suffix" && (x.scheme ? g = x.scheme + ":" + g : g = "//" + g);
    const y = g.match(p);
    if (y) {
      if (w.scheme = y[1], w.userinfo = y[3], w.host = y[4], w.port = parseInt(y[5], 10), w.path = y[6] || "", w.query = y[7], w.fragment = y[8], isNaN(w.port) && (w.port = y[5]), w.host)
        if (i(w.host) === !1) {
          const T = t(w.host);
          w.host = T.host.toLowerCase(), j = T.isIPV6;
        } else
          j = !0;
      w.scheme === void 0 && w.userinfo === void 0 && w.host === void 0 && w.port === void 0 && w.query === void 0 && !w.path ? w.reference = "same-document" : w.scheme === void 0 ? w.reference = "relative" : w.fragment === void 0 ? w.reference = "absolute" : w.reference = "uri", x.reference && x.reference !== "suffix" && x.reference !== w.reference && (w.error = w.error || "URI is not a " + x.reference + " reference.");
      const k = a(x.scheme || w.scheme);
      if (!x.unicodeSupport && (!k || !k.unicodeSupport) && w.host && (x.domainHost || k && k.domainHost) && j === !1 && o(w.host))
        try {
          w.host = URL.domainToASCII(w.host.toLowerCase());
        } catch (S) {
          w.error = w.error || "Host's domain name can not be converted to ASCII: " + S;
        }
      (!k || k && !k.skipNormalize) && (g.indexOf("%") !== -1 && (w.scheme !== void 0 && (w.scheme = unescape(w.scheme)), w.host !== void 0 && (w.host = unescape(w.host))), w.path && (w.path = escape(unescape(w.path))), w.fragment && (w.fragment = encodeURI(decodeURIComponent(w.fragment)))), k && k.parse && k.parse(w, x);
    } else
      w.error = w.error || "URI can not be parsed.";
    return w;
  }
  const v = {
    SCHEMES: s,
    normalize: l,
    resolve: u,
    resolveComponent: f,
    equal: d,
    serialize: h,
    parse: m
  };
  return zu.exports = v, zu.exports.default = v, zu.exports.fastUri = v, zu.exports;
}
var hw;
function jR() {
  if (hw) return Bd;
  hw = 1, Object.defineProperty(Bd, "__esModule", { value: !0 });
  const t = wR();
  return t.code = 'require("ajv/dist/runtime/uri").default', Bd.default = t, Bd;
}
var pw;
function kR() {
  return pw || (pw = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.CodeGen = t.Name = t.nil = t.stringify = t.str = t._ = t.KeywordCxt = void 0;
    var e = Qm();
    Object.defineProperty(t, "KeywordCxt", { enumerable: !0, get: function() {
      return e.KeywordCxt;
    } });
    var n = An();
    Object.defineProperty(t, "_", { enumerable: !0, get: function() {
      return n._;
    } }), Object.defineProperty(t, "str", { enumerable: !0, get: function() {
      return n.str;
    } }), Object.defineProperty(t, "stringify", { enumerable: !0, get: function() {
      return n.stringify;
    } }), Object.defineProperty(t, "nil", { enumerable: !0, get: function() {
      return n.nil;
    } }), Object.defineProperty(t, "Name", { enumerable: !0, get: function() {
      return n.Name;
    } }), Object.defineProperty(t, "CodeGen", { enumerable: !0, get: function() {
      return n.CodeGen;
    } });
    const r = v1(), i = Xm(), o = QC(), s = b1(), a = An(), l = Ym(), u = Lp(), f = Xn(), d = yR, h = jR(), p = (G, B) => new RegExp(G, B);
    p.code = "new RegExp";
    const m = ["removeAdditional", "useDefaults", "coerceTypes"], v = /* @__PURE__ */ new Set([
      "validate",
      "serialize",
      "parse",
      "wrapper",
      "root",
      "schema",
      "keyword",
      "pattern",
      "formats",
      "validate$data",
      "func",
      "obj",
      "Error"
    ]), g = {
      errorDataPath: "",
      format: "`validateFormats: false` can be used instead.",
      nullable: '"nullable" keyword is supported by default.',
      jsonPointers: "Deprecated jsPropertySyntax can be used instead.",
      extendRefs: "Deprecated ignoreKeywordsWithRef can be used instead.",
      missingRefs: "Pass empty schema with $id that should be ignored to ajv.addSchema.",
      processCode: "Use option `code: {process: (code, schemaEnv: object) => string}`",
      sourceCode: "Use option `code: {source: true}`",
      strictDefaults: "It is default now, see option `strict`.",
      strictKeywords: "It is default now, see option `strict`.",
      uniqueItems: '"uniqueItems" keyword is always validated.',
      unknownFormats: "Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).",
      cache: "Map is used as cache, schema object as key.",
      serialize: "Map is used as cache, schema object as key.",
      ajvErrors: "It is default now."
    }, b = {
      ignoreKeywordsWithRef: "",
      jsPropertySyntax: "",
      unicode: '"minLength"/"maxLength" account for unicode characters by default.'
    }, x = 200;
    function w(G) {
      var B, ie, R, O, $, ne, je, J, H, ue, P, V, U, me, X, K, rt, Qe, Ae, tt, Re, qe, pt, Ge, $t;
      const A = G.strict, D = (B = G.code) === null || B === void 0 ? void 0 : B.optimize, F = D === !0 || D === void 0 ? 1 : D || 0, oe = (R = (ie = G.code) === null || ie === void 0 ? void 0 : ie.regExp) !== null && R !== void 0 ? R : p, ve = (O = G.uriResolver) !== null && O !== void 0 ? O : h.default;
      return {
        strictSchema: (ne = ($ = G.strictSchema) !== null && $ !== void 0 ? $ : A) !== null && ne !== void 0 ? ne : !0,
        strictNumbers: (J = (je = G.strictNumbers) !== null && je !== void 0 ? je : A) !== null && J !== void 0 ? J : !0,
        strictTypes: (ue = (H = G.strictTypes) !== null && H !== void 0 ? H : A) !== null && ue !== void 0 ? ue : "log",
        strictTuples: (V = (P = G.strictTuples) !== null && P !== void 0 ? P : A) !== null && V !== void 0 ? V : "log",
        strictRequired: (me = (U = G.strictRequired) !== null && U !== void 0 ? U : A) !== null && me !== void 0 ? me : !1,
        code: G.code ? { ...G.code, optimize: F, regExp: oe } : { optimize: F, regExp: oe },
        loopRequired: (X = G.loopRequired) !== null && X !== void 0 ? X : x,
        loopEnum: (K = G.loopEnum) !== null && K !== void 0 ? K : x,
        meta: (rt = G.meta) !== null && rt !== void 0 ? rt : !0,
        messages: (Qe = G.messages) !== null && Qe !== void 0 ? Qe : !0,
        inlineRefs: (Ae = G.inlineRefs) !== null && Ae !== void 0 ? Ae : !0,
        schemaId: (tt = G.schemaId) !== null && tt !== void 0 ? tt : "$id",
        addUsedSchema: (Re = G.addUsedSchema) !== null && Re !== void 0 ? Re : !0,
        validateSchema: (qe = G.validateSchema) !== null && qe !== void 0 ? qe : !0,
        validateFormats: (pt = G.validateFormats) !== null && pt !== void 0 ? pt : !0,
        unicodeRegExp: (Ge = G.unicodeRegExp) !== null && Ge !== void 0 ? Ge : !0,
        int32range: ($t = G.int32range) !== null && $t !== void 0 ? $t : !0,
        uriResolver: ve
      };
    }
    class j {
      constructor(B = {}) {
        this.schemas = {}, this.refs = {}, this.formats = {}, this._compilations = /* @__PURE__ */ new Set(), this._loading = {}, this._cache = /* @__PURE__ */ new Map(), B = this.opts = { ...B, ...w(B) };
        const { es5: ie, lines: R } = this.opts.code;
        this.scope = new a.ValueScope({ scope: {}, prefixes: v, es5: ie, lines: R }), this.logger = L(B.logger);
        const O = B.validateFormats;
        B.validateFormats = !1, this.RULES = (0, o.getRules)(), y.call(this, g, B, "NOT SUPPORTED"), y.call(this, b, B, "DEPRECATED", "warn"), this._metaOpts = N.call(this), B.formats && T.call(this), this._addVocabularies(), this._addDefaultMetaSchema(), B.keywords && M.call(this, B.keywords), typeof B.meta == "object" && this.addMetaSchema(B.meta), S.call(this), B.validateFormats = O;
      }
      _addVocabularies() {
        this.addKeyword("$async");
      }
      _addDefaultMetaSchema() {
        const { $data: B, meta: ie, schemaId: R } = this.opts;
        let O = d;
        R === "id" && (O = { ...d }, O.id = O.$id, delete O.$id), ie && B && this.addMetaSchema(O, O[R], !1);
      }
      defaultMeta() {
        const { meta: B, schemaId: ie } = this.opts;
        return this.opts.defaultMeta = typeof B == "object" ? B[ie] || B : void 0;
      }
      validate(B, ie) {
        let R;
        if (typeof B == "string") {
          if (R = this.getSchema(B), !R)
            throw new Error(`no schema with key or ref "${B}"`);
        } else
          R = this.compile(B);
        const O = R(ie);
        return "$async" in R || (this.errors = R.errors), O;
      }
      compile(B, ie) {
        const R = this._addSchema(B, ie);
        return R.validate || this._compileSchemaEnv(R);
      }
      compileAsync(B, ie) {
        if (typeof this.opts.loadSchema != "function")
          throw new Error("options.loadSchema should be a function");
        const { loadSchema: R } = this.opts;
        return O.call(this, B, ie);
        async function O(ue, P) {
          await $.call(this, ue.$schema);
          const V = this._addSchema(ue, P);
          return V.validate || ne.call(this, V);
        }
        async function $(ue) {
          ue && !this.getSchema(ue) && await O.call(this, { $ref: ue }, !0);
        }
        async function ne(ue) {
          try {
            return this._compileSchemaEnv(ue);
          } catch (P) {
            if (!(P instanceof i.default))
              throw P;
            return je.call(this, P), await J.call(this, P.missingSchema), ne.call(this, ue);
          }
        }
        function je({ missingSchema: ue, missingRef: P }) {
          if (this.refs[ue])
            throw new Error(`AnySchema ${ue} is loaded but ${P} cannot be resolved`);
        }
        async function J(ue) {
          const P = await H.call(this, ue);
          this.refs[ue] || await $.call(this, P.$schema), this.refs[ue] || this.addSchema(P, ue, ie);
        }
        async function H(ue) {
          const P = this._loading[ue];
          if (P)
            return P;
          try {
            return await (this._loading[ue] = R(ue));
          } finally {
            delete this._loading[ue];
          }
        }
      }
      // Adds schema to the instance
      addSchema(B, ie, R, O = this.opts.validateSchema) {
        if (Array.isArray(B)) {
          for (const ne of B)
            this.addSchema(ne, void 0, R, O);
          return this;
        }
        let $;
        if (typeof B == "object") {
          const { schemaId: ne } = this.opts;
          if ($ = B[ne], $ !== void 0 && typeof $ != "string")
            throw new Error(`schema ${ne} must be string`);
        }
        return ie = (0, l.normalizeId)(ie || $), this._checkUnique(ie), this.schemas[ie] = this._addSchema(B, R, ie, O, !0), this;
      }
      // Add schema that will be used to validate other schemas
      // options in META_IGNORE_OPTIONS are alway set to false
      addMetaSchema(B, ie, R = this.opts.validateSchema) {
        return this.addSchema(B, ie, !0, R), this;
      }
      //  Validate schema against its meta-schema
      validateSchema(B, ie) {
        if (typeof B == "boolean")
          return !0;
        let R;
        if (R = B.$schema, R !== void 0 && typeof R != "string")
          throw new Error("$schema must be a string");
        if (R = R || this.opts.defaultMeta || this.defaultMeta(), !R)
          return this.logger.warn("meta-schema not available"), this.errors = null, !0;
        const O = this.validate(R, B);
        if (!O && ie) {
          const $ = "schema is invalid: " + this.errorsText();
          if (this.opts.validateSchema === "log")
            this.logger.error($);
          else
            throw new Error($);
        }
        return O;
      }
      // Get compiled schema by `key` or `ref`.
      // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)
      getSchema(B) {
        let ie;
        for (; typeof (ie = k.call(this, B)) == "string"; )
          B = ie;
        if (ie === void 0) {
          const { schemaId: R } = this.opts, O = new s.SchemaEnv({ schema: {}, schemaId: R });
          if (ie = s.resolveSchema.call(this, O, B), !ie)
            return;
          this.refs[B] = ie;
        }
        return ie.validate || this._compileSchemaEnv(ie);
      }
      // Remove cached schema(s).
      // If no parameter is passed all schemas but meta-schemas are removed.
      // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.
      // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.
      removeSchema(B) {
        if (B instanceof RegExp)
          return this._removeAllSchemas(this.schemas, B), this._removeAllSchemas(this.refs, B), this;
        switch (typeof B) {
          case "undefined":
            return this._removeAllSchemas(this.schemas), this._removeAllSchemas(this.refs), this._cache.clear(), this;
          case "string": {
            const ie = k.call(this, B);
            return typeof ie == "object" && this._cache.delete(ie.schema), delete this.schemas[B], delete this.refs[B], this;
          }
          case "object": {
            const ie = B;
            this._cache.delete(ie);
            let R = B[this.opts.schemaId];
            return R && (R = (0, l.normalizeId)(R), delete this.schemas[R], delete this.refs[R]), this;
          }
          default:
            throw new Error("ajv.removeSchema: invalid parameter");
        }
      }
      // add "vocabulary" - a collection of keywords
      addVocabulary(B) {
        for (const ie of B)
          this.addKeyword(ie);
        return this;
      }
      addKeyword(B, ie) {
        let R;
        if (typeof B == "string")
          R = B, typeof ie == "object" && (this.logger.warn("these parameters are deprecated, see docs for addKeyword"), ie.keyword = R);
        else if (typeof B == "object" && ie === void 0) {
          if (ie = B, R = ie.keyword, Array.isArray(R) && !R.length)
            throw new Error("addKeywords: keyword must be string or non-empty array");
        } else
          throw new Error("invalid addKeywords parameters");
        if (ce.call(this, R, ie), !ie)
          return (0, f.eachItem)(R, ($) => te.call(this, $)), this;
        Ee.call(this, ie);
        const O = {
          ...ie,
          type: (0, u.getJSONTypes)(ie.type),
          schemaType: (0, u.getJSONTypes)(ie.schemaType)
        };
        return (0, f.eachItem)(R, O.type.length === 0 ? ($) => te.call(this, $, O) : ($) => O.type.forEach((ne) => te.call(this, $, O, ne))), this;
      }
      getKeyword(B) {
        const ie = this.RULES.all[B];
        return typeof ie == "object" ? ie.definition : !!ie;
      }
      // Remove keyword
      removeKeyword(B) {
        const { RULES: ie } = this;
        delete ie.keywords[B], delete ie.all[B];
        for (const R of ie.rules) {
          const O = R.rules.findIndex(($) => $.keyword === B);
          O >= 0 && R.rules.splice(O, 1);
        }
        return this;
      }
      // Add format
      addFormat(B, ie) {
        return typeof ie == "string" && (ie = new RegExp(ie)), this.formats[B] = ie, this;
      }
      errorsText(B = this.errors, { separator: ie = ", ", dataVar: R = "data" } = {}) {
        return !B || B.length === 0 ? "No errors" : B.map((O) => `${R}${O.instancePath} ${O.message}`).reduce((O, $) => O + ie + $);
      }
      $dataMetaSchema(B, ie) {
        const R = this.RULES.all;
        B = JSON.parse(JSON.stringify(B));
        for (const O of ie) {
          const $ = O.split("/").slice(1);
          let ne = B;
          for (const je of $)
            ne = ne[je];
          for (const je in R) {
            const J = R[je];
            if (typeof J != "object")
              continue;
            const { $data: H } = J.definition, ue = ne[je];
            H && ue && (ne[je] = re(ue));
          }
        }
        return B;
      }
      _removeAllSchemas(B, ie) {
        for (const R in B) {
          const O = B[R];
          (!ie || ie.test(R)) && (typeof O == "string" ? delete B[R] : O && !O.meta && (this._cache.delete(O.schema), delete B[R]));
        }
      }
      _addSchema(B, ie, R, O = this.opts.validateSchema, $ = this.opts.addUsedSchema) {
        let ne;
        const { schemaId: je } = this.opts;
        if (typeof B == "object")
          ne = B[je];
        else {
          if (this.opts.jtd)
            throw new Error("schema must be object");
          if (typeof B != "boolean")
            throw new Error("schema must be object or boolean");
        }
        let J = this._cache.get(B);
        if (J !== void 0)
          return J;
        R = (0, l.normalizeId)(ne || R);
        const H = l.getSchemaRefs.call(this, B, R);
        return J = new s.SchemaEnv({ schema: B, schemaId: je, meta: ie, baseId: R, localRefs: H }), this._cache.set(J.schema, J), $ && !R.startsWith("#") && (R && this._checkUnique(R), this.refs[R] = J), O && this.validateSchema(B, !0), J;
      }
      _checkUnique(B) {
        if (this.schemas[B] || this.refs[B])
          throw new Error(`schema with key or id "${B}" already exists`);
      }
      _compileSchemaEnv(B) {
        if (B.meta ? this._compileMetaSchema(B) : s.compileSchema.call(this, B), !B.validate)
          throw new Error("ajv implementation error");
        return B.validate;
      }
      _compileMetaSchema(B) {
        const ie = this.opts;
        this.opts = this._metaOpts;
        try {
          s.compileSchema.call(this, B);
        } finally {
          this.opts = ie;
        }
      }
    }
    j.ValidationError = r.default, j.MissingRefError = i.default, t.default = j;
    function y(G, B, ie, R = "error") {
      for (const O in G) {
        const $ = O;
        $ in B && this.logger[R](`${ie}: option ${O}. ${G[$]}`);
      }
    }
    function k(G) {
      return G = (0, l.normalizeId)(G), this.schemas[G] || this.refs[G];
    }
    function S() {
      const G = this.opts.schemas;
      if (G)
        if (Array.isArray(G))
          this.addSchema(G);
        else
          for (const B in G)
            this.addSchema(G[B], B);
    }
    function T() {
      for (const G in this.opts.formats) {
        const B = this.opts.formats[G];
        B && this.addFormat(G, B);
      }
    }
    function M(G) {
      if (Array.isArray(G)) {
        this.addVocabulary(G);
        return;
      }
      this.logger.warn("keywords option as map is deprecated, pass array");
      for (const B in G) {
        const ie = G[B];
        ie.keyword || (ie.keyword = B), this.addKeyword(ie);
      }
    }
    function N() {
      const G = { ...this.opts };
      for (const B of m)
        delete G[B];
      return G;
    }
    const z = { log() {
    }, warn() {
    }, error() {
    } };
    function L(G) {
      if (G === !1)
        return z;
      if (G === void 0)
        return console;
      if (G.log && G.warn && G.error)
        return G;
      throw new Error("logger must implement log, warn and error methods");
    }
    const W = /^[a-z_$][a-z0-9_$:-]*$/i;
    function ce(G, B) {
      const { RULES: ie } = this;
      if ((0, f.eachItem)(G, (R) => {
        if (ie.keywords[R])
          throw new Error(`Keyword ${R} is already defined`);
        if (!W.test(R))
          throw new Error(`Keyword ${R} has invalid name`);
      }), !!B && B.$data && !("code" in B || "validate" in B))
        throw new Error('$data keyword must have "code" or "validate" function');
    }
    function te(G, B, ie) {
      var R;
      const O = B?.post;
      if (ie && O)
        throw new Error('keyword with "post" flag cannot have "type"');
      const { RULES: $ } = this;
      let ne = O ? $.post : $.rules.find(({ type: J }) => J === ie);
      if (ne || (ne = { type: ie, rules: [] }, $.rules.push(ne)), $.keywords[G] = !0, !B)
        return;
      const je = {
        keyword: G,
        definition: {
          ...B,
          type: (0, u.getJSONTypes)(B.type),
          schemaType: (0, u.getJSONTypes)(B.schemaType)
        }
      };
      B.before ? we.call(this, ne, je, B.before) : ne.rules.push(je), $.all[G] = je, (R = B.implements) === null || R === void 0 || R.forEach((J) => this.addKeyword(J));
    }
    function we(G, B, ie) {
      const R = G.rules.findIndex((O) => O.keyword === ie);
      R >= 0 ? G.rules.splice(R, 0, B) : (G.rules.push(B), this.logger.warn(`rule ${ie} is not defined`));
    }
    function Ee(G) {
      let { metaSchema: B } = G;
      B !== void 0 && (G.$data && this.opts.$data && (B = re(B)), G.validateSchema = this.compile(B, !0));
    }
    const ae = {
      $ref: "https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#"
    };
    function re(G) {
      return { anyOf: [G, ae] };
    }
  })(Wg)), Wg;
}
var qd = {}, Fd = {}, Ud = {}, mw;
function SR() {
  if (mw) return Ud;
  mw = 1, Object.defineProperty(Ud, "__esModule", { value: !0 });
  const t = {
    keyword: "id",
    code() {
      throw new Error('NOT SUPPORTED: keyword "id", use "$id" for schema ID');
    }
  };
  return Ud.default = t, Ud;
}
var ka = {}, gw;
function CR() {
  if (gw) return ka;
  gw = 1, Object.defineProperty(ka, "__esModule", { value: !0 }), ka.callRef = ka.getValidate = void 0;
  const t = Xm(), e = cs(), n = An(), r = dl(), i = b1(), o = Xn(), s = {
    keyword: "$ref",
    schemaType: "string",
    code(u) {
      const { gen: f, schema: d, it: h } = u, { baseId: p, schemaEnv: m, validateName: v, opts: g, self: b } = h, { root: x } = m;
      if ((d === "#" || d === "#/") && p === x.baseId)
        return j();
      const w = i.resolveRef.call(b, x, p, d);
      if (w === void 0)
        throw new t.default(h.opts.uriResolver, p, d);
      if (w instanceof i.SchemaEnv)
        return y(w);
      return k(w);
      function j() {
        if (m === x)
          return l(u, v, m, m.$async);
        const S = f.scopeValue("root", { ref: x });
        return l(u, (0, n._)`${S}.validate`, x, x.$async);
      }
      function y(S) {
        const T = a(u, S);
        l(u, T, S, S.$async);
      }
      function k(S) {
        const T = f.scopeValue("schema", g.code.source === !0 ? { ref: S, code: (0, n.stringify)(S) } : { ref: S }), M = f.name("valid"), N = u.subschema({
          schema: S,
          dataTypes: [],
          schemaPath: n.nil,
          topSchemaRef: T,
          errSchemaPath: d
        }, M);
        u.mergeEvaluated(N), u.ok(M);
      }
    }
  };
  function a(u, f) {
    const { gen: d } = u;
    return f.validate ? d.scopeValue("validate", { ref: f.validate }) : (0, n._)`${d.scopeValue("wrapper", { ref: f })}.validate`;
  }
  ka.getValidate = a;
  function l(u, f, d, h) {
    const { gen: p, it: m } = u, { allErrors: v, schemaEnv: g, opts: b } = m, x = b.passContext ? r.default.this : n.nil;
    h ? w() : j();
    function w() {
      if (!g.$async)
        throw new Error("async schema referenced by sync schema");
      const S = p.let("valid");
      p.try(() => {
        p.code((0, n._)`await ${(0, e.callValidateCode)(u, f, x)}`), k(f), v || p.assign(S, !0);
      }, (T) => {
        p.if((0, n._)`!(${T} instanceof ${m.ValidationError})`, () => p.throw(T)), y(T), v || p.assign(S, !1);
      }), u.ok(S);
    }
    function j() {
      u.result((0, e.callValidateCode)(u, f, x), () => k(f), () => y(f));
    }
    function y(S) {
      const T = (0, n._)`${S}.errors`;
      p.assign(r.default.vErrors, (0, n._)`${r.default.vErrors} === null ? ${T} : ${r.default.vErrors}.concat(${T})`), p.assign(r.default.errors, (0, n._)`${r.default.vErrors}.length`);
    }
    function k(S) {
      var T;
      if (!m.opts.unevaluated)
        return;
      const M = (T = d?.validate) === null || T === void 0 ? void 0 : T.evaluated;
      if (m.props !== !0)
        if (M && !M.dynamicProps)
          M.props !== void 0 && (m.props = o.mergeEvaluated.props(p, M.props, m.props));
        else {
          const N = p.var("props", (0, n._)`${S}.evaluated.props`);
          m.props = o.mergeEvaluated.props(p, N, m.props, n.Name);
        }
      if (m.items !== !0)
        if (M && !M.dynamicItems)
          M.items !== void 0 && (m.items = o.mergeEvaluated.items(p, M.items, m.items));
        else {
          const N = p.var("items", (0, n._)`${S}.evaluated.items`);
          m.items = o.mergeEvaluated.items(p, N, m.items, n.Name);
        }
    }
  }
  return ka.callRef = l, ka.default = s, ka;
}
var vw;
function OR() {
  if (vw) return Fd;
  vw = 1, Object.defineProperty(Fd, "__esModule", { value: !0 });
  const t = SR(), e = CR(), n = [
    "$schema",
    "$id",
    "$defs",
    "$vocabulary",
    { keyword: "$comment" },
    "definitions",
    t.default,
    e.default
  ];
  return Fd.default = n, Fd;
}
var Vd = {}, Wd = {}, bw;
function ER() {
  if (bw) return Wd;
  bw = 1, Object.defineProperty(Wd, "__esModule", { value: !0 });
  const t = An(), e = t.operators, n = {
    maximum: { okStr: "<=", ok: e.LTE, fail: e.GT },
    minimum: { okStr: ">=", ok: e.GTE, fail: e.LT },
    exclusiveMaximum: { okStr: "<", ok: e.LT, fail: e.GTE },
    exclusiveMinimum: { okStr: ">", ok: e.GT, fail: e.LTE }
  }, r = {
    message: ({ keyword: o, schemaCode: s }) => (0, t.str)`must be ${n[o].okStr} ${s}`,
    params: ({ keyword: o, schemaCode: s }) => (0, t._)`{comparison: ${n[o].okStr}, limit: ${s}}`
  }, i = {
    keyword: Object.keys(n),
    type: "number",
    schemaType: "number",
    $data: !0,
    error: r,
    code(o) {
      const { keyword: s, data: a, schemaCode: l } = o;
      o.fail$data((0, t._)`${a} ${n[s].fail} ${l} || isNaN(${a})`);
    }
  };
  return Wd.default = i, Wd;
}
var Hd = {}, yw;
function _R() {
  if (yw) return Hd;
  yw = 1, Object.defineProperty(Hd, "__esModule", { value: !0 });
  const t = An(), n = {
    keyword: "multipleOf",
    type: "number",
    schemaType: "number",
    $data: !0,
    error: {
      message: ({ schemaCode: r }) => (0, t.str)`must be multiple of ${r}`,
      params: ({ schemaCode: r }) => (0, t._)`{multipleOf: ${r}}`
    },
    code(r) {
      const { gen: i, data: o, schemaCode: s, it: a } = r, l = a.opts.multipleOfPrecision, u = i.let("res"), f = l ? (0, t._)`Math.abs(Math.round(${u}) - ${u}) > 1e-${l}` : (0, t._)`${u} !== parseInt(${u})`;
      r.fail$data((0, t._)`(${s} === 0 || (${u} = ${o}/${s}, ${f}))`);
    }
  };
  return Hd.default = n, Hd;
}
var Kd = {}, Gd = {}, xw;
function AR() {
  if (xw) return Gd;
  xw = 1, Object.defineProperty(Gd, "__esModule", { value: !0 });
  function t(e) {
    const n = e.length;
    let r = 0, i = 0, o;
    for (; i < n; )
      r++, o = e.charCodeAt(i++), o >= 55296 && o <= 56319 && i < n && (o = e.charCodeAt(i), (o & 64512) === 56320 && i++);
    return r;
  }
  return Gd.default = t, t.code = 'require("ajv/dist/runtime/ucs2length").default', Gd;
}
var ww;
function MR() {
  if (ww) return Kd;
  ww = 1, Object.defineProperty(Kd, "__esModule", { value: !0 });
  const t = An(), e = Xn(), n = AR(), i = {
    keyword: ["maxLength", "minLength"],
    type: "string",
    schemaType: "number",
    $data: !0,
    error: {
      message({ keyword: o, schemaCode: s }) {
        const a = o === "maxLength" ? "more" : "fewer";
        return (0, t.str)`must NOT have ${a} than ${s} characters`;
      },
      params: ({ schemaCode: o }) => (0, t._)`{limit: ${o}}`
    },
    code(o) {
      const { keyword: s, data: a, schemaCode: l, it: u } = o, f = s === "maxLength" ? t.operators.GT : t.operators.LT, d = u.opts.unicode === !1 ? (0, t._)`${a}.length` : (0, t._)`${(0, e.useFunc)(o.gen, n.default)}(${a})`;
      o.fail$data((0, t._)`${d} ${f} ${l}`);
    }
  };
  return Kd.default = i, Kd;
}
var Jd = {}, jw;
function TR() {
  if (jw) return Jd;
  jw = 1, Object.defineProperty(Jd, "__esModule", { value: !0 });
  const t = cs(), e = An(), r = {
    keyword: "pattern",
    type: "string",
    schemaType: "string",
    $data: !0,
    error: {
      message: ({ schemaCode: i }) => (0, e.str)`must match pattern "${i}"`,
      params: ({ schemaCode: i }) => (0, e._)`{pattern: ${i}}`
    },
    code(i) {
      const { data: o, $data: s, schema: a, schemaCode: l, it: u } = i, f = u.opts.unicodeRegExp ? "u" : "", d = s ? (0, e._)`(new RegExp(${l}, ${f}))` : (0, t.usePattern)(i, a);
      i.fail$data((0, e._)`!${d}.test(${o})`);
    }
  };
  return Jd.default = r, Jd;
}
var Yd = {}, kw;
function $R() {
  if (kw) return Yd;
  kw = 1, Object.defineProperty(Yd, "__esModule", { value: !0 });
  const t = An(), n = {
    keyword: ["maxProperties", "minProperties"],
    type: "object",
    schemaType: "number",
    $data: !0,
    error: {
      message({ keyword: r, schemaCode: i }) {
        const o = r === "maxProperties" ? "more" : "fewer";
        return (0, t.str)`must NOT have ${o} than ${i} properties`;
      },
      params: ({ schemaCode: r }) => (0, t._)`{limit: ${r}}`
    },
    code(r) {
      const { keyword: i, data: o, schemaCode: s } = r, a = i === "maxProperties" ? t.operators.GT : t.operators.LT;
      r.fail$data((0, t._)`Object.keys(${o}).length ${a} ${s}`);
    }
  };
  return Yd.default = n, Yd;
}
var Qd = {}, Sw;
function PR() {
  if (Sw) return Qd;
  Sw = 1, Object.defineProperty(Qd, "__esModule", { value: !0 });
  const t = cs(), e = An(), n = Xn(), i = {
    keyword: "required",
    type: "object",
    schemaType: "array",
    $data: !0,
    error: {
      message: ({ params: { missingProperty: o } }) => (0, e.str)`must have required property '${o}'`,
      params: ({ params: { missingProperty: o } }) => (0, e._)`{missingProperty: ${o}}`
    },
    code(o) {
      const { gen: s, schema: a, schemaCode: l, data: u, $data: f, it: d } = o, { opts: h } = d;
      if (!f && a.length === 0)
        return;
      const p = a.length >= h.loopRequired;
      if (d.allErrors ? m() : v(), h.strictRequired) {
        const x = o.parentSchema.properties, { definedProperties: w } = o.it;
        for (const j of a)
          if (x?.[j] === void 0 && !w.has(j)) {
            const y = d.schemaEnv.baseId + d.errSchemaPath, k = `required property "${j}" is not defined at "${y}" (strictRequired)`;
            (0, n.checkStrictMode)(d, k, d.opts.strictRequired);
          }
      }
      function m() {
        if (p || f)
          o.block$data(e.nil, g);
        else
          for (const x of a)
            (0, t.checkReportMissingProp)(o, x);
      }
      function v() {
        const x = s.let("missing");
        if (p || f) {
          const w = s.let("valid", !0);
          o.block$data(w, () => b(x, w)), o.ok(w);
        } else
          s.if((0, t.checkMissingProp)(o, a, x)), (0, t.reportMissingProp)(o, x), s.else();
      }
      function g() {
        s.forOf("prop", l, (x) => {
          o.setParams({ missingProperty: x }), s.if((0, t.noPropertyInData)(s, u, x, h.ownProperties), () => o.error());
        });
      }
      function b(x, w) {
        o.setParams({ missingProperty: x }), s.forOf(x, l, () => {
          s.assign(w, (0, t.propertyInData)(s, u, x, h.ownProperties)), s.if((0, e.not)(w), () => {
            o.error(), s.break();
          });
        }, e.nil);
      }
    }
  };
  return Qd.default = i, Qd;
}
var Xd = {}, Cw;
function RR() {
  if (Cw) return Xd;
  Cw = 1, Object.defineProperty(Xd, "__esModule", { value: !0 });
  const t = An(), n = {
    keyword: ["maxItems", "minItems"],
    type: "array",
    schemaType: "number",
    $data: !0,
    error: {
      message({ keyword: r, schemaCode: i }) {
        const o = r === "maxItems" ? "more" : "fewer";
        return (0, t.str)`must NOT have ${o} than ${i} items`;
      },
      params: ({ schemaCode: r }) => (0, t._)`{limit: ${r}}`
    },
    code(r) {
      const { keyword: i, data: o, schemaCode: s } = r, a = i === "maxItems" ? t.operators.GT : t.operators.LT;
      r.fail$data((0, t._)`${o}.length ${a} ${s}`);
    }
  };
  return Xd.default = n, Xd;
}
var Zd = {}, eh = {}, Ow;
function y1() {
  if (Ow) return eh;
  Ow = 1, Object.defineProperty(eh, "__esModule", { value: !0 });
  const t = ZC();
  return t.code = 'require("ajv/dist/runtime/equal").default', eh.default = t, eh;
}
var Ew;
function NR() {
  if (Ew) return Zd;
  Ew = 1, Object.defineProperty(Zd, "__esModule", { value: !0 });
  const t = Lp(), e = An(), n = Xn(), r = y1(), o = {
    keyword: "uniqueItems",
    type: "array",
    schemaType: "boolean",
    $data: !0,
    error: {
      message: ({ params: { i: s, j: a } }) => (0, e.str)`must NOT have duplicate items (items ## ${a} and ${s} are identical)`,
      params: ({ params: { i: s, j: a } }) => (0, e._)`{i: ${s}, j: ${a}}`
    },
    code(s) {
      const { gen: a, data: l, $data: u, schema: f, parentSchema: d, schemaCode: h, it: p } = s;
      if (!u && !f)
        return;
      const m = a.let("valid"), v = d.items ? (0, t.getSchemaTypes)(d.items) : [];
      s.block$data(m, g, (0, e._)`${h} === false`), s.ok(m);
      function g() {
        const j = a.let("i", (0, e._)`${l}.length`), y = a.let("j");
        s.setParams({ i: j, j: y }), a.assign(m, !0), a.if((0, e._)`${j} > 1`, () => (b() ? x : w)(j, y));
      }
      function b() {
        return v.length > 0 && !v.some((j) => j === "object" || j === "array");
      }
      function x(j, y) {
        const k = a.name("item"), S = (0, t.checkDataTypes)(v, k, p.opts.strictNumbers, t.DataType.Wrong), T = a.const("indices", (0, e._)`{}`);
        a.for((0, e._)`;${j}--;`, () => {
          a.let(k, (0, e._)`${l}[${j}]`), a.if(S, (0, e._)`continue`), v.length > 1 && a.if((0, e._)`typeof ${k} == "string"`, (0, e._)`${k} += "_"`), a.if((0, e._)`typeof ${T}[${k}] == "number"`, () => {
            a.assign(y, (0, e._)`${T}[${k}]`), s.error(), a.assign(m, !1).break();
          }).code((0, e._)`${T}[${k}] = ${j}`);
        });
      }
      function w(j, y) {
        const k = (0, n.useFunc)(a, r.default), S = a.name("outer");
        a.label(S).for((0, e._)`;${j}--;`, () => a.for((0, e._)`${y} = ${j}; ${y}--;`, () => a.if((0, e._)`${k}(${l}[${j}], ${l}[${y}])`, () => {
          s.error(), a.assign(m, !1).break(S);
        })));
      }
    }
  };
  return Zd.default = o, Zd;
}
var th = {}, _w;
function DR() {
  if (_w) return th;
  _w = 1, Object.defineProperty(th, "__esModule", { value: !0 });
  const t = An(), e = Xn(), n = y1(), i = {
    keyword: "const",
    $data: !0,
    error: {
      message: "must be equal to constant",
      params: ({ schemaCode: o }) => (0, t._)`{allowedValue: ${o}}`
    },
    code(o) {
      const { gen: s, data: a, $data: l, schemaCode: u, schema: f } = o;
      l || f && typeof f == "object" ? o.fail$data((0, t._)`!${(0, e.useFunc)(s, n.default)}(${a}, ${u})`) : o.fail((0, t._)`${f} !== ${a}`);
    }
  };
  return th.default = i, th;
}
var nh = {}, Aw;
function IR() {
  if (Aw) return nh;
  Aw = 1, Object.defineProperty(nh, "__esModule", { value: !0 });
  const t = An(), e = Xn(), n = y1(), i = {
    keyword: "enum",
    schemaType: "array",
    $data: !0,
    error: {
      message: "must be equal to one of the allowed values",
      params: ({ schemaCode: o }) => (0, t._)`{allowedValues: ${o}}`
    },
    code(o) {
      const { gen: s, data: a, $data: l, schema: u, schemaCode: f, it: d } = o;
      if (!l && u.length === 0)
        throw new Error("enum must have non-empty array");
      const h = u.length >= d.opts.loopEnum;
      let p;
      const m = () => p ?? (p = (0, e.useFunc)(s, n.default));
      let v;
      if (h || l)
        v = s.let("valid"), o.block$data(v, g);
      else {
        if (!Array.isArray(u))
          throw new Error("ajv implementation error");
        const x = s.const("vSchema", f);
        v = (0, t.or)(...u.map((w, j) => b(x, j)));
      }
      o.pass(v);
      function g() {
        s.assign(v, !1), s.forOf("v", f, (x) => s.if((0, t._)`${m()}(${a}, ${x})`, () => s.assign(v, !0).break()));
      }
      function b(x, w) {
        const j = u[w];
        return typeof j == "object" && j !== null ? (0, t._)`${m()}(${a}, ${x}[${w}])` : (0, t._)`${a} === ${j}`;
      }
    }
  };
  return nh.default = i, nh;
}
var Mw;
function zR() {
  if (Mw) return Vd;
  Mw = 1, Object.defineProperty(Vd, "__esModule", { value: !0 });
  const t = ER(), e = _R(), n = MR(), r = TR(), i = $R(), o = PR(), s = RR(), a = NR(), l = DR(), u = IR(), f = [
    // number
    t.default,
    e.default,
    // string
    n.default,
    r.default,
    // object
    i.default,
    o.default,
    // array
    s.default,
    a.default,
    // any
    { keyword: "type", schemaType: ["string", "array"] },
    { keyword: "nullable", schemaType: "boolean" },
    l.default,
    u.default
  ];
  return Vd.default = f, Vd;
}
var rh = {}, bc = {}, Tw;
function tO() {
  if (Tw) return bc;
  Tw = 1, Object.defineProperty(bc, "__esModule", { value: !0 }), bc.validateAdditionalItems = void 0;
  const t = An(), e = Xn(), r = {
    keyword: "additionalItems",
    type: "array",
    schemaType: ["boolean", "object"],
    before: "uniqueItems",
    error: {
      message: ({ params: { len: o } }) => (0, t.str)`must NOT have more than ${o} items`,
      params: ({ params: { len: o } }) => (0, t._)`{limit: ${o}}`
    },
    code(o) {
      const { parentSchema: s, it: a } = o, { items: l } = s;
      if (!Array.isArray(l)) {
        (0, e.checkStrictMode)(a, '"additionalItems" is ignored when "items" is not an array of schemas');
        return;
      }
      i(o, l);
    }
  };
  function i(o, s) {
    const { gen: a, schema: l, data: u, keyword: f, it: d } = o;
    d.items = !0;
    const h = a.const("len", (0, t._)`${u}.length`);
    if (l === !1)
      o.setParams({ len: s.length }), o.pass((0, t._)`${h} <= ${s.length}`);
    else if (typeof l == "object" && !(0, e.alwaysValidSchema)(d, l)) {
      const m = a.var("valid", (0, t._)`${h} <= ${s.length}`);
      a.if((0, t.not)(m), () => p(m)), o.ok(m);
    }
    function p(m) {
      a.forRange("i", s.length, h, (v) => {
        o.subschema({ keyword: f, dataProp: v, dataPropType: e.Type.Num }, m), d.allErrors || a.if((0, t.not)(m), () => a.break());
      });
    }
  }
  return bc.validateAdditionalItems = i, bc.default = r, bc;
}
var ih = {}, yc = {}, $w;
function nO() {
  if ($w) return yc;
  $w = 1, Object.defineProperty(yc, "__esModule", { value: !0 }), yc.validateTuple = void 0;
  const t = An(), e = Xn(), n = cs(), r = {
    keyword: "items",
    type: "array",
    schemaType: ["object", "array", "boolean"],
    before: "uniqueItems",
    code(o) {
      const { schema: s, it: a } = o;
      if (Array.isArray(s))
        return i(o, "additionalItems", s);
      a.items = !0, !(0, e.alwaysValidSchema)(a, s) && o.ok((0, n.validateArray)(o));
    }
  };
  function i(o, s, a = o.schema) {
    const { gen: l, parentSchema: u, data: f, keyword: d, it: h } = o;
    v(u), h.opts.unevaluated && a.length && h.items !== !0 && (h.items = e.mergeEvaluated.items(l, a.length, h.items));
    const p = l.name("valid"), m = l.const("len", (0, t._)`${f}.length`);
    a.forEach((g, b) => {
      (0, e.alwaysValidSchema)(h, g) || (l.if((0, t._)`${m} > ${b}`, () => o.subschema({
        keyword: d,
        schemaProp: b,
        dataProp: b
      }, p)), o.ok(p));
    });
    function v(g) {
      const { opts: b, errSchemaPath: x } = h, w = a.length, j = w === g.minItems && (w === g.maxItems || g[s] === !1);
      if (b.strictTuples && !j) {
        const y = `"${d}" is ${w}-tuple, but minItems or maxItems/${s} are not specified or different at path "${x}"`;
        (0, e.checkStrictMode)(h, y, b.strictTuples);
      }
    }
  }
  return yc.validateTuple = i, yc.default = r, yc;
}
var Pw;
function LR() {
  if (Pw) return ih;
  Pw = 1, Object.defineProperty(ih, "__esModule", { value: !0 });
  const t = nO(), e = {
    keyword: "prefixItems",
    type: "array",
    schemaType: ["array"],
    before: "uniqueItems",
    code: (n) => (0, t.validateTuple)(n, "items")
  };
  return ih.default = e, ih;
}
var oh = {}, Rw;
function BR() {
  if (Rw) return oh;
  Rw = 1, Object.defineProperty(oh, "__esModule", { value: !0 });
  const t = An(), e = Xn(), n = cs(), r = tO(), o = {
    keyword: "items",
    type: "array",
    schemaType: ["object", "boolean"],
    before: "uniqueItems",
    error: {
      message: ({ params: { len: s } }) => (0, t.str)`must NOT have more than ${s} items`,
      params: ({ params: { len: s } }) => (0, t._)`{limit: ${s}}`
    },
    code(s) {
      const { schema: a, parentSchema: l, it: u } = s, { prefixItems: f } = l;
      u.items = !0, !(0, e.alwaysValidSchema)(u, a) && (f ? (0, r.validateAdditionalItems)(s, f) : s.ok((0, n.validateArray)(s)));
    }
  };
  return oh.default = o, oh;
}
var sh = {}, Nw;
function qR() {
  if (Nw) return sh;
  Nw = 1, Object.defineProperty(sh, "__esModule", { value: !0 });
  const t = An(), e = Xn(), r = {
    keyword: "contains",
    type: "array",
    schemaType: ["object", "boolean"],
    before: "uniqueItems",
    trackErrors: !0,
    error: {
      message: ({ params: { min: i, max: o } }) => o === void 0 ? (0, t.str)`must contain at least ${i} valid item(s)` : (0, t.str)`must contain at least ${i} and no more than ${o} valid item(s)`,
      params: ({ params: { min: i, max: o } }) => o === void 0 ? (0, t._)`{minContains: ${i}}` : (0, t._)`{minContains: ${i}, maxContains: ${o}}`
    },
    code(i) {
      const { gen: o, schema: s, parentSchema: a, data: l, it: u } = i;
      let f, d;
      const { minContains: h, maxContains: p } = a;
      u.opts.next ? (f = h === void 0 ? 1 : h, d = p) : f = 1;
      const m = o.const("len", (0, t._)`${l}.length`);
      if (i.setParams({ min: f, max: d }), d === void 0 && f === 0) {
        (0, e.checkStrictMode)(u, '"minContains" == 0 without "maxContains": "contains" keyword ignored');
        return;
      }
      if (d !== void 0 && f > d) {
        (0, e.checkStrictMode)(u, '"minContains" > "maxContains" is always invalid'), i.fail();
        return;
      }
      if ((0, e.alwaysValidSchema)(u, s)) {
        let w = (0, t._)`${m} >= ${f}`;
        d !== void 0 && (w = (0, t._)`${w} && ${m} <= ${d}`), i.pass(w);
        return;
      }
      u.items = !0;
      const v = o.name("valid");
      d === void 0 && f === 1 ? b(v, () => o.if(v, () => o.break())) : f === 0 ? (o.let(v, !0), d !== void 0 && o.if((0, t._)`${l}.length > 0`, g)) : (o.let(v, !1), g()), i.result(v, () => i.reset());
      function g() {
        const w = o.name("_valid"), j = o.let("count", 0);
        b(w, () => o.if(w, () => x(j)));
      }
      function b(w, j) {
        o.forRange("i", 0, m, (y) => {
          i.subschema({
            keyword: "contains",
            dataProp: y,
            dataPropType: e.Type.Num,
            compositeRule: !0
          }, w), j();
        });
      }
      function x(w) {
        o.code((0, t._)`${w}++`), d === void 0 ? o.if((0, t._)`${w} >= ${f}`, () => o.assign(v, !0).break()) : (o.if((0, t._)`${w} > ${d}`, () => o.assign(v, !1).break()), f === 1 ? o.assign(v, !0) : o.if((0, t._)`${w} >= ${f}`, () => o.assign(v, !0)));
      }
    }
  };
  return sh.default = r, sh;
}
var ev = {}, Dw;
function FR() {
  return Dw || (Dw = 1, (function(t) {
    Object.defineProperty(t, "__esModule", { value: !0 }), t.validateSchemaDeps = t.validatePropertyDeps = t.error = void 0;
    const e = An(), n = Xn(), r = cs();
    t.error = {
      message: ({ params: { property: l, depsCount: u, deps: f } }) => {
        const d = u === 1 ? "property" : "properties";
        return (0, e.str)`must have ${d} ${f} when property ${l} is present`;
      },
      params: ({ params: { property: l, depsCount: u, deps: f, missingProperty: d } }) => (0, e._)`{property: ${l},
    missingProperty: ${d},
    depsCount: ${u},
    deps: ${f}}`
      // TODO change to reference
    };
    const i = {
      keyword: "dependencies",
      type: "object",
      schemaType: "object",
      error: t.error,
      code(l) {
        const [u, f] = o(l);
        s(l, u), a(l, f);
      }
    };
    function o({ schema: l }) {
      const u = {}, f = {};
      for (const d in l) {
        if (d === "__proto__")
          continue;
        const h = Array.isArray(l[d]) ? u : f;
        h[d] = l[d];
      }
      return [u, f];
    }
    function s(l, u = l.schema) {
      const { gen: f, data: d, it: h } = l;
      if (Object.keys(u).length === 0)
        return;
      const p = f.let("missing");
      for (const m in u) {
        const v = u[m];
        if (v.length === 0)
          continue;
        const g = (0, r.propertyInData)(f, d, m, h.opts.ownProperties);
        l.setParams({
          property: m,
          depsCount: v.length,
          deps: v.join(", ")
        }), h.allErrors ? f.if(g, () => {
          for (const b of v)
            (0, r.checkReportMissingProp)(l, b);
        }) : (f.if((0, e._)`${g} && (${(0, r.checkMissingProp)(l, v, p)})`), (0, r.reportMissingProp)(l, p), f.else());
      }
    }
    t.validatePropertyDeps = s;
    function a(l, u = l.schema) {
      const { gen: f, data: d, keyword: h, it: p } = l, m = f.name("valid");
      for (const v in u)
        (0, n.alwaysValidSchema)(p, u[v]) || (f.if(
          (0, r.propertyInData)(f, d, v, p.opts.ownProperties),
          () => {
            const g = l.subschema({ keyword: h, schemaProp: v }, m);
            l.mergeValidEvaluated(g, m);
          },
          () => f.var(m, !0)
          // TODO var
        ), l.ok(m));
    }
    t.validateSchemaDeps = a, t.default = i;
  })(ev)), ev;
}
var ah = {}, Iw;
function UR() {
  if (Iw) return ah;
  Iw = 1, Object.defineProperty(ah, "__esModule", { value: !0 });
  const t = An(), e = Xn(), r = {
    keyword: "propertyNames",
    type: "object",
    schemaType: ["object", "boolean"],
    error: {
      message: "property name must be valid",
      params: ({ params: i }) => (0, t._)`{propertyName: ${i.propertyName}}`
    },
    code(i) {
      const { gen: o, schema: s, data: a, it: l } = i;
      if ((0, e.alwaysValidSchema)(l, s))
        return;
      const u = o.name("valid");
      o.forIn("key", a, (f) => {
        i.setParams({ propertyName: f }), i.subschema({
          keyword: "propertyNames",
          data: f,
          dataTypes: ["string"],
          propertyName: f,
          compositeRule: !0
        }, u), o.if((0, t.not)(u), () => {
          i.error(!0), l.allErrors || o.break();
        });
      }), i.ok(u);
    }
  };
  return ah.default = r, ah;
}
var lh = {}, zw;
function rO() {
  if (zw) return lh;
  zw = 1, Object.defineProperty(lh, "__esModule", { value: !0 });
  const t = cs(), e = An(), n = dl(), r = Xn(), o = {
    keyword: "additionalProperties",
    type: ["object"],
    schemaType: ["boolean", "object"],
    allowUndefined: !0,
    trackErrors: !0,
    error: {
      message: "must NOT have additional properties",
      params: ({ params: s }) => (0, e._)`{additionalProperty: ${s.additionalProperty}}`
    },
    code(s) {
      const { gen: a, schema: l, parentSchema: u, data: f, errsCount: d, it: h } = s;
      if (!d)
        throw new Error("ajv implementation error");
      const { allErrors: p, opts: m } = h;
      if (h.props = !0, m.removeAdditional !== "all" && (0, r.alwaysValidSchema)(h, l))
        return;
      const v = (0, t.allSchemaProperties)(u.properties), g = (0, t.allSchemaProperties)(u.patternProperties);
      b(), s.ok((0, e._)`${d} === ${n.default.errors}`);
      function b() {
        a.forIn("key", f, (k) => {
          !v.length && !g.length ? j(k) : a.if(x(k), () => j(k));
        });
      }
      function x(k) {
        let S;
        if (v.length > 8) {
          const T = (0, r.schemaRefOrVal)(h, u.properties, "properties");
          S = (0, t.isOwnProperty)(a, T, k);
        } else v.length ? S = (0, e.or)(...v.map((T) => (0, e._)`${k} === ${T}`)) : S = e.nil;
        return g.length && (S = (0, e.or)(S, ...g.map((T) => (0, e._)`${(0, t.usePattern)(s, T)}.test(${k})`))), (0, e.not)(S);
      }
      function w(k) {
        a.code((0, e._)`delete ${f}[${k}]`);
      }
      function j(k) {
        if (m.removeAdditional === "all" || m.removeAdditional && l === !1) {
          w(k);
          return;
        }
        if (l === !1) {
          s.setParams({ additionalProperty: k }), s.error(), p || a.break();
          return;
        }
        if (typeof l == "object" && !(0, r.alwaysValidSchema)(h, l)) {
          const S = a.name("valid");
          m.removeAdditional === "failing" ? (y(k, S, !1), a.if((0, e.not)(S), () => {
            s.reset(), w(k);
          })) : (y(k, S), p || a.if((0, e.not)(S), () => a.break()));
        }
      }
      function y(k, S, T) {
        const M = {
          keyword: "additionalProperties",
          dataProp: k,
          dataPropType: r.Type.Str
        };
        T === !1 && Object.assign(M, {
          compositeRule: !0,
          createErrors: !1,
          allErrors: !1
        }), s.subschema(M, S);
      }
    }
  };
  return lh.default = o, lh;
}
var ch = {}, Lw;
function VR() {
  if (Lw) return ch;
  Lw = 1, Object.defineProperty(ch, "__esModule", { value: !0 });
  const t = Qm(), e = cs(), n = Xn(), r = rO(), i = {
    keyword: "properties",
    type: "object",
    schemaType: "object",
    code(o) {
      const { gen: s, schema: a, parentSchema: l, data: u, it: f } = o;
      f.opts.removeAdditional === "all" && l.additionalProperties === void 0 && r.default.code(new t.KeywordCxt(f, r.default, "additionalProperties"));
      const d = (0, e.allSchemaProperties)(a);
      for (const g of d)
        f.definedProperties.add(g);
      f.opts.unevaluated && d.length && f.props !== !0 && (f.props = n.mergeEvaluated.props(s, (0, n.toHash)(d), f.props));
      const h = d.filter((g) => !(0, n.alwaysValidSchema)(f, a[g]));
      if (h.length === 0)
        return;
      const p = s.name("valid");
      for (const g of h)
        m(g) ? v(g) : (s.if((0, e.propertyInData)(s, u, g, f.opts.ownProperties)), v(g), f.allErrors || s.else().var(p, !0), s.endIf()), o.it.definedProperties.add(g), o.ok(p);
      function m(g) {
        return f.opts.useDefaults && !f.compositeRule && a[g].default !== void 0;
      }
      function v(g) {
        o.subschema({
          keyword: "properties",
          schemaProp: g,
          dataProp: g
        }, p);
      }
    }
  };
  return ch.default = i, ch;
}
var uh = {}, Bw;
function WR() {
  if (Bw) return uh;
  Bw = 1, Object.defineProperty(uh, "__esModule", { value: !0 });
  const t = cs(), e = An(), n = Xn(), r = Xn(), i = {
    keyword: "patternProperties",
    type: "object",
    schemaType: "object",
    code(o) {
      const { gen: s, schema: a, data: l, parentSchema: u, it: f } = o, { opts: d } = f, h = (0, t.allSchemaProperties)(a), p = h.filter((j) => (0, n.alwaysValidSchema)(f, a[j]));
      if (h.length === 0 || p.length === h.length && (!f.opts.unevaluated || f.props === !0))
        return;
      const m = d.strictSchema && !d.allowMatchingProperties && u.properties, v = s.name("valid");
      f.props !== !0 && !(f.props instanceof e.Name) && (f.props = (0, r.evaluatedPropsToName)(s, f.props));
      const { props: g } = f;
      b();
      function b() {
        for (const j of h)
          m && x(j), f.allErrors ? w(j) : (s.var(v, !0), w(j), s.if(v));
      }
      function x(j) {
        for (const y in m)
          new RegExp(j).test(y) && (0, n.checkStrictMode)(f, `property ${y} matches pattern ${j} (use allowMatchingProperties)`);
      }
      function w(j) {
        s.forIn("key", l, (y) => {
          s.if((0, e._)`${(0, t.usePattern)(o, j)}.test(${y})`, () => {
            const k = p.includes(j);
            k || o.subschema({
              keyword: "patternProperties",
              schemaProp: j,
              dataProp: y,
              dataPropType: r.Type.Str
            }, v), f.opts.unevaluated && g !== !0 ? s.assign((0, e._)`${g}[${y}]`, !0) : !k && !f.allErrors && s.if((0, e.not)(v), () => s.break());
          });
        });
      }
    }
  };
  return uh.default = i, uh;
}
var fh = {}, qw;
function HR() {
  if (qw) return fh;
  qw = 1, Object.defineProperty(fh, "__esModule", { value: !0 });
  const t = Xn(), e = {
    keyword: "not",
    schemaType: ["object", "boolean"],
    trackErrors: !0,
    code(n) {
      const { gen: r, schema: i, it: o } = n;
      if ((0, t.alwaysValidSchema)(o, i)) {
        n.fail();
        return;
      }
      const s = r.name("valid");
      n.subschema({
        keyword: "not",
        compositeRule: !0,
        createErrors: !1,
        allErrors: !1
      }, s), n.failResult(s, () => n.reset(), () => n.error());
    },
    error: { message: "must NOT be valid" }
  };
  return fh.default = e, fh;
}
var dh = {}, Fw;
function KR() {
  if (Fw) return dh;
  Fw = 1, Object.defineProperty(dh, "__esModule", { value: !0 });
  const e = {
    keyword: "anyOf",
    schemaType: "array",
    trackErrors: !0,
    code: cs().validateUnion,
    error: { message: "must match a schema in anyOf" }
  };
  return dh.default = e, dh;
}
var hh = {}, Uw;
function GR() {
  if (Uw) return hh;
  Uw = 1, Object.defineProperty(hh, "__esModule", { value: !0 });
  const t = An(), e = Xn(), r = {
    keyword: "oneOf",
    schemaType: "array",
    trackErrors: !0,
    error: {
      message: "must match exactly one schema in oneOf",
      params: ({ params: i }) => (0, t._)`{passingSchemas: ${i.passing}}`
    },
    code(i) {
      const { gen: o, schema: s, parentSchema: a, it: l } = i;
      if (!Array.isArray(s))
        throw new Error("ajv implementation error");
      if (l.opts.discriminator && a.discriminator)
        return;
      const u = s, f = o.let("valid", !1), d = o.let("passing", null), h = o.name("_valid");
      i.setParams({ passing: d }), o.block(p), i.result(f, () => i.reset(), () => i.error(!0));
      function p() {
        u.forEach((m, v) => {
          let g;
          (0, e.alwaysValidSchema)(l, m) ? o.var(h, !0) : g = i.subschema({
            keyword: "oneOf",
            schemaProp: v,
            compositeRule: !0
          }, h), v > 0 && o.if((0, t._)`${h} && ${f}`).assign(f, !1).assign(d, (0, t._)`[${d}, ${v}]`).else(), o.if(h, () => {
            o.assign(f, !0), o.assign(d, v), g && i.mergeEvaluated(g, t.Name);
          });
        });
      }
    }
  };
  return hh.default = r, hh;
}
var ph = {}, Vw;
function JR() {
  if (Vw) return ph;
  Vw = 1, Object.defineProperty(ph, "__esModule", { value: !0 });
  const t = Xn(), e = {
    keyword: "allOf",
    schemaType: "array",
    code(n) {
      const { gen: r, schema: i, it: o } = n;
      if (!Array.isArray(i))
        throw new Error("ajv implementation error");
      const s = r.name("valid");
      i.forEach((a, l) => {
        if ((0, t.alwaysValidSchema)(o, a))
          return;
        const u = n.subschema({ keyword: "allOf", schemaProp: l }, s);
        n.ok(s), n.mergeEvaluated(u);
      });
    }
  };
  return ph.default = e, ph;
}
var mh = {}, Ww;
function YR() {
  if (Ww) return mh;
  Ww = 1, Object.defineProperty(mh, "__esModule", { value: !0 });
  const t = An(), e = Xn(), r = {
    keyword: "if",
    schemaType: ["object", "boolean"],
    trackErrors: !0,
    error: {
      message: ({ params: o }) => (0, t.str)`must match "${o.ifClause}" schema`,
      params: ({ params: o }) => (0, t._)`{failingKeyword: ${o.ifClause}}`
    },
    code(o) {
      const { gen: s, parentSchema: a, it: l } = o;
      a.then === void 0 && a.else === void 0 && (0, e.checkStrictMode)(l, '"if" without "then" and "else" is ignored');
      const u = i(l, "then"), f = i(l, "else");
      if (!u && !f)
        return;
      const d = s.let("valid", !0), h = s.name("_valid");
      if (p(), o.reset(), u && f) {
        const v = s.let("ifClause");
        o.setParams({ ifClause: v }), s.if(h, m("then", v), m("else", v));
      } else u ? s.if(h, m("then")) : s.if((0, t.not)(h), m("else"));
      o.pass(d, () => o.error(!0));
      function p() {
        const v = o.subschema({
          keyword: "if",
          compositeRule: !0,
          createErrors: !1,
          allErrors: !1
        }, h);
        o.mergeEvaluated(v);
      }
      function m(v, g) {
        return () => {
          const b = o.subschema({ keyword: v }, h);
          s.assign(d, h), o.mergeValidEvaluated(b, d), g ? s.assign(g, (0, t._)`${v}`) : o.setParams({ ifClause: v });
        };
      }
    }
  };
  function i(o, s) {
    const a = o.schema[s];
    return a !== void 0 && !(0, e.alwaysValidSchema)(o, a);
  }
  return mh.default = r, mh;
}
var gh = {}, Hw;
function QR() {
  if (Hw) return gh;
  Hw = 1, Object.defineProperty(gh, "__esModule", { value: !0 });
  const t = Xn(), e = {
    keyword: ["then", "else"],
    schemaType: ["object", "boolean"],
    code({ keyword: n, parentSchema: r, it: i }) {
      r.if === void 0 && (0, t.checkStrictMode)(i, `"${n}" without "if" is ignored`);
    }
  };
  return gh.default = e, gh;
}
var Kw;
function XR() {
  if (Kw) return rh;
  Kw = 1, Object.defineProperty(rh, "__esModule", { value: !0 });
  const t = tO(), e = LR(), n = nO(), r = BR(), i = qR(), o = FR(), s = UR(), a = rO(), l = VR(), u = WR(), f = HR(), d = KR(), h = GR(), p = JR(), m = YR(), v = QR();
  function g(b = !1) {
    const x = [
      // any
      f.default,
      d.default,
      h.default,
      p.default,
      m.default,
      v.default,
      // object
      s.default,
      a.default,
      o.default,
      l.default,
      u.default
    ];
    return b ? x.push(e.default, r.default) : x.push(t.default, n.default), x.push(i.default), x;
  }
  return rh.default = g, rh;
}
var vh = {}, bh = {}, Gw;
function ZR() {
  if (Gw) return bh;
  Gw = 1, Object.defineProperty(bh, "__esModule", { value: !0 });
  const t = An(), n = {
    keyword: "format",
    type: ["number", "string"],
    schemaType: "string",
    $data: !0,
    error: {
      message: ({ schemaCode: r }) => (0, t.str)`must match format "${r}"`,
      params: ({ schemaCode: r }) => (0, t._)`{format: ${r}}`
    },
    code(r, i) {
      const { gen: o, data: s, $data: a, schema: l, schemaCode: u, it: f } = r, { opts: d, errSchemaPath: h, schemaEnv: p, self: m } = f;
      if (!d.validateFormats)
        return;
      a ? v() : g();
      function v() {
        const b = o.scopeValue("formats", {
          ref: m.formats,
          code: d.code.formats
        }), x = o.const("fDef", (0, t._)`${b}[${u}]`), w = o.let("fType"), j = o.let("format");
        o.if((0, t._)`typeof ${x} == "object" && !(${x} instanceof RegExp)`, () => o.assign(w, (0, t._)`${x}.type || "string"`).assign(j, (0, t._)`${x}.validate`), () => o.assign(w, (0, t._)`"string"`).assign(j, x)), r.fail$data((0, t.or)(y(), k()));
        function y() {
          return d.strictSchema === !1 ? t.nil : (0, t._)`${u} && !${j}`;
        }
        function k() {
          const S = p.$async ? (0, t._)`(${x}.async ? await ${j}(${s}) : ${j}(${s}))` : (0, t._)`${j}(${s})`, T = (0, t._)`(typeof ${j} == "function" ? ${S} : ${j}.test(${s}))`;
          return (0, t._)`${j} && ${j} !== true && ${w} === ${i} && !${T}`;
        }
      }
      function g() {
        const b = m.formats[l];
        if (!b) {
          y();
          return;
        }
        if (b === !0)
          return;
        const [x, w, j] = k(b);
        x === i && r.pass(S());
        function y() {
          if (d.strictSchema === !1) {
            m.logger.warn(T());
            return;
          }
          throw new Error(T());
          function T() {
            return `unknown format "${l}" ignored in schema at path "${h}"`;
          }
        }
        function k(T) {
          const M = T instanceof RegExp ? (0, t.regexpCode)(T) : d.code.formats ? (0, t._)`${d.code.formats}${(0, t.getProperty)(l)}` : void 0, N = o.scopeValue("formats", { key: l, ref: T, code: M });
          return typeof T == "object" && !(T instanceof RegExp) ? [T.type || "string", T.validate, (0, t._)`${N}.validate`] : ["string", T, N];
        }
        function S() {
          if (typeof b == "object" && !(b instanceof RegExp) && b.async) {
            if (!p.$async)
              throw new Error("async format in sync schema");
            return (0, t._)`await ${j}(${s})`;
          }
          return typeof w == "function" ? (0, t._)`${j}(${s})` : (0, t._)`${j}.test(${s})`;
        }
      }
    }
  };
  return bh.default = n, bh;
}
var Jw;
function e9() {
  if (Jw) return vh;
  Jw = 1, Object.defineProperty(vh, "__esModule", { value: !0 });
  const e = [ZR().default];
  return vh.default = e, vh;
}
var Cl = {}, Yw;
function t9() {
  return Yw || (Yw = 1, Object.defineProperty(Cl, "__esModule", { value: !0 }), Cl.contentVocabulary = Cl.metadataVocabulary = void 0, Cl.metadataVocabulary = [
    "title",
    "description",
    "default",
    "deprecated",
    "readOnly",
    "writeOnly",
    "examples"
  ], Cl.contentVocabulary = [
    "contentMediaType",
    "contentEncoding",
    "contentSchema"
  ]), Cl;
}
var Qw;
function n9() {
  if (Qw) return qd;
  Qw = 1, Object.defineProperty(qd, "__esModule", { value: !0 });
  const t = OR(), e = zR(), n = XR(), r = e9(), i = t9(), o = [
    t.default,
    e.default,
    (0, n.default)(),
    r.default,
    i.metadataVocabulary,
    i.contentVocabulary
  ];
  return qd.default = o, qd;
}
var yh = {}, Lu = {}, Xw;
function r9() {
  if (Xw) return Lu;
  Xw = 1, Object.defineProperty(Lu, "__esModule", { value: !0 }), Lu.DiscrError = void 0;
  var t;
  return (function(e) {
    e.Tag = "tag", e.Mapping = "mapping";
  })(t || (Lu.DiscrError = t = {})), Lu;
}
var Zw;
function i9() {
  if (Zw) return yh;
  Zw = 1, Object.defineProperty(yh, "__esModule", { value: !0 });
  const t = An(), e = r9(), n = b1(), r = Xm(), i = Xn(), s = {
    keyword: "discriminator",
    type: "object",
    schemaType: "object",
    error: {
      message: ({ params: { discrError: a, tagName: l } }) => a === e.DiscrError.Tag ? `tag "${l}" must be string` : `value of tag "${l}" must be in oneOf`,
      params: ({ params: { discrError: a, tag: l, tagName: u } }) => (0, t._)`{error: ${a}, tag: ${u}, tagValue: ${l}}`
    },
    code(a) {
      const { gen: l, data: u, schema: f, parentSchema: d, it: h } = a, { oneOf: p } = d;
      if (!h.opts.discriminator)
        throw new Error("discriminator: requires discriminator option");
      const m = f.propertyName;
      if (typeof m != "string")
        throw new Error("discriminator: requires propertyName");
      if (f.mapping)
        throw new Error("discriminator: mapping is not supported");
      if (!p)
        throw new Error("discriminator: requires oneOf keyword");
      const v = l.let("valid", !1), g = l.const("tag", (0, t._)`${u}${(0, t.getProperty)(m)}`);
      l.if((0, t._)`typeof ${g} == "string"`, () => b(), () => a.error(!1, { discrError: e.DiscrError.Tag, tag: g, tagName: m })), a.ok(v);
      function b() {
        const j = w();
        l.if(!1);
        for (const y in j)
          l.elseIf((0, t._)`${g} === ${y}`), l.assign(v, x(j[y]));
        l.else(), a.error(!1, { discrError: e.DiscrError.Mapping, tag: g, tagName: m }), l.endIf();
      }
      function x(j) {
        const y = l.name("valid"), k = a.subschema({ keyword: "oneOf", schemaProp: j }, y);
        return a.mergeEvaluated(k, t.Name), y;
      }
      function w() {
        var j;
        const y = {}, k = T(d);
        let S = !0;
        for (let z = 0; z < p.length; z++) {
          let L = p[z];
          if (L?.$ref && !(0, i.schemaHasRulesButRef)(L, h.self.RULES)) {
            const ce = L.$ref;
            if (L = n.resolveRef.call(h.self, h.schemaEnv.root, h.baseId, ce), L instanceof n.SchemaEnv && (L = L.schema), L === void 0)
              throw new r.default(h.opts.uriResolver, h.baseId, ce);
          }
          const W = (j = L?.properties) === null || j === void 0 ? void 0 : j[m];
          if (typeof W != "object")
            throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have "properties/${m}"`);
          S = S && (k || T(L)), M(W, z);
        }
        if (!S)
          throw new Error(`discriminator: "${m}" must be required`);
        return y;
        function T({ required: z }) {
          return Array.isArray(z) && z.includes(m);
        }
        function M(z, L) {
          if (z.const)
            N(z.const, L);
          else if (z.enum)
            for (const W of z.enum)
              N(W, L);
          else
            throw new Error(`discriminator: "properties/${m}" must have "const" or "enum"`);
        }
        function N(z, L) {
          if (typeof z != "string" || z in y)
            throw new Error(`discriminator: "${m}" values must be unique strings`);
          y[z] = L;
        }
      }
    }
  };
  return yh.default = s, yh;
}
const o9 = "http://json-schema.org/draft-07/schema#", s9 = "http://json-schema.org/draft-07/schema#", a9 = "Core schema meta-schema", l9 = { schemaArray: { type: "array", minItems: 1, items: { $ref: "#" } }, nonNegativeInteger: { type: "integer", minimum: 0 }, nonNegativeIntegerDefault0: { allOf: [{ $ref: "#/definitions/nonNegativeInteger" }, { default: 0 }] }, simpleTypes: { enum: ["array", "boolean", "integer", "null", "number", "object", "string"] }, stringArray: { type: "array", items: { type: "string" }, uniqueItems: !0, default: [] } }, c9 = ["object", "boolean"], u9 = { $id: { type: "string", format: "uri-reference" }, $schema: { type: "string", format: "uri" }, $ref: { type: "string", format: "uri-reference" }, $comment: { type: "string" }, title: { type: "string" }, description: { type: "string" }, default: !0, readOnly: { type: "boolean", default: !1 }, examples: { type: "array", items: !0 }, multipleOf: { type: "number", exclusiveMinimum: 0 }, maximum: { type: "number" }, exclusiveMaximum: { type: "number" }, minimum: { type: "number" }, exclusiveMinimum: { type: "number" }, maxLength: { $ref: "#/definitions/nonNegativeInteger" }, minLength: { $ref: "#/definitions/nonNegativeIntegerDefault0" }, pattern: { type: "string", format: "regex" }, additionalItems: { $ref: "#" }, items: { anyOf: [{ $ref: "#" }, { $ref: "#/definitions/schemaArray" }], default: !0 }, maxItems: { $ref: "#/definitions/nonNegativeInteger" }, minItems: { $ref: "#/definitions/nonNegativeIntegerDefault0" }, uniqueItems: { type: "boolean", default: !1 }, contains: { $ref: "#" }, maxProperties: { $ref: "#/definitions/nonNegativeInteger" }, minProperties: { $ref: "#/definitions/nonNegativeIntegerDefault0" }, required: { $ref: "#/definitions/stringArray" }, additionalProperties: { $ref: "#" }, definitions: { type: "object", additionalProperties: { $ref: "#" }, default: {} }, properties: { type: "object", additionalProperties: { $ref: "#" }, default: {} }, patternProperties: { type: "object", additionalProperties: { $ref: "#" }, propertyNames: { format: "regex" }, default: {} }, dependencies: { type: "object", additionalProperties: { anyOf: [{ $ref: "#" }, { $ref: "#/definitions/stringArray" }] } }, propertyNames: { $ref: "#" }, const: !0, enum: { type: "array", items: !0, minItems: 1, uniqueItems: !0 }, type: { anyOf: [{ $ref: "#/definitions/simpleTypes" }, { type: "array", items: { $ref: "#/definitions/simpleTypes" }, minItems: 1, uniqueItems: !0 }] }, format: { type: "string" }, contentMediaType: { type: "string" }, contentEncoding: { type: "string" }, if: { $ref: "#" }, then: { $ref: "#" }, else: { $ref: "#" }, allOf: { $ref: "#/definitions/schemaArray" }, anyOf: { $ref: "#/definitions/schemaArray" }, oneOf: { $ref: "#/definitions/schemaArray" }, not: { $ref: "#" } }, f9 = {
  $schema: o9,
  $id: s9,
  title: a9,
  definitions: l9,
  type: c9,
  properties: u9,
  default: !0
};
var ej;
function d9() {
  return ej || (ej = 1, (function(t, e) {
    Object.defineProperty(e, "__esModule", { value: !0 }), e.MissingRefError = e.ValidationError = e.CodeGen = e.Name = e.nil = e.stringify = e.str = e._ = e.KeywordCxt = e.Ajv = void 0;
    const n = kR(), r = n9(), i = i9(), o = f9, s = ["/properties"], a = "http://json-schema.org/draft-07/schema";
    class l extends n.default {
      _addVocabularies() {
        super._addVocabularies(), r.default.forEach((m) => this.addVocabulary(m)), this.opts.discriminator && this.addKeyword(i.default);
      }
      _addDefaultMetaSchema() {
        if (super._addDefaultMetaSchema(), !this.opts.meta)
          return;
        const m = this.opts.$data ? this.$dataMetaSchema(o, s) : o;
        this.addMetaSchema(m, a, !1), this.refs["http://json-schema.org/schema"] = a;
      }
      defaultMeta() {
        return this.opts.defaultMeta = super.defaultMeta() || (this.getSchema(a) ? a : void 0);
      }
    }
    e.Ajv = l, t.exports = e = l, t.exports.Ajv = l, Object.defineProperty(e, "__esModule", { value: !0 }), e.default = l;
    var u = Qm();
    Object.defineProperty(e, "KeywordCxt", { enumerable: !0, get: function() {
      return u.KeywordCxt;
    } });
    var f = An();
    Object.defineProperty(e, "_", { enumerable: !0, get: function() {
      return f._;
    } }), Object.defineProperty(e, "str", { enumerable: !0, get: function() {
      return f.str;
    } }), Object.defineProperty(e, "stringify", { enumerable: !0, get: function() {
      return f.stringify;
    } }), Object.defineProperty(e, "nil", { enumerable: !0, get: function() {
      return f.nil;
    } }), Object.defineProperty(e, "Name", { enumerable: !0, get: function() {
      return f.Name;
    } }), Object.defineProperty(e, "CodeGen", { enumerable: !0, get: function() {
      return f.CodeGen;
    } });
    var d = v1();
    Object.defineProperty(e, "ValidationError", { enumerable: !0, get: function() {
      return d.default;
    } });
    var h = Xm();
    Object.defineProperty(e, "MissingRefError", { enumerable: !0, get: function() {
      return h.default;
    } });
  })(Dd, Dd.exports)), Dd.exports;
}
d9();
var tv = {}, tj;
function h9() {
  return tj || (tj = 1, (function(t) {
    (function(e) {
      function n(A) {
        return A !== null ? Object.prototype.toString.call(A) === "[object Array]" : !1;
      }
      function r(A) {
        return A !== null ? Object.prototype.toString.call(A) === "[object Object]" : !1;
      }
      function i(A, D) {
        if (A === D)
          return !0;
        var F = Object.prototype.toString.call(A);
        if (F !== Object.prototype.toString.call(D))
          return !1;
        if (n(A) === !0) {
          if (A.length !== D.length)
            return !1;
          for (var oe = 0; oe < A.length; oe++)
            if (i(A[oe], D[oe]) === !1)
              return !1;
          return !0;
        }
        if (r(A) === !0) {
          var ve = {};
          for (var Ne in A)
            if (hasOwnProperty.call(A, Ne)) {
              if (i(A[Ne], D[Ne]) === !1)
                return !1;
              ve[Ne] = !0;
            }
          for (var Fe in D)
            if (hasOwnProperty.call(D, Fe) && ve[Fe] !== !0)
              return !1;
          return !0;
        }
        return !1;
      }
      function o(A) {
        if (A === "" || A === !1 || A === null)
          return !0;
        if (n(A) && A.length === 0)
          return !0;
        if (r(A)) {
          for (var D in A)
            if (A.hasOwnProperty(D))
              return !1;
          return !0;
        } else
          return !1;
      }
      function s(A) {
        for (var D = Object.keys(A), F = [], oe = 0; oe < D.length; oe++)
          F.push(A[D[oe]]);
        return F;
      }
      var a;
      typeof String.prototype.trimLeft == "function" ? a = function(A) {
        return A.trimLeft();
      } : a = function(A) {
        return A.match(/^\s*(.*)/)[1];
      };
      var l = 0, u = 1, f = 2, d = 3, h = 4, p = 5, m = 6, v = 7, g = 8, b = 9, x = {
        0: "number",
        1: "any",
        2: "string",
        3: "array",
        4: "object",
        5: "boolean",
        6: "expression",
        7: "null",
        8: "Array<number>",
        9: "Array<string>"
      }, w = "EOF", j = "UnquotedIdentifier", y = "QuotedIdentifier", k = "Rbracket", S = "Rparen", T = "Comma", M = "Colon", N = "Rbrace", z = "Number", L = "Current", W = "Expref", ce = "Pipe", te = "Or", we = "And", Ee = "EQ", ae = "GT", re = "LT", G = "GTE", B = "LTE", ie = "NE", R = "Flatten", O = "Star", $ = "Filter", ne = "Dot", je = "Not", J = "Lbrace", H = "Lbracket", ue = "Lparen", P = "Literal", V = {
        ".": ne,
        "*": O,
        ",": T,
        ":": M,
        "{": J,
        "}": N,
        "]": k,
        "(": ue,
        ")": S,
        "@": L
      }, U = {
        "<": !0,
        ">": !0,
        "=": !0,
        "!": !0
      }, me = {
        " ": !0,
        "	": !0,
        "\n": !0
      };
      function X(A) {
        return A >= "a" && A <= "z" || A >= "A" && A <= "Z" || A === "_";
      }
      function K(A) {
        return A >= "0" && A <= "9" || A === "-";
      }
      function rt(A) {
        return A >= "a" && A <= "z" || A >= "A" && A <= "Z" || A >= "0" && A <= "9" || A === "_";
      }
      function Qe() {
      }
      Qe.prototype = {
        tokenize: function(A) {
          var D = [];
          this._current = 0;
          for (var F, oe, ve; this._current < A.length; )
            if (X(A[this._current]))
              F = this._current, oe = this._consumeUnquotedIdentifier(A), D.push({
                type: j,
                value: oe,
                start: F
              });
            else if (V[A[this._current]] !== void 0)
              D.push({
                type: V[A[this._current]],
                value: A[this._current],
                start: this._current
              }), this._current++;
            else if (K(A[this._current]))
              ve = this._consumeNumber(A), D.push(ve);
            else if (A[this._current] === "[")
              ve = this._consumeLBracket(A), D.push(ve);
            else if (A[this._current] === '"')
              F = this._current, oe = this._consumeQuotedIdentifier(A), D.push({
                type: y,
                value: oe,
                start: F
              });
            else if (A[this._current] === "'")
              F = this._current, oe = this._consumeRawStringLiteral(A), D.push({
                type: P,
                value: oe,
                start: F
              });
            else if (A[this._current] === "`") {
              F = this._current;
              var Ne = this._consumeLiteral(A);
              D.push({
                type: P,
                value: Ne,
                start: F
              });
            } else if (U[A[this._current]] !== void 0)
              D.push(this._consumeOperator(A));
            else if (me[A[this._current]] !== void 0)
              this._current++;
            else if (A[this._current] === "&")
              F = this._current, this._current++, A[this._current] === "&" ? (this._current++, D.push({ type: we, value: "&&", start: F })) : D.push({ type: W, value: "&", start: F });
            else if (A[this._current] === "|")
              F = this._current, this._current++, A[this._current] === "|" ? (this._current++, D.push({ type: te, value: "||", start: F })) : D.push({ type: ce, value: "|", start: F });
            else {
              var Fe = new Error("Unknown character:" + A[this._current]);
              throw Fe.name = "LexerError", Fe;
            }
          return D;
        },
        _consumeUnquotedIdentifier: function(A) {
          var D = this._current;
          for (this._current++; this._current < A.length && rt(A[this._current]); )
            this._current++;
          return A.slice(D, this._current);
        },
        _consumeQuotedIdentifier: function(A) {
          var D = this._current;
          this._current++;
          for (var F = A.length; A[this._current] !== '"' && this._current < F; ) {
            var oe = this._current;
            A[oe] === "\\" && (A[oe + 1] === "\\" || A[oe + 1] === '"') ? oe += 2 : oe++, this._current = oe;
          }
          return this._current++, JSON.parse(A.slice(D, this._current));
        },
        _consumeRawStringLiteral: function(A) {
          var D = this._current;
          this._current++;
          for (var F = A.length; A[this._current] !== "'" && this._current < F; ) {
            var oe = this._current;
            A[oe] === "\\" && (A[oe + 1] === "\\" || A[oe + 1] === "'") ? oe += 2 : oe++, this._current = oe;
          }
          this._current++;
          var ve = A.slice(D + 1, this._current - 1);
          return ve.replace("\\'", "'");
        },
        _consumeNumber: function(A) {
          var D = this._current;
          this._current++;
          for (var F = A.length; K(A[this._current]) && this._current < F; )
            this._current++;
          var oe = parseInt(A.slice(D, this._current));
          return { type: z, value: oe, start: D };
        },
        _consumeLBracket: function(A) {
          var D = this._current;
          return this._current++, A[this._current] === "?" ? (this._current++, { type: $, value: "[?", start: D }) : A[this._current] === "]" ? (this._current++, { type: R, value: "[]", start: D }) : { type: H, value: "[", start: D };
        },
        _consumeOperator: function(A) {
          var D = this._current, F = A[D];
          if (this._current++, F === "!")
            return A[this._current] === "=" ? (this._current++, { type: ie, value: "!=", start: D }) : { type: je, value: "!", start: D };
          if (F === "<")
            return A[this._current] === "=" ? (this._current++, { type: B, value: "<=", start: D }) : { type: re, value: "<", start: D };
          if (F === ">")
            return A[this._current] === "=" ? (this._current++, { type: G, value: ">=", start: D }) : { type: ae, value: ">", start: D };
          if (F === "=" && A[this._current] === "=")
            return this._current++, { type: Ee, value: "==", start: D };
        },
        _consumeLiteral: function(A) {
          this._current++;
          for (var D = this._current, F = A.length, oe; A[this._current] !== "`" && this._current < F; ) {
            var ve = this._current;
            A[ve] === "\\" && (A[ve + 1] === "\\" || A[ve + 1] === "`") ? ve += 2 : ve++, this._current = ve;
          }
          var Ne = a(A.slice(D, this._current));
          return Ne = Ne.replace("\\`", "`"), this._looksLikeJSON(Ne) ? oe = JSON.parse(Ne) : oe = JSON.parse('"' + Ne + '"'), this._current++, oe;
        },
        _looksLikeJSON: function(A) {
          var D = '[{"', F = ["true", "false", "null"], oe = "-0123456789";
          if (A === "")
            return !1;
          if (D.indexOf(A[0]) >= 0)
            return !0;
          if (F.indexOf(A) >= 0)
            return !0;
          if (oe.indexOf(A[0]) >= 0)
            try {
              return JSON.parse(A), !0;
            } catch {
              return !1;
            }
          else
            return !1;
        }
      };
      var Ae = {};
      Ae[w] = 0, Ae[j] = 0, Ae[y] = 0, Ae[k] = 0, Ae[S] = 0, Ae[T] = 0, Ae[N] = 0, Ae[z] = 0, Ae[L] = 0, Ae[W] = 0, Ae[ce] = 1, Ae[te] = 2, Ae[we] = 3, Ae[Ee] = 5, Ae[ae] = 5, Ae[re] = 5, Ae[G] = 5, Ae[B] = 5, Ae[ie] = 5, Ae[R] = 9, Ae[O] = 20, Ae[$] = 21, Ae[ne] = 40, Ae[je] = 45, Ae[J] = 50, Ae[H] = 55, Ae[ue] = 60;
      function tt() {
      }
      tt.prototype = {
        parse: function(A) {
          this._loadTokens(A), this.index = 0;
          var D = this.expression(0);
          if (this._lookahead(0) !== w) {
            var F = this._lookaheadToken(0), oe = new Error(
              "Unexpected token type: " + F.type + ", value: " + F.value
            );
            throw oe.name = "ParserError", oe;
          }
          return D;
        },
        _loadTokens: function(A) {
          var D = new Qe(), F = D.tokenize(A);
          F.push({ type: w, value: "", start: A.length }), this.tokens = F;
        },
        expression: function(A) {
          var D = this._lookaheadToken(0);
          this._advance();
          for (var F = this.nud(D), oe = this._lookahead(0); A < Ae[oe]; )
            this._advance(), F = this.led(oe, F), oe = this._lookahead(0);
          return F;
        },
        _lookahead: function(A) {
          return this.tokens[this.index + A].type;
        },
        _lookaheadToken: function(A) {
          return this.tokens[this.index + A];
        },
        _advance: function() {
          this.index++;
        },
        nud: function(A) {
          var D, F, oe;
          switch (A.type) {
            case P:
              return { type: "Literal", value: A.value };
            case j:
              return { type: "Field", name: A.value };
            case y:
              var ve = { type: "Field", name: A.value };
              if (this._lookahead(0) === ue)
                throw new Error("Quoted identifier not allowed for function names.");
              return ve;
            case je:
              return F = this.expression(Ae.Not), { type: "NotExpression", children: [F] };
            case O:
              return D = { type: "Identity" }, F = null, this._lookahead(0) === k ? F = { type: "Identity" } : F = this._parseProjectionRHS(Ae.Star), { type: "ValueProjection", children: [D, F] };
            case $:
              return this.led(A.type, { type: "Identity" });
            case J:
              return this._parseMultiselectHash();
            case R:
              return D = { type: R, children: [{ type: "Identity" }] }, F = this._parseProjectionRHS(Ae.Flatten), { type: "Projection", children: [D, F] };
            case H:
              return this._lookahead(0) === z || this._lookahead(0) === M ? (F = this._parseIndexExpression(), this._projectIfSlice({ type: "Identity" }, F)) : this._lookahead(0) === O && this._lookahead(1) === k ? (this._advance(), this._advance(), F = this._parseProjectionRHS(Ae.Star), {
                type: "Projection",
                children: [{ type: "Identity" }, F]
              }) : this._parseMultiselectList();
            case L:
              return { type: L };
            case W:
              return oe = this.expression(Ae.Expref), { type: "ExpressionReference", children: [oe] };
            case ue:
              for (var Ne = []; this._lookahead(0) !== S; )
                this._lookahead(0) === L ? (oe = { type: L }, this._advance()) : oe = this.expression(0), Ne.push(oe);
              return this._match(S), Ne[0];
            default:
              this._errorToken(A);
          }
        },
        led: function(A, D) {
          var F;
          switch (A) {
            case ne:
              var oe = Ae.Dot;
              return this._lookahead(0) !== O ? (F = this._parseDotRHS(oe), { type: "Subexpression", children: [D, F] }) : (this._advance(), F = this._parseProjectionRHS(oe), { type: "ValueProjection", children: [D, F] });
            case ce:
              return F = this.expression(Ae.Pipe), { type: ce, children: [D, F] };
            case te:
              return F = this.expression(Ae.Or), { type: "OrExpression", children: [D, F] };
            case we:
              return F = this.expression(Ae.And), { type: "AndExpression", children: [D, F] };
            case ue:
              for (var ve = D.name, Ne = [], Fe, ye; this._lookahead(0) !== S; )
                this._lookahead(0) === L ? (Fe = { type: L }, this._advance()) : Fe = this.expression(0), this._lookahead(0) === T && this._match(T), Ne.push(Fe);
              return this._match(S), ye = { type: "Function", name: ve, children: Ne }, ye;
            case $:
              var ge = this.expression(0);
              return this._match(k), this._lookahead(0) === R ? F = { type: "Identity" } : F = this._parseProjectionRHS(Ae.Filter), { type: "FilterProjection", children: [D, F, ge] };
            case R:
              var yt = { type: R, children: [D] }, ot = this._parseProjectionRHS(Ae.Flatten);
              return { type: "Projection", children: [yt, ot] };
            case Ee:
            case ie:
            case ae:
            case G:
            case re:
            case B:
              return this._parseComparator(D, A);
            case H:
              var _e = this._lookaheadToken(0);
              return _e.type === z || _e.type === M ? (F = this._parseIndexExpression(), this._projectIfSlice(D, F)) : (this._match(O), this._match(k), F = this._parseProjectionRHS(Ae.Star), { type: "Projection", children: [D, F] });
            default:
              this._errorToken(this._lookaheadToken(0));
          }
        },
        _match: function(A) {
          if (this._lookahead(0) === A)
            this._advance();
          else {
            var D = this._lookaheadToken(0), F = new Error("Expected " + A + ", got: " + D.type);
            throw F.name = "ParserError", F;
          }
        },
        _errorToken: function(A) {
          var D = new Error("Invalid token (" + A.type + '): "' + A.value + '"');
          throw D.name = "ParserError", D;
        },
        _parseIndexExpression: function() {
          if (this._lookahead(0) === M || this._lookahead(1) === M)
            return this._parseSliceExpression();
          var A = {
            type: "Index",
            value: this._lookaheadToken(0).value
          };
          return this._advance(), this._match(k), A;
        },
        _projectIfSlice: function(A, D) {
          var F = { type: "IndexExpression", children: [A, D] };
          return D.type === "Slice" ? {
            type: "Projection",
            children: [F, this._parseProjectionRHS(Ae.Star)]
          } : F;
        },
        _parseSliceExpression: function() {
          for (var A = [null, null, null], D = 0, F = this._lookahead(0); F !== k && D < 3; ) {
            if (F === M)
              D++, this._advance();
            else if (F === z)
              A[D] = this._lookaheadToken(0).value, this._advance();
            else {
              var oe = this._lookahead(0), ve = new Error("Syntax error, unexpected token: " + oe.value + "(" + oe.type + ")");
              throw ve.name = "Parsererror", ve;
            }
            F = this._lookahead(0);
          }
          return this._match(k), {
            type: "Slice",
            children: A
          };
        },
        _parseComparator: function(A, D) {
          var F = this.expression(Ae[D]);
          return { type: "Comparator", name: D, children: [A, F] };
        },
        _parseDotRHS: function(A) {
          var D = this._lookahead(0), F = [j, y, O];
          if (F.indexOf(D) >= 0)
            return this.expression(A);
          if (D === H)
            return this._match(H), this._parseMultiselectList();
          if (D === J)
            return this._match(J), this._parseMultiselectHash();
        },
        _parseProjectionRHS: function(A) {
          var D;
          if (Ae[this._lookahead(0)] < 10)
            D = { type: "Identity" };
          else if (this._lookahead(0) === H)
            D = this.expression(A);
          else if (this._lookahead(0) === $)
            D = this.expression(A);
          else if (this._lookahead(0) === ne)
            this._match(ne), D = this._parseDotRHS(A);
          else {
            var F = this._lookaheadToken(0), oe = new Error("Sytanx error, unexpected token: " + F.value + "(" + F.type + ")");
            throw oe.name = "ParserError", oe;
          }
          return D;
        },
        _parseMultiselectList: function() {
          for (var A = []; this._lookahead(0) !== k; ) {
            var D = this.expression(0);
            if (A.push(D), this._lookahead(0) === T && (this._match(T), this._lookahead(0) === k))
              throw new Error("Unexpected token Rbracket");
          }
          return this._match(k), { type: "MultiSelectList", children: A };
        },
        _parseMultiselectHash: function() {
          for (var A = [], D = [j, y], F, oe, ve, Ne; ; ) {
            if (F = this._lookaheadToken(0), D.indexOf(F.type) < 0)
              throw new Error("Expecting an identifier token, got: " + F.type);
            if (oe = F.value, this._advance(), this._match(M), ve = this.expression(0), Ne = { type: "KeyValuePair", name: oe, value: ve }, A.push(Ne), this._lookahead(0) === T)
              this._match(T);
            else if (this._lookahead(0) === N) {
              this._match(N);
              break;
            }
          }
          return { type: "MultiSelectHash", children: A };
        }
      };
      function Re(A) {
        this.runtime = A;
      }
      Re.prototype = {
        search: function(A, D) {
          return this.visit(A, D);
        },
        visit: function(A, D) {
          var F, oe, ve, Ne, Fe, ye, ge, yt, ot, _e;
          switch (A.type) {
            case "Field":
              return D !== null && r(D) ? (ye = D[A.name], ye === void 0 ? null : ye) : null;
            case "Subexpression":
              for (ve = this.visit(A.children[0], D), _e = 1; _e < A.children.length; _e++)
                if (ve = this.visit(A.children[1], ve), ve === null)
                  return null;
              return ve;
            case "IndexExpression":
              return ge = this.visit(A.children[0], D), yt = this.visit(A.children[1], ge), yt;
            case "Index":
              if (!n(D))
                return null;
              var xt = A.value;
              return xt < 0 && (xt = D.length + xt), ve = D[xt], ve === void 0 && (ve = null), ve;
            case "Slice":
              if (!n(D))
                return null;
              var bn = A.children.slice(0), qn = this.computeSliceParams(D.length, bn), un = qn[0], en = qn[1], Rn = qn[2];
              if (ve = [], Rn > 0)
                for (_e = un; _e < en; _e += Rn)
                  ve.push(D[_e]);
              else
                for (_e = un; _e > en; _e += Rn)
                  ve.push(D[_e]);
              return ve;
            case "Projection":
              var on = this.visit(A.children[0], D);
              if (!n(on))
                return null;
              for (ot = [], _e = 0; _e < on.length; _e++)
                oe = this.visit(A.children[1], on[_e]), oe !== null && ot.push(oe);
              return ot;
            case "ValueProjection":
              if (on = this.visit(A.children[0], D), !r(on))
                return null;
              ot = [];
              var qt = s(on);
              for (_e = 0; _e < qt.length; _e++)
                oe = this.visit(A.children[1], qt[_e]), oe !== null && ot.push(oe);
              return ot;
            case "FilterProjection":
              if (on = this.visit(A.children[0], D), !n(on))
                return null;
              var Pt = [], an = [];
              for (_e = 0; _e < on.length; _e++)
                F = this.visit(A.children[2], on[_e]), o(F) || Pt.push(on[_e]);
              for (var yn = 0; yn < Pt.length; yn++)
                oe = this.visit(A.children[1], Pt[yn]), oe !== null && an.push(oe);
              return an;
            case "Comparator":
              switch (Ne = this.visit(A.children[0], D), Fe = this.visit(A.children[1], D), A.name) {
                case Ee:
                  ve = i(Ne, Fe);
                  break;
                case ie:
                  ve = !i(Ne, Fe);
                  break;
                case ae:
                  ve = Ne > Fe;
                  break;
                case G:
                  ve = Ne >= Fe;
                  break;
                case re:
                  ve = Ne < Fe;
                  break;
                case B:
                  ve = Ne <= Fe;
                  break;
                default:
                  throw new Error("Unknown comparator: " + A.name);
              }
              return ve;
            case R:
              var Ot = this.visit(A.children[0], D);
              if (!n(Ot))
                return null;
              var Xe = [];
              for (_e = 0; _e < Ot.length; _e++)
                oe = Ot[_e], n(oe) ? Xe.push.apply(Xe, oe) : Xe.push(oe);
              return Xe;
            case "Identity":
              return D;
            case "MultiSelectList":
              if (D === null)
                return null;
              for (ot = [], _e = 0; _e < A.children.length; _e++)
                ot.push(this.visit(A.children[_e], D));
              return ot;
            case "MultiSelectHash":
              if (D === null)
                return null;
              ot = {};
              var tn;
              for (_e = 0; _e < A.children.length; _e++)
                tn = A.children[_e], ot[tn.name] = this.visit(tn.value, D);
              return ot;
            case "OrExpression":
              return F = this.visit(A.children[0], D), o(F) && (F = this.visit(A.children[1], D)), F;
            case "AndExpression":
              return Ne = this.visit(A.children[0], D), o(Ne) === !0 ? Ne : this.visit(A.children[1], D);
            case "NotExpression":
              return Ne = this.visit(A.children[0], D), o(Ne);
            case "Literal":
              return A.value;
            case ce:
              return ge = this.visit(A.children[0], D), this.visit(A.children[1], ge);
            case L:
              return D;
            case "Function":
              var Qt = [];
              for (_e = 0; _e < A.children.length; _e++)
                Qt.push(this.visit(A.children[_e], D));
              return this.runtime.callFunction(A.name, Qt);
            case "ExpressionReference":
              var Hn = A.children[0];
              return Hn.jmespathType = W, Hn;
            default:
              throw new Error("Unknown node type: " + A.type);
          }
        },
        computeSliceParams: function(A, D) {
          var F = D[0], oe = D[1], ve = D[2], Ne = [null, null, null];
          if (ve === null)
            ve = 1;
          else if (ve === 0) {
            var Fe = new Error("Invalid slice, step cannot be 0");
            throw Fe.name = "RuntimeError", Fe;
          }
          var ye = ve < 0;
          return F === null ? F = ye ? A - 1 : 0 : F = this.capSliceRange(A, F, ve), oe === null ? oe = ye ? -1 : A : oe = this.capSliceRange(A, oe, ve), Ne[0] = F, Ne[1] = oe, Ne[2] = ve, Ne;
        },
        capSliceRange: function(A, D, F) {
          return D < 0 ? (D += A, D < 0 && (D = F < 0 ? -1 : 0)) : D >= A && (D = F < 0 ? A - 1 : A), D;
        }
      };
      function qe(A) {
        this._interpreter = A, this.functionTable = {
          // name: [function, <signature>]
          // The <signature> can be:
          //
          // {
          //   args: [[type1, type2], [type1, type2]],
          //   variadic: true|false
          // }
          //
          // Each arg in the arg list is a list of valid types
          // (if the function is overloaded and supports multiple
          // types.  If the type is "any" then no type checking
          // occurs on the argument.  Variadic is optional
          // and if not provided is assumed to be false.
          abs: { _func: this._functionAbs, _signature: [{ types: [l] }] },
          avg: { _func: this._functionAvg, _signature: [{ types: [g] }] },
          ceil: { _func: this._functionCeil, _signature: [{ types: [l] }] },
          contains: {
            _func: this._functionContains,
            _signature: [
              { types: [f, d] },
              { types: [u] }
            ]
          },
          ends_with: {
            _func: this._functionEndsWith,
            _signature: [{ types: [f] }, { types: [f] }]
          },
          floor: { _func: this._functionFloor, _signature: [{ types: [l] }] },
          length: {
            _func: this._functionLength,
            _signature: [{ types: [f, d, h] }]
          },
          map: {
            _func: this._functionMap,
            _signature: [{ types: [m] }, { types: [d] }]
          },
          max: {
            _func: this._functionMax,
            _signature: [{ types: [g, b] }]
          },
          merge: {
            _func: this._functionMerge,
            _signature: [{ types: [h], variadic: !0 }]
          },
          max_by: {
            _func: this._functionMaxBy,
            _signature: [{ types: [d] }, { types: [m] }]
          },
          sum: { _func: this._functionSum, _signature: [{ types: [g] }] },
          starts_with: {
            _func: this._functionStartsWith,
            _signature: [{ types: [f] }, { types: [f] }]
          },
          min: {
            _func: this._functionMin,
            _signature: [{ types: [g, b] }]
          },
          min_by: {
            _func: this._functionMinBy,
            _signature: [{ types: [d] }, { types: [m] }]
          },
          type: { _func: this._functionType, _signature: [{ types: [u] }] },
          keys: { _func: this._functionKeys, _signature: [{ types: [h] }] },
          values: { _func: this._functionValues, _signature: [{ types: [h] }] },
          sort: { _func: this._functionSort, _signature: [{ types: [b, g] }] },
          sort_by: {
            _func: this._functionSortBy,
            _signature: [{ types: [d] }, { types: [m] }]
          },
          join: {
            _func: this._functionJoin,
            _signature: [
              { types: [f] },
              { types: [b] }
            ]
          },
          reverse: {
            _func: this._functionReverse,
            _signature: [{ types: [f, d] }]
          },
          to_array: { _func: this._functionToArray, _signature: [{ types: [u] }] },
          to_string: { _func: this._functionToString, _signature: [{ types: [u] }] },
          to_number: { _func: this._functionToNumber, _signature: [{ types: [u] }] },
          not_null: {
            _func: this._functionNotNull,
            _signature: [{ types: [u], variadic: !0 }]
          }
        };
      }
      qe.prototype = {
        callFunction: function(A, D) {
          var F = this.functionTable[A];
          if (F === void 0)
            throw new Error("Unknown function: " + A + "()");
          return this._validateArgs(A, D, F._signature), F._func.call(this, D);
        },
        _validateArgs: function(A, D, F) {
          var oe;
          if (F[F.length - 1].variadic) {
            if (D.length < F.length)
              throw oe = F.length === 1 ? " argument" : " arguments", new Error("ArgumentError: " + A + "() takes at least" + F.length + oe + " but received " + D.length);
          } else if (D.length !== F.length)
            throw oe = F.length === 1 ? " argument" : " arguments", new Error("ArgumentError: " + A + "() takes " + F.length + oe + " but received " + D.length);
          for (var ve, Ne, Fe, ye = 0; ye < F.length; ye++) {
            Fe = !1, ve = F[ye].types, Ne = this._getTypeName(D[ye]);
            for (var ge = 0; ge < ve.length; ge++)
              if (this._typeMatches(Ne, ve[ge], D[ye])) {
                Fe = !0;
                break;
              }
            if (!Fe) {
              var yt = ve.map(function(ot) {
                return x[ot];
              }).join(",");
              throw new Error("TypeError: " + A + "() expected argument " + (ye + 1) + " to be type " + yt + " but received type " + x[Ne] + " instead.");
            }
          }
        },
        _typeMatches: function(A, D, F) {
          if (D === u)
            return !0;
          if (D === b || D === g || D === d) {
            if (D === d)
              return A === d;
            if (A === d) {
              var oe;
              D === g ? oe = l : D === b && (oe = f);
              for (var ve = 0; ve < F.length; ve++)
                if (!this._typeMatches(
                  this._getTypeName(F[ve]),
                  oe,
                  F[ve]
                ))
                  return !1;
              return !0;
            }
          } else
            return A === D;
        },
        _getTypeName: function(A) {
          switch (Object.prototype.toString.call(A)) {
            case "[object String]":
              return f;
            case "[object Number]":
              return l;
            case "[object Array]":
              return d;
            case "[object Boolean]":
              return p;
            case "[object Null]":
              return v;
            case "[object Object]":
              return A.jmespathType === W ? m : h;
          }
        },
        _functionStartsWith: function(A) {
          return A[0].lastIndexOf(A[1]) === 0;
        },
        _functionEndsWith: function(A) {
          var D = A[0], F = A[1];
          return D.indexOf(F, D.length - F.length) !== -1;
        },
        _functionReverse: function(A) {
          var D = this._getTypeName(A[0]);
          if (D === f) {
            for (var F = A[0], oe = "", ve = F.length - 1; ve >= 0; ve--)
              oe += F[ve];
            return oe;
          } else {
            var Ne = A[0].slice(0);
            return Ne.reverse(), Ne;
          }
        },
        _functionAbs: function(A) {
          return Math.abs(A[0]);
        },
        _functionCeil: function(A) {
          return Math.ceil(A[0]);
        },
        _functionAvg: function(A) {
          for (var D = 0, F = A[0], oe = 0; oe < F.length; oe++)
            D += F[oe];
          return D / F.length;
        },
        _functionContains: function(A) {
          return A[0].indexOf(A[1]) >= 0;
        },
        _functionFloor: function(A) {
          return Math.floor(A[0]);
        },
        _functionLength: function(A) {
          return r(A[0]) ? Object.keys(A[0]).length : A[0].length;
        },
        _functionMap: function(A) {
          for (var D = [], F = this._interpreter, oe = A[0], ve = A[1], Ne = 0; Ne < ve.length; Ne++)
            D.push(F.visit(oe, ve[Ne]));
          return D;
        },
        _functionMerge: function(A) {
          for (var D = {}, F = 0; F < A.length; F++) {
            var oe = A[F];
            for (var ve in oe)
              D[ve] = oe[ve];
          }
          return D;
        },
        _functionMax: function(A) {
          if (A[0].length > 0) {
            var D = this._getTypeName(A[0][0]);
            if (D === l)
              return Math.max.apply(Math, A[0]);
            for (var F = A[0], oe = F[0], ve = 1; ve < F.length; ve++)
              oe.localeCompare(F[ve]) < 0 && (oe = F[ve]);
            return oe;
          } else
            return null;
        },
        _functionMin: function(A) {
          if (A[0].length > 0) {
            var D = this._getTypeName(A[0][0]);
            if (D === l)
              return Math.min.apply(Math, A[0]);
            for (var F = A[0], oe = F[0], ve = 1; ve < F.length; ve++)
              F[ve].localeCompare(oe) < 0 && (oe = F[ve]);
            return oe;
          } else
            return null;
        },
        _functionSum: function(A) {
          for (var D = 0, F = A[0], oe = 0; oe < F.length; oe++)
            D += F[oe];
          return D;
        },
        _functionType: function(A) {
          switch (this._getTypeName(A[0])) {
            case l:
              return "number";
            case f:
              return "string";
            case d:
              return "array";
            case h:
              return "object";
            case p:
              return "boolean";
            case m:
              return "expref";
            case v:
              return "null";
          }
        },
        _functionKeys: function(A) {
          return Object.keys(A[0]);
        },
        _functionValues: function(A) {
          for (var D = A[0], F = Object.keys(D), oe = [], ve = 0; ve < F.length; ve++)
            oe.push(D[F[ve]]);
          return oe;
        },
        _functionJoin: function(A) {
          var D = A[0], F = A[1];
          return F.join(D);
        },
        _functionToArray: function(A) {
          return this._getTypeName(A[0]) === d ? A[0] : [A[0]];
        },
        _functionToString: function(A) {
          return this._getTypeName(A[0]) === f ? A[0] : JSON.stringify(A[0]);
        },
        _functionToNumber: function(A) {
          var D = this._getTypeName(A[0]), F;
          return D === l ? A[0] : D === f && (F = +A[0], !isNaN(F)) ? F : null;
        },
        _functionNotNull: function(A) {
          for (var D = 0; D < A.length; D++)
            if (this._getTypeName(A[D]) !== v)
              return A[D];
          return null;
        },
        _functionSort: function(A) {
          var D = A[0].slice(0);
          return D.sort(), D;
        },
        _functionSortBy: function(A) {
          var D = A[0].slice(0);
          if (D.length === 0)
            return D;
          var F = this._interpreter, oe = A[1], ve = this._getTypeName(
            F.visit(oe, D[0])
          );
          if ([l, f].indexOf(ve) < 0)
            throw new Error("TypeError");
          for (var Ne = this, Fe = [], ye = 0; ye < D.length; ye++)
            Fe.push([ye, D[ye]]);
          Fe.sort(function(yt, ot) {
            var _e = F.visit(oe, yt[1]), xt = F.visit(oe, ot[1]);
            if (Ne._getTypeName(_e) !== ve)
              throw new Error(
                "TypeError: expected " + ve + ", received " + Ne._getTypeName(_e)
              );
            if (Ne._getTypeName(xt) !== ve)
              throw new Error(
                "TypeError: expected " + ve + ", received " + Ne._getTypeName(xt)
              );
            return _e > xt ? 1 : _e < xt ? -1 : yt[0] - ot[0];
          });
          for (var ge = 0; ge < Fe.length; ge++)
            D[ge] = Fe[ge][1];
          return D;
        },
        _functionMaxBy: function(A) {
          for (var D = A[1], F = A[0], oe = this.createKeyFunction(D, [l, f]), ve = -1 / 0, Ne, Fe, ye = 0; ye < F.length; ye++)
            Fe = oe(F[ye]), Fe > ve && (ve = Fe, Ne = F[ye]);
          return Ne;
        },
        _functionMinBy: function(A) {
          for (var D = A[1], F = A[0], oe = this.createKeyFunction(D, [l, f]), ve = 1 / 0, Ne, Fe, ye = 0; ye < F.length; ye++)
            Fe = oe(F[ye]), Fe < ve && (ve = Fe, Ne = F[ye]);
          return Ne;
        },
        createKeyFunction: function(A, D) {
          var F = this, oe = this._interpreter, ve = function(Ne) {
            var Fe = oe.visit(A, Ne);
            if (D.indexOf(F._getTypeName(Fe)) < 0) {
              var ye = "TypeError: expected one of " + D + ", received " + F._getTypeName(Fe);
              throw new Error(ye);
            }
            return Fe;
          };
          return ve;
        }
      };
      function pt(A) {
        var D = new tt(), F = D.parse(A);
        return F;
      }
      function Ge(A) {
        var D = new Qe();
        return D.tokenize(A);
      }
      function $t(A, D) {
        var F = new tt(), oe = new qe(), ve = new Re(oe);
        oe._interpreter = ve;
        var Ne = F.parse(D);
        return ve.search(Ne, A);
      }
      e.tokenize = Ge, e.compile = pt, e.search = $t, e.strictDeepEqual = i;
    })(t);
  })(tv)), tv;
}
h9();
class p9 {
  /**
   * @callback HookCallback
   * @this {*|Jsep} this
   * @param {Jsep} env
   * @returns: void
   */
  /**
   * Adds the given callback to the list of callbacks for the given hook.
   *
   * The callback will be invoked when the hook it is registered for is run.
   *
   * One callback function can be registered to multiple hooks and the same hook multiple times.
   *
   * @param {string|object} name The name of the hook, or an object of callbacks keyed by name
   * @param {HookCallback|boolean} callback The callback function which is given environment variables.
   * @param {?boolean} [first=false] Will add the hook to the top of the list (defaults to the bottom)
   * @public
   */
  add(e, n, r) {
    if (typeof arguments[0] != "string")
      for (let i in arguments[0])
        this.add(i, arguments[0][i], arguments[1]);
    else
      (Array.isArray(e) ? e : [e]).forEach(function(i) {
        this[i] = this[i] || [], n && this[i][r ? "unshift" : "push"](n);
      }, this);
  }
  /**
   * Runs a hook invoking all registered callbacks with the given environment variables.
   *
   * Callbacks will be invoked synchronously and in the order in which they were registered.
   *
   * @param {string} name The name of the hook.
   * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.
   * @public
   */
  run(e, n) {
    this[e] = this[e] || [], this[e].forEach(function(r) {
      r.call(n && n.context ? n.context : n, n);
    });
  }
}
class m9 {
  constructor(e) {
    this.jsep = e, this.registered = {};
  }
  /**
   * @callback PluginSetup
   * @this {Jsep} jsep
   * @returns: void
   */
  /**
   * Adds the given plugin(s) to the registry
   *
   * @param {object} plugins
   * @param {string} plugins.name The name of the plugin
   * @param {PluginSetup} plugins.init The init function
   * @public
   */
  register() {
    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++)
      n[r] = arguments[r];
    n.forEach((i) => {
      if (typeof i != "object" || !i.name || !i.init)
        throw new Error("Invalid JSEP plugin format");
      this.registered[i.name] || (i.init(this.jsep), this.registered[i.name] = i);
    });
  }
}
class Se {
  /**
   * @returns {string}
   */
  static get version() {
    return "1.4.0";
  }
  /**
   * @returns {string}
   */
  static toString() {
    return "JavaScript Expression Parser (JSEP) v" + Se.version;
  }
  // ==================== CONFIG ================================
  /**
   * @method addUnaryOp
   * @param {string} op_name The name of the unary op to add
   * @returns {Jsep}
   */
  static addUnaryOp(e) {
    return Se.max_unop_len = Math.max(e.length, Se.max_unop_len), Se.unary_ops[e] = 1, Se;
  }
  /**
   * @method jsep.addBinaryOp
   * @param {string} op_name The name of the binary op to add
   * @param {number} precedence The precedence of the binary op (can be a float). Higher number = higher precedence
   * @param {boolean} [isRightAssociative=false] whether operator is right-associative
   * @returns {Jsep}
   */
  static addBinaryOp(e, n, r) {
    return Se.max_binop_len = Math.max(e.length, Se.max_binop_len), Se.binary_ops[e] = n, r ? Se.right_associative.add(e) : Se.right_associative.delete(e), Se;
  }
  /**
   * @method addIdentifierChar
   * @param {string} char The additional character to treat as a valid part of an identifier
   * @returns {Jsep}
   */
  static addIdentifierChar(e) {
    return Se.additional_identifier_chars.add(e), Se;
  }
  /**
   * @method addLiteral
   * @param {string} literal_name The name of the literal to add
   * @param {*} literal_value The value of the literal
   * @returns {Jsep}
   */
  static addLiteral(e, n) {
    return Se.literals[e] = n, Se;
  }
  /**
   * @method removeUnaryOp
   * @param {string} op_name The name of the unary op to remove
   * @returns {Jsep}
   */
  static removeUnaryOp(e) {
    return delete Se.unary_ops[e], e.length === Se.max_unop_len && (Se.max_unop_len = Se.getMaxKeyLen(Se.unary_ops)), Se;
  }
  /**
   * @method removeAllUnaryOps
   * @returns {Jsep}
   */
  static removeAllUnaryOps() {
    return Se.unary_ops = {}, Se.max_unop_len = 0, Se;
  }
  /**
   * @method removeIdentifierChar
   * @param {string} char The additional character to stop treating as a valid part of an identifier
   * @returns {Jsep}
   */
  static removeIdentifierChar(e) {
    return Se.additional_identifier_chars.delete(e), Se;
  }
  /**
   * @method removeBinaryOp
   * @param {string} op_name The name of the binary op to remove
   * @returns {Jsep}
   */
  static removeBinaryOp(e) {
    return delete Se.binary_ops[e], e.length === Se.max_binop_len && (Se.max_binop_len = Se.getMaxKeyLen(Se.binary_ops)), Se.right_associative.delete(e), Se;
  }
  /**
   * @method removeAllBinaryOps
   * @returns {Jsep}
   */
  static removeAllBinaryOps() {
    return Se.binary_ops = {}, Se.max_binop_len = 0, Se;
  }
  /**
   * @method removeLiteral
   * @param {string} literal_name The name of the literal to remove
   * @returns {Jsep}
   */
  static removeLiteral(e) {
    return delete Se.literals[e], Se;
  }
  /**
   * @method removeAllLiterals
   * @returns {Jsep}
   */
  static removeAllLiterals() {
    return Se.literals = {}, Se;
  }
  // ==================== END CONFIG ============================
  /**
   * @returns {string}
   */
  get char() {
    return this.expr.charAt(this.index);
  }
  /**
   * @returns {number}
   */
  get code() {
    return this.expr.charCodeAt(this.index);
  }
  /**
   * @param {string} expr a string with the passed in express
   * @returns Jsep
   */
  constructor(e) {
    this.expr = e, this.index = 0;
  }
  /**
   * static top-level parser
   * @returns {jsep.Expression}
   */
  static parse(e) {
    return new Se(e).parse();
  }
  /**
   * Get the longest key length of any object
   * @param {object} obj
   * @returns {number}
   */
  static getMaxKeyLen(e) {
    return Math.max(0, ...Object.keys(e).map((n) => n.length));
  }
  /**
   * `ch` is a character code in the next three functions
   * @param {number} ch
   * @returns {boolean}
   */
  static isDecimalDigit(e) {
    return e >= 48 && e <= 57;
  }
  /**
   * Returns the precedence of a binary operator or `0` if it isn't a binary operator. Can be float.
   * @param {string} op_val
   * @returns {number}
   */
  static binaryPrecedence(e) {
    return Se.binary_ops[e] || 0;
  }
  /**
   * Looks for start of identifier
   * @param {number} ch
   * @returns {boolean}
   */
  static isIdentifierStart(e) {
    return e >= 65 && e <= 90 || // A...Z
    e >= 97 && e <= 122 || // a...z
    e >= 128 && !Se.binary_ops[String.fromCharCode(e)] || // any non-ASCII that is not an operator
    Se.additional_identifier_chars.has(String.fromCharCode(e));
  }
  /**
   * @param {number} ch
   * @returns {boolean}
   */
  static isIdentifierPart(e) {
    return Se.isIdentifierStart(e) || Se.isDecimalDigit(e);
  }
  /**
   * throw error at index of the expression
   * @param {string} message
   * @throws
   */
  throwError(e) {
    const n = new Error(e + " at character " + this.index);
    throw n.index = this.index, n.description = e, n;
  }
  /**
   * Run a given hook
   * @param {string} name
   * @param {jsep.Expression|false} [node]
   * @returns {?jsep.Expression}
   */
  runHook(e, n) {
    if (Se.hooks[e]) {
      const r = {
        context: this,
        node: n
      };
      return Se.hooks.run(e, r), r.node;
    }
    return n;
  }
  /**
   * Runs a given hook until one returns a node
   * @param {string} name
   * @returns {?jsep.Expression}
   */
  searchHook(e) {
    if (Se.hooks[e]) {
      const n = {
        context: this
      };
      return Se.hooks[e].find(function(r) {
        return r.call(n.context, n), n.node;
      }), n.node;
    }
  }
  /**
   * Push `index` up to the next non-space character
   */
  gobbleSpaces() {
    let e = this.code;
    for (; e === Se.SPACE_CODE || e === Se.TAB_CODE || e === Se.LF_CODE || e === Se.CR_CODE; )
      e = this.expr.charCodeAt(++this.index);
    this.runHook("gobble-spaces");
  }
  /**
   * Top-level method to parse all expressions and returns compound or single node
   * @returns {jsep.Expression}
   */
  parse() {
    this.runHook("before-all");
    const e = this.gobbleExpressions(), n = e.length === 1 ? e[0] : {
      type: Se.COMPOUND,
      body: e
    };
    return this.runHook("after-all", n);
  }
  /**
   * top-level parser (but can be reused within as well)
   * @param {number} [untilICode]
   * @returns {jsep.Expression[]}
   */
  gobbleExpressions(e) {
    let n = [], r, i;
    for (; this.index < this.expr.length; )
      if (r = this.code, r === Se.SEMCOL_CODE || r === Se.COMMA_CODE)
        this.index++;
      else if (i = this.gobbleExpression())
        n.push(i);
      else if (this.index < this.expr.length) {
        if (r === e)
          break;
        this.throwError('Unexpected "' + this.char + '"');
      }
    return n;
  }
  /**
   * The main parsing function.
   * @returns {?jsep.Expression}
   */
  gobbleExpression() {
    const e = this.searchHook("gobble-expression") || this.gobbleBinaryExpression();
    return this.gobbleSpaces(), this.runHook("after-expression", e);
  }
  /**
   * Search for the operation portion of the string (e.g. `+`, `===`)
   * Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)
   * and move down from 3 to 2 to 1 character until a matching binary operation is found
   * then, return that binary operation
   * @returns {string|boolean}
   */
  gobbleBinaryOp() {
    this.gobbleSpaces();
    let e = this.expr.substr(this.index, Se.max_binop_len), n = e.length;
    for (; n > 0; ) {
      if (Se.binary_ops.hasOwnProperty(e) && (!Se.isIdentifierStart(this.code) || this.index + e.length < this.expr.length && !Se.isIdentifierPart(this.expr.charCodeAt(this.index + e.length))))
        return this.index += n, e;
      e = e.substr(0, --n);
    }
    return !1;
  }
  /**
   * This function is responsible for gobbling an individual expression,
   * e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`
   * @returns {?jsep.BinaryExpression}
   */
  gobbleBinaryExpression() {
    let e, n, r, i, o, s, a, l, u;
    if (s = this.gobbleToken(), !s || (n = this.gobbleBinaryOp(), !n))
      return s;
    for (o = {
      value: n,
      prec: Se.binaryPrecedence(n),
      right_a: Se.right_associative.has(n)
    }, a = this.gobbleToken(), a || this.throwError("Expected expression after " + n), i = [s, o, a]; n = this.gobbleBinaryOp(); ) {
      if (r = Se.binaryPrecedence(n), r === 0) {
        this.index -= n.length;
        break;
      }
      o = {
        value: n,
        prec: r,
        right_a: Se.right_associative.has(n)
      }, u = n;
      const f = (d) => o.right_a && d.right_a ? r > d.prec : r <= d.prec;
      for (; i.length > 2 && f(i[i.length - 2]); )
        a = i.pop(), n = i.pop().value, s = i.pop(), e = {
          type: Se.BINARY_EXP,
          operator: n,
          left: s,
          right: a
        }, i.push(e);
      e = this.gobbleToken(), e || this.throwError("Expected expression after " + u), i.push(o, e);
    }
    for (l = i.length - 1, e = i[l]; l > 1; )
      e = {
        type: Se.BINARY_EXP,
        operator: i[l - 1].value,
        left: i[l - 2],
        right: e
      }, l -= 2;
    return e;
  }
  /**
   * An individual part of a binary expression:
   * e.g. `foo.bar(baz)`, `1`, `"abc"`, `(a % 2)` (because it's in parenthesis)
   * @returns {boolean|jsep.Expression}
   */
  gobbleToken() {
    let e, n, r, i;
    if (this.gobbleSpaces(), i = this.searchHook("gobble-token"), i)
      return this.runHook("after-token", i);
    if (e = this.code, Se.isDecimalDigit(e) || e === Se.PERIOD_CODE)
      return this.gobbleNumericLiteral();
    if (e === Se.SQUOTE_CODE || e === Se.DQUOTE_CODE)
      i = this.gobbleStringLiteral();
    else if (e === Se.OBRACK_CODE)
      i = this.gobbleArray();
    else {
      for (n = this.expr.substr(this.index, Se.max_unop_len), r = n.length; r > 0; ) {
        if (Se.unary_ops.hasOwnProperty(n) && (!Se.isIdentifierStart(this.code) || this.index + n.length < this.expr.length && !Se.isIdentifierPart(this.expr.charCodeAt(this.index + n.length)))) {
          this.index += r;
          const o = this.gobbleToken();
          return o || this.throwError("missing unaryOp argument"), this.runHook("after-token", {
            type: Se.UNARY_EXP,
            operator: n,
            argument: o,
            prefix: !0
          });
        }
        n = n.substr(0, --r);
      }
      Se.isIdentifierStart(e) ? (i = this.gobbleIdentifier(), Se.literals.hasOwnProperty(i.name) ? i = {
        type: Se.LITERAL,
        value: Se.literals[i.name],
        raw: i.name
      } : i.name === Se.this_str && (i = {
        type: Se.THIS_EXP
      })) : e === Se.OPAREN_CODE && (i = this.gobbleGroup());
    }
    return i ? (i = this.gobbleTokenProperty(i), this.runHook("after-token", i)) : this.runHook("after-token", !1);
  }
  /**
   * Gobble properties of of identifiers/strings/arrays/groups.
   * e.g. `foo`, `bar.baz`, `foo['bar'].baz`
   * It also gobbles function calls:
   * e.g. `Math.acos(obj.angle)`
   * @param {jsep.Expression} node
   * @returns {jsep.Expression}
   */
  gobbleTokenProperty(e) {
    this.gobbleSpaces();
    let n = this.code;
    for (; n === Se.PERIOD_CODE || n === Se.OBRACK_CODE || n === Se.OPAREN_CODE || n === Se.QUMARK_CODE; ) {
      let r;
      if (n === Se.QUMARK_CODE) {
        if (this.expr.charCodeAt(this.index + 1) !== Se.PERIOD_CODE)
          break;
        r = !0, this.index += 2, this.gobbleSpaces(), n = this.code;
      }
      this.index++, n === Se.OBRACK_CODE ? (e = {
        type: Se.MEMBER_EXP,
        computed: !0,
        object: e,
        property: this.gobbleExpression()
      }, e.property || this.throwError('Unexpected "' + this.char + '"'), this.gobbleSpaces(), n = this.code, n !== Se.CBRACK_CODE && this.throwError("Unclosed ["), this.index++) : n === Se.OPAREN_CODE ? e = {
        type: Se.CALL_EXP,
        arguments: this.gobbleArguments(Se.CPAREN_CODE),
        callee: e
      } : (n === Se.PERIOD_CODE || r) && (r && this.index--, this.gobbleSpaces(), e = {
        type: Se.MEMBER_EXP,
        computed: !1,
        object: e,
        property: this.gobbleIdentifier()
      }), r && (e.optional = !0), this.gobbleSpaces(), n = this.code;
    }
    return e;
  }
  /**
   * Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to
   * keep track of everything in the numeric literal and then calling `parseFloat` on that string
   * @returns {jsep.Literal}
   */
  gobbleNumericLiteral() {
    let e = "", n, r;
    for (; Se.isDecimalDigit(this.code); )
      e += this.expr.charAt(this.index++);
    if (this.code === Se.PERIOD_CODE)
      for (e += this.expr.charAt(this.index++); Se.isDecimalDigit(this.code); )
        e += this.expr.charAt(this.index++);
    if (n = this.char, n === "e" || n === "E") {
      for (e += this.expr.charAt(this.index++), n = this.char, (n === "+" || n === "-") && (e += this.expr.charAt(this.index++)); Se.isDecimalDigit(this.code); )
        e += this.expr.charAt(this.index++);
      Se.isDecimalDigit(this.expr.charCodeAt(this.index - 1)) || this.throwError("Expected exponent (" + e + this.char + ")");
    }
    return r = this.code, Se.isIdentifierStart(r) ? this.throwError("Variable names cannot start with a number (" + e + this.char + ")") : (r === Se.PERIOD_CODE || e.length === 1 && e.charCodeAt(0) === Se.PERIOD_CODE) && this.throwError("Unexpected period"), {
      type: Se.LITERAL,
      value: parseFloat(e),
      raw: e
    };
  }
  /**
   * Parses a string literal, staring with single or double quotes with basic support for escape codes
   * e.g. `"hello world"`, `'this is\nJSEP'`
   * @returns {jsep.Literal}
   */
  gobbleStringLiteral() {
    let e = "";
    const n = this.index, r = this.expr.charAt(this.index++);
    let i = !1;
    for (; this.index < this.expr.length; ) {
      let o = this.expr.charAt(this.index++);
      if (o === r) {
        i = !0;
        break;
      } else if (o === "\\")
        switch (o = this.expr.charAt(this.index++), o) {
          case "n":
            e += `
`;
            break;
          case "r":
            e += "\r";
            break;
          case "t":
            e += "	";
            break;
          case "b":
            e += "\b";
            break;
          case "f":
            e += "\f";
            break;
          case "v":
            e += "\v";
            break;
          default:
            e += o;
        }
      else
        e += o;
    }
    return i || this.throwError('Unclosed quote after "' + e + '"'), {
      type: Se.LITERAL,
      value: e,
      raw: this.expr.substring(n, this.index)
    };
  }
  /**
   * Gobbles only identifiers
   * e.g.: `foo`, `_value`, `$x1`
   * Also, this function checks if that identifier is a literal:
   * (e.g. `true`, `false`, `null`) or `this`
   * @returns {jsep.Identifier}
   */
  gobbleIdentifier() {
    let e = this.code, n = this.index;
    for (Se.isIdentifierStart(e) ? this.index++ : this.throwError("Unexpected " + this.char); this.index < this.expr.length && (e = this.code, Se.isIdentifierPart(e)); )
      this.index++;
    return {
      type: Se.IDENTIFIER,
      name: this.expr.slice(n, this.index)
    };
  }
  /**
   * Gobbles a list of arguments within the context of a function call
   * or array literal. This function also assumes that the opening character
   * `(` or `[` has already been gobbled, and gobbles expressions and commas
   * until the terminator character `)` or `]` is encountered.
   * e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`
   * @param {number} termination
   * @returns {jsep.Expression[]}
   */
  gobbleArguments(e) {
    const n = [];
    let r = !1, i = 0;
    for (; this.index < this.expr.length; ) {
      this.gobbleSpaces();
      let o = this.code;
      if (o === e) {
        r = !0, this.index++, e === Se.CPAREN_CODE && i && i >= n.length && this.throwError("Unexpected token " + String.fromCharCode(e));
        break;
      } else if (o === Se.COMMA_CODE) {
        if (this.index++, i++, i !== n.length) {
          if (e === Se.CPAREN_CODE)
            this.throwError("Unexpected token ,");
          else if (e === Se.CBRACK_CODE)
            for (let s = n.length; s < i; s++)
              n.push(null);
        }
      } else if (n.length !== i && i !== 0)
        this.throwError("Expected comma");
      else {
        const s = this.gobbleExpression();
        (!s || s.type === Se.COMPOUND) && this.throwError("Expected comma"), n.push(s);
      }
    }
    return r || this.throwError("Expected " + String.fromCharCode(e)), n;
  }
  /**
   * Responsible for parsing a group of things within parentheses `()`
   * that have no identifier in front (so not a function call)
   * This function assumes that it needs to gobble the opening parenthesis
   * and then tries to gobble everything within that parenthesis, assuming
   * that the next thing it should see is the close parenthesis. If not,
   * then the expression probably doesn't have a `)`
   * @returns {boolean|jsep.Expression}
   */
  gobbleGroup() {
    this.index++;
    let e = this.gobbleExpressions(Se.CPAREN_CODE);
    if (this.code === Se.CPAREN_CODE)
      return this.index++, e.length === 1 ? e[0] : e.length ? {
        type: Se.SEQUENCE_EXP,
        expressions: e
      } : !1;
    this.throwError("Unclosed (");
  }
  /**
   * Responsible for parsing Array literals `[1, 2, 3]`
   * This function assumes that it needs to gobble the opening bracket
   * and then tries to gobble the expressions as arguments.
   * @returns {jsep.ArrayExpression}
   */
  gobbleArray() {
    return this.index++, {
      type: Se.ARRAY_EXP,
      elements: this.gobbleArguments(Se.CBRACK_CODE)
    };
  }
}
const g9 = new p9();
Object.assign(Se, {
  hooks: g9,
  plugins: new m9(Se),
  // Node Types
  // ----------
  // This is the full set of types that any JSEP node can be.
  // Store them here to save space when minified
  COMPOUND: "Compound",
  SEQUENCE_EXP: "SequenceExpression",
  IDENTIFIER: "Identifier",
  MEMBER_EXP: "MemberExpression",
  LITERAL: "Literal",
  THIS_EXP: "ThisExpression",
  CALL_EXP: "CallExpression",
  UNARY_EXP: "UnaryExpression",
  BINARY_EXP: "BinaryExpression",
  ARRAY_EXP: "ArrayExpression",
  TAB_CODE: 9,
  LF_CODE: 10,
  CR_CODE: 13,
  SPACE_CODE: 32,
  PERIOD_CODE: 46,
  // '.'
  COMMA_CODE: 44,
  // ','
  SQUOTE_CODE: 39,
  // single quote
  DQUOTE_CODE: 34,
  // double quotes
  OPAREN_CODE: 40,
  // (
  CPAREN_CODE: 41,
  // )
  OBRACK_CODE: 91,
  // [
  CBRACK_CODE: 93,
  // ]
  QUMARK_CODE: 63,
  // ?
  SEMCOL_CODE: 59,
  // ;
  COLON_CODE: 58,
  // :
  // Operations
  // ----------
  // Use a quickly-accessible map to store all of the unary operators
  // Values are set to `1` (it really doesn't matter)
  unary_ops: {
    "-": 1,
    "!": 1,
    "~": 1,
    "+": 1
  },
  // Also use a map for the binary operations but set their values to their
  // binary precedence for quick reference (higher number = higher precedence)
  // see [Order of operations](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)
  binary_ops: {
    "||": 1,
    "??": 1,
    "&&": 2,
    "|": 3,
    "^": 4,
    "&": 5,
    "==": 6,
    "!=": 6,
    "===": 6,
    "!==": 6,
    "<": 7,
    ">": 7,
    "<=": 7,
    ">=": 7,
    "<<": 8,
    ">>": 8,
    ">>>": 8,
    "+": 9,
    "-": 9,
    "*": 10,
    "/": 10,
    "%": 10,
    "**": 11
  },
  // sets specific binary_ops as right-associative
  right_associative: /* @__PURE__ */ new Set(["**"]),
  // Additional valid identifier chars, apart from a-z, A-Z and 0-9 (except on the starting char)
  additional_identifier_chars: /* @__PURE__ */ new Set(["$", "_"]),
  // Literals
  // ----------
  // Store the values to return for the various literals we may encounter
  literals: {
    true: !0,
    false: !1,
    null: null
  },
  // Except for `this`, which is special. This could be changed to something like `'self'` as well
  this_str: "this"
});
Se.max_unop_len = Se.getMaxKeyLen(Se.unary_ops);
Se.max_binop_len = Se.getMaxKeyLen(Se.binary_ops);
const Za = (t) => new Se(t).parse(), v9 = Object.getOwnPropertyNames(class {
});
Object.getOwnPropertyNames(Se).filter((t) => !v9.includes(t) && Za[t] === void 0).forEach((t) => {
  Za[t] = Se[t];
});
Za.Jsep = Se;
const b9 = "ConditionalExpression";
var y9 = {
  name: "ternary",
  init(t) {
    t.hooks.add("after-expression", function(n) {
      if (n.node && this.code === t.QUMARK_CODE) {
        this.index++;
        const r = n.node, i = this.gobbleExpression();
        if (i || this.throwError("Expected expression"), this.gobbleSpaces(), this.code === t.COLON_CODE) {
          this.index++;
          const o = this.gobbleExpression();
          if (o || this.throwError("Expected expression"), n.node = {
            type: b9,
            test: r,
            consequent: i,
            alternate: o
          }, r.operator && t.binary_ops[r.operator] <= 0.9) {
            let s = r;
            for (; s.right.operator && t.binary_ops[s.right.operator] <= 0.9; )
              s = s.right;
            n.node.test = s.right, s.right = n.node, n.node = r;
          }
        } else
          this.throwError("Expected :");
      }
    });
  }
};
Za.plugins.register(y9);
const nj = 47, x9 = 92;
var w9 = {
  name: "regex",
  init(t) {
    t.hooks.add("gobble-token", function(n) {
      if (this.code === nj) {
        const r = ++this.index;
        let i = !1;
        for (; this.index < this.expr.length; ) {
          if (this.code === nj && !i) {
            const o = this.expr.slice(r, this.index);
            let s = "";
            for (; ++this.index < this.expr.length; ) {
              const l = this.code;
              if (l >= 97 && l <= 122 || l >= 65 && l <= 90 || l >= 48 && l <= 57)
                s += this.char;
              else
                break;
            }
            let a;
            try {
              a = new RegExp(o, s);
            } catch (l) {
              this.throwError(l.message);
            }
            return n.node = {
              type: t.LITERAL,
              value: a,
              raw: this.expr.slice(r - 1, this.index)
            }, n.node = this.gobbleTokenProperty(n.node), n.node;
          }
          this.code === t.OBRACK_CODE ? i = !0 : i && this.code === t.CBRACK_CODE && (i = !1), this.index += this.code === x9 ? 2 : 1;
        }
        this.throwError("Unclosed Regex");
      }
    });
  }
};
const nv = 43, j9 = 45, Ec = {
  name: "assignment",
  assignmentOperators: /* @__PURE__ */ new Set(["=", "*=", "**=", "/=", "%=", "+=", "-=", "<<=", ">>=", ">>>=", "&=", "^=", "|=", "||=", "&&=", "??="]),
  updateOperators: [nv, j9],
  assignmentPrecedence: 0.9,
  init(t) {
    const e = [t.IDENTIFIER, t.MEMBER_EXP];
    Ec.assignmentOperators.forEach((r) => t.addBinaryOp(r, Ec.assignmentPrecedence, !0)), t.hooks.add("gobble-token", function(i) {
      const o = this.code;
      Ec.updateOperators.some((s) => s === o && s === this.expr.charCodeAt(this.index + 1)) && (this.index += 2, i.node = {
        type: "UpdateExpression",
        operator: o === nv ? "++" : "--",
        argument: this.gobbleTokenProperty(this.gobbleIdentifier()),
        prefix: !0
      }, (!i.node.argument || !e.includes(i.node.argument.type)) && this.throwError(`Unexpected ${i.node.operator}`));
    }), t.hooks.add("after-token", function(i) {
      if (i.node) {
        const o = this.code;
        Ec.updateOperators.some((s) => s === o && s === this.expr.charCodeAt(this.index + 1)) && (e.includes(i.node.type) || this.throwError(`Unexpected ${i.node.operator}`), this.index += 2, i.node = {
          type: "UpdateExpression",
          operator: o === nv ? "++" : "--",
          argument: i.node,
          prefix: !1
        });
      }
    }), t.hooks.add("after-expression", function(i) {
      i.node && n(i.node);
    });
    function n(r) {
      Ec.assignmentOperators.has(r.operator) ? (r.type = "AssignmentExpression", n(r.left), n(r.right)) : r.operator || Object.values(r).forEach((i) => {
        i && typeof i == "object" && n(i);
      });
    }
  }
};
Za.plugins.register(w9, Ec);
Za.addUnaryOp("typeof");
Za.addLiteral("null", null);
Za.addLiteral("undefined", void 0);
let v0 = [], iO = [];
(() => {
  let t = "lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o".split(",").map((e) => e ? parseInt(e, 36) : 1);
  for (let e = 0, n = 0; e < t.length; e++)
    (e % 2 ? iO : v0).push(n = n + t[e]);
})();
function k9(t) {
  if (t < 768) return !1;
  for (let e = 0, n = v0.length; ; ) {
    let r = e + n >> 1;
    if (t < v0[r]) n = r;
    else if (t >= iO[r]) e = r + 1;
    else return !0;
    if (e == n) return !1;
  }
}
function rj(t) {
  return t >= 127462 && t <= 127487;
}
const ij = 8205;
function S9(t, e, n = !0, r = !0) {
  return (n ? oO : C9)(t, e, r);
}
function oO(t, e, n) {
  if (e == t.length) return e;
  e && sO(t.charCodeAt(e)) && aO(t.charCodeAt(e - 1)) && e--;
  let r = rv(t, e);
  for (e += oj(r); e < t.length; ) {
    let i = rv(t, e);
    if (r == ij || i == ij || n && k9(i))
      e += oj(i), r = i;
    else if (rj(i)) {
      let o = 0, s = e - 2;
      for (; s >= 0 && rj(rv(t, s)); )
        o++, s -= 2;
      if (o % 2 == 0) break;
      e += 2;
    } else
      break;
  }
  return e;
}
function C9(t, e, n) {
  for (; e > 0; ) {
    let r = oO(t, e - 2, n);
    if (r < e) return r;
    e--;
  }
  return 0;
}
function rv(t, e) {
  let n = t.charCodeAt(e);
  if (!aO(n) || e + 1 == t.length) return n;
  let r = t.charCodeAt(e + 1);
  return sO(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function sO(t) {
  return t >= 56320 && t < 57344;
}
function aO(t) {
  return t >= 55296 && t < 56320;
}
function oj(t) {
  return t < 65536 ? 1 : 2;
}
let rr = class lO {
  /**
  Get the line description around the given position.
  */
  lineAt(e) {
    if (e < 0 || e > this.length)
      throw new RangeError(`Invalid position ${e} in document of length ${this.length}`);
    return this.lineInner(e, !1, 1, 0);
  }
  /**
  Get the description for the given (1-based) line number.
  */
  line(e) {
    if (e < 1 || e > this.lines)
      throw new RangeError(`Invalid line number ${e} in ${this.lines}-line document`);
    return this.lineInner(e, !0, 1, 0);
  }
  /**
  Replace a range of the text with the given content.
  */
  replace(e, n, r) {
    [e, n] = ru(this, e, n);
    let i = [];
    return this.decompose(
      0,
      e,
      i,
      2
      /* Open.To */
    ), r.length && r.decompose(
      0,
      r.length,
      i,
      3
      /* Open.To */
    ), this.decompose(
      n,
      this.length,
      i,
      1
      /* Open.From */
    ), xs.from(i, this.length - (n - e) + r.length);
  }
  /**
  Append another document to this one.
  */
  append(e) {
    return this.replace(this.length, this.length, e);
  }
  /**
  Retrieve the text between the given points.
  */
  slice(e, n = this.length) {
    [e, n] = ru(this, e, n);
    let r = [];
    return this.decompose(e, n, r, 0), xs.from(r, n - e);
  }
  /**
  Test whether this text is equal to another instance.
  */
  eq(e) {
    if (e == this)
      return !0;
    if (e.length != this.length || e.lines != this.lines)
      return !1;
    let n = this.scanIdentical(e, 1), r = this.length - this.scanIdentical(e, -1), i = new ff(this), o = new ff(e);
    for (let s = n, a = n; ; ) {
      if (i.next(s), o.next(s), s = 0, i.lineBreak != o.lineBreak || i.done != o.done || i.value != o.value)
        return !1;
      if (a += i.value.length, i.done || a >= r)
        return !0;
    }
  }
  /**
  Iterate over the text. When `dir` is `-1`, iteration happens
  from end to start. This will return lines and the breaks between
  them as separate strings.
  */
  iter(e = 1) {
    return new ff(this, e);
  }
  /**
  Iterate over a range of the text. When `from` > `to`, the
  iterator will run in reverse.
  */
  iterRange(e, n = this.length) {
    return new cO(this, e, n);
  }
  /**
  Return a cursor that iterates over the given range of lines,
  _without_ returning the line breaks between, and yielding empty
  strings for empty lines.
  
  When `from` and `to` are given, they should be 1-based line numbers.
  */
  iterLines(e, n) {
    let r;
    if (e == null)
      r = this.iter();
    else {
      n == null && (n = this.lines + 1);
      let i = this.line(e).from;
      r = this.iterRange(i, Math.max(i, n == this.lines + 1 ? this.length : n <= 1 ? 0 : this.line(n - 1).to));
    }
    return new uO(r);
  }
  /**
  Return the document as a string, using newline characters to
  separate lines.
  */
  toString() {
    return this.sliceString(0);
  }
  /**
  Convert the document to an array of lines (which can be
  deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).
  */
  toJSON() {
    let e = [];
    return this.flatten(e), e;
  }
  /**
  @internal
  */
  constructor() {
  }
  /**
  Create a `Text` instance for the given array of lines.
  */
  static of(e) {
    if (e.length == 0)
      throw new RangeError("A document must have at least one line");
    return e.length == 1 && !e[0] ? lO.empty : e.length <= 32 ? new ni(e) : xs.from(ni.split(e, []));
  }
};
class ni extends rr {
  constructor(e, n = O9(e)) {
    super(), this.text = e, this.length = n;
  }
  get lines() {
    return this.text.length;
  }
  get children() {
    return null;
  }
  lineInner(e, n, r, i) {
    for (let o = 0; ; o++) {
      let s = this.text[o], a = i + s.length;
      if ((n ? r : a) >= e)
        return new E9(i, a, r, s);
      i = a + 1, r++;
    }
  }
  decompose(e, n, r, i) {
    let o = e <= 0 && n >= this.length ? this : new ni(sj(this.text, e, n), Math.min(n, this.length) - Math.max(0, e));
    if (i & 1) {
      let s = r.pop(), a = up(o.text, s.text.slice(), 0, o.length);
      if (a.length <= 32)
        r.push(new ni(a, s.length + o.length));
      else {
        let l = a.length >> 1;
        r.push(new ni(a.slice(0, l)), new ni(a.slice(l)));
      }
    } else
      r.push(o);
  }
  replace(e, n, r) {
    if (!(r instanceof ni))
      return super.replace(e, n, r);
    [e, n] = ru(this, e, n);
    let i = up(this.text, up(r.text, sj(this.text, 0, e)), n), o = this.length + r.length - (n - e);
    return i.length <= 32 ? new ni(i, o) : xs.from(ni.split(i, []), o);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ru(this, e, n);
    let i = "";
    for (let o = 0, s = 0; o <= n && s < this.text.length; s++) {
      let a = this.text[s], l = o + a.length;
      o > e && s && (i += r), e < l && n > o && (i += a.slice(Math.max(0, e - o), n - o)), o = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let n of this.text)
      e.push(n);
  }
  scanIdentical() {
    return 0;
  }
  static split(e, n) {
    let r = [], i = -1;
    for (let o of e)
      r.push(o), i += o.length + 1, r.length == 32 && (n.push(new ni(r, i)), r = [], i = -1);
    return i > -1 && n.push(new ni(r, i)), n;
  }
}
class xs extends rr {
  constructor(e, n) {
    super(), this.children = e, this.length = n, this.lines = 0;
    for (let r of e)
      this.lines += r.lines;
  }
  lineInner(e, n, r, i) {
    for (let o = 0; ; o++) {
      let s = this.children[o], a = i + s.length, l = r + s.lines - 1;
      if ((n ? l : a) >= e)
        return s.lineInner(e, n, r, i);
      i = a + 1, r = l + 1;
    }
  }
  decompose(e, n, r, i) {
    for (let o = 0, s = 0; s <= n && o < this.children.length; o++) {
      let a = this.children[o], l = s + a.length;
      if (e <= l && n >= s) {
        let u = i & ((s <= e ? 1 : 0) | (l >= n ? 2 : 0));
        s >= e && l <= n && !u ? r.push(a) : a.decompose(e - s, n - s, r, u);
      }
      s = l + 1;
    }
  }
  replace(e, n, r) {
    if ([e, n] = ru(this, e, n), r.lines < this.lines)
      for (let i = 0, o = 0; i < this.children.length; i++) {
        let s = this.children[i], a = o + s.length;
        if (e >= o && n <= a) {
          let l = s.replace(e - o, n - o, r), u = this.lines - s.lines + l.lines;
          if (l.lines < u >> 4 && l.lines > u >> 6) {
            let f = this.children.slice();
            return f[i] = l, new xs(f, this.length - (n - e) + r.length);
          }
          return super.replace(o, a, l);
        }
        o = a + 1;
      }
    return super.replace(e, n, r);
  }
  sliceString(e, n = this.length, r = `
`) {
    [e, n] = ru(this, e, n);
    let i = "";
    for (let o = 0, s = 0; o < this.children.length && s <= n; o++) {
      let a = this.children[o], l = s + a.length;
      s > e && o && (i += r), e < l && n > s && (i += a.sliceString(e - s, n - s, r)), s = l + 1;
    }
    return i;
  }
  flatten(e) {
    for (let n of this.children)
      n.flatten(e);
  }
  scanIdentical(e, n) {
    if (!(e instanceof xs))
      return 0;
    let r = 0, [i, o, s, a] = n > 0 ? [0, 0, this.children.length, e.children.length] : [this.children.length - 1, e.children.length - 1, -1, -1];
    for (; ; i += n, o += n) {
      if (i == s || o == a)
        return r;
      let l = this.children[i], u = e.children[o];
      if (l != u)
        return r + l.scanIdentical(u, n);
      r += l.length + 1;
    }
  }
  static from(e, n = e.reduce((r, i) => r + i.length + 1, -1)) {
    let r = 0;
    for (let p of e)
      r += p.lines;
    if (r < 32) {
      let p = [];
      for (let m of e)
        m.flatten(p);
      return new ni(p, n);
    }
    let i = Math.max(
      32,
      r >> 5
      /* Tree.BranchShift */
    ), o = i << 1, s = i >> 1, a = [], l = 0, u = -1, f = [];
    function d(p) {
      let m;
      if (p.lines > o && p instanceof xs)
        for (let v of p.children)
          d(v);
      else p.lines > s && (l > s || !l) ? (h(), a.push(p)) : p instanceof ni && l && (m = f[f.length - 1]) instanceof ni && p.lines + m.lines <= 32 ? (l += p.lines, u += p.length + 1, f[f.length - 1] = new ni(m.text.concat(p.text), m.length + 1 + p.length)) : (l + p.lines > i && h(), l += p.lines, u += p.length + 1, f.push(p));
    }
    function h() {
      l != 0 && (a.push(f.length == 1 ? f[0] : xs.from(f, u)), u = -1, l = f.length = 0);
    }
    for (let p of e)
      d(p);
    return h(), a.length == 1 ? a[0] : new xs(a, n);
  }
}
rr.empty = /* @__PURE__ */ new ni([""], 0);
function O9(t) {
  let e = -1;
  for (let n of t)
    e += n.length + 1;
  return e;
}
function up(t, e, n = 0, r = 1e9) {
  for (let i = 0, o = 0, s = !0; o < t.length && i <= r; o++) {
    let a = t[o], l = i + a.length;
    l >= n && (l > r && (a = a.slice(0, r - i)), i < n && (a = a.slice(n - i)), s ? (e[e.length - 1] += a, s = !1) : e.push(a)), i = l + 1;
  }
  return e;
}
function sj(t, e, n) {
  return up(t, [""], e, n);
}
class ff {
  constructor(e, n = 1) {
    this.dir = n, this.done = !1, this.lineBreak = !1, this.value = "", this.nodes = [e], this.offsets = [n > 0 ? 1 : (e instanceof ni ? e.text.length : e.children.length) << 1];
  }
  nextInner(e, n) {
    for (this.done = this.lineBreak = !1; ; ) {
      let r = this.nodes.length - 1, i = this.nodes[r], o = this.offsets[r], s = o >> 1, a = i instanceof ni ? i.text.length : i.children.length;
      if (s == (n > 0 ? a : 0)) {
        if (r == 0)
          return this.done = !0, this.value = "", this;
        n > 0 && this.offsets[r - 1]++, this.nodes.pop(), this.offsets.pop();
      } else if ((o & 1) == (n > 0 ? 0 : 1)) {
        if (this.offsets[r] += n, e == 0)
          return this.lineBreak = !0, this.value = `
`, this;
        e--;
      } else if (i instanceof ni) {
        let l = i.text[s + (n < 0 ? -1 : 0)];
        if (this.offsets[r] += n, l.length > Math.max(0, e))
          return this.value = e == 0 ? l : n > 0 ? l.slice(e) : l.slice(0, l.length - e), this;
        e -= l.length;
      } else {
        let l = i.children[s + (n < 0 ? -1 : 0)];
        e > l.length ? (e -= l.length, this.offsets[r] += n) : (n < 0 && this.offsets[r]--, this.nodes.push(l), this.offsets.push(n > 0 ? 1 : (l instanceof ni ? l.text.length : l.children.length) << 1));
      }
    }
  }
  next(e = 0) {
    return e < 0 && (this.nextInner(-e, -this.dir), e = this.value.length), this.nextInner(e, this.dir);
  }
}
class cO {
  constructor(e, n, r) {
    this.value = "", this.done = !1, this.cursor = new ff(e, n > r ? -1 : 1), this.pos = n > r ? e.length : 0, this.from = Math.min(n, r), this.to = Math.max(n, r);
  }
  nextInner(e, n) {
    if (n < 0 ? this.pos <= this.from : this.pos >= this.to)
      return this.value = "", this.done = !0, this;
    e += Math.max(0, n < 0 ? this.pos - this.to : this.from - this.pos);
    let r = n < 0 ? this.pos - this.from : this.to - this.pos;
    e > r && (e = r), r -= e;
    let { value: i } = this.cursor.next(e);
    return this.pos += (i.length + e) * n, this.value = i.length <= r ? i : n < 0 ? i.slice(i.length - r) : i.slice(0, r), this.done = !this.value, this;
  }
  next(e = 0) {
    return e < 0 ? e = Math.max(e, this.from - this.pos) : e > 0 && (e = Math.min(e, this.to - this.pos)), this.nextInner(e, this.cursor.dir);
  }
  get lineBreak() {
    return this.cursor.lineBreak && this.value != "";
  }
}
class uO {
  constructor(e) {
    this.inner = e, this.afterBreak = !0, this.value = "", this.done = !1;
  }
  next(e = 0) {
    let { done: n, lineBreak: r, value: i } = this.inner.next(e);
    return n && this.afterBreak ? (this.value = "", this.afterBreak = !1) : n ? (this.done = !0, this.value = "") : r ? this.afterBreak ? this.value = "" : (this.afterBreak = !0, this.next()) : (this.value = i, this.afterBreak = !1), this;
  }
  get lineBreak() {
    return !1;
  }
}
typeof Symbol < "u" && (rr.prototype[Symbol.iterator] = function() {
  return this.iter();
}, ff.prototype[Symbol.iterator] = cO.prototype[Symbol.iterator] = uO.prototype[Symbol.iterator] = function() {
  return this;
});
class E9 {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.number = r, this.text = i;
  }
  /**
  The length of the line (not including any line break after it).
  */
  get length() {
    return this.to - this.from;
  }
}
function ru(t, e, n) {
  return e = Math.max(0, Math.min(t.length, e)), [e, Math.max(e, Math.min(t.length, n))];
}
function Mi(t, e, n = !0, r = !0) {
  return S9(t, e, n, r);
}
function _9(t) {
  return t >= 56320 && t < 57344;
}
function A9(t) {
  return t >= 55296 && t < 56320;
}
function Yi(t, e) {
  let n = t.charCodeAt(e);
  if (!A9(n) || e + 1 == t.length)
    return n;
  let r = t.charCodeAt(e + 1);
  return _9(r) ? (n - 55296 << 10) + (r - 56320) + 65536 : n;
}
function x1(t) {
  return t <= 65535 ? String.fromCharCode(t) : (t -= 65536, String.fromCharCode((t >> 10) + 55296, (t & 1023) + 56320));
}
function ws(t) {
  return t < 65536 ? 1 : 2;
}
const b0 = /\r\n?|\n/;
var Vi = /* @__PURE__ */ (function(t) {
  return t[t.Simple = 0] = "Simple", t[t.TrackDel = 1] = "TrackDel", t[t.TrackBefore = 2] = "TrackBefore", t[t.TrackAfter = 3] = "TrackAfter", t;
})(Vi || (Vi = {}));
class sa {
  // Sections are encoded as pairs of integers. The first is the
  // length in the current document, and the second is -1 for
  // unaffected sections, and the length of the replacement content
  // otherwise. So an insertion would be (0, n>0), a deletion (n>0,
  // 0), and a replacement two positive numbers.
  /**
  @internal
  */
  constructor(e) {
    this.sections = e;
  }
  /**
  The length of the document before the change.
  */
  get length() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2)
      e += this.sections[n];
    return e;
  }
  /**
  The length of the document after the change.
  */
  get newLength() {
    let e = 0;
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n + 1];
      e += r < 0 ? this.sections[n] : r;
    }
    return e;
  }
  /**
  False when there are actual changes in this set.
  */
  get empty() {
    return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0;
  }
  /**
  Iterate over the unchanged parts left by these changes. `posA`
  provides the position of the range in the old document, `posB`
  the new position in the changed document.
  */
  iterGaps(e) {
    for (let n = 0, r = 0, i = 0; n < this.sections.length; ) {
      let o = this.sections[n++], s = this.sections[n++];
      s < 0 ? (e(r, i, o), i += o) : i += s, r += o;
    }
  }
  /**
  Iterate over the ranges changed by these changes. (See
  [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a
  variant that also provides you with the inserted text.)
  `fromA`/`toA` provides the extent of the change in the starting
  document, `fromB`/`toB` the extent of the replacement in the
  changed document.
  
  When `individual` is true, adjacent changes (which are kept
  separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are
  reported separately.
  */
  iterChangedRanges(e, n = !1) {
    y0(this, e, n);
  }
  /**
  Get a description of the inverted form of these changes.
  */
  get invertedDesc() {
    let e = [];
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], i = this.sections[n++];
      i < 0 ? e.push(r, i) : e.push(i, r);
    }
    return new sa(e);
  }
  /**
  Compute the combined effect of applying another set of changes
  after this one. The length of the document after this set should
  match the length before `other`.
  */
  composeDesc(e) {
    return this.empty ? e : e.empty ? this : fO(this, e);
  }
  /**
  Map this description, which should start with the same document
  as `other`, over another set of changes, so that it can be
  applied after it. When `before` is true, map as if the changes
  in `this` happened before the ones in `other`.
  */
  mapDesc(e, n = !1) {
    return e.empty ? this : x0(this, e, n);
  }
  mapPos(e, n = -1, r = Vi.Simple) {
    let i = 0, o = 0;
    for (let s = 0; s < this.sections.length; ) {
      let a = this.sections[s++], l = this.sections[s++], u = i + a;
      if (l < 0) {
        if (u > e)
          return o + (e - i);
        o += a;
      } else {
        if (r != Vi.Simple && u >= e && (r == Vi.TrackDel && i < e && u > e || r == Vi.TrackBefore && i < e || r == Vi.TrackAfter && u > e))
          return null;
        if (u > e || u == e && n < 0 && !a)
          return e == i || n < 0 ? o : o + l;
        o += l;
      }
      i = u;
    }
    if (e > i)
      throw new RangeError(`Position ${e} is out of range for changeset of length ${i}`);
    return o;
  }
  /**
  Check whether these changes touch a given range. When one of the
  changes entirely covers the range, the string `"cover"` is
  returned.
  */
  touchesRange(e, n = e) {
    for (let r = 0, i = 0; r < this.sections.length && i <= n; ) {
      let o = this.sections[r++], s = this.sections[r++], a = i + o;
      if (s >= 0 && i <= n && a >= e)
        return i < e && a > n ? "cover" : !0;
      i = a;
    }
    return !1;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 0; n < this.sections.length; ) {
      let r = this.sections[n++], i = this.sections[n++];
      e += (e ? " " : "") + r + (i >= 0 ? ":" + i : "");
    }
    return e;
  }
  /**
  Serialize this change desc to a JSON-representable value.
  */
  toJSON() {
    return this.sections;
  }
  /**
  Create a change desc from its JSON representation (as produced
  by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e) || e.length % 2 || e.some((n) => typeof n != "number"))
      throw new RangeError("Invalid JSON representation of ChangeDesc");
    return new sa(e);
  }
  /**
  @internal
  */
  static create(e) {
    return new sa(e);
  }
}
class si extends sa {
  constructor(e, n) {
    super(e), this.inserted = n;
  }
  /**
  Apply the changes to a document, returning the modified
  document.
  */
  apply(e) {
    if (this.length != e.length)
      throw new RangeError("Applying change set to a document with the wrong length");
    return y0(this, (n, r, i, o, s) => e = e.replace(i, i + (r - n), s), !1), e;
  }
  mapDesc(e, n = !1) {
    return x0(this, e, n, !0);
  }
  /**
  Given the document as it existed _before_ the changes, return a
  change set that represents the inverse of this set, which could
  be used to go from the document created by the changes back to
  the document as it existed before the changes.
  */
  invert(e) {
    let n = this.sections.slice(), r = [];
    for (let i = 0, o = 0; i < n.length; i += 2) {
      let s = n[i], a = n[i + 1];
      if (a >= 0) {
        n[i] = a, n[i + 1] = s;
        let l = i >> 1;
        for (; r.length < l; )
          r.push(rr.empty);
        r.push(s ? e.slice(o, o + s) : rr.empty);
      }
      o += s;
    }
    return new si(n, r);
  }
  /**
  Combine two subsequent change sets into a single set. `other`
  must start in the document produced by `this`. If `this` goes
  `docA` → `docB` and `other` represents `docB` → `docC`, the
  returned value will represent the change `docA` → `docC`.
  */
  compose(e) {
    return this.empty ? e : e.empty ? this : fO(this, e, !0);
  }
  /**
  Given another change set starting in the same document, maps this
  change set over the other, producing a new change set that can be
  applied to the document produced by applying `other`. When
  `before` is `true`, order changes as if `this` comes before
  `other`, otherwise (the default) treat `other` as coming first.
  
  Given two changes `A` and `B`, `A.compose(B.map(A))` and
  `B.compose(A.map(B, true))` will produce the same document. This
  provides a basic form of [operational
  transformation](https://en.wikipedia.org/wiki/Operational_transformation),
  and can be used for collaborative editing.
  */
  map(e, n = !1) {
    return e.empty ? this : x0(this, e, n, !0);
  }
  /**
  Iterate over the changed ranges in the document, calling `f` for
  each, with the range in the original document (`fromA`-`toA`)
  and the range that replaces it in the new document
  (`fromB`-`toB`).
  
  When `individual` is true, adjacent changes are reported
  separately.
  */
  iterChanges(e, n = !1) {
    y0(this, e, n);
  }
  /**
  Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change
  set.
  */
  get desc() {
    return sa.create(this.sections);
  }
  /**
  @internal
  */
  filter(e) {
    let n = [], r = [], i = [], o = new Cf(this);
    e: for (let s = 0, a = 0; ; ) {
      let l = s == e.length ? 1e9 : e[s++];
      for (; a < l || a == l && o.len == 0; ) {
        if (o.done)
          break e;
        let f = Math.min(o.len, l - a);
        Pi(i, f, -1);
        let d = o.ins == -1 ? -1 : o.off == 0 ? o.ins : 0;
        Pi(n, f, d), d > 0 && Da(r, n, o.text), o.forward(f), a += f;
      }
      let u = e[s++];
      for (; a < u; ) {
        if (o.done)
          break e;
        let f = Math.min(o.len, u - a);
        Pi(n, f, -1), Pi(i, f, o.ins == -1 ? -1 : o.off == 0 ? o.ins : 0), o.forward(f), a += f;
      }
    }
    return {
      changes: new si(n, r),
      filtered: sa.create(i)
    };
  }
  /**
  Serialize this change set to a JSON-representable value.
  */
  toJSON() {
    let e = [];
    for (let n = 0; n < this.sections.length; n += 2) {
      let r = this.sections[n], i = this.sections[n + 1];
      i < 0 ? e.push(r) : i == 0 ? e.push([r]) : e.push([r].concat(this.inserted[n >> 1].toJSON()));
    }
    return e;
  }
  /**
  Create a change set for the given changes, for a document of the
  given length, using `lineSep` as line separator.
  */
  static of(e, n, r) {
    let i = [], o = [], s = 0, a = null;
    function l(f = !1) {
      if (!f && !i.length)
        return;
      s < n && Pi(i, n - s, -1);
      let d = new si(i, o);
      a = a ? a.compose(d.map(a)) : d, i = [], o = [], s = 0;
    }
    function u(f) {
      if (Array.isArray(f))
        for (let d of f)
          u(d);
      else if (f instanceof si) {
        if (f.length != n)
          throw new RangeError(`Mismatched change set length (got ${f.length}, expected ${n})`);
        l(), a = a ? a.compose(f.map(a)) : f;
      } else {
        let { from: d, to: h = d, insert: p } = f;
        if (d > h || d < 0 || h > n)
          throw new RangeError(`Invalid change range ${d} to ${h} (in doc of length ${n})`);
        let m = p ? typeof p == "string" ? rr.of(p.split(r || b0)) : p : rr.empty, v = m.length;
        if (d == h && v == 0)
          return;
        d < s && l(), d > s && Pi(i, d - s, -1), Pi(i, h - d, v), Da(o, i, m), s = h;
      }
    }
    return u(e), l(!a), a;
  }
  /**
  Create an empty changeset of the given length.
  */
  static empty(e) {
    return new si(e ? [e, -1] : [], []);
  }
  /**
  Create a changeset from its JSON representation (as produced by
  [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).
  */
  static fromJSON(e) {
    if (!Array.isArray(e))
      throw new RangeError("Invalid JSON representation of ChangeSet");
    let n = [], r = [];
    for (let i = 0; i < e.length; i++) {
      let o = e[i];
      if (typeof o == "number")
        n.push(o, -1);
      else {
        if (!Array.isArray(o) || typeof o[0] != "number" || o.some((s, a) => a && typeof s != "string"))
          throw new RangeError("Invalid JSON representation of ChangeSet");
        if (o.length == 1)
          n.push(o[0], 0);
        else {
          for (; r.length < i; )
            r.push(rr.empty);
          r[i] = rr.of(o.slice(1)), n.push(o[0], r[i].length);
        }
      }
    }
    return new si(n, r);
  }
  /**
  @internal
  */
  static createSet(e, n) {
    return new si(e, n);
  }
}
function Pi(t, e, n, r = !1) {
  if (e == 0 && n <= 0)
    return;
  let i = t.length - 2;
  i >= 0 && n <= 0 && n == t[i + 1] ? t[i] += e : i >= 0 && e == 0 && t[i] == 0 ? t[i + 1] += n : r ? (t[i] += e, t[i + 1] += n) : t.push(e, n);
}
function Da(t, e, n) {
  if (n.length == 0)
    return;
  let r = e.length - 2 >> 1;
  if (r < t.length)
    t[t.length - 1] = t[t.length - 1].append(n);
  else {
    for (; t.length < r; )
      t.push(rr.empty);
    t.push(n);
  }
}
function y0(t, e, n) {
  let r = t.inserted;
  for (let i = 0, o = 0, s = 0; s < t.sections.length; ) {
    let a = t.sections[s++], l = t.sections[s++];
    if (l < 0)
      i += a, o += a;
    else {
      let u = i, f = o, d = rr.empty;
      for (; u += a, f += l, l && r && (d = d.append(r[s - 2 >> 1])), !(n || s == t.sections.length || t.sections[s + 1] < 0); )
        a = t.sections[s++], l = t.sections[s++];
      e(i, u, o, f, d), i = u, o = f;
    }
  }
}
function x0(t, e, n, r = !1) {
  let i = [], o = r ? [] : null, s = new Cf(t), a = new Cf(e);
  for (let l = -1; ; ) {
    if (s.done && a.len || a.done && s.len)
      throw new Error("Mismatched change set lengths");
    if (s.ins == -1 && a.ins == -1) {
      let u = Math.min(s.len, a.len);
      Pi(i, u, -1), s.forward(u), a.forward(u);
    } else if (a.ins >= 0 && (s.ins < 0 || l == s.i || s.off == 0 && (a.len < s.len || a.len == s.len && !n))) {
      let u = a.len;
      for (Pi(i, a.ins, -1); u; ) {
        let f = Math.min(s.len, u);
        s.ins >= 0 && l < s.i && s.len <= f && (Pi(i, 0, s.ins), o && Da(o, i, s.text), l = s.i), s.forward(f), u -= f;
      }
      a.next();
    } else if (s.ins >= 0) {
      let u = 0, f = s.len;
      for (; f; )
        if (a.ins == -1) {
          let d = Math.min(f, a.len);
          u += d, f -= d, a.forward(d);
        } else if (a.ins == 0 && a.len < f)
          f -= a.len, a.next();
        else
          break;
      Pi(i, u, l < s.i ? s.ins : 0), o && l < s.i && Da(o, i, s.text), l = s.i, s.forward(s.len - f);
    } else {
      if (s.done && a.done)
        return o ? si.createSet(i, o) : sa.create(i);
      throw new Error("Mismatched change set lengths");
    }
  }
}
function fO(t, e, n = !1) {
  let r = [], i = n ? [] : null, o = new Cf(t), s = new Cf(e);
  for (let a = !1; ; ) {
    if (o.done && s.done)
      return i ? si.createSet(r, i) : sa.create(r);
    if (o.ins == 0)
      Pi(r, o.len, 0, a), o.next();
    else if (s.len == 0 && !s.done)
      Pi(r, 0, s.ins, a), i && Da(i, r, s.text), s.next();
    else {
      if (o.done || s.done)
        throw new Error("Mismatched change set lengths");
      {
        let l = Math.min(o.len2, s.len), u = r.length;
        if (o.ins == -1) {
          let f = s.ins == -1 ? -1 : s.off ? 0 : s.ins;
          Pi(r, l, f, a), i && f && Da(i, r, s.text);
        } else s.ins == -1 ? (Pi(r, o.off ? 0 : o.len, l, a), i && Da(i, r, o.textBit(l))) : (Pi(r, o.off ? 0 : o.len, s.off ? 0 : s.ins, a), i && !s.off && Da(i, r, s.text));
        a = (o.ins > l || s.ins >= 0 && s.len > l) && (a || r.length > u), o.forward2(l), s.forward(l);
      }
    }
  }
}
class Cf {
  constructor(e) {
    this.set = e, this.i = 0, this.next();
  }
  next() {
    let { sections: e } = this.set;
    this.i < e.length ? (this.len = e[this.i++], this.ins = e[this.i++]) : (this.len = 0, this.ins = -2), this.off = 0;
  }
  get done() {
    return this.ins == -2;
  }
  get len2() {
    return this.ins < 0 ? this.len : this.ins;
  }
  get text() {
    let { inserted: e } = this.set, n = this.i - 2 >> 1;
    return n >= e.length ? rr.empty : e[n];
  }
  textBit(e) {
    let { inserted: n } = this.set, r = this.i - 2 >> 1;
    return r >= n.length && !e ? rr.empty : n[r].slice(this.off, e == null ? void 0 : this.off + e);
  }
  forward(e) {
    e == this.len ? this.next() : (this.len -= e, this.off += e);
  }
  forward2(e) {
    this.ins == -1 ? this.forward(e) : e == this.ins ? this.next() : (this.ins -= e, this.off += e);
  }
}
class Rl {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.flags = r;
  }
  /**
  The anchor of the range—the side that doesn't move when you
  extend it.
  */
  get anchor() {
    return this.flags & 32 ? this.to : this.from;
  }
  /**
  The head of the range, which is moved when the range is
  [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).
  */
  get head() {
    return this.flags & 32 ? this.from : this.to;
  }
  /**
  True when `anchor` and `head` are at the same position.
  */
  get empty() {
    return this.from == this.to;
  }
  /**
  If this is a cursor that is explicitly associated with the
  character on one of its sides, this returns the side. -1 means
  the character before its position, 1 the character after, and 0
  means no association.
  */
  get assoc() {
    return this.flags & 8 ? -1 : this.flags & 16 ? 1 : 0;
  }
  /**
  The bidirectional text level associated with this cursor, if
  any.
  */
  get bidiLevel() {
    let e = this.flags & 7;
    return e == 7 ? null : e;
  }
  /**
  The goal column (stored vertical offset) associated with a
  cursor. This is used to preserve the vertical position when
  [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across
  lines of different length.
  */
  get goalColumn() {
    let e = this.flags >> 6;
    return e == 16777215 ? void 0 : e;
  }
  /**
  Map this range through a change, producing a valid range in the
  updated document.
  */
  map(e, n = -1) {
    let r, i;
    return this.empty ? r = i = e.mapPos(this.from, n) : (r = e.mapPos(this.from, 1), i = e.mapPos(this.to, -1)), r == this.from && i == this.to ? this : new Rl(r, i, this.flags);
  }
  /**
  Extend this range to cover at least `from` to `to`.
  */
  extend(e, n = e) {
    if (e <= this.anchor && n >= this.anchor)
      return Me.range(e, n);
    let r = Math.abs(e - this.anchor) > Math.abs(n - this.anchor) ? e : n;
    return Me.range(this.anchor, r);
  }
  /**
  Compare this range to another range.
  */
  eq(e, n = !1) {
    return this.anchor == e.anchor && this.head == e.head && (!n || !this.empty || this.assoc == e.assoc);
  }
  /**
  Return a JSON-serializable object representing the range.
  */
  toJSON() {
    return { anchor: this.anchor, head: this.head };
  }
  /**
  Convert a JSON representation of a range to a `SelectionRange`
  instance.
  */
  static fromJSON(e) {
    if (!e || typeof e.anchor != "number" || typeof e.head != "number")
      throw new RangeError("Invalid JSON representation for SelectionRange");
    return Me.range(e.anchor, e.head);
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Rl(e, n, r);
  }
}
class Me {
  constructor(e, n) {
    this.ranges = e, this.mainIndex = n;
  }
  /**
  Map a selection through a change. Used to adjust the selection
  position for changes.
  */
  map(e, n = -1) {
    return e.empty ? this : Me.create(this.ranges.map((r) => r.map(e, n)), this.mainIndex);
  }
  /**
  Compare this selection to another selection. By default, ranges
  are compared only by position. When `includeAssoc` is true,
  cursor ranges must also have the same
  [`assoc`](https://codemirror.net/6/docs/ref/#state.SelectionRange.assoc) value.
  */
  eq(e, n = !1) {
    if (this.ranges.length != e.ranges.length || this.mainIndex != e.mainIndex)
      return !1;
    for (let r = 0; r < this.ranges.length; r++)
      if (!this.ranges[r].eq(e.ranges[r], n))
        return !1;
    return !0;
  }
  /**
  Get the primary selection range. Usually, you should make sure
  your code applies to _all_ ranges, by using methods like
  [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).
  */
  get main() {
    return this.ranges[this.mainIndex];
  }
  /**
  Make sure the selection only has one range. Returns a selection
  holding only the main range from this selection.
  */
  asSingle() {
    return this.ranges.length == 1 ? this : new Me([this.main], 0);
  }
  /**
  Extend this selection with an extra range.
  */
  addRange(e, n = !0) {
    return Me.create([e].concat(this.ranges), n ? 0 : this.mainIndex + 1);
  }
  /**
  Replace a given range with another range, and then normalize the
  selection to merge and sort ranges if necessary.
  */
  replaceRange(e, n = this.mainIndex) {
    let r = this.ranges.slice();
    return r[n] = e, Me.create(r, this.mainIndex);
  }
  /**
  Convert this selection to an object that can be serialized to
  JSON.
  */
  toJSON() {
    return { ranges: this.ranges.map((e) => e.toJSON()), main: this.mainIndex };
  }
  /**
  Create a selection from a JSON representation.
  */
  static fromJSON(e) {
    if (!e || !Array.isArray(e.ranges) || typeof e.main != "number" || e.main >= e.ranges.length)
      throw new RangeError("Invalid JSON representation for EditorSelection");
    return new Me(e.ranges.map((n) => Rl.fromJSON(n)), e.main);
  }
  /**
  Create a selection holding a single range.
  */
  static single(e, n = e) {
    return new Me([Me.range(e, n)], 0);
  }
  /**
  Sort and merge the given set of ranges, creating a valid
  selection.
  */
  static create(e, n = 0) {
    if (e.length == 0)
      throw new RangeError("A selection needs at least one range");
    for (let r = 0, i = 0; i < e.length; i++) {
      let o = e[i];
      if (o.empty ? o.from <= r : o.from < r)
        return Me.normalized(e.slice(), n);
      r = o.to;
    }
    return new Me(e, n);
  }
  /**
  Create a cursor selection range at the given position. You can
  safely ignore the optional arguments in most situations.
  */
  static cursor(e, n = 0, r, i) {
    return Rl.create(e, e, (n == 0 ? 0 : n < 0 ? 8 : 16) | (r == null ? 7 : Math.min(6, r)) | (i ?? 16777215) << 6);
  }
  /**
  Create a selection range.
  */
  static range(e, n, r, i) {
    let o = (r ?? 16777215) << 6 | (i == null ? 7 : Math.min(6, i));
    return n < e ? Rl.create(n, e, 48 | o) : Rl.create(e, n, (n > e ? 8 : 0) | o);
  }
  /**
  @internal
  */
  static normalized(e, n = 0) {
    let r = e[n];
    e.sort((i, o) => i.from - o.from), n = e.indexOf(r);
    for (let i = 1; i < e.length; i++) {
      let o = e[i], s = e[i - 1];
      if (o.empty ? o.from <= s.to : o.from < s.to) {
        let a = s.from, l = Math.max(o.to, s.to);
        i <= n && n--, e.splice(--i, 2, o.anchor > o.head ? Me.range(l, a) : Me.range(a, l));
      }
    }
    return new Me(e, n);
  }
}
function dO(t, e) {
  for (let n of t.ranges)
    if (n.to > e)
      throw new RangeError("Selection points outside of document");
}
let w1 = 0;
class lt {
  constructor(e, n, r, i, o) {
    this.combine = e, this.compareInput = n, this.compare = r, this.isStatic = i, this.id = w1++, this.default = e([]), this.extensions = typeof o == "function" ? o(this) : o;
  }
  /**
  Returns a facet reader for this facet, which can be used to
  [read](https://codemirror.net/6/docs/ref/#state.EditorState.facet) it but not to define values for it.
  */
  get reader() {
    return this;
  }
  /**
  Define a new facet.
  */
  static define(e = {}) {
    return new lt(e.combine || ((n) => n), e.compareInput || ((n, r) => n === r), e.compare || (e.combine ? (n, r) => n === r : j1), !!e.static, e.enables);
  }
  /**
  Returns an extension that adds the given value to this facet.
  */
  of(e) {
    return new fp([], this, 0, e);
  }
  /**
  Create an extension that computes a value for the facet from a
  state. You must take care to declare the parts of the state that
  this value depends on, since your function is only called again
  for a new state when one of those parts changed.
  
  In cases where your value depends only on a single field, you'll
  want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.
  */
  compute(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new fp(e, this, 1, n);
  }
  /**
  Create an extension that computes zero or more values for this
  facet from a state.
  */
  computeN(e, n) {
    if (this.isStatic)
      throw new Error("Can't compute a static facet");
    return new fp(e, this, 2, n);
  }
  from(e, n) {
    return n || (n = (r) => r), this.compute([e], (r) => n(r.field(e)));
  }
}
function j1(t, e) {
  return t == e || t.length == e.length && t.every((n, r) => n === e[r]);
}
class fp {
  constructor(e, n, r, i) {
    this.dependencies = e, this.facet = n, this.type = r, this.value = i, this.id = w1++;
  }
  dynamicSlot(e) {
    var n;
    let r = this.value, i = this.facet.compareInput, o = this.id, s = e[o] >> 1, a = this.type == 2, l = !1, u = !1, f = [];
    for (let d of this.dependencies)
      d == "doc" ? l = !0 : d == "selection" ? u = !0 : (((n = e[d.id]) !== null && n !== void 0 ? n : 1) & 1) == 0 && f.push(e[d.id]);
    return {
      create(d) {
        return d.values[s] = r(d), 1;
      },
      update(d, h) {
        if (l && h.docChanged || u && (h.docChanged || h.selection) || w0(d, f)) {
          let p = r(d);
          if (a ? !aj(p, d.values[s], i) : !i(p, d.values[s]))
            return d.values[s] = p, 1;
        }
        return 0;
      },
      reconfigure: (d, h) => {
        let p, m = h.config.address[o];
        if (m != null) {
          let v = qp(h, m);
          if (this.dependencies.every((g) => g instanceof lt ? h.facet(g) === d.facet(g) : g instanceof wi ? h.field(g, !1) == d.field(g, !1) : !0) || (a ? aj(p = r(d), v, i) : i(p = r(d), v)))
            return d.values[s] = v, 0;
        } else
          p = r(d);
        return d.values[s] = p, 1;
      }
    };
  }
}
function aj(t, e, n) {
  if (t.length != e.length)
    return !1;
  for (let r = 0; r < t.length; r++)
    if (!n(t[r], e[r]))
      return !1;
  return !0;
}
function w0(t, e) {
  let n = !1;
  for (let r of e)
    df(t, r) & 1 && (n = !0);
  return n;
}
function M9(t, e, n) {
  let r = n.map((l) => t[l.id]), i = n.map((l) => l.type), o = r.filter((l) => !(l & 1)), s = t[e.id] >> 1;
  function a(l) {
    let u = [];
    for (let f = 0; f < r.length; f++) {
      let d = qp(l, r[f]);
      if (i[f] == 2)
        for (let h of d)
          u.push(h);
      else
        u.push(d);
    }
    return e.combine(u);
  }
  return {
    create(l) {
      for (let u of r)
        df(l, u);
      return l.values[s] = a(l), 1;
    },
    update(l, u) {
      if (!w0(l, o))
        return 0;
      let f = a(l);
      return e.compare(f, l.values[s]) ? 0 : (l.values[s] = f, 1);
    },
    reconfigure(l, u) {
      let f = w0(l, r), d = u.config.facets[e.id], h = u.facet(e);
      if (d && !f && j1(n, d))
        return l.values[s] = h, 0;
      let p = a(l);
      return e.compare(p, h) ? (l.values[s] = h, 0) : (l.values[s] = p, 1);
    }
  };
}
const xh = /* @__PURE__ */ lt.define({ static: !0 });
class wi {
  constructor(e, n, r, i, o) {
    this.id = e, this.createF = n, this.updateF = r, this.compareF = i, this.spec = o, this.provides = void 0;
  }
  /**
  Define a state field.
  */
  static define(e) {
    let n = new wi(w1++, e.create, e.update, e.compare || ((r, i) => r === i), e);
    return e.provide && (n.provides = e.provide(n)), n;
  }
  create(e) {
    let n = e.facet(xh).find((r) => r.field == this);
    return (n?.create || this.createF)(e);
  }
  /**
  @internal
  */
  slot(e) {
    let n = e[this.id] >> 1;
    return {
      create: (r) => (r.values[n] = this.create(r), 1),
      update: (r, i) => {
        let o = r.values[n], s = this.updateF(o, i);
        return this.compareF(o, s) ? 0 : (r.values[n] = s, 1);
      },
      reconfigure: (r, i) => {
        let o = r.facet(xh), s = i.facet(xh), a;
        return (a = o.find((l) => l.field == this)) && a != s.find((l) => l.field == this) ? (r.values[n] = a.create(r), 1) : i.config.address[this.id] != null ? (r.values[n] = i.field(this), 0) : (r.values[n] = this.create(r), 1);
      }
    };
  }
  /**
  Returns an extension that enables this field and overrides the
  way it is initialized. Can be useful when you need to provide a
  non-default starting value for the field.
  */
  init(e) {
    return [this, xh.of({ field: this, create: e })];
  }
  /**
  State field instances can be used as
  [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a
  given state.
  */
  get extension() {
    return this;
  }
}
const Ml = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };
function Bu(t) {
  return (e) => new hO(e, t);
}
const lc = {
  /**
  The highest precedence level, for extensions that should end up
  near the start of the precedence ordering.
  */
  highest: /* @__PURE__ */ Bu(Ml.highest),
  /**
  A higher-than-default precedence, for extensions that should
  come before those with default precedence.
  */
  high: /* @__PURE__ */ Bu(Ml.high),
  /**
  The default precedence, which is also used for extensions
  without an explicit precedence.
  */
  default: /* @__PURE__ */ Bu(Ml.default),
  /**
  A lower-than-default precedence.
  */
  low: /* @__PURE__ */ Bu(Ml.low),
  /**
  The lowest precedence level. Meant for things that should end up
  near the end of the extension order.
  */
  lowest: /* @__PURE__ */ Bu(Ml.lowest)
};
class hO {
  constructor(e, n) {
    this.inner = e, this.prec = n;
  }
}
class Zs {
  /**
  Create an instance of this compartment to add to your [state
  configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).
  */
  of(e) {
    return new j0(this, e);
  }
  /**
  Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that
  reconfigures this compartment.
  */
  reconfigure(e) {
    return Zs.reconfigure.of({ compartment: this, extension: e });
  }
  /**
  Get the current content of the compartment in the state, or
  `undefined` if it isn't present.
  */
  get(e) {
    return e.config.compartments.get(this);
  }
}
class j0 {
  constructor(e, n) {
    this.compartment = e, this.inner = n;
  }
}
class Bp {
  constructor(e, n, r, i, o, s) {
    for (this.base = e, this.compartments = n, this.dynamicSlots = r, this.address = i, this.staticValues = o, this.facets = s, this.statusTemplate = []; this.statusTemplate.length < r.length; )
      this.statusTemplate.push(
        0
        /* SlotStatus.Unresolved */
      );
  }
  staticFacet(e) {
    let n = this.address[e.id];
    return n == null ? e.default : this.staticValues[n >> 1];
  }
  static resolve(e, n, r) {
    let i = [], o = /* @__PURE__ */ Object.create(null), s = /* @__PURE__ */ new Map();
    for (let h of T9(e, n, s))
      h instanceof wi ? i.push(h) : (o[h.facet.id] || (o[h.facet.id] = [])).push(h);
    let a = /* @__PURE__ */ Object.create(null), l = [], u = [];
    for (let h of i)
      a[h.id] = u.length << 1, u.push((p) => h.slot(p));
    let f = r?.config.facets;
    for (let h in o) {
      let p = o[h], m = p[0].facet, v = f && f[h] || [];
      if (p.every(
        (g) => g.type == 0
        /* Provider.Static */
      ))
        if (a[m.id] = l.length << 1 | 1, j1(v, p))
          l.push(r.facet(m));
        else {
          let g = m.combine(p.map((b) => b.value));
          l.push(r && m.compare(g, r.facet(m)) ? r.facet(m) : g);
        }
      else {
        for (let g of p)
          g.type == 0 ? (a[g.id] = l.length << 1 | 1, l.push(g.value)) : (a[g.id] = u.length << 1, u.push((b) => g.dynamicSlot(b)));
        a[m.id] = u.length << 1, u.push((g) => M9(g, m, p));
      }
    }
    let d = u.map((h) => h(a));
    return new Bp(e, s, d, a, l, o);
  }
}
function T9(t, e, n) {
  let r = [[], [], [], [], []], i = /* @__PURE__ */ new Map();
  function o(s, a) {
    let l = i.get(s);
    if (l != null) {
      if (l <= a)
        return;
      let u = r[l].indexOf(s);
      u > -1 && r[l].splice(u, 1), s instanceof j0 && n.delete(s.compartment);
    }
    if (i.set(s, a), Array.isArray(s))
      for (let u of s)
        o(u, a);
    else if (s instanceof j0) {
      if (n.has(s.compartment))
        throw new RangeError("Duplicate use of compartment in extensions");
      let u = e.get(s.compartment) || s.inner;
      n.set(s.compartment, u), o(u, a);
    } else if (s instanceof hO)
      o(s.inner, s.prec);
    else if (s instanceof wi)
      r[a].push(s), s.provides && o(s.provides, a);
    else if (s instanceof fp)
      r[a].push(s), s.facet.extensions && o(s.facet.extensions, Ml.default);
    else {
      let u = s.extension;
      if (!u)
        throw new Error(`Unrecognized extension value in extension set (${s}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);
      o(u, a);
    }
  }
  return o(t, Ml.default), r.reduce((s, a) => s.concat(a));
}
function df(t, e) {
  if (e & 1)
    return 2;
  let n = e >> 1, r = t.status[n];
  if (r == 4)
    throw new Error("Cyclic dependency between fields and/or facets");
  if (r & 2)
    return r;
  t.status[n] = 4;
  let i = t.computeSlot(t, t.config.dynamicSlots[n]);
  return t.status[n] = 2 | i;
}
function qp(t, e) {
  return e & 1 ? t.config.staticValues[e >> 1] : t.values[e >> 1];
}
const pO = /* @__PURE__ */ lt.define(), k0 = /* @__PURE__ */ lt.define({
  combine: (t) => t.some((e) => e),
  static: !0
}), mO = /* @__PURE__ */ lt.define({
  combine: (t) => t.length ? t[0] : void 0,
  static: !0
}), gO = /* @__PURE__ */ lt.define(), vO = /* @__PURE__ */ lt.define(), bO = /* @__PURE__ */ lt.define(), yO = /* @__PURE__ */ lt.define({
  combine: (t) => t.length ? t[0] : !1
});
class hl {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Define a new type of annotation.
  */
  static define() {
    return new $9();
  }
}
class $9 {
  /**
  Create an instance of this annotation.
  */
  of(e) {
    return new hl(this, e);
  }
}
class P9 {
  /**
  @internal
  */
  constructor(e) {
    this.map = e;
  }
  /**
  Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this
  type.
  */
  of(e) {
    return new vn(this, e);
  }
}
class vn {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.value = n;
  }
  /**
  Map this effect through a position mapping. Will return
  `undefined` when that ends up deleting the effect.
  */
  map(e) {
    let n = this.type.map(this.value, e);
    return n === void 0 ? void 0 : n == this.value ? this : new vn(this.type, n);
  }
  /**
  Tells you whether this effect object is of a given
  [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).
  */
  is(e) {
    return this.type == e;
  }
  /**
  Define a new effect type. The type parameter indicates the type
  of values that his effect holds. It should be a type that
  doesn't include `undefined`, since that is used in
  [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is
  removed.
  */
  static define(e = {}) {
    return new P9(e.map || ((n) => n));
  }
  /**
  Map an array of effects through a change set.
  */
  static mapEffects(e, n) {
    if (!e.length)
      return e;
    let r = [];
    for (let i of e) {
      let o = i.map(n);
      o && r.push(o);
    }
    return r;
  }
}
vn.reconfigure = /* @__PURE__ */ vn.define();
vn.appendConfig = /* @__PURE__ */ vn.define();
class Ii {
  constructor(e, n, r, i, o, s) {
    this.startState = e, this.changes = n, this.selection = r, this.effects = i, this.annotations = o, this.scrollIntoView = s, this._doc = null, this._state = null, r && dO(r, n.newLength), o.some((a) => a.type == Ii.time) || (this.annotations = o.concat(Ii.time.of(Date.now())));
  }
  /**
  @internal
  */
  static create(e, n, r, i, o, s) {
    return new Ii(e, n, r, i, o, s);
  }
  /**
  The new document produced by the transaction. Contrary to
  [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't
  force the entire new state to be computed right away, so it is
  recommended that [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter
  when they need to look at the new document.
  */
  get newDoc() {
    return this._doc || (this._doc = this.changes.apply(this.startState.doc));
  }
  /**
  The new selection produced by the transaction. If
  [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,
  this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's
  current selection through the changes made by the transaction.
  */
  get newSelection() {
    return this.selection || this.startState.selection.map(this.changes);
  }
  /**
  The new state created by the transaction. Computed on demand
  (but retained for subsequent access), so it is recommended not to
  access it in [transaction
  filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.
  */
  get state() {
    return this._state || this.startState.applyTransaction(this), this._state;
  }
  /**
  Get the value of the given annotation type, if any.
  */
  annotation(e) {
    for (let n of this.annotations)
      if (n.type == e)
        return n.value;
  }
  /**
  Indicates whether the transaction changed the document.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Indicates whether this transaction reconfigures the state
  (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or
  with a top-level configuration
  [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).
  */
  get reconfigured() {
    return this.startState.config != this.state.config;
  }
  /**
  Returns true if the transaction has a [user
  event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to
  or more specific than `event`. For example, if the transaction
  has `"select.pointer"` as user event, `"select"` and
  `"select.pointer"` will match it.
  */
  isUserEvent(e) {
    let n = this.annotation(Ii.userEvent);
    return !!(n && (n == e || n.length > e.length && n.slice(0, e.length) == e && n[e.length] == "."));
  }
}
Ii.time = /* @__PURE__ */ hl.define();
Ii.userEvent = /* @__PURE__ */ hl.define();
Ii.addToHistory = /* @__PURE__ */ hl.define();
Ii.remote = /* @__PURE__ */ hl.define();
function R9(t, e) {
  let n = [];
  for (let r = 0, i = 0; ; ) {
    let o, s;
    if (r < t.length && (i == e.length || e[i] >= t[r]))
      o = t[r++], s = t[r++];
    else if (i < e.length)
      o = e[i++], s = e[i++];
    else
      return n;
    !n.length || n[n.length - 1] < o ? n.push(o, s) : n[n.length - 1] < s && (n[n.length - 1] = s);
  }
}
function xO(t, e, n) {
  var r;
  let i, o, s;
  return n ? (i = e.changes, o = si.empty(e.changes.length), s = t.changes.compose(e.changes)) : (i = e.changes.map(t.changes), o = t.changes.mapDesc(e.changes, !0), s = t.changes.compose(i)), {
    changes: s,
    selection: e.selection ? e.selection.map(o) : (r = t.selection) === null || r === void 0 ? void 0 : r.map(i),
    effects: vn.mapEffects(t.effects, i).concat(vn.mapEffects(e.effects, o)),
    annotations: t.annotations.length ? t.annotations.concat(e.annotations) : e.annotations,
    scrollIntoView: t.scrollIntoView || e.scrollIntoView
  };
}
function S0(t, e, n) {
  let r = e.selection, i = Wc(e.annotations);
  return e.userEvent && (i = i.concat(Ii.userEvent.of(e.userEvent))), {
    changes: e.changes instanceof si ? e.changes : si.of(e.changes || [], n, t.facet(mO)),
    selection: r && (r instanceof Me ? r : Me.single(r.anchor, r.head)),
    effects: Wc(e.effects),
    annotations: i,
    scrollIntoView: !!e.scrollIntoView
  };
}
function wO(t, e, n) {
  let r = S0(t, e.length ? e[0] : {}, t.doc.length);
  e.length && e[0].filter === !1 && (n = !1);
  for (let o = 1; o < e.length; o++) {
    e[o].filter === !1 && (n = !1);
    let s = !!e[o].sequential;
    r = xO(r, S0(t, e[o], s ? r.changes.newLength : t.doc.length), s);
  }
  let i = Ii.create(t, r.changes, r.selection, r.effects, r.annotations, r.scrollIntoView);
  return D9(n ? N9(i) : i);
}
function N9(t) {
  let e = t.startState, n = !0;
  for (let i of e.facet(gO)) {
    let o = i(t);
    if (o === !1) {
      n = !1;
      break;
    }
    Array.isArray(o) && (n = n === !0 ? o : R9(n, o));
  }
  if (n !== !0) {
    let i, o;
    if (n === !1)
      o = t.changes.invertedDesc, i = si.empty(e.doc.length);
    else {
      let s = t.changes.filter(n);
      i = s.changes, o = s.filtered.mapDesc(s.changes).invertedDesc;
    }
    t = Ii.create(e, i, t.selection && t.selection.map(o), vn.mapEffects(t.effects, o), t.annotations, t.scrollIntoView);
  }
  let r = e.facet(vO);
  for (let i = r.length - 1; i >= 0; i--) {
    let o = r[i](t);
    o instanceof Ii ? t = o : Array.isArray(o) && o.length == 1 && o[0] instanceof Ii ? t = o[0] : t = wO(e, Wc(o), !1);
  }
  return t;
}
function D9(t) {
  let e = t.startState, n = e.facet(bO), r = t;
  for (let i = n.length - 1; i >= 0; i--) {
    let o = n[i](t);
    o && Object.keys(o).length && (r = xO(r, S0(e, o, t.changes.newLength), !0));
  }
  return r == t ? t : Ii.create(e, t.changes, t.selection, r.effects, r.annotations, r.scrollIntoView);
}
const I9 = [];
function Wc(t) {
  return t == null ? I9 : Array.isArray(t) ? t : [t];
}
var Fr = /* @__PURE__ */ (function(t) {
  return t[t.Word = 0] = "Word", t[t.Space = 1] = "Space", t[t.Other = 2] = "Other", t;
})(Fr || (Fr = {}));
const z9 = /[\u00df\u0587\u0590-\u05f4\u0600-\u06ff\u3040-\u309f\u30a0-\u30ff\u3400-\u4db5\u4e00-\u9fcc\uac00-\ud7af]/;
let C0;
try {
  C0 = /* @__PURE__ */ new RegExp("[\\p{Alphabetic}\\p{Number}_]", "u");
} catch {
}
function L9(t) {
  if (C0)
    return C0.test(t);
  for (let e = 0; e < t.length; e++) {
    let n = t[e];
    if (/\w/.test(n) || n > "" && (n.toUpperCase() != n.toLowerCase() || z9.test(n)))
      return !0;
  }
  return !1;
}
function B9(t) {
  return (e) => {
    if (!/\S/.test(e))
      return Fr.Space;
    if (L9(e))
      return Fr.Word;
    for (let n = 0; n < t.length; n++)
      if (e.indexOf(t[n]) > -1)
        return Fr.Word;
    return Fr.Other;
  };
}
class En {
  constructor(e, n, r, i, o, s) {
    this.config = e, this.doc = n, this.selection = r, this.values = i, this.status = e.statusTemplate.slice(), this.computeSlot = o, s && (s._state = this);
    for (let a = 0; a < this.config.dynamicSlots.length; a++)
      df(this, a << 1);
    this.computeSlot = null;
  }
  field(e, n = !0) {
    let r = this.config.address[e.id];
    if (r == null) {
      if (n)
        throw new RangeError("Field is not present in this state");
      return;
    }
    return df(this, r), qp(this, r);
  }
  /**
  Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this
  state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)
  can be passed. Unless
  [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the
  [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec
  are assumed to start in the _current_ document (not the document
  produced by previous specs), and its
  [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and
  [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer
  to the document created by its _own_ changes. The resulting
  transaction contains the combined effect of all the different
  specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later
  specs take precedence over earlier ones.
  */
  update(...e) {
    return wO(this, e, !0);
  }
  /**
  @internal
  */
  applyTransaction(e) {
    let n = this.config, { base: r, compartments: i } = n;
    for (let a of e.effects)
      a.is(Zs.reconfigure) ? (n && (i = /* @__PURE__ */ new Map(), n.compartments.forEach((l, u) => i.set(u, l)), n = null), i.set(a.value.compartment, a.value.extension)) : a.is(vn.reconfigure) ? (n = null, r = a.value) : a.is(vn.appendConfig) && (n = null, r = Wc(r).concat(a.value));
    let o;
    n ? o = e.startState.values.slice() : (n = Bp.resolve(r, i, this), o = new En(n, this.doc, this.selection, n.dynamicSlots.map(() => null), (l, u) => u.reconfigure(l, this), null).values);
    let s = e.startState.facet(k0) ? e.newSelection : e.newSelection.asSingle();
    new En(n, e.newDoc, s, o, (a, l) => l.update(a, e), e);
  }
  /**
  Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that
  replaces every selection range with the given content.
  */
  replaceSelection(e) {
    return typeof e == "string" && (e = this.toText(e)), this.changeByRange((n) => ({
      changes: { from: n.from, to: n.to, insert: e },
      range: Me.cursor(n.from + e.length)
    }));
  }
  /**
  Create a set of changes and a new selection by running the given
  function for each range in the active selection. The function
  can return an optional set of changes (in the coordinate space
  of the start document), plus an updated range (in the coordinate
  space of the document produced by the call's own changes). This
  method will merge all the changes and ranges into a single
  changeset and selection, and return it as a [transaction
  spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to
  [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).
  */
  changeByRange(e) {
    let n = this.selection, r = e(n.ranges[0]), i = this.changes(r.changes), o = [r.range], s = Wc(r.effects);
    for (let a = 1; a < n.ranges.length; a++) {
      let l = e(n.ranges[a]), u = this.changes(l.changes), f = u.map(i);
      for (let h = 0; h < a; h++)
        o[h] = o[h].map(f);
      let d = i.mapDesc(u, !0);
      o.push(l.range.map(d)), i = i.compose(f), s = vn.mapEffects(s, f).concat(vn.mapEffects(Wc(l.effects), d));
    }
    return {
      changes: i,
      selection: Me.create(o, n.mainIndex),
      effects: s
    };
  }
  /**
  Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change
  description, taking the state's document length and line
  separator into account.
  */
  changes(e = []) {
    return e instanceof si ? e : si.of(e, this.doc.length, this.facet(En.lineSeparator));
  }
  /**
  Using the state's [line
  separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a
  [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.
  */
  toText(e) {
    return rr.of(e.split(this.facet(En.lineSeparator) || b0));
  }
  /**
  Return the given range of the document as a string.
  */
  sliceDoc(e = 0, n = this.doc.length) {
    return this.doc.sliceString(e, n, this.lineBreak);
  }
  /**
  Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).
  */
  facet(e) {
    let n = this.config.address[e.id];
    return n == null ? e.default : (df(this, n), qp(this, n));
  }
  /**
  Convert this state to a JSON-serializable object. When custom
  fields should be serialized, you can pass them in as an object
  mapping property names (in the resulting object, which should
  not use `doc` or `selection`) to fields.
  */
  toJSON(e) {
    let n = {
      doc: this.sliceDoc(),
      selection: this.selection.toJSON()
    };
    if (e)
      for (let r in e) {
        let i = e[r];
        i instanceof wi && this.config.address[i.id] != null && (n[r] = i.spec.toJSON(this.field(e[r]), this));
      }
    return n;
  }
  /**
  Deserialize a state from its JSON representation. When custom
  fields should be deserialized, pass the same object you passed
  to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as
  third argument.
  */
  static fromJSON(e, n = {}, r) {
    if (!e || typeof e.doc != "string")
      throw new RangeError("Invalid JSON representation for EditorState");
    let i = [];
    if (r) {
      for (let o in r)
        if (Object.prototype.hasOwnProperty.call(e, o)) {
          let s = r[o], a = e[o];
          i.push(s.init((l) => s.spec.fromJSON(a, l)));
        }
    }
    return En.create({
      doc: e.doc,
      selection: Me.fromJSON(e.selection),
      extensions: n.extensions ? i.concat([n.extensions]) : i
    });
  }
  /**
  Create a new state. You'll usually only need this when
  initializing an editor—updated states are created by applying
  transactions.
  */
  static create(e = {}) {
    let n = Bp.resolve(e.extensions || [], /* @__PURE__ */ new Map()), r = e.doc instanceof rr ? e.doc : rr.of((e.doc || "").split(n.staticFacet(En.lineSeparator) || b0)), i = e.selection ? e.selection instanceof Me ? e.selection : Me.single(e.selection.anchor, e.selection.head) : Me.single(0);
    return dO(i, r.length), n.staticFacet(k0) || (i = i.asSingle()), new En(n, r, i, n.dynamicSlots.map(() => null), (o, s) => s.create(o), null);
  }
  /**
  The size (in columns) of a tab in the document, determined by
  the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.
  */
  get tabSize() {
    return this.facet(En.tabSize);
  }
  /**
  Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)
  string for this state.
  */
  get lineBreak() {
    return this.facet(En.lineSeparator) || `
`;
  }
  /**
  Returns true when the editor is
  [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.
  */
  get readOnly() {
    return this.facet(yO);
  }
  /**
  Look up a translation for the given phrase (via the
  [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the
  original string if no translation is found.
  
  If additional arguments are passed, they will be inserted in
  place of markers like `$1` (for the first value) and `$2`, etc.
  A single `$` is equivalent to `$1`, and `$$` will produce a
  literal dollar sign.
  */
  phrase(e, ...n) {
    for (let r of this.facet(En.phrases))
      if (Object.prototype.hasOwnProperty.call(r, e)) {
        e = r[e];
        break;
      }
    return n.length && (e = e.replace(/\$(\$|\d*)/g, (r, i) => {
      if (i == "$")
        return "$";
      let o = +(i || 1);
      return !o || o > n.length ? r : n[o - 1];
    })), e;
  }
  /**
  Find the values for a given language data field, provided by the
  the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.
  
  Examples of language data fields are...
  
  - [`"commentTokens"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying
    comment syntax.
  - [`"autocomplete"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)
    for providing language-specific completion sources.
  - [`"wordChars"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding
    characters that should be considered part of words in this
    language.
  - [`"closeBrackets"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls
    bracket closing behavior.
  */
  languageDataAt(e, n, r = -1) {
    let i = [];
    for (let o of this.facet(pO))
      for (let s of o(this, n, r))
        Object.prototype.hasOwnProperty.call(s, e) && i.push(s[e]);
    return i;
  }
  /**
  Return a function that can categorize strings (expected to
  represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))
  into one of:
  
   - Word (contains an alphanumeric character or a character
     explicitly listed in the local language's `"wordChars"`
     language data, which should be a string)
   - Space (contains only whitespace)
   - Other (anything else)
  */
  charCategorizer(e) {
    return B9(this.languageDataAt("wordChars", e).join(""));
  }
  /**
  Find the word at the given position, meaning the range
  containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters
  around it. If no word characters are adjacent to the position,
  this returns null.
  */
  wordAt(e) {
    let { text: n, from: r, length: i } = this.doc.lineAt(e), o = this.charCategorizer(e), s = e - r, a = e - r;
    for (; s > 0; ) {
      let l = Mi(n, s, !1);
      if (o(n.slice(l, s)) != Fr.Word)
        break;
      s = l;
    }
    for (; a < i; ) {
      let l = Mi(n, a);
      if (o(n.slice(a, l)) != Fr.Word)
        break;
      a = l;
    }
    return s == a ? null : Me.range(s + r, a + r);
  }
}
En.allowMultipleSelections = k0;
En.tabSize = /* @__PURE__ */ lt.define({
  combine: (t) => t.length ? t[0] : 4
});
En.lineSeparator = mO;
En.readOnly = yO;
En.phrases = /* @__PURE__ */ lt.define({
  compare(t, e) {
    let n = Object.keys(t), r = Object.keys(e);
    return n.length == r.length && n.every((i) => t[i] == e[i]);
  }
});
En.languageData = pO;
En.changeFilter = gO;
En.transactionFilter = vO;
En.transactionExtender = bO;
Zs.reconfigure = /* @__PURE__ */ vn.define();
function us(t, e, n = {}) {
  let r = {};
  for (let i of t)
    for (let o of Object.keys(i)) {
      let s = i[o], a = r[o];
      if (a === void 0)
        r[o] = s;
      else if (!(a === s || s === void 0)) if (Object.hasOwnProperty.call(n, o))
        r[o] = n[o](a, s);
      else
        throw new Error("Config merge conflict for field " + o);
    }
  for (let i in e)
    r[i] === void 0 && (r[i] = e[i]);
  return r;
}
class Kl {
  /**
  Compare this value with another value. Used when comparing
  rangesets. The default implementation compares by identity.
  Unless you are only creating a fixed number of unique instances
  of your value type, it is a good idea to implement this
  properly.
  */
  eq(e) {
    return this == e;
  }
  /**
  Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.
  */
  range(e, n = e) {
    return O0.create(e, n, this);
  }
}
Kl.prototype.startSide = Kl.prototype.endSide = 0;
Kl.prototype.point = !1;
Kl.prototype.mapMode = Vi.TrackDel;
let O0 = class jO {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.value = r;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new jO(e, n, r);
  }
};
function E0(t, e) {
  return t.from - e.from || t.value.startSide - e.value.startSide;
}
class k1 {
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.value = r, this.maxPoint = i;
  }
  get length() {
    return this.to[this.to.length - 1];
  }
  // Find the index of the given position and side. Use the ranges'
  // `from` pos when `end == false`, `to` when `end == true`.
  findIndex(e, n, r, i = 0) {
    let o = r ? this.to : this.from;
    for (let s = i, a = o.length; ; ) {
      if (s == a)
        return s;
      let l = s + a >> 1, u = o[l] - e || (r ? this.value[l].endSide : this.value[l].startSide) - n;
      if (l == s)
        return u >= 0 ? s : a;
      u >= 0 ? a = l : s = l + 1;
    }
  }
  between(e, n, r, i) {
    for (let o = this.findIndex(n, -1e9, !0), s = this.findIndex(r, 1e9, !1, o); o < s; o++)
      if (i(this.from[o] + e, this.to[o] + e, this.value[o]) === !1)
        return !1;
  }
  map(e, n) {
    let r = [], i = [], o = [], s = -1, a = -1;
    for (let l = 0; l < this.value.length; l++) {
      let u = this.value[l], f = this.from[l] + e, d = this.to[l] + e, h, p;
      if (f == d) {
        let m = n.mapPos(f, u.startSide, u.mapMode);
        if (m == null || (h = p = m, u.startSide != u.endSide && (p = n.mapPos(f, u.endSide), p < h)))
          continue;
      } else if (h = n.mapPos(f, u.startSide), p = n.mapPos(d, u.endSide), h > p || h == p && u.startSide > 0 && u.endSide <= 0)
        continue;
      (p - h || u.endSide - u.startSide) < 0 || (s < 0 && (s = h), u.point && (a = Math.max(a, p - h)), r.push(u), i.push(h - s), o.push(p - s));
    }
    return { mapped: r.length ? new k1(i, o, r, a) : null, pos: s };
  }
}
class zn {
  constructor(e, n, r, i) {
    this.chunkPos = e, this.chunk = n, this.nextLayer = r, this.maxPoint = i;
  }
  /**
  @internal
  */
  static create(e, n, r, i) {
    return new zn(e, n, r, i);
  }
  /**
  @internal
  */
  get length() {
    let e = this.chunk.length - 1;
    return e < 0 ? 0 : Math.max(this.chunkEnd(e), this.nextLayer.length);
  }
  /**
  The number of ranges in the set.
  */
  get size() {
    if (this.isEmpty)
      return 0;
    let e = this.nextLayer.size;
    for (let n of this.chunk)
      e += n.value.length;
    return e;
  }
  /**
  @internal
  */
  chunkEnd(e) {
    return this.chunkPos[e] + this.chunk[e].length;
  }
  /**
  Update the range set, optionally adding new ranges or filtering
  out existing ones.
  
  (Note: The type parameter is just there as a kludge to work
  around TypeScript variance issues that prevented `RangeSet<X>`
  from being a subtype of `RangeSet<Y>` when `X` is a subtype of
  `Y`.)
  */
  update(e) {
    let { add: n = [], sort: r = !1, filterFrom: i = 0, filterTo: o = this.length } = e, s = e.filter;
    if (n.length == 0 && !s)
      return this;
    if (r && (n = n.slice().sort(E0)), this.isEmpty)
      return n.length ? zn.of(n) : this;
    let a = new kO(this, null, -1).goto(0), l = 0, u = [], f = new rs();
    for (; a.value || l < n.length; )
      if (l < n.length && (a.from - n[l].from || a.startSide - n[l].value.startSide) >= 0) {
        let d = n[l++];
        f.addInner(d.from, d.to, d.value) || u.push(d);
      } else a.rangeIndex == 1 && a.chunkIndex < this.chunk.length && (l == n.length || this.chunkEnd(a.chunkIndex) < n[l].from) && (!s || i > this.chunkEnd(a.chunkIndex) || o < this.chunkPos[a.chunkIndex]) && f.addChunk(this.chunkPos[a.chunkIndex], this.chunk[a.chunkIndex]) ? a.nextChunk() : ((!s || i > a.to || o < a.from || s(a.from, a.to, a.value)) && (f.addInner(a.from, a.to, a.value) || u.push(O0.create(a.from, a.to, a.value))), a.next());
    return f.finishInner(this.nextLayer.isEmpty && !u.length ? zn.empty : this.nextLayer.update({ add: u, filter: s, filterFrom: i, filterTo: o }));
  }
  /**
  Map this range set through a set of changes, return the new set.
  */
  map(e) {
    if (e.empty || this.isEmpty)
      return this;
    let n = [], r = [], i = -1;
    for (let s = 0; s < this.chunk.length; s++) {
      let a = this.chunkPos[s], l = this.chunk[s], u = e.touchesRange(a, a + l.length);
      if (u === !1)
        i = Math.max(i, l.maxPoint), n.push(l), r.push(e.mapPos(a));
      else if (u === !0) {
        let { mapped: f, pos: d } = l.map(a, e);
        f && (i = Math.max(i, f.maxPoint), n.push(f), r.push(d));
      }
    }
    let o = this.nextLayer.map(e);
    return n.length == 0 ? o : new zn(r, n, o || zn.empty, i);
  }
  /**
  Iterate over the ranges that touch the region `from` to `to`,
  calling `f` for each. There is no guarantee that the ranges will
  be reported in any specific order. When the callback returns
  `false`, iteration stops.
  */
  between(e, n, r) {
    if (!this.isEmpty) {
      for (let i = 0; i < this.chunk.length; i++) {
        let o = this.chunkPos[i], s = this.chunk[i];
        if (n >= o && e <= o + s.length && s.between(o, e - o, n - o, r) === !1)
          return;
      }
      this.nextLayer.between(e, n, r);
    }
  }
  /**
  Iterate over the ranges in this set, in order, including all
  ranges that end at or after `from`.
  */
  iter(e = 0) {
    return Of.from([this]).goto(e);
  }
  /**
  @internal
  */
  get isEmpty() {
    return this.nextLayer == this;
  }
  /**
  Iterate over the ranges in a collection of sets, in order,
  starting from `from`.
  */
  static iter(e, n = 0) {
    return Of.from(e).goto(n);
  }
  /**
  Iterate over two groups of sets, calling methods on `comparator`
  to notify it of possible differences.
  */
  static compare(e, n, r, i, o = -1) {
    let s = e.filter((d) => d.maxPoint > 0 || !d.isEmpty && d.maxPoint >= o), a = n.filter((d) => d.maxPoint > 0 || !d.isEmpty && d.maxPoint >= o), l = lj(s, a, r), u = new qu(s, l, o), f = new qu(a, l, o);
    r.iterGaps((d, h, p) => cj(u, d, f, h, p, i)), r.empty && r.length == 0 && cj(u, 0, f, 0, 0, i);
  }
  /**
  Compare the contents of two groups of range sets, returning true
  if they are equivalent in the given range.
  */
  static eq(e, n, r = 0, i) {
    i == null && (i = 999999999);
    let o = e.filter((f) => !f.isEmpty && n.indexOf(f) < 0), s = n.filter((f) => !f.isEmpty && e.indexOf(f) < 0);
    if (o.length != s.length)
      return !1;
    if (!o.length)
      return !0;
    let a = lj(o, s), l = new qu(o, a, 0).goto(r), u = new qu(s, a, 0).goto(r);
    for (; ; ) {
      if (l.to != u.to || !_0(l.active, u.active) || l.point && (!u.point || !l.point.eq(u.point)))
        return !1;
      if (l.to > i)
        return !0;
      l.next(), u.next();
    }
  }
  /**
  Iterate over a group of range sets at the same time, notifying
  the iterator about the ranges covering every given piece of
  content. Returns the open count (see
  [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end
  of the iteration.
  */
  static spans(e, n, r, i, o = -1) {
    let s = new qu(e, null, o).goto(n), a = n, l = s.openStart;
    for (; ; ) {
      let u = Math.min(s.to, r);
      if (s.point) {
        let f = s.activeForPoint(s.to), d = s.pointFrom < n ? f.length + 1 : s.point.startSide < 0 ? f.length : Math.min(f.length, l);
        i.point(a, u, s.point, f, d, s.pointRank), l = Math.min(s.openEnd(u), f.length);
      } else u > a && (i.span(a, u, s.active, l), l = s.openEnd(u));
      if (s.to > r)
        return l + (s.point && s.to > r ? 1 : 0);
      a = s.to, s.next();
    }
  }
  /**
  Create a range set for the given range or array of ranges. By
  default, this expects the ranges to be _sorted_ (by start
  position and, if two start at the same position,
  `value.startSide`). You can pass `true` as second argument to
  cause the method to sort them.
  */
  static of(e, n = !1) {
    let r = new rs();
    for (let i of e instanceof O0 ? [e] : n ? q9(e) : e)
      r.add(i.from, i.to, i.value);
    return r.finish();
  }
  /**
  Join an array of range sets into a single set.
  */
  static join(e) {
    if (!e.length)
      return zn.empty;
    let n = e[e.length - 1];
    for (let r = e.length - 2; r >= 0; r--)
      for (let i = e[r]; i != zn.empty; i = i.nextLayer)
        n = new zn(i.chunkPos, i.chunk, n, Math.max(i.maxPoint, n.maxPoint));
    return n;
  }
}
zn.empty = /* @__PURE__ */ new zn([], [], null, -1);
function q9(t) {
  if (t.length > 1)
    for (let e = t[0], n = 1; n < t.length; n++) {
      let r = t[n];
      if (E0(e, r) > 0)
        return t.slice().sort(E0);
      e = r;
    }
  return t;
}
zn.empty.nextLayer = zn.empty;
class rs {
  finishChunk(e) {
    this.chunks.push(new k1(this.from, this.to, this.value, this.maxPoint)), this.chunkPos.push(this.chunkStart), this.chunkStart = -1, this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint), this.maxPoint = -1, e && (this.from = [], this.to = [], this.value = []);
  }
  /**
  Create an empty builder.
  */
  constructor() {
    this.chunks = [], this.chunkPos = [], this.chunkStart = -1, this.last = null, this.lastFrom = -1e9, this.lastTo = -1e9, this.from = [], this.to = [], this.value = [], this.maxPoint = -1, this.setMaxPoint = -1, this.nextLayer = null;
  }
  /**
  Add a range. Ranges should be added in sorted (by `from` and
  `value.startSide`) order.
  */
  add(e, n, r) {
    this.addInner(e, n, r) || (this.nextLayer || (this.nextLayer = new rs())).add(e, n, r);
  }
  /**
  @internal
  */
  addInner(e, n, r) {
    let i = e - this.lastTo || r.startSide - this.last.endSide;
    if (i <= 0 && (e - this.lastFrom || r.startSide - this.last.startSide) < 0)
      throw new Error("Ranges must be added sorted by `from` position and `startSide`");
    return i < 0 ? !1 : (this.from.length == 250 && this.finishChunk(!0), this.chunkStart < 0 && (this.chunkStart = e), this.from.push(e - this.chunkStart), this.to.push(n - this.chunkStart), this.last = r, this.lastFrom = e, this.lastTo = n, this.value.push(r), r.point && (this.maxPoint = Math.max(this.maxPoint, n - e)), !0);
  }
  /**
  @internal
  */
  addChunk(e, n) {
    if ((e - this.lastTo || n.value[0].startSide - this.last.endSide) < 0)
      return !1;
    this.from.length && this.finishChunk(!0), this.setMaxPoint = Math.max(this.setMaxPoint, n.maxPoint), this.chunks.push(n), this.chunkPos.push(e);
    let r = n.value.length - 1;
    return this.last = n.value[r], this.lastFrom = n.from[r] + e, this.lastTo = n.to[r] + e, !0;
  }
  /**
  Finish the range set. Returns the new set. The builder can't be
  used anymore after this has been called.
  */
  finish() {
    return this.finishInner(zn.empty);
  }
  /**
  @internal
  */
  finishInner(e) {
    if (this.from.length && this.finishChunk(!1), this.chunks.length == 0)
      return e;
    let n = zn.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(e) : e, this.setMaxPoint);
    return this.from = null, n;
  }
}
function lj(t, e, n) {
  let r = /* @__PURE__ */ new Map();
  for (let o of t)
    for (let s = 0; s < o.chunk.length; s++)
      o.chunk[s].maxPoint <= 0 && r.set(o.chunk[s], o.chunkPos[s]);
  let i = /* @__PURE__ */ new Set();
  for (let o of e)
    for (let s = 0; s < o.chunk.length; s++) {
      let a = r.get(o.chunk[s]);
      a != null && (n ? n.mapPos(a) : a) == o.chunkPos[s] && !n?.touchesRange(a, a + o.chunk[s].length) && i.add(o.chunk[s]);
    }
  return i;
}
class kO {
  constructor(e, n, r, i = 0) {
    this.layer = e, this.skip = n, this.minPoint = r, this.rank = i;
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  get endSide() {
    return this.value ? this.value.endSide : 0;
  }
  goto(e, n = -1e9) {
    return this.chunkIndex = this.rangeIndex = 0, this.gotoInner(e, n, !1), this;
  }
  gotoInner(e, n, r) {
    for (; this.chunkIndex < this.layer.chunk.length; ) {
      let i = this.layer.chunk[this.chunkIndex];
      if (!(this.skip && this.skip.has(i) || this.layer.chunkEnd(this.chunkIndex) < e || i.maxPoint < this.minPoint))
        break;
      this.chunkIndex++, r = !1;
    }
    if (this.chunkIndex < this.layer.chunk.length) {
      let i = this.layer.chunk[this.chunkIndex].findIndex(e - this.layer.chunkPos[this.chunkIndex], n, !0);
      (!r || this.rangeIndex < i) && this.setRangeIndex(i);
    }
    this.next();
  }
  forward(e, n) {
    (this.to - e || this.endSide - n) < 0 && this.gotoInner(e, n, !0);
  }
  next() {
    for (; ; )
      if (this.chunkIndex == this.layer.chunk.length) {
        this.from = this.to = 1e9, this.value = null;
        break;
      } else {
        let e = this.layer.chunkPos[this.chunkIndex], n = this.layer.chunk[this.chunkIndex], r = e + n.from[this.rangeIndex];
        if (this.from = r, this.to = e + n.to[this.rangeIndex], this.value = n.value[this.rangeIndex], this.setRangeIndex(this.rangeIndex + 1), this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)
          break;
      }
  }
  setRangeIndex(e) {
    if (e == this.layer.chunk[this.chunkIndex].value.length) {
      if (this.chunkIndex++, this.skip)
        for (; this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]); )
          this.chunkIndex++;
      this.rangeIndex = 0;
    } else
      this.rangeIndex = e;
  }
  nextChunk() {
    this.chunkIndex++, this.rangeIndex = 0, this.next();
  }
  compare(e) {
    return this.from - e.from || this.startSide - e.startSide || this.rank - e.rank || this.to - e.to || this.endSide - e.endSide;
  }
}
class Of {
  constructor(e) {
    this.heap = e;
  }
  static from(e, n = null, r = -1) {
    let i = [];
    for (let o = 0; o < e.length; o++)
      for (let s = e[o]; !s.isEmpty; s = s.nextLayer)
        s.maxPoint >= r && i.push(new kO(s, n, r, o));
    return i.length == 1 ? i[0] : new Of(i);
  }
  get startSide() {
    return this.value ? this.value.startSide : 0;
  }
  goto(e, n = -1e9) {
    for (let r of this.heap)
      r.goto(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      iv(this.heap, r);
    return this.next(), this;
  }
  forward(e, n) {
    for (let r of this.heap)
      r.forward(e, n);
    for (let r = this.heap.length >> 1; r >= 0; r--)
      iv(this.heap, r);
    (this.to - e || this.value.endSide - n) < 0 && this.next();
  }
  next() {
    if (this.heap.length == 0)
      this.from = this.to = 1e9, this.value = null, this.rank = -1;
    else {
      let e = this.heap[0];
      this.from = e.from, this.to = e.to, this.value = e.value, this.rank = e.rank, e.value && e.next(), iv(this.heap, 0);
    }
  }
}
function iv(t, e) {
  for (let n = t[e]; ; ) {
    let r = (e << 1) + 1;
    if (r >= t.length)
      break;
    let i = t[r];
    if (r + 1 < t.length && i.compare(t[r + 1]) >= 0 && (i = t[r + 1], r++), n.compare(i) < 0)
      break;
    t[r] = n, t[e] = i, e = r;
  }
}
class qu {
  constructor(e, n, r) {
    this.minPoint = r, this.active = [], this.activeTo = [], this.activeRank = [], this.minActive = -1, this.point = null, this.pointFrom = 0, this.pointRank = 0, this.to = -1e9, this.endSide = 0, this.openStart = -1, this.cursor = Of.from(e, n, r);
  }
  goto(e, n = -1e9) {
    return this.cursor.goto(e, n), this.active.length = this.activeTo.length = this.activeRank.length = 0, this.minActive = -1, this.to = e, this.endSide = n, this.openStart = -1, this.next(), this;
  }
  forward(e, n) {
    for (; this.minActive > -1 && (this.activeTo[this.minActive] - e || this.active[this.minActive].endSide - n) < 0; )
      this.removeActive(this.minActive);
    this.cursor.forward(e, n);
  }
  removeActive(e) {
    wh(this.active, e), wh(this.activeTo, e), wh(this.activeRank, e), this.minActive = uj(this.active, this.activeTo);
  }
  addActive(e) {
    let n = 0, { value: r, to: i, rank: o } = this.cursor;
    for (; n < this.activeRank.length && (o - this.activeRank[n] || i - this.activeTo[n]) > 0; )
      n++;
    jh(this.active, n, r), jh(this.activeTo, n, i), jh(this.activeRank, n, o), e && jh(e, n, this.cursor.from), this.minActive = uj(this.active, this.activeTo);
  }
  // After calling this, if `this.point` != null, the next range is a
  // point. Otherwise, it's a regular range, covered by `this.active`.
  next() {
    let e = this.to, n = this.point;
    this.point = null;
    let r = this.openStart < 0 ? [] : null;
    for (; ; ) {
      let i = this.minActive;
      if (i > -1 && (this.activeTo[i] - this.cursor.from || this.active[i].endSide - this.cursor.startSide) < 0) {
        if (this.activeTo[i] > e) {
          this.to = this.activeTo[i], this.endSide = this.active[i].endSide;
          break;
        }
        this.removeActive(i), r && wh(r, i);
      } else if (this.cursor.value)
        if (this.cursor.from > e) {
          this.to = this.cursor.from, this.endSide = this.cursor.startSide;
          break;
        } else {
          let o = this.cursor.value;
          if (!o.point)
            this.addActive(r), this.cursor.next();
          else if (n && this.cursor.to == this.to && this.cursor.from < this.cursor.to)
            this.cursor.next();
          else {
            this.point = o, this.pointFrom = this.cursor.from, this.pointRank = this.cursor.rank, this.to = this.cursor.to, this.endSide = o.endSide, this.cursor.next(), this.forward(this.to, this.endSide);
            break;
          }
        }
      else {
        this.to = this.endSide = 1e9;
        break;
      }
    }
    if (r) {
      this.openStart = 0;
      for (let i = r.length - 1; i >= 0 && r[i] < e; i--)
        this.openStart++;
    }
  }
  activeForPoint(e) {
    if (!this.active.length)
      return this.active;
    let n = [];
    for (let r = this.active.length - 1; r >= 0 && !(this.activeRank[r] < this.pointRank); r--)
      (this.activeTo[r] > e || this.activeTo[r] == e && this.active[r].endSide >= this.point.endSide) && n.push(this.active[r]);
    return n.reverse();
  }
  openEnd(e) {
    let n = 0;
    for (let r = this.activeTo.length - 1; r >= 0 && this.activeTo[r] > e; r--)
      n++;
    return n;
  }
}
function cj(t, e, n, r, i, o) {
  t.goto(e), n.goto(r);
  let s = r + i, a = r, l = r - e;
  for (; ; ) {
    let u = t.to + l - n.to, f = u || t.endSide - n.endSide, d = f < 0 ? t.to + l : n.to, h = Math.min(d, s);
    if (t.point || n.point ? t.point && n.point && (t.point == n.point || t.point.eq(n.point)) && _0(t.activeForPoint(t.to), n.activeForPoint(n.to)) || o.comparePoint(a, h, t.point, n.point) : h > a && !_0(t.active, n.active) && o.compareRange(a, h, t.active, n.active), d > s)
      break;
    (u || t.openEnd != n.openEnd) && o.boundChange && o.boundChange(d), a = d, f <= 0 && t.next(), f >= 0 && n.next();
  }
}
function _0(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (t[n] != e[n] && !t[n].eq(e[n]))
      return !1;
  return !0;
}
function wh(t, e) {
  for (let n = e, r = t.length - 1; n < r; n++)
    t[n] = t[n + 1];
  t.pop();
}
function jh(t, e, n) {
  for (let r = t.length - 1; r >= e; r--)
    t[r + 1] = t[r];
  t[e] = n;
}
function uj(t, e) {
  let n = -1, r = 1e9;
  for (let i = 0; i < e.length; i++)
    (e[i] - r || t[i].endSide - t[n].endSide) < 0 && (n = i, r = e[i]);
  return n;
}
function xu(t, e, n = t.length) {
  let r = 0;
  for (let i = 0; i < n && i < t.length; )
    t.charCodeAt(i) == 9 ? (r += e - r % e, i++) : (r++, i = Mi(t, i));
  return r;
}
function A0(t, e, n, r) {
  for (let i = 0, o = 0; ; ) {
    if (o >= e)
      return i;
    if (i == t.length)
      break;
    o += t.charCodeAt(i) == 9 ? n - o % n : 1, i = Mi(t, i);
  }
  return r === !0 ? -1 : t.length;
}
const M0 = "ͼ", fj = typeof Symbol > "u" ? "__" + M0 : Symbol.for(M0), T0 = typeof Symbol > "u" ? "__styleSet" + Math.floor(Math.random() * 1e8) : Symbol("styleSet"), dj = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : {};
class el {
  // :: (Object<Style>, ?{finish: ?(string) → string})
  // Create a style module from the given spec.
  //
  // When `finish` is given, it is called on regular (non-`@`)
  // selectors (after `&` expansion) to compute the final selector.
  constructor(e, n) {
    this.rules = [];
    let { finish: r } = n || {};
    function i(s) {
      return /^@/.test(s) ? [s] : s.split(/,\s*/);
    }
    function o(s, a, l, u) {
      let f = [], d = /^@(\w+)\b/.exec(s[0]), h = d && d[1] == "keyframes";
      if (d && a == null) return l.push(s[0] + ";");
      for (let p in a) {
        let m = a[p];
        if (/&/.test(p))
          o(
            p.split(/,\s*/).map((v) => s.map((g) => v.replace(/&/, g))).reduce((v, g) => v.concat(g)),
            m,
            l
          );
        else if (m && typeof m == "object") {
          if (!d) throw new RangeError("The value of a property (" + p + ") should be a primitive value.");
          o(i(p), m, f, h);
        } else m != null && f.push(p.replace(/_.*/, "").replace(/[A-Z]/g, (v) => "-" + v.toLowerCase()) + ": " + m + ";");
      }
      (f.length || h) && l.push((r && !d && !u ? s.map(r) : s).join(", ") + " {" + f.join(" ") + "}");
    }
    for (let s in e) o(i(s), e[s], this.rules);
  }
  // :: () → string
  // Returns a string containing the module's CSS rules.
  getRules() {
    return this.rules.join(`
`);
  }
  // :: () → string
  // Generate a new unique CSS class name.
  static newName() {
    let e = dj[fj] || 1;
    return dj[fj] = e + 1, M0 + e.toString(36);
  }
  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})
  //
  // Mount the given set of modules in the given DOM root, which ensures
  // that the CSS rules defined by the module are available in that
  // context.
  //
  // Rules are only added to the document once per root.
  //
  // Rule order will follow the order of the modules, so that rules from
  // modules later in the array take precedence of those from earlier
  // modules. If you call this function multiple times for the same root
  // in a way that changes the order of already mounted modules, the old
  // order will be changed.
  //
  // If a Content Security Policy nonce is provided, it is added to
  // the `<style>` tag generated by the library.
  static mount(e, n, r) {
    let i = e[T0], o = r && r.nonce;
    i ? o && i.setNonce(o) : i = new F9(e, o), i.mount(Array.isArray(n) ? n : [n], e);
  }
}
let hj = /* @__PURE__ */ new Map();
class F9 {
  constructor(e, n) {
    let r = e.ownerDocument || e, i = r.defaultView;
    if (!e.head && e.adoptedStyleSheets && i.CSSStyleSheet) {
      let o = hj.get(r);
      if (o) return e[T0] = o;
      this.sheet = new i.CSSStyleSheet(), hj.set(r, this);
    } else
      this.styleTag = r.createElement("style"), n && this.styleTag.setAttribute("nonce", n);
    this.modules = [], e[T0] = this;
  }
  mount(e, n) {
    let r = this.sheet, i = 0, o = 0;
    for (let s = 0; s < e.length; s++) {
      let a = e[s], l = this.modules.indexOf(a);
      if (l < o && l > -1 && (this.modules.splice(l, 1), o--, l = -1), l == -1) {
        if (this.modules.splice(o++, 0, a), r) for (let u = 0; u < a.rules.length; u++)
          r.insertRule(a.rules[u], i++);
      } else {
        for (; o < l; ) i += this.modules[o++].rules.length;
        i += a.rules.length, o++;
      }
    }
    if (r)
      n.adoptedStyleSheets.indexOf(this.sheet) < 0 && (n.adoptedStyleSheets = [this.sheet, ...n.adoptedStyleSheets]);
    else {
      let s = "";
      for (let l = 0; l < this.modules.length; l++)
        s += this.modules[l].getRules() + `
`;
      this.styleTag.textContent = s;
      let a = n.head || n;
      this.styleTag.parentNode != a && a.insertBefore(this.styleTag, a.firstChild);
    }
  }
  setNonce(e) {
    this.styleTag && this.styleTag.getAttribute("nonce") != e && this.styleTag.setAttribute("nonce", e);
  }
}
var tl = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, Ef = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, U9 = typeof navigator < "u" && /Mac/.test(navigator.platform), V9 = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var Ai = 0; Ai < 10; Ai++) tl[48 + Ai] = tl[96 + Ai] = String(Ai);
for (var Ai = 1; Ai <= 24; Ai++) tl[Ai + 111] = "F" + Ai;
for (var Ai = 65; Ai <= 90; Ai++)
  tl[Ai] = String.fromCharCode(Ai + 32), Ef[Ai] = String.fromCharCode(Ai);
for (var ov in tl) Ef.hasOwnProperty(ov) || (Ef[ov] = tl[ov]);
function W9(t) {
  var e = U9 && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || V9 && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? Ef : tl)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
function vr() {
  var t = arguments[0];
  typeof t == "string" && (t = document.createElement(t));
  var e = 1, n = arguments[1];
  if (n && typeof n == "object" && n.nodeType == null && !Array.isArray(n)) {
    for (var r in n) if (Object.prototype.hasOwnProperty.call(n, r)) {
      var i = n[r];
      typeof i == "string" ? t.setAttribute(r, i) : i != null && (t[r] = i);
    }
    e++;
  }
  for (; e < arguments.length; e++) SO(t, arguments[e]);
  return t;
}
function SO(t, e) {
  if (typeof e == "string")
    t.appendChild(document.createTextNode(e));
  else if (e != null) if (e.nodeType != null)
    t.appendChild(e);
  else if (Array.isArray(e))
    for (var n = 0; n < e.length; n++) SO(t, e[n]);
  else
    throw new RangeError("Unsupported child node: " + e);
}
function _f(t) {
  let e;
  return t.nodeType == 11 ? e = t.getSelection ? t : t.ownerDocument : e = t, e.getSelection();
}
function $0(t, e) {
  return e ? t == e || t.contains(e.nodeType != 1 ? e.parentNode : e) : !1;
}
function dp(t, e) {
  if (!e.anchorNode)
    return !1;
  try {
    return $0(t, e.anchorNode);
  } catch {
    return !1;
  }
}
function Af(t) {
  return t.nodeType == 3 ? Jl(t, 0, t.nodeValue.length).getClientRects() : t.nodeType == 1 ? t.getClientRects() : [];
}
function hf(t, e, n, r) {
  return n ? pj(t, e, n, r, -1) || pj(t, e, n, r, 1) : !1;
}
function Gl(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}
function Fp(t) {
  return t.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\d|SECTION|PRE)$/.test(t.nodeName);
}
function pj(t, e, n, r, i) {
  for (; ; ) {
    if (t == n && e == r)
      return !0;
    if (e == (i < 0 ? 0 : Rs(t))) {
      if (t.nodeName == "DIV")
        return !1;
      let o = t.parentNode;
      if (!o || o.nodeType != 1)
        return !1;
      e = Gl(t) + (i < 0 ? 0 : 1), t = o;
    } else if (t.nodeType == 1) {
      if (t = t.childNodes[e + (i < 0 ? -1 : 0)], t.nodeType == 1 && t.contentEditable == "false")
        return !1;
      e = i < 0 ? Rs(t) : 0;
    } else
      return !1;
  }
}
function Rs(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function Zm(t, e) {
  let n = e ? t.left : t.right;
  return { left: n, right: n, top: t.top, bottom: t.bottom };
}
function H9(t) {
  let e = t.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.innerWidth,
    top: 0,
    bottom: t.innerHeight
  };
}
function CO(t, e) {
  let n = e.width / t.offsetWidth, r = e.height / t.offsetHeight;
  return (n > 0.995 && n < 1.005 || !isFinite(n) || Math.abs(e.width - t.offsetWidth) < 1) && (n = 1), (r > 0.995 && r < 1.005 || !isFinite(r) || Math.abs(e.height - t.offsetHeight) < 1) && (r = 1), { scaleX: n, scaleY: r };
}
function K9(t, e, n, r, i, o, s, a) {
  let l = t.ownerDocument, u = l.defaultView || window;
  for (let f = t, d = !1; f && !d; )
    if (f.nodeType == 1) {
      let h, p = f == l.body, m = 1, v = 1;
      if (p)
        h = H9(u);
      else {
        if (/^(fixed|sticky)$/.test(getComputedStyle(f).position) && (d = !0), f.scrollHeight <= f.clientHeight && f.scrollWidth <= f.clientWidth) {
          f = f.assignedSlot || f.parentNode;
          continue;
        }
        let x = f.getBoundingClientRect();
        ({ scaleX: m, scaleY: v } = CO(f, x)), h = {
          left: x.left,
          right: x.left + f.clientWidth * m,
          top: x.top,
          bottom: x.top + f.clientHeight * v
        };
      }
      let g = 0, b = 0;
      if (i == "nearest")
        e.top < h.top ? (b = e.top - (h.top + s), n > 0 && e.bottom > h.bottom + b && (b = e.bottom - h.bottom + s)) : e.bottom > h.bottom && (b = e.bottom - h.bottom + s, n < 0 && e.top - b < h.top && (b = e.top - (h.top + s)));
      else {
        let x = e.bottom - e.top, w = h.bottom - h.top;
        b = (i == "center" && x <= w ? e.top + x / 2 - w / 2 : i == "start" || i == "center" && n < 0 ? e.top - s : e.bottom - w + s) - h.top;
      }
      if (r == "nearest" ? e.left < h.left ? (g = e.left - (h.left + o), n > 0 && e.right > h.right + g && (g = e.right - h.right + o)) : e.right > h.right && (g = e.right - h.right + o, n < 0 && e.left < h.left + g && (g = e.left - (h.left + o))) : g = (r == "center" ? e.left + (e.right - e.left) / 2 - (h.right - h.left) / 2 : r == "start" == a ? e.left - o : e.right - (h.right - h.left) + o) - h.left, g || b)
        if (p)
          u.scrollBy(g, b);
        else {
          let x = 0, w = 0;
          if (b) {
            let j = f.scrollTop;
            f.scrollTop += b / v, w = (f.scrollTop - j) * v;
          }
          if (g) {
            let j = f.scrollLeft;
            f.scrollLeft += g / m, x = (f.scrollLeft - j) * m;
          }
          e = {
            left: e.left - x,
            top: e.top - w,
            right: e.right - x,
            bottom: e.bottom - w
          }, x && Math.abs(x - g) < 1 && (r = "nearest"), w && Math.abs(w - b) < 1 && (i = "nearest");
        }
      if (p)
        break;
      (e.top < h.top || e.bottom > h.bottom || e.left < h.left || e.right > h.right) && (e = {
        left: Math.max(e.left, h.left),
        right: Math.min(e.right, h.right),
        top: Math.max(e.top, h.top),
        bottom: Math.min(e.bottom, h.bottom)
      }), f = f.assignedSlot || f.parentNode;
    } else if (f.nodeType == 11)
      f = f.host;
    else
      break;
}
function G9(t) {
  let e = t.ownerDocument, n, r;
  for (let i = t.parentNode; i && !(i == e.body || n && r); )
    if (i.nodeType == 1)
      !r && i.scrollHeight > i.clientHeight && (r = i), !n && i.scrollWidth > i.clientWidth && (n = i), i = i.assignedSlot || i.parentNode;
    else if (i.nodeType == 11)
      i = i.host;
    else
      break;
  return { x: n, y: r };
}
class J9 {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  eq(e) {
    return this.anchorNode == e.anchorNode && this.anchorOffset == e.anchorOffset && this.focusNode == e.focusNode && this.focusOffset == e.focusOffset;
  }
  setRange(e) {
    let { anchorNode: n, focusNode: r } = e;
    this.set(n, Math.min(e.anchorOffset, n ? Rs(n) : 0), r, Math.min(e.focusOffset, r ? Rs(r) : 0));
  }
  set(e, n, r, i) {
    this.anchorNode = e, this.anchorOffset = n, this.focusNode = r, this.focusOffset = i;
  }
}
let xc = null;
function OO(t) {
  if (t.setActive)
    return t.setActive();
  if (xc)
    return t.focus(xc);
  let e = [];
  for (let n = t; n && (e.push(n, n.scrollTop, n.scrollLeft), n != n.ownerDocument); n = n.parentNode)
    ;
  if (t.focus(xc == null ? {
    get preventScroll() {
      return xc = { preventScroll: !0 }, !0;
    }
  } : void 0), !xc) {
    xc = !1;
    for (let n = 0; n < e.length; ) {
      let r = e[n++], i = e[n++], o = e[n++];
      r.scrollTop != i && (r.scrollTop = i), r.scrollLeft != o && (r.scrollLeft = o);
    }
  }
}
let mj;
function Jl(t, e, n = e) {
  let r = mj || (mj = document.createRange());
  return r.setEnd(t, n), r.setStart(t, e), r;
}
function Hc(t, e, n, r) {
  let i = { key: e, code: e, keyCode: n, which: n, cancelable: !0 };
  r && ({ altKey: i.altKey, ctrlKey: i.ctrlKey, shiftKey: i.shiftKey, metaKey: i.metaKey } = r);
  let o = new KeyboardEvent("keydown", i);
  o.synthetic = !0, t.dispatchEvent(o);
  let s = new KeyboardEvent("keyup", i);
  return s.synthetic = !0, t.dispatchEvent(s), o.defaultPrevented || s.defaultPrevented;
}
function Y9(t) {
  for (; t; ) {
    if (t && (t.nodeType == 9 || t.nodeType == 11 && t.host))
      return t;
    t = t.assignedSlot || t.parentNode;
  }
  return null;
}
function EO(t) {
  for (; t.attributes.length; )
    t.removeAttributeNode(t.attributes[0]);
}
function Q9(t, e) {
  let n = e.focusNode, r = e.focusOffset;
  if (!n || e.anchorNode != n || e.anchorOffset != r)
    return !1;
  for (r = Math.min(r, Rs(n)); ; )
    if (r) {
      if (n.nodeType != 1)
        return !1;
      let i = n.childNodes[r - 1];
      i.contentEditable == "false" ? r-- : (n = i, r = Rs(n));
    } else {
      if (n == t)
        return !0;
      r = Gl(n), n = n.parentNode;
    }
}
function _O(t) {
  return t.scrollTop > Math.max(1, t.scrollHeight - t.clientHeight - 4);
}
function AO(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r > 0)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r > 0) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r - 1], r = Rs(n);
    } else if (n.parentNode && !Fp(n))
      r = Gl(n), n = n.parentNode;
    else
      return null;
  }
}
function MO(t, e) {
  for (let n = t, r = e; ; ) {
    if (n.nodeType == 3 && r < n.nodeValue.length)
      return { node: n, offset: r };
    if (n.nodeType == 1 && r < n.childNodes.length) {
      if (n.contentEditable == "false")
        return null;
      n = n.childNodes[r], r = 0;
    } else if (n.parentNode && !Fp(n))
      r = Gl(n) + 1, n = n.parentNode;
    else
      return null;
  }
}
class Ni {
  constructor(e, n, r = !0) {
    this.node = e, this.offset = n, this.precise = r;
  }
  static before(e, n) {
    return new Ni(e.parentNode, Gl(e), n);
  }
  static after(e, n) {
    return new Ni(e.parentNode, Gl(e) + 1, n);
  }
}
const S1 = [];
class yr {
  constructor() {
    this.parent = null, this.dom = null, this.flags = 2;
  }
  get overrideDOMText() {
    return null;
  }
  get posAtStart() {
    return this.parent ? this.parent.posBefore(this) : 0;
  }
  get posAtEnd() {
    return this.posAtStart + this.length;
  }
  posBefore(e) {
    let n = this.posAtStart;
    for (let r of this.children) {
      if (r == e)
        return n;
      n += r.length + r.breakAfter;
    }
    throw new RangeError("Invalid child in posBefore");
  }
  posAfter(e) {
    return this.posBefore(e) + e.length;
  }
  sync(e, n) {
    if (this.flags & 2) {
      let r = this.dom, i = null, o;
      for (let s of this.children) {
        if (s.flags & 7) {
          if (!s.dom && (o = i ? i.nextSibling : r.firstChild)) {
            let a = yr.get(o);
            (!a || !a.parent && a.canReuseDOM(s)) && s.reuseDOM(o);
          }
          s.sync(e, n), s.flags &= -8;
        }
        if (o = i ? i.nextSibling : r.firstChild, n && !n.written && n.node == r && o != s.dom && (n.written = !0), s.dom.parentNode == r)
          for (; o && o != s.dom; )
            o = gj(o);
        else
          r.insertBefore(s.dom, o);
        i = s.dom;
      }
      for (o = i ? i.nextSibling : r.firstChild, o && n && n.node == r && (n.written = !0); o; )
        o = gj(o);
    } else if (this.flags & 1)
      for (let r of this.children)
        r.flags & 7 && (r.sync(e, n), r.flags &= -8);
  }
  reuseDOM(e) {
  }
  localPosFromDOM(e, n) {
    let r;
    if (e == this.dom)
      r = this.dom.childNodes[n];
    else {
      let i = Rs(e) == 0 ? 0 : n == 0 ? -1 : 1;
      for (; ; ) {
        let o = e.parentNode;
        if (o == this.dom)
          break;
        i == 0 && o.firstChild != o.lastChild && (e == o.firstChild ? i = -1 : i = 1), e = o;
      }
      i < 0 ? r = e : r = e.nextSibling;
    }
    if (r == this.dom.firstChild)
      return 0;
    for (; r && !yr.get(r); )
      r = r.nextSibling;
    if (!r)
      return this.length;
    for (let i = 0, o = 0; ; i++) {
      let s = this.children[i];
      if (s.dom == r)
        return o;
      o += s.length + s.breakAfter;
    }
  }
  domBoundsAround(e, n, r = 0) {
    let i = -1, o = -1, s = -1, a = -1;
    for (let l = 0, u = r, f = r; l < this.children.length; l++) {
      let d = this.children[l], h = u + d.length;
      if (u < e && h > n)
        return d.domBoundsAround(e, n, u);
      if (h >= e && i == -1 && (i = l, o = u), u > n && d.dom.parentNode == this.dom) {
        s = l, a = f;
        break;
      }
      f = h, u = h + d.breakAfter;
    }
    return {
      from: o,
      to: a < 0 ? r + this.length : a,
      startDOM: (i ? this.children[i - 1].dom.nextSibling : null) || this.dom.firstChild,
      endDOM: s < this.children.length && s >= 0 ? this.children[s].dom : null
    };
  }
  markDirty(e = !1) {
    this.flags |= 2, this.markParentsDirty(e);
  }
  markParentsDirty(e) {
    for (let n = this.parent; n; n = n.parent) {
      if (e && (n.flags |= 2), n.flags & 1)
        return;
      n.flags |= 1, e = !1;
    }
  }
  setParent(e) {
    this.parent != e && (this.parent = e, this.flags & 7 && this.markParentsDirty(!0));
  }
  setDOM(e) {
    this.dom != e && (this.dom && (this.dom.cmView = null), this.dom = e, e.cmView = this);
  }
  get rootView() {
    for (let e = this; ; ) {
      let n = e.parent;
      if (!n)
        return e;
      e = n;
    }
  }
  replaceChildren(e, n, r = S1) {
    this.markDirty();
    for (let i = e; i < n; i++) {
      let o = this.children[i];
      o.parent == this && r.indexOf(o) < 0 && o.destroy();
    }
    r.length < 250 ? this.children.splice(e, n - e, ...r) : this.children = [].concat(this.children.slice(0, e), r, this.children.slice(n));
    for (let i = 0; i < r.length; i++)
      r[i].setParent(this);
  }
  ignoreMutation(e) {
    return !1;
  }
  ignoreEvent(e) {
    return !1;
  }
  childCursor(e = this.length) {
    return new TO(this.children, e, this.children.length);
  }
  childPos(e, n = 1) {
    return this.childCursor().findPos(e, n);
  }
  toString() {
    let e = this.constructor.name.replace("View", "");
    return e + (this.children.length ? "(" + this.children.join() + ")" : this.length ? "[" + (e == "Text" ? this.text : this.length) + "]" : "") + (this.breakAfter ? "#" : "");
  }
  static get(e) {
    return e.cmView;
  }
  get isEditable() {
    return !0;
  }
  get isWidget() {
    return !1;
  }
  get isHidden() {
    return !1;
  }
  merge(e, n, r, i, o, s) {
    return !1;
  }
  become(e) {
    return !1;
  }
  canReuseDOM(e) {
    return e.constructor == this.constructor && !((this.flags | e.flags) & 8);
  }
  // When this is a zero-length view with a side, this should return a
  // number <= 0 to indicate it is before its position, or a
  // number > 0 when after its position.
  getSide() {
    return 0;
  }
  destroy() {
    for (let e of this.children)
      e.parent == this && e.destroy();
    this.parent = null;
  }
}
yr.prototype.breakAfter = 0;
function gj(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class TO {
  constructor(e, n, r) {
    this.children = e, this.pos = n, this.i = r, this.off = 0;
  }
  findPos(e, n = 1) {
    for (; ; ) {
      if (e > this.pos || e == this.pos && (n > 0 || this.i == 0 || this.children[this.i - 1].breakAfter))
        return this.off = e - this.pos, this;
      let r = this.children[--this.i];
      this.pos -= r.length + r.breakAfter;
    }
  }
}
function $O(t, e, n, r, i, o, s, a, l) {
  let { children: u } = t, f = u.length ? u[e] : null, d = o.length ? o[o.length - 1] : null, h = d ? d.breakAfter : s;
  if (!(e == r && f && !s && !h && o.length < 2 && f.merge(n, i, o.length ? d : null, n == 0, a, l))) {
    if (r < u.length) {
      let p = u[r];
      p && (i < p.length || p.breakAfter && d?.breakAfter) ? (e == r && (p = p.split(i), i = 0), !h && d && p.merge(0, i, d, !0, 0, l) ? o[o.length - 1] = p : ((i || p.children.length && !p.children[0].length) && p.merge(0, i, null, !1, 0, l), o.push(p))) : p?.breakAfter && (d ? d.breakAfter = 1 : s = 1), r++;
    }
    for (f && (f.breakAfter = s, n > 0 && (!s && o.length && f.merge(n, f.length, o[0], !1, a, 0) ? f.breakAfter = o.shift().breakAfter : (n < f.length || f.children.length && f.children[f.children.length - 1].length == 0) && f.merge(n, f.length, null, !1, a, 0), e++)); e < r && o.length; )
      if (u[r - 1].become(o[o.length - 1]))
        r--, o.pop(), l = o.length ? 0 : a;
      else if (u[e].become(o[0]))
        e++, o.shift(), a = o.length ? 0 : l;
      else
        break;
    !o.length && e && r < u.length && !u[e - 1].breakAfter && u[r].merge(0, 0, u[e - 1], !1, a, l) && e--, (e < r || o.length) && t.replaceChildren(e, r, o);
  }
}
function PO(t, e, n, r, i, o) {
  let s = t.childCursor(), { i: a, off: l } = s.findPos(n, 1), { i: u, off: f } = s.findPos(e, -1), d = e - n;
  for (let h of r)
    d += h.length;
  t.length += d, $O(t, u, f, a, l, r, 0, i, o);
}
let Qi = typeof navigator < "u" ? navigator : { userAgent: "", vendor: "", platform: "" }, P0 = typeof document < "u" ? document : { documentElement: { style: {} } };
const R0 = /* @__PURE__ */ /Edge\/(\d+)/.exec(Qi.userAgent), RO = /* @__PURE__ */ /MSIE \d/.test(Qi.userAgent), N0 = /* @__PURE__ */ /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(Qi.userAgent), eg = !!(RO || N0 || R0), vj = !eg && /* @__PURE__ */ /gecko\/(\d+)/i.test(Qi.userAgent), sv = !eg && /* @__PURE__ */ /Chrome\/(\d+)/.exec(Qi.userAgent), X9 = "webkitFontSmoothing" in P0.documentElement.style, NO = !eg && /* @__PURE__ */ /Apple Computer/.test(Qi.vendor), bj = NO && (/* @__PURE__ */ /Mobile\/\w+/.test(Qi.userAgent) || Qi.maxTouchPoints > 2);
var st = {
  mac: bj || /* @__PURE__ */ /Mac/.test(Qi.platform),
  windows: /* @__PURE__ */ /Win/.test(Qi.platform),
  linux: /* @__PURE__ */ /Linux|X11/.test(Qi.platform),
  ie: eg,
  ie_version: RO ? P0.documentMode || 6 : N0 ? +N0[1] : R0 ? +R0[1] : 0,
  gecko: vj,
  gecko_version: vj ? +(/* @__PURE__ */ /Firefox\/(\d+)/.exec(Qi.userAgent) || [0, 0])[1] : 0,
  chrome: !!sv,
  chrome_version: sv ? +sv[1] : 0,
  ios: bj,
  android: /* @__PURE__ */ /Android\b/.test(Qi.userAgent),
  safari: NO,
  webkit_version: X9 ? +(/* @__PURE__ */ /\bAppleWebKit\/(\d+)/.exec(Qi.userAgent) || [0, 0])[1] : 0,
  tabSize: P0.documentElement.style.tabSize != null ? "tab-size" : "-moz-tab-size"
};
const Z9 = 256;
class is extends yr {
  constructor(e) {
    super(), this.text = e;
  }
  get length() {
    return this.text.length;
  }
  createDOM(e) {
    this.setDOM(e || document.createTextNode(this.text));
  }
  sync(e, n) {
    this.dom || this.createDOM(), this.dom.nodeValue != this.text && (n && n.node == this.dom && (n.written = !0), this.dom.nodeValue = this.text);
  }
  reuseDOM(e) {
    e.nodeType == 3 && this.createDOM(e);
  }
  merge(e, n, r) {
    return this.flags & 8 || r && (!(r instanceof is) || this.length - (n - e) + r.length > Z9 || r.flags & 8) ? !1 : (this.text = this.text.slice(0, e) + (r ? r.text : "") + this.text.slice(n), this.markDirty(), !0);
  }
  split(e) {
    let n = new is(this.text.slice(e));
    return this.text = this.text.slice(0, e), this.markDirty(), n.flags |= this.flags & 8, n;
  }
  localPosFromDOM(e, n) {
    return e == this.dom ? n : n ? this.text.length : 0;
  }
  domAtPos(e) {
    return new Ni(this.dom, e);
  }
  domBoundsAround(e, n, r) {
    return { from: r, to: r + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };
  }
  coordsAt(e, n) {
    return eN(this.dom, e, n);
  }
}
class ma extends yr {
  constructor(e, n = [], r = 0) {
    super(), this.mark = e, this.children = n, this.length = r;
    for (let i of n)
      i.setParent(this);
  }
  setAttrs(e) {
    if (EO(e), this.mark.class && (e.className = this.mark.class), this.mark.attrs)
      for (let n in this.mark.attrs)
        e.setAttribute(n, this.mark.attrs[n]);
    return e;
  }
  canReuseDOM(e) {
    return super.canReuseDOM(e) && !((this.flags | e.flags) & 8);
  }
  reuseDOM(e) {
    e.nodeName == this.mark.tagName.toUpperCase() && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    this.dom ? this.flags & 4 && this.setAttrs(this.dom) : this.setDOM(this.setAttrs(document.createElement(this.mark.tagName))), super.sync(e, n);
  }
  merge(e, n, r, i, o, s) {
    return r && (!(r instanceof ma && r.mark.eq(this.mark)) || e && o <= 0 || n < this.length && s <= 0) ? !1 : (PO(this, e, n, r ? r.children.slice() : [], o - 1, s - 1), this.markDirty(), !0);
  }
  split(e) {
    let n = [], r = 0, i = -1, o = 0;
    for (let a of this.children) {
      let l = r + a.length;
      l > e && n.push(r < e ? a.split(e - r) : a), i < 0 && r >= e && (i = o), r = l, o++;
    }
    let s = this.length - e;
    return this.length = e, i > -1 && (this.children.length = i, this.markDirty()), new ma(this.mark, n, s);
  }
  domAtPos(e) {
    return DO(this, e);
  }
  coordsAt(e, n) {
    return zO(this, e, n);
  }
}
function eN(t, e, n) {
  let r = t.nodeValue.length;
  e > r && (e = r);
  let i = e, o = e, s = 0;
  e == 0 && n < 0 || e == r && n >= 0 ? st.chrome || st.gecko || (e ? (i--, s = 1) : o < r && (o++, s = -1)) : n < 0 ? i-- : o < r && o++;
  let a = Jl(t, i, o).getClientRects();
  if (!a.length)
    return null;
  let l = a[(s ? s < 0 : n >= 0) ? 0 : a.length - 1];
  return st.safari && !s && l.width == 0 && (l = Array.prototype.find.call(a, (u) => u.width) || l), s ? Zm(l, s < 0) : l || null;
}
class Ia extends yr {
  static create(e, n, r) {
    return new Ia(e, n, r);
  }
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.side = r, this.prevWidget = null;
  }
  split(e) {
    let n = Ia.create(this.widget, this.length - e, this.side);
    return this.length -= e, n;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  getSide() {
    return this.side;
  }
  merge(e, n, r, i, o, s) {
    return r && (!(r instanceof Ia) || !this.widget.compare(r.widget) || e > 0 && o <= 0 || n < this.length && s <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  become(e) {
    return e instanceof Ia && e.side == this.side && this.widget.constructor == e.widget.constructor ? (this.widget.compare(e.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get overrideDOMText() {
    if (this.length == 0)
      return rr.empty;
    let e = this;
    for (; e.parent; )
      e = e.parent;
    let { view: n } = e, r = n && n.state.doc, i = this.posAtStart;
    return r ? r.slice(i, i + this.length) : rr.empty;
  }
  domAtPos(e) {
    return (this.length ? e == 0 : this.side > 0) ? Ni.before(this.dom) : Ni.after(this.dom, e == this.length);
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    if (r)
      return r;
    let i = this.dom.getClientRects(), o = null;
    if (!i.length)
      return null;
    let s = this.side ? this.side < 0 : e > 0;
    for (let a = s ? i.length - 1 : 0; o = i[a], !(e > 0 ? a == 0 : a == i.length - 1 || o.top < o.bottom); a += s ? -1 : 1)
      ;
    return Zm(o, !s);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  get isHidden() {
    return this.widget.isHidden;
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
}
class iu extends yr {
  constructor(e) {
    super(), this.side = e;
  }
  get length() {
    return 0;
  }
  merge() {
    return !1;
  }
  become(e) {
    return e instanceof iu && e.side == this.side;
  }
  split() {
    return new iu(this.side);
  }
  sync() {
    if (!this.dom) {
      let e = document.createElement("img");
      e.className = "cm-widgetBuffer", e.setAttribute("aria-hidden", "true"), this.setDOM(e);
    }
  }
  getSide() {
    return this.side;
  }
  domAtPos(e) {
    return this.side > 0 ? Ni.before(this.dom) : Ni.after(this.dom);
  }
  localPosFromDOM() {
    return 0;
  }
  domBoundsAround() {
    return null;
  }
  coordsAt(e) {
    return this.dom.getBoundingClientRect();
  }
  get overrideDOMText() {
    return rr.empty;
  }
  get isHidden() {
    return !0;
  }
}
is.prototype.children = Ia.prototype.children = iu.prototype.children = S1;
function DO(t, e) {
  let n = t.dom, { children: r } = t, i = 0;
  for (let o = 0; i < r.length; i++) {
    let s = r[i], a = o + s.length;
    if (!(a == o && s.getSide() <= 0)) {
      if (e > o && e < a && s.dom.parentNode == n)
        return s.domAtPos(e - o);
      if (e <= o)
        break;
      o = a;
    }
  }
  for (let o = i; o > 0; o--) {
    let s = r[o - 1];
    if (s.dom.parentNode == n)
      return s.domAtPos(s.length);
  }
  for (let o = i; o < r.length; o++) {
    let s = r[o];
    if (s.dom.parentNode == n)
      return s.domAtPos(0);
  }
  return new Ni(n, 0);
}
function IO(t, e, n) {
  let r, { children: i } = t;
  n > 0 && e instanceof ma && i.length && (r = i[i.length - 1]) instanceof ma && r.mark.eq(e.mark) ? IO(r, e.children[0], n - 1) : (i.push(e), e.setParent(t)), t.length += e.length;
}
function zO(t, e, n) {
  let r = null, i = -1, o = null, s = -1;
  function a(u, f) {
    for (let d = 0, h = 0; d < u.children.length && h <= f; d++) {
      let p = u.children[d], m = h + p.length;
      m >= f && (p.children.length ? a(p, f - h) : (!o || o.isHidden && (n > 0 || nN(o, p))) && (m > f || h == m && p.getSide() > 0) ? (o = p, s = f - h) : (h < f || h == m && p.getSide() < 0 && !p.isHidden) && (r = p, i = f - h)), h = m;
    }
  }
  a(t, e);
  let l = (n < 0 ? r : o) || r || o;
  return l ? l.coordsAt(Math.max(0, l == r ? i : s), n) : tN(t);
}
function tN(t) {
  let e = t.dom.lastChild;
  if (!e)
    return t.dom.getBoundingClientRect();
  let n = Af(e);
  return n[n.length - 1] || null;
}
function nN(t, e) {
  let n = t.coordsAt(0, 1), r = e.coordsAt(0, 1);
  return n && r && r.top < n.bottom;
}
function D0(t, e) {
  for (let n in t)
    n == "class" && e.class ? e.class += " " + t.class : n == "style" && e.style ? e.style += ";" + t.style : e[n] = t[n];
  return e;
}
const yj = /* @__PURE__ */ Object.create(null);
function Up(t, e, n) {
  if (t == e)
    return !0;
  t || (t = yj), e || (e = yj);
  let r = Object.keys(t), i = Object.keys(e);
  if (r.length - (n && r.indexOf(n) > -1 ? 1 : 0) != i.length - (n && i.indexOf(n) > -1 ? 1 : 0))
    return !1;
  for (let o of r)
    if (o != n && (i.indexOf(o) == -1 || t[o] !== e[o]))
      return !1;
  return !0;
}
function I0(t, e, n) {
  let r = !1;
  if (e)
    for (let i in e)
      n && i in n || (r = !0, i == "style" ? t.style.cssText = "" : t.removeAttribute(i));
  if (n)
    for (let i in n)
      e && e[i] == n[i] || (r = !0, i == "style" ? t.style.cssText = n[i] : t.setAttribute(i, n[i]));
  return r;
}
function rN(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n = 0; n < t.attributes.length; n++) {
    let r = t.attributes[n];
    e[r.name] = r.value;
  }
  return e;
}
class pl {
  /**
  Compare this instance to another instance of the same type.
  (TypeScript can't express this, but only instances of the same
  specific class will be passed to this method.) This is used to
  avoid redrawing widgets when they are replaced by a new
  decoration of the same type. The default implementation just
  returns `false`, which will cause new instances of the widget to
  always be redrawn.
  */
  eq(e) {
    return !1;
  }
  /**
  Update a DOM element created by a widget of the same type (but
  different, non-`eq` content) to reflect this widget. May return
  true to indicate that it could update, false to indicate it
  couldn't (in which case the widget will be redrawn). The default
  implementation just returns false.
  */
  updateDOM(e, n) {
    return !1;
  }
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  The estimated height this widget will have, to be used when
  estimating the height of content that hasn't been drawn. May
  return -1 to indicate you don't know. The default implementation
  returns -1.
  */
  get estimatedHeight() {
    return -1;
  }
  /**
  For inline widgets that are displayed inline (as opposed to
  `inline-block`) and introduce line breaks (through `<br>` tags
  or textual newlines), this must indicate the amount of line
  breaks they introduce. Defaults to 0.
  */
  get lineBreaks() {
    return 0;
  }
  /**
  Can be used to configure which kinds of events inside the widget
  should be ignored by the editor. The default is to ignore all
  events.
  */
  ignoreEvent(e) {
    return !0;
  }
  /**
  Override the way screen coordinates for positions at/in the
  widget are found. `pos` will be the offset into the widget, and
  `side` the side of the position that is being queried—less than
  zero for before, greater than zero for after, and zero for
  directly at that position.
  */
  coordsAt(e, n, r) {
    return null;
  }
  /**
  @internal
  */
  get isHidden() {
    return !1;
  }
  /**
  @internal
  */
  get editable() {
    return !1;
  }
  /**
  This is called when the an instance of the widget is removed
  from the editor view.
  */
  destroy(e) {
  }
}
var Hi = /* @__PURE__ */ (function(t) {
  return t[t.Text = 0] = "Text", t[t.WidgetBefore = 1] = "WidgetBefore", t[t.WidgetAfter = 2] = "WidgetAfter", t[t.WidgetRange = 3] = "WidgetRange", t;
})(Hi || (Hi = {}));
class Bt extends Kl {
  constructor(e, n, r, i) {
    super(), this.startSide = e, this.endSide = n, this.widget = r, this.spec = i;
  }
  /**
  @internal
  */
  get heightRelevant() {
    return !1;
  }
  /**
  Create a mark decoration, which influences the styling of the
  content in its range. Nested mark decorations will cause nested
  DOM elements to be created. Nesting order is determined by
  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with
  the higher-precedence decorations creating the inner DOM nodes.
  Such elements are split on line boundaries and on the boundaries
  of lower-precedence decorations.
  */
  static mark(e) {
    return new cd(e);
  }
  /**
  Create a widget decoration, which displays a DOM element at the
  given position.
  */
  static widget(e) {
    let n = Math.max(-1e4, Math.min(1e4, e.side || 0)), r = !!e.block;
    return n += r && !e.inlineOrder ? n > 0 ? 3e8 : -4e8 : n > 0 ? 1e8 : -1e8, new nl(e, n, n, r, e.widget || null, !1);
  }
  /**
  Create a replace decoration which replaces the given range with
  a widget, or simply hides it.
  */
  static replace(e) {
    let n = !!e.block, r, i;
    if (e.isBlockGap)
      r = -5e8, i = 4e8;
    else {
      let { start: o, end: s } = LO(e, n);
      r = (o ? n ? -3e8 : -1 : 5e8) - 1, i = (s ? n ? 2e8 : 1 : -6e8) + 1;
    }
    return new nl(e, r, i, n, e.widget || null, !0);
  }
  /**
  Create a line decoration, which can add DOM attributes to the
  line starting at the given position.
  */
  static line(e) {
    return new ud(e);
  }
  /**
  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given
  decorated range or ranges. If the ranges aren't already sorted,
  pass `true` for `sort` to make the library sort them for you.
  */
  static set(e, n = !1) {
    return zn.of(e, n);
  }
  /**
  @internal
  */
  hasHeight() {
    return this.widget ? this.widget.estimatedHeight > -1 : !1;
  }
}
Bt.none = zn.empty;
class cd extends Bt {
  constructor(e) {
    let { start: n, end: r } = LO(e);
    super(n ? -1 : 5e8, r ? 1 : -6e8, null, e), this.tagName = e.tagName || "span", this.class = e.class || "", this.attrs = e.attributes || null;
  }
  eq(e) {
    var n, r;
    return this == e || e instanceof cd && this.tagName == e.tagName && (this.class || ((n = this.attrs) === null || n === void 0 ? void 0 : n.class)) == (e.class || ((r = e.attrs) === null || r === void 0 ? void 0 : r.class)) && Up(this.attrs, e.attrs, "class");
  }
  range(e, n = e) {
    if (e >= n)
      throw new RangeError("Mark decorations may not be empty");
    return super.range(e, n);
  }
}
cd.prototype.point = !1;
class ud extends Bt {
  constructor(e) {
    super(-2e8, -2e8, null, e);
  }
  eq(e) {
    return e instanceof ud && this.spec.class == e.spec.class && Up(this.spec.attributes, e.spec.attributes);
  }
  range(e, n = e) {
    if (n != e)
      throw new RangeError("Line decoration ranges must be zero-length");
    return super.range(e, n);
  }
}
ud.prototype.mapMode = Vi.TrackBefore;
ud.prototype.point = !0;
class nl extends Bt {
  constructor(e, n, r, i, o, s) {
    super(n, r, o, e), this.block = i, this.isReplace = s, this.mapMode = i ? n <= 0 ? Vi.TrackBefore : Vi.TrackAfter : Vi.TrackDel;
  }
  // Only relevant when this.block == true
  get type() {
    return this.startSide != this.endSide ? Hi.WidgetRange : this.startSide <= 0 ? Hi.WidgetBefore : Hi.WidgetAfter;
  }
  get heightRelevant() {
    return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);
  }
  eq(e) {
    return e instanceof nl && iN(this.widget, e.widget) && this.block == e.block && this.startSide == e.startSide && this.endSide == e.endSide;
  }
  range(e, n = e) {
    if (this.isReplace && (e > n || e == n && this.startSide > 0 && this.endSide <= 0))
      throw new RangeError("Invalid range for replacement decoration");
    if (!this.isReplace && n != e)
      throw new RangeError("Widget decorations can only have zero-length ranges");
    return super.range(e, n);
  }
}
nl.prototype.point = !0;
function LO(t, e = !1) {
  let { inclusiveStart: n, inclusiveEnd: r } = t;
  return n == null && (n = t.inclusive), r == null && (r = t.inclusive), { start: n ?? e, end: r ?? e };
}
function iN(t, e) {
  return t == e || !!(t && e && t.compare(e));
}
function hp(t, e, n, r = 0) {
  let i = n.length - 1;
  i >= 0 && n[i] + r >= t ? n[i] = Math.max(n[i], e) : n.push(t, e);
}
class ii extends yr {
  constructor() {
    super(...arguments), this.children = [], this.length = 0, this.prevAttrs = void 0, this.attrs = null, this.breakAfter = 0;
  }
  // Consumes source
  merge(e, n, r, i, o, s) {
    if (r) {
      if (!(r instanceof ii))
        return !1;
      this.dom || r.transferDOM(this);
    }
    return i && this.setDeco(r ? r.attrs : null), PO(this, e, n, r ? r.children.slice() : [], o, s), !0;
  }
  split(e) {
    let n = new ii();
    if (n.breakAfter = this.breakAfter, this.length == 0)
      return n;
    let { i: r, off: i } = this.childPos(e);
    i && (n.append(this.children[r].split(i), 0), this.children[r].merge(i, this.children[r].length, null, !1, 0, 0), r++);
    for (let o = r; o < this.children.length; o++)
      n.append(this.children[o], 0);
    for (; r > 0 && this.children[r - 1].length == 0; )
      this.children[--r].destroy();
    return this.children.length = r, this.markDirty(), this.length = e, n;
  }
  transferDOM(e) {
    this.dom && (this.markDirty(), e.setDOM(this.dom), e.prevAttrs = this.prevAttrs === void 0 ? this.attrs : this.prevAttrs, this.prevAttrs = void 0, this.dom = null);
  }
  setDeco(e) {
    Up(this.attrs, e) || (this.dom && (this.prevAttrs = this.attrs, this.markDirty()), this.attrs = e);
  }
  append(e, n) {
    IO(this, e, n);
  }
  // Only called when building a line view in ContentBuilder
  addLineDeco(e) {
    let n = e.spec.attributes, r = e.spec.class;
    n && (this.attrs = D0(n, this.attrs || {})), r && (this.attrs = D0({ class: r }, this.attrs || {}));
  }
  domAtPos(e) {
    return DO(this, e);
  }
  reuseDOM(e) {
    e.nodeName == "DIV" && (this.setDOM(e), this.flags |= 6);
  }
  sync(e, n) {
    var r;
    this.dom ? this.flags & 4 && (EO(this.dom), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0) : (this.setDOM(document.createElement("div")), this.dom.className = "cm-line", this.prevAttrs = this.attrs ? null : void 0), this.prevAttrs !== void 0 && (I0(this.dom, this.prevAttrs, this.attrs), this.dom.classList.add("cm-line"), this.prevAttrs = void 0), super.sync(e, n);
    let i = this.dom.lastChild;
    for (; i && yr.get(i) instanceof ma; )
      i = i.lastChild;
    if (!i || !this.length || i.nodeName != "BR" && ((r = yr.get(i)) === null || r === void 0 ? void 0 : r.isEditable) == !1 && (!st.ios || !this.children.some((o) => o instanceof is))) {
      let o = document.createElement("BR");
      o.cmIgnore = !0, this.dom.appendChild(o);
    }
  }
  measureTextSize() {
    if (this.children.length == 0 || this.length > 20)
      return null;
    let e = 0, n;
    for (let r of this.children) {
      if (!(r instanceof is) || /[^ -~]/.test(r.text))
        return null;
      let i = Af(r.dom);
      if (i.length != 1)
        return null;
      e += i[0].width, n = i[0].height;
    }
    return e ? {
      lineHeight: this.dom.getBoundingClientRect().height,
      charWidth: e / this.length,
      textHeight: n
    } : null;
  }
  coordsAt(e, n) {
    let r = zO(this, e, n);
    if (!this.children.length && r && this.parent) {
      let { heightOracle: i } = this.parent.view.viewState, o = r.bottom - r.top;
      if (Math.abs(o - i.lineHeight) < 2 && i.textHeight < o) {
        let s = (o - i.textHeight) / 2;
        return { top: r.top + s, bottom: r.bottom - s, left: r.left, right: r.left };
      }
    }
    return r;
  }
  become(e) {
    return e instanceof ii && this.children.length == 0 && e.children.length == 0 && Up(this.attrs, e.attrs) && this.breakAfter == e.breakAfter;
  }
  covers() {
    return !0;
  }
  static find(e, n) {
    for (let r = 0, i = 0; r < e.children.length; r++) {
      let o = e.children[r], s = i + o.length;
      if (s >= n) {
        if (o instanceof ii)
          return o;
        if (s > n)
          break;
      }
      i = s + o.breakAfter;
    }
    return null;
  }
}
class aa extends yr {
  constructor(e, n, r) {
    super(), this.widget = e, this.length = n, this.deco = r, this.breakAfter = 0, this.prevWidget = null;
  }
  merge(e, n, r, i, o, s) {
    return r && (!(r instanceof aa) || !this.widget.compare(r.widget) || e > 0 && o <= 0 || n < this.length && s <= 0) ? !1 : (this.length = e + (r ? r.length : 0) + (this.length - n), !0);
  }
  domAtPos(e) {
    return e == 0 ? Ni.before(this.dom) : Ni.after(this.dom, e == this.length);
  }
  split(e) {
    let n = this.length - e;
    this.length = e;
    let r = new aa(this.widget, n, this.deco);
    return r.breakAfter = this.breakAfter, r;
  }
  get children() {
    return S1;
  }
  sync(e) {
    (!this.dom || !this.widget.updateDOM(this.dom, e)) && (this.dom && this.prevWidget && this.prevWidget.destroy(this.dom), this.prevWidget = null, this.setDOM(this.widget.toDOM(e)), this.widget.editable || (this.dom.contentEditable = "false"));
  }
  get overrideDOMText() {
    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : rr.empty;
  }
  domBoundsAround() {
    return null;
  }
  become(e) {
    return e instanceof aa && e.widget.constructor == this.widget.constructor ? (e.widget.compare(this.widget) || this.markDirty(!0), this.dom && !this.prevWidget && (this.prevWidget = this.widget), this.widget = e.widget, this.length = e.length, this.deco = e.deco, this.breakAfter = e.breakAfter, !0) : !1;
  }
  ignoreMutation() {
    return !0;
  }
  ignoreEvent(e) {
    return this.widget.ignoreEvent(e);
  }
  get isEditable() {
    return !1;
  }
  get isWidget() {
    return !0;
  }
  coordsAt(e, n) {
    let r = this.widget.coordsAt(this.dom, e, n);
    return r || (this.widget instanceof z0 ? null : Zm(this.dom.getBoundingClientRect(), this.length ? e == 0 : n <= 0));
  }
  destroy() {
    super.destroy(), this.dom && this.widget.destroy(this.dom);
  }
  covers(e) {
    let { startSide: n, endSide: r } = this.deco;
    return n == r ? !1 : e < 0 ? n < 0 : r > 0;
  }
}
class z0 extends pl {
  constructor(e) {
    super(), this.height = e;
  }
  toDOM() {
    let e = document.createElement("div");
    return e.className = "cm-gap", this.updateDOM(e), e;
  }
  eq(e) {
    return e.height == this.height;
  }
  updateDOM(e) {
    return e.style.height = this.height + "px", !0;
  }
  get editable() {
    return !0;
  }
  get estimatedHeight() {
    return this.height;
  }
  ignoreEvent() {
    return !1;
  }
}
class pf {
  constructor(e, n, r, i) {
    this.doc = e, this.pos = n, this.end = r, this.disallowBlockEffectsFor = i, this.content = [], this.curLine = null, this.breakAtStart = 0, this.pendingBuffer = 0, this.bufferMarks = [], this.atCursorPos = !0, this.openStart = -1, this.openEnd = -1, this.text = "", this.textOff = 0, this.cursor = e.iter(), this.skip = n;
  }
  posCovered() {
    if (this.content.length == 0)
      return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;
    let e = this.content[this.content.length - 1];
    return !(e.breakAfter || e instanceof aa && e.deco.endSide < 0);
  }
  getLine() {
    return this.curLine || (this.content.push(this.curLine = new ii()), this.atCursorPos = !0), this.curLine;
  }
  flushBuffer(e = this.bufferMarks) {
    this.pendingBuffer && (this.curLine.append(kh(new iu(-1), e), e.length), this.pendingBuffer = 0);
  }
  addBlockWidget(e) {
    this.flushBuffer(), this.curLine = null, this.content.push(e);
  }
  finish(e) {
    this.pendingBuffer && e <= this.bufferMarks.length ? this.flushBuffer() : this.pendingBuffer = 0, !this.posCovered() && !(e && this.content.length && this.content[this.content.length - 1] instanceof aa) && this.getLine();
  }
  buildText(e, n, r) {
    for (; e > 0; ) {
      if (this.textOff == this.text.length) {
        let { value: o, lineBreak: s, done: a } = this.cursor.next(this.skip);
        if (this.skip = 0, a)
          throw new Error("Ran out of text content when drawing inline views");
        if (s) {
          this.posCovered() || this.getLine(), this.content.length ? this.content[this.content.length - 1].breakAfter = 1 : this.breakAtStart = 1, this.flushBuffer(), this.curLine = null, this.atCursorPos = !0, e--;
          continue;
        } else
          this.text = o, this.textOff = 0;
      }
      let i = Math.min(
        this.text.length - this.textOff,
        e,
        512
        /* T.Chunk */
      );
      this.flushBuffer(n.slice(n.length - r)), this.getLine().append(kh(new is(this.text.slice(this.textOff, this.textOff + i)), n), r), this.atCursorPos = !0, this.textOff += i, e -= i, r = 0;
    }
  }
  span(e, n, r, i) {
    this.buildText(n - e, r, i), this.pos = n, this.openStart < 0 && (this.openStart = i);
  }
  point(e, n, r, i, o, s) {
    if (this.disallowBlockEffectsFor[s] && r instanceof nl) {
      if (r.block)
        throw new RangeError("Block decorations may not be specified via plugins");
      if (n > this.doc.lineAt(this.pos).to)
        throw new RangeError("Decorations that replace line breaks may not be specified via plugins");
    }
    let a = n - e;
    if (r instanceof nl)
      if (r.block)
        r.startSide > 0 && !this.posCovered() && this.getLine(), this.addBlockWidget(new aa(r.widget || ou.block, a, r));
      else {
        let l = Ia.create(r.widget || ou.inline, a, a ? 0 : r.startSide), u = this.atCursorPos && !l.isEditable && o <= i.length && (e < n || r.startSide > 0), f = !l.isEditable && (e < n || o > i.length || r.startSide <= 0), d = this.getLine();
        this.pendingBuffer == 2 && !u && !l.isEditable && (this.pendingBuffer = 0), this.flushBuffer(i), u && (d.append(kh(new iu(1), i), o), o = i.length + Math.max(0, o - i.length)), d.append(kh(l, i), o), this.atCursorPos = f, this.pendingBuffer = f ? e < n || o > i.length ? 1 : 2 : 0, this.pendingBuffer && (this.bufferMarks = i.slice());
      }
    else this.doc.lineAt(this.pos).from == this.pos && this.getLine().addLineDeco(r);
    a && (this.textOff + a <= this.text.length ? this.textOff += a : (this.skip += a - (this.text.length - this.textOff), this.text = "", this.textOff = 0), this.pos = n), this.openStart < 0 && (this.openStart = o);
  }
  static build(e, n, r, i, o) {
    let s = new pf(e, n, r, o);
    return s.openEnd = zn.spans(i, n, r, s), s.openStart < 0 && (s.openStart = s.openEnd), s.finish(s.openEnd), s;
  }
}
function kh(t, e) {
  for (let n of e)
    t = new ma(n, [t], t.length);
  return t;
}
class ou extends pl {
  constructor(e) {
    super(), this.tag = e;
  }
  eq(e) {
    return e.tag == this.tag;
  }
  toDOM() {
    return document.createElement(this.tag);
  }
  updateDOM(e) {
    return e.nodeName.toLowerCase() == this.tag;
  }
  get isHidden() {
    return !0;
  }
}
ou.inline = /* @__PURE__ */ new ou("span");
ou.block = /* @__PURE__ */ new ou("div");
var Nr = /* @__PURE__ */ (function(t) {
  return t[t.LTR = 0] = "LTR", t[t.RTL = 1] = "RTL", t;
})(Nr || (Nr = {}));
const Yl = Nr.LTR, C1 = Nr.RTL;
function BO(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    e.push(1 << +t[n]);
  return e;
}
const oN = /* @__PURE__ */ BO("88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008"), sN = /* @__PURE__ */ BO("4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333"), L0 = /* @__PURE__ */ Object.create(null), ms = [];
for (let t of ["()", "[]", "{}"]) {
  let e = /* @__PURE__ */ t.charCodeAt(0), n = /* @__PURE__ */ t.charCodeAt(1);
  L0[e] = n, L0[n] = -e;
}
function qO(t) {
  return t <= 247 ? oN[t] : 1424 <= t && t <= 1524 ? 2 : 1536 <= t && t <= 1785 ? sN[t - 1536] : 1774 <= t && t <= 2220 ? 4 : 8192 <= t && t <= 8204 ? 256 : 64336 <= t && t <= 65023 ? 4 : 1;
}
const aN = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac\ufb50-\ufdff]/;
class za {
  /**
  The direction of this span.
  */
  get dir() {
    return this.level % 2 ? C1 : Yl;
  }
  /**
  @internal
  */
  constructor(e, n, r) {
    this.from = e, this.to = n, this.level = r;
  }
  /**
  @internal
  */
  side(e, n) {
    return this.dir == n == e ? this.to : this.from;
  }
  /**
  @internal
  */
  forward(e, n) {
    return e == (this.dir == n);
  }
  /**
  @internal
  */
  static find(e, n, r, i) {
    let o = -1;
    for (let s = 0; s < e.length; s++) {
      let a = e[s];
      if (a.from <= n && a.to >= n) {
        if (a.level == r)
          return s;
        (o < 0 || (i != 0 ? i < 0 ? a.from < n : a.to > n : e[o].level > a.level)) && (o = s);
      }
    }
    if (o < 0)
      throw new RangeError("Index out of range");
    return o;
  }
}
function FO(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++) {
    let r = t[n], i = e[n];
    if (r.from != i.from || r.to != i.to || r.direction != i.direction || !FO(r.inner, i.inner))
      return !1;
  }
  return !0;
}
const br = [];
function lN(t, e, n, r, i) {
  for (let o = 0; o <= r.length; o++) {
    let s = o ? r[o - 1].to : e, a = o < r.length ? r[o].from : n, l = o ? 256 : i;
    for (let u = s, f = l, d = l; u < a; u++) {
      let h = qO(t.charCodeAt(u));
      h == 512 ? h = f : h == 8 && d == 4 && (h = 16), br[u] = h == 4 ? 2 : h, h & 7 && (d = h), f = h;
    }
    for (let u = s, f = l, d = l; u < a; u++) {
      let h = br[u];
      if (h == 128)
        u < a - 1 && f == br[u + 1] && f & 24 ? h = br[u] = f : br[u] = 256;
      else if (h == 64) {
        let p = u + 1;
        for (; p < a && br[p] == 64; )
          p++;
        let m = u && f == 8 || p < n && br[p] == 8 ? d == 1 ? 1 : 8 : 256;
        for (let v = u; v < p; v++)
          br[v] = m;
        u = p - 1;
      } else h == 8 && d == 1 && (br[u] = 1);
      f = h, h & 7 && (d = h);
    }
  }
}
function cN(t, e, n, r, i) {
  let o = i == 1 ? 2 : 1;
  for (let s = 0, a = 0, l = 0; s <= r.length; s++) {
    let u = s ? r[s - 1].to : e, f = s < r.length ? r[s].from : n;
    for (let d = u, h, p, m; d < f; d++)
      if (p = L0[h = t.charCodeAt(d)])
        if (p < 0) {
          for (let v = a - 3; v >= 0; v -= 3)
            if (ms[v + 1] == -p) {
              let g = ms[v + 2], b = g & 2 ? i : g & 4 ? g & 1 ? o : i : 0;
              b && (br[d] = br[ms[v]] = b), a = v;
              break;
            }
        } else {
          if (ms.length == 189)
            break;
          ms[a++] = d, ms[a++] = h, ms[a++] = l;
        }
      else if ((m = br[d]) == 2 || m == 1) {
        let v = m == i;
        l = v ? 0 : 1;
        for (let g = a - 3; g >= 0; g -= 3) {
          let b = ms[g + 2];
          if (b & 2)
            break;
          if (v)
            ms[g + 2] |= 2;
          else {
            if (b & 4)
              break;
            ms[g + 2] |= 4;
          }
        }
      }
  }
}
function uN(t, e, n, r) {
  for (let i = 0, o = r; i <= n.length; i++) {
    let s = i ? n[i - 1].to : t, a = i < n.length ? n[i].from : e;
    for (let l = s; l < a; ) {
      let u = br[l];
      if (u == 256) {
        let f = l + 1;
        for (; ; )
          if (f == a) {
            if (i == n.length)
              break;
            f = n[i++].to, a = i < n.length ? n[i].from : e;
          } else if (br[f] == 256)
            f++;
          else
            break;
        let d = o == 1, h = (f < e ? br[f] : r) == 1, p = d == h ? d ? 1 : 2 : r;
        for (let m = f, v = i, g = v ? n[v - 1].to : t; m > l; )
          m == g && (m = n[--v].from, g = v ? n[v - 1].to : t), br[--m] = p;
        l = f;
      } else
        o = u, l++;
    }
  }
}
function B0(t, e, n, r, i, o, s) {
  let a = r % 2 ? 2 : 1;
  if (r % 2 == i % 2)
    for (let l = e, u = 0; l < n; ) {
      let f = !0, d = !1;
      if (u == o.length || l < o[u].from) {
        let v = br[l];
        v != a && (f = !1, d = v == 16);
      }
      let h = !f && a == 1 ? [] : null, p = f ? r : r + 1, m = l;
      e: for (; ; )
        if (u < o.length && m == o[u].from) {
          if (d)
            break e;
          let v = o[u];
          if (!f)
            for (let g = v.to, b = u + 1; ; ) {
              if (g == n)
                break e;
              if (b < o.length && o[b].from == g)
                g = o[b++].to;
              else {
                if (br[g] == a)
                  break e;
                break;
              }
            }
          if (u++, h)
            h.push(v);
          else {
            v.from > l && s.push(new za(l, v.from, p));
            let g = v.direction == Yl != !(p % 2);
            q0(t, g ? r + 1 : r, i, v.inner, v.from, v.to, s), l = v.to;
          }
          m = v.to;
        } else {
          if (m == n || (f ? br[m] != a : br[m] == a))
            break;
          m++;
        }
      h ? B0(t, l, m, r + 1, i, h, s) : l < m && s.push(new za(l, m, p)), l = m;
    }
  else
    for (let l = n, u = o.length; l > e; ) {
      let f = !0, d = !1;
      if (!u || l > o[u - 1].to) {
        let v = br[l - 1];
        v != a && (f = !1, d = v == 16);
      }
      let h = !f && a == 1 ? [] : null, p = f ? r : r + 1, m = l;
      e: for (; ; )
        if (u && m == o[u - 1].to) {
          if (d)
            break e;
          let v = o[--u];
          if (!f)
            for (let g = v.from, b = u; ; ) {
              if (g == e)
                break e;
              if (b && o[b - 1].to == g)
                g = o[--b].from;
              else {
                if (br[g - 1] == a)
                  break e;
                break;
              }
            }
          if (h)
            h.push(v);
          else {
            v.to < l && s.push(new za(v.to, l, p));
            let g = v.direction == Yl != !(p % 2);
            q0(t, g ? r + 1 : r, i, v.inner, v.from, v.to, s), l = v.from;
          }
          m = v.from;
        } else {
          if (m == e || (f ? br[m - 1] != a : br[m - 1] == a))
            break;
          m--;
        }
      h ? B0(t, m, l, r + 1, i, h, s) : m < l && s.push(new za(m, l, p)), l = m;
    }
}
function q0(t, e, n, r, i, o, s) {
  let a = e % 2 ? 2 : 1;
  lN(t, i, o, r, a), cN(t, i, o, r, a), uN(i, o, r, a), B0(t, i, o, e, n, r, s);
}
function fN(t, e, n) {
  if (!t)
    return [new za(0, 0, e == C1 ? 1 : 0)];
  if (e == Yl && !n.length && !aN.test(t))
    return UO(t.length);
  if (n.length)
    for (; t.length > br.length; )
      br[br.length] = 256;
  let r = [], i = e == Yl ? 0 : 1;
  return q0(t, i, i, n, 0, t.length, r), r;
}
function UO(t) {
  return [new za(0, t, 0)];
}
let VO = "";
function dN(t, e, n, r, i) {
  var o;
  let s = r.head - t.from, a = za.find(e, s, (o = r.bidiLevel) !== null && o !== void 0 ? o : -1, r.assoc), l = e[a], u = l.side(i, n);
  if (s == u) {
    let h = a += i ? 1 : -1;
    if (h < 0 || h >= e.length)
      return null;
    l = e[a = h], s = l.side(!i, n), u = l.side(i, n);
  }
  let f = Mi(t.text, s, l.forward(i, n));
  (f < l.from || f > l.to) && (f = u), VO = t.text.slice(Math.min(s, f), Math.max(s, f));
  let d = a == (i ? e.length - 1 : 0) ? null : e[a + (i ? 1 : -1)];
  return d && f == u && d.level + (i ? 0 : 1) < l.level ? Me.cursor(d.side(!i, n) + t.from, d.forward(i, n) ? 1 : -1, d.level) : Me.cursor(f + t.from, l.forward(i, n) ? -1 : 1, l.level);
}
function hN(t, e, n) {
  for (let r = e; r < n; r++) {
    let i = qO(t.charCodeAt(r));
    if (i == 1)
      return Yl;
    if (i == 2 || i == 4)
      return C1;
  }
  return Yl;
}
const WO = /* @__PURE__ */ lt.define(), HO = /* @__PURE__ */ lt.define(), KO = /* @__PURE__ */ lt.define(), GO = /* @__PURE__ */ lt.define(), F0 = /* @__PURE__ */ lt.define(), JO = /* @__PURE__ */ lt.define(), YO = /* @__PURE__ */ lt.define(), O1 = /* @__PURE__ */ lt.define(), E1 = /* @__PURE__ */ lt.define(), QO = /* @__PURE__ */ lt.define({
  combine: (t) => t.some((e) => e)
}), XO = /* @__PURE__ */ lt.define({
  combine: (t) => t.some((e) => e)
}), ZO = /* @__PURE__ */ lt.define();
class Kc {
  constructor(e, n = "nearest", r = "nearest", i = 5, o = 5, s = !1) {
    this.range = e, this.y = n, this.x = r, this.yMargin = i, this.xMargin = o, this.isSnapshot = s;
  }
  map(e) {
    return e.empty ? this : new Kc(this.range.map(e), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
  clip(e) {
    return this.range.to <= e.doc.length ? this : new Kc(Me.cursor(e.doc.length), this.y, this.x, this.yMargin, this.xMargin, this.isSnapshot);
  }
}
const Sh = /* @__PURE__ */ vn.define({ map: (t, e) => t.map(e) }), e4 = /* @__PURE__ */ vn.define();
function Wi(t, e, n) {
  let r = t.facet(GO);
  r.length ? r[0](e) : window.onerror && window.onerror(String(e), n, void 0, void 0, e) || (n ? console.error(n + ":", e) : console.error(e));
}
const ea = /* @__PURE__ */ lt.define({ combine: (t) => t.length ? t[0] : !0 });
let pN = 0;
const Pc = /* @__PURE__ */ lt.define({
  combine(t) {
    return t.filter((e, n) => {
      for (let r = 0; r < n; r++)
        if (t[r].plugin == e.plugin)
          return !1;
      return !0;
    });
  }
});
class Gr {
  constructor(e, n, r, i, o) {
    this.id = e, this.create = n, this.domEventHandlers = r, this.domEventObservers = i, this.baseExtensions = o(this), this.extension = this.baseExtensions.concat(Pc.of({ plugin: this, arg: void 0 }));
  }
  /**
  Create an extension for this plugin with the given argument.
  */
  of(e) {
    return this.baseExtensions.concat(Pc.of({ plugin: this, arg: e }));
  }
  /**
  Define a plugin from a constructor function that creates the
  plugin's value, given an editor view.
  */
  static define(e, n) {
    const { eventHandlers: r, eventObservers: i, provide: o, decorations: s } = n || {};
    return new Gr(pN++, e, r, i, (a) => {
      let l = [];
      return s && l.push(Mf.of((u) => {
        let f = u.plugin(a);
        return f ? s(f) : Bt.none;
      })), o && l.push(o(a)), l;
    });
  }
  /**
  Create a plugin for a class whose constructor takes a single
  editor view as argument.
  */
  static fromClass(e, n) {
    return Gr.define((r, i) => new e(r, i), n);
  }
}
class av {
  constructor(e) {
    this.spec = e, this.mustUpdate = null, this.value = null;
  }
  get plugin() {
    return this.spec && this.spec.plugin;
  }
  update(e) {
    if (this.value) {
      if (this.mustUpdate) {
        let n = this.mustUpdate;
        if (this.mustUpdate = null, this.value.update)
          try {
            this.value.update(n);
          } catch (r) {
            if (Wi(n.state, r, "CodeMirror plugin crashed"), this.value.destroy)
              try {
                this.value.destroy();
              } catch {
              }
            this.deactivate();
          }
      }
    } else if (this.spec)
      try {
        this.value = this.spec.plugin.create(e, this.spec.arg);
      } catch (n) {
        Wi(e.state, n, "CodeMirror plugin crashed"), this.deactivate();
      }
    return this;
  }
  destroy(e) {
    var n;
    if (!((n = this.value) === null || n === void 0) && n.destroy)
      try {
        this.value.destroy();
      } catch (r) {
        Wi(e.state, r, "CodeMirror plugin crashed");
      }
  }
  deactivate() {
    this.spec = this.value = null;
  }
}
const t4 = /* @__PURE__ */ lt.define(), _1 = /* @__PURE__ */ lt.define(), Mf = /* @__PURE__ */ lt.define(), n4 = /* @__PURE__ */ lt.define(), A1 = /* @__PURE__ */ lt.define(), r4 = /* @__PURE__ */ lt.define();
function xj(t, e) {
  let n = t.state.facet(r4);
  if (!n.length)
    return n;
  let r = n.map((o) => o instanceof Function ? o(t) : o), i = [];
  return zn.spans(r, e.from, e.to, {
    point() {
    },
    span(o, s, a, l) {
      let u = o - e.from, f = s - e.from, d = i;
      for (let h = a.length - 1; h >= 0; h--, l--) {
        let p = a[h].spec.bidiIsolate, m;
        if (p == null && (p = hN(e.text, u, f)), l > 0 && d.length && (m = d[d.length - 1]).to == u && m.direction == p)
          m.to = f, d = m.inner;
        else {
          let v = { from: u, to: f, direction: p, inner: [] };
          d.push(v), d = v.inner;
        }
      }
    }
  }), i;
}
const i4 = /* @__PURE__ */ lt.define();
function M1(t) {
  let e = 0, n = 0, r = 0, i = 0;
  for (let o of t.state.facet(i4)) {
    let s = o(t);
    s && (s.left != null && (e = Math.max(e, s.left)), s.right != null && (n = Math.max(n, s.right)), s.top != null && (r = Math.max(r, s.top)), s.bottom != null && (i = Math.max(i, s.bottom)));
  }
  return { left: e, right: n, top: r, bottom: i };
}
const Xu = /* @__PURE__ */ lt.define();
class $o {
  constructor(e, n, r, i) {
    this.fromA = e, this.toA = n, this.fromB = r, this.toB = i;
  }
  join(e) {
    return new $o(Math.min(this.fromA, e.fromA), Math.max(this.toA, e.toA), Math.min(this.fromB, e.fromB), Math.max(this.toB, e.toB));
  }
  addToSet(e) {
    let n = e.length, r = this;
    for (; n > 0; n--) {
      let i = e[n - 1];
      if (!(i.fromA > r.toA)) {
        if (i.toA < r.fromA)
          break;
        r = r.join(i), e.splice(n - 1, 1);
      }
    }
    return e.splice(n, 0, r), e;
  }
  static extendWithRanges(e, n) {
    if (n.length == 0)
      return e;
    let r = [];
    for (let i = 0, o = 0, s = 0, a = 0; ; i++) {
      let l = i == e.length ? null : e[i], u = s - a, f = l ? l.fromB : 1e9;
      for (; o < n.length && n[o] < f; ) {
        let d = n[o], h = n[o + 1], p = Math.max(a, d), m = Math.min(f, h);
        if (p <= m && new $o(p + u, m + u, p, m).addToSet(r), h > f)
          break;
        o += 2;
      }
      if (!l)
        return r;
      new $o(l.fromA, l.toA, l.fromB, l.toB).addToSet(r), s = l.toA, a = l.toB;
    }
  }
}
class Vp {
  constructor(e, n, r) {
    this.view = e, this.state = n, this.transactions = r, this.flags = 0, this.startState = e.state, this.changes = si.empty(this.startState.doc.length);
    for (let o of r)
      this.changes = this.changes.compose(o.changes);
    let i = [];
    this.changes.iterChangedRanges((o, s, a, l) => i.push(new $o(o, s, a, l))), this.changedRanges = i;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Vp(e, n, r);
  }
  /**
  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or
  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this
  update.
  */
  get viewportChanged() {
    return (this.flags & 4) > 0;
  }
  /**
  Returns true when
  [`viewportChanged`](https://codemirror.net/6/docs/ref/#view.ViewUpdate.viewportChanged) is true
  and the viewport change is not just the result of mapping it in
  response to document changes.
  */
  get viewportMoved() {
    return (this.flags & 8) > 0;
  }
  /**
  Indicates whether the height of a block element in the editor
  changed in this update.
  */
  get heightChanged() {
    return (this.flags & 2) > 0;
  }
  /**
  Returns true when the document was modified or the size of the
  editor, or elements within the editor, changed.
  */
  get geometryChanged() {
    return this.docChanged || (this.flags & 18) > 0;
  }
  /**
  True when this update indicates a focus change.
  */
  get focusChanged() {
    return (this.flags & 1) > 0;
  }
  /**
  Whether the document changed in this update.
  */
  get docChanged() {
    return !this.changes.empty;
  }
  /**
  Whether the selection was explicitly set in this update.
  */
  get selectionSet() {
    return this.transactions.some((e) => e.selection);
  }
  /**
  @internal
  */
  get empty() {
    return this.flags == 0 && this.transactions.length == 0;
  }
}
class wj extends yr {
  get length() {
    return this.view.state.doc.length;
  }
  constructor(e) {
    super(), this.view = e, this.decorations = [], this.dynamicDecorationMap = [!1], this.domChanged = null, this.hasComposition = null, this.markedForComposition = /* @__PURE__ */ new Set(), this.editContextFormatting = Bt.none, this.lastCompositionAfterCursor = !1, this.minWidth = 0, this.minWidthFrom = 0, this.minWidthTo = 0, this.impreciseAnchor = null, this.impreciseHead = null, this.forceSelection = !1, this.lastUpdate = Date.now(), this.setDOM(e.contentDOM), this.children = [new ii()], this.children[0].setParent(this), this.updateDeco(), this.updateInner([new $o(0, 0, 0, e.state.doc.length)], 0, null);
  }
  // Update the document view to a given state.
  update(e) {
    var n;
    let r = e.changedRanges;
    this.minWidth > 0 && r.length && (r.every(({ fromA: u, toA: f }) => f < this.minWidthFrom || u > this.minWidthTo) ? (this.minWidthFrom = e.changes.mapPos(this.minWidthFrom, 1), this.minWidthTo = e.changes.mapPos(this.minWidthTo, 1)) : this.minWidth = this.minWidthFrom = this.minWidthTo = 0), this.updateEditContextFormatting(e);
    let i = -1;
    this.view.inputState.composing >= 0 && !this.view.observer.editContext && (!((n = this.domChanged) === null || n === void 0) && n.newSel ? i = this.domChanged.newSel.head : !wN(e.changes, this.hasComposition) && !e.selectionSet && (i = e.state.selection.main.head));
    let o = i > -1 ? gN(this.view, e.changes, i) : null;
    if (this.domChanged = null, this.hasComposition) {
      this.markedForComposition.clear();
      let { from: u, to: f } = this.hasComposition;
      r = new $o(u, f, e.changes.mapPos(u, -1), e.changes.mapPos(f, 1)).addToSet(r.slice());
    }
    this.hasComposition = o ? { from: o.range.fromB, to: o.range.toB } : null, (st.ie || st.chrome) && !o && e && e.state.doc.lines != e.startState.doc.lines && (this.forceSelection = !0);
    let s = this.decorations, a = this.updateDeco(), l = yN(s, a, e.changes);
    return r = $o.extendWithRanges(r, l), !(this.flags & 7) && r.length == 0 ? !1 : (this.updateInner(r, e.startState.doc.length, o), e.transactions.length && (this.lastUpdate = Date.now()), !0);
  }
  // Used by update and the constructor do perform the actual DOM
  // update
  updateInner(e, n, r) {
    this.view.viewState.mustMeasureContent = !0, this.updateChildren(e, n, r);
    let { observer: i } = this.view;
    i.ignore(() => {
      this.dom.style.height = this.view.viewState.contentHeight / this.view.scaleY + "px", this.dom.style.flexBasis = this.minWidth ? this.minWidth + "px" : "";
      let s = st.chrome || st.ios ? { node: i.selectionRange.focusNode, written: !1 } : void 0;
      this.sync(this.view, s), this.flags &= -8, s && (s.written || i.selectionRange.focusNode != s.node) && (this.forceSelection = !0), this.dom.style.height = "";
    }), this.markedForComposition.forEach(
      (s) => s.flags &= -9
      /* ViewFlag.Composition */
    );
    let o = [];
    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)
      for (let s of this.children)
        s instanceof aa && s.widget instanceof z0 && o.push(s.dom);
    i.updateGaps(o);
  }
  updateChildren(e, n, r) {
    let i = r ? r.range.addToSet(e.slice()) : e, o = this.childCursor(n);
    for (let s = i.length - 1; ; s--) {
      let a = s >= 0 ? i[s] : null;
      if (!a)
        break;
      let { fromA: l, toA: u, fromB: f, toB: d } = a, h, p, m, v;
      if (r && r.range.fromB < d && r.range.toB > f) {
        let j = pf.build(this.view.state.doc, f, r.range.fromB, this.decorations, this.dynamicDecorationMap), y = pf.build(this.view.state.doc, r.range.toB, d, this.decorations, this.dynamicDecorationMap);
        p = j.breakAtStart, m = j.openStart, v = y.openEnd;
        let k = this.compositionView(r);
        y.breakAtStart ? k.breakAfter = 1 : y.content.length && k.merge(k.length, k.length, y.content[0], !1, y.openStart, 0) && (k.breakAfter = y.content[0].breakAfter, y.content.shift()), j.content.length && k.merge(0, 0, j.content[j.content.length - 1], !0, 0, j.openEnd) && j.content.pop(), h = j.content.concat(k).concat(y.content);
      } else
        ({ content: h, breakAtStart: p, openStart: m, openEnd: v } = pf.build(this.view.state.doc, f, d, this.decorations, this.dynamicDecorationMap));
      let { i: g, off: b } = o.findPos(u, 1), { i: x, off: w } = o.findPos(l, -1);
      $O(this, x, w, g, b, h, p, m, v);
    }
    r && this.fixCompositionDOM(r);
  }
  updateEditContextFormatting(e) {
    this.editContextFormatting = this.editContextFormatting.map(e.changes);
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(e4) && (this.editContextFormatting = r.value);
  }
  compositionView(e) {
    let n = new is(e.text.nodeValue);
    n.flags |= 8;
    for (let { deco: i } of e.marks)
      n = new ma(i, [n], n.length);
    let r = new ii();
    return r.append(n, 0), r;
  }
  fixCompositionDOM(e) {
    let n = (o, s) => {
      s.flags |= 8 | (s.children.some(
        (l) => l.flags & 7
        /* ViewFlag.Dirty */
      ) ? 1 : 0), this.markedForComposition.add(s);
      let a = yr.get(o);
      a && a != s && (a.dom = null), s.setDOM(o);
    }, r = this.childPos(e.range.fromB, 1), i = this.children[r.i];
    n(e.line, i);
    for (let o = e.marks.length - 1; o >= -1; o--)
      r = i.childPos(r.off, 1), i = i.children[r.i], n(o >= 0 ? e.marks[o].node : e.text, i);
  }
  // Sync the DOM selection to this.state.selection
  updateSelection(e = !1, n = !1) {
    (e || !this.view.observer.selectionRange.focusNode) && this.view.observer.readSelectionRange();
    let r = this.view.root.activeElement, i = r == this.dom, o = !i && !(this.view.state.facet(ea) || this.dom.tabIndex > -1) && dp(this.dom, this.view.observer.selectionRange) && !(r && this.dom.contains(r));
    if (!(i || n || o))
      return;
    let s = this.forceSelection;
    this.forceSelection = !1;
    let a = this.view.state.selection.main, l = this.moveToLine(this.domAtPos(a.anchor)), u = a.empty ? l : this.moveToLine(this.domAtPos(a.head));
    if (st.gecko && a.empty && !this.hasComposition && mN(l)) {
      let d = document.createTextNode("");
      this.view.observer.ignore(() => l.node.insertBefore(d, l.node.childNodes[l.offset] || null)), l = u = new Ni(d, 0), s = !0;
    }
    let f = this.view.observer.selectionRange;
    (s || !f.focusNode || (!hf(l.node, l.offset, f.anchorNode, f.anchorOffset) || !hf(u.node, u.offset, f.focusNode, f.focusOffset)) && !this.suppressWidgetCursorChange(f, a)) && (this.view.observer.ignore(() => {
      st.android && st.chrome && this.dom.contains(f.focusNode) && xN(f.focusNode, this.dom) && (this.dom.blur(), this.dom.focus({ preventScroll: !0 }));
      let d = _f(this.view.root);
      if (d) if (a.empty) {
        if (st.gecko) {
          let h = vN(l.node, l.offset);
          if (h && h != 3) {
            let p = (h == 1 ? AO : MO)(l.node, l.offset);
            p && (l = new Ni(p.node, p.offset));
          }
        }
        d.collapse(l.node, l.offset), a.bidiLevel != null && d.caretBidiLevel !== void 0 && (d.caretBidiLevel = a.bidiLevel);
      } else if (d.extend) {
        d.collapse(l.node, l.offset);
        try {
          d.extend(u.node, u.offset);
        } catch {
        }
      } else {
        let h = document.createRange();
        a.anchor > a.head && ([l, u] = [u, l]), h.setEnd(u.node, u.offset), h.setStart(l.node, l.offset), d.removeAllRanges(), d.addRange(h);
      }
      o && this.view.root.activeElement == this.dom && (this.dom.blur(), r && r.focus());
    }), this.view.observer.setSelectionRange(l, u)), this.impreciseAnchor = l.precise ? null : new Ni(f.anchorNode, f.anchorOffset), this.impreciseHead = u.precise ? null : new Ni(f.focusNode, f.focusOffset);
  }
  // If a zero-length widget is inserted next to the cursor during
  // composition, avoid moving it across it and disrupting the
  // composition.
  suppressWidgetCursorChange(e, n) {
    return this.hasComposition && n.empty && hf(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset) && this.posFromDOM(e.focusNode, e.focusOffset) == n.head;
  }
  enforceCursorAssoc() {
    if (this.hasComposition)
      return;
    let { view: e } = this, n = e.state.selection.main, r = _f(e.root), { anchorNode: i, anchorOffset: o } = e.observer.selectionRange;
    if (!r || !n.empty || !n.assoc || !r.modify)
      return;
    let s = ii.find(this, n.head);
    if (!s)
      return;
    let a = s.posAtStart;
    if (n.head == a || n.head == a + s.length)
      return;
    let l = this.coordsAt(n.head, -1), u = this.coordsAt(n.head, 1);
    if (!l || !u || l.bottom > u.top)
      return;
    let f = this.domAtPos(n.head + n.assoc);
    r.collapse(f.node, f.offset), r.modify("move", n.assoc < 0 ? "forward" : "backward", "lineboundary"), e.observer.readSelectionRange();
    let d = e.observer.selectionRange;
    e.docView.posFromDOM(d.anchorNode, d.anchorOffset) != n.from && r.collapse(i, o);
  }
  // If a position is in/near a block widget, move it to a nearby text
  // line, since we don't want the cursor inside a block widget.
  moveToLine(e) {
    let n = this.dom, r;
    if (e.node != n)
      return e;
    for (let i = e.offset; !r && i < n.childNodes.length; i++) {
      let o = yr.get(n.childNodes[i]);
      o instanceof ii && (r = o.domAtPos(0));
    }
    for (let i = e.offset - 1; !r && i >= 0; i--) {
      let o = yr.get(n.childNodes[i]);
      o instanceof ii && (r = o.domAtPos(o.length));
    }
    return r ? new Ni(r.node, r.offset, !0) : e;
  }
  nearest(e) {
    for (let n = e; n; ) {
      let r = yr.get(n);
      if (r && r.rootView == this)
        return r;
      n = n.parentNode;
    }
    return null;
  }
  posFromDOM(e, n) {
    let r = this.nearest(e);
    if (!r)
      throw new RangeError("Trying to find position for a DOM position outside of the document");
    return r.localPosFromDOM(e, n) + r.posAtStart;
  }
  domAtPos(e) {
    let { i: n, off: r } = this.childCursor().findPos(e, -1);
    for (; n < this.children.length - 1; ) {
      let i = this.children[n];
      if (r < i.length || i instanceof ii)
        break;
      n++, r = 0;
    }
    return this.children[n].domAtPos(r);
  }
  coordsAt(e, n) {
    let r = null, i = 0;
    for (let o = this.length, s = this.children.length - 1; s >= 0; s--) {
      let a = this.children[s], l = o - a.breakAfter, u = l - a.length;
      if (l < e)
        break;
      if (u <= e && (u < e || a.covers(-1)) && (l > e || a.covers(1)) && (!r || a instanceof ii && !(r instanceof ii && n >= 0)))
        r = a, i = u;
      else if (r && u == e && l == e && a instanceof aa && Math.abs(n) < 2) {
        if (a.deco.startSide < 0)
          break;
        s && (r = null);
      }
      o = u;
    }
    return r ? r.coordsAt(e - i, n) : null;
  }
  coordsForChar(e) {
    let { i: n, off: r } = this.childPos(e, 1), i = this.children[n];
    if (!(i instanceof ii))
      return null;
    for (; i.children.length; ) {
      let { i: a, off: l } = i.childPos(r, 1);
      for (; ; a++) {
        if (a == i.children.length)
          return null;
        if ((i = i.children[a]).length)
          break;
      }
      r = l;
    }
    if (!(i instanceof is))
      return null;
    let o = Mi(i.text, r);
    if (o == r)
      return null;
    let s = Jl(i.dom, r, o).getClientRects();
    for (let a = 0; a < s.length; a++) {
      let l = s[a];
      if (a == s.length - 1 || l.top < l.bottom && l.left < l.right)
        return l;
    }
    return null;
  }
  measureVisibleLineHeights(e) {
    let n = [], { from: r, to: i } = e, o = this.view.contentDOM.clientWidth, s = o > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1, a = -1, l = this.view.textDirection == Nr.LTR;
    for (let u = 0, f = 0; f < this.children.length; f++) {
      let d = this.children[f], h = u + d.length;
      if (h > i)
        break;
      if (u >= r) {
        let p = d.dom.getBoundingClientRect();
        if (n.push(p.height), s) {
          let m = d.dom.lastChild, v = m ? Af(m) : [];
          if (v.length) {
            let g = v[v.length - 1], b = l ? g.right - p.left : p.right - g.left;
            b > a && (a = b, this.minWidth = o, this.minWidthFrom = u, this.minWidthTo = h);
          }
        }
      }
      u = h + d.breakAfter;
    }
    return n;
  }
  textDirectionAt(e) {
    let { i: n } = this.childPos(e, 1);
    return getComputedStyle(this.children[n].dom).direction == "rtl" ? Nr.RTL : Nr.LTR;
  }
  measureTextSize() {
    for (let o of this.children)
      if (o instanceof ii) {
        let s = o.measureTextSize();
        if (s)
          return s;
      }
    let e = document.createElement("div"), n, r, i;
    return e.className = "cm-line", e.style.width = "99999px", e.style.position = "absolute", e.textContent = "abc def ghi jkl mno pqr stu", this.view.observer.ignore(() => {
      this.dom.appendChild(e);
      let o = Af(e.firstChild)[0];
      n = e.getBoundingClientRect().height, r = o ? o.width / 27 : 7, i = o ? o.height : n, e.remove();
    }), { lineHeight: n, charWidth: r, textHeight: i };
  }
  childCursor(e = this.length) {
    let n = this.children.length;
    return n && (e -= this.children[--n].length), new TO(this.children, e, n);
  }
  computeBlockGapDeco() {
    let e = [], n = this.view.viewState;
    for (let r = 0, i = 0; ; i++) {
      let o = i == n.viewports.length ? null : n.viewports[i], s = o ? o.from - 1 : this.length;
      if (s > r) {
        let a = (n.lineBlockAt(s).bottom - n.lineBlockAt(r).top) / this.view.scaleY;
        e.push(Bt.replace({
          widget: new z0(a),
          block: !0,
          inclusive: !0,
          isBlockGap: !0
        }).range(r, s));
      }
      if (!o)
        break;
      r = o.to + 1;
    }
    return Bt.set(e);
  }
  updateDeco() {
    let e = 1, n = this.view.state.facet(Mf).map((o) => (this.dynamicDecorationMap[e++] = typeof o == "function") ? o(this.view) : o), r = !1, i = this.view.state.facet(n4).map((o, s) => {
      let a = typeof o == "function";
      return a && (r = !0), a ? o(this.view) : o;
    });
    for (i.length && (this.dynamicDecorationMap[e++] = r, n.push(zn.join(i))), this.decorations = [
      this.editContextFormatting,
      ...n,
      this.computeBlockGapDeco(),
      this.view.viewState.lineGapDeco
    ]; e < this.decorations.length; )
      this.dynamicDecorationMap[e++] = !1;
    return this.decorations;
  }
  scrollIntoView(e) {
    if (e.isSnapshot) {
      let u = this.view.viewState.lineBlockAt(e.range.head);
      this.view.scrollDOM.scrollTop = u.top - e.yMargin, this.view.scrollDOM.scrollLeft = e.xMargin;
      return;
    }
    for (let u of this.view.state.facet(ZO))
      try {
        if (u(this.view, e.range, e))
          return !0;
      } catch (f) {
        Wi(this.view.state, f, "scroll handler");
      }
    let { range: n } = e, r = this.coordsAt(n.head, n.empty ? n.assoc : n.head > n.anchor ? -1 : 1), i;
    if (!r)
      return;
    !n.empty && (i = this.coordsAt(n.anchor, n.anchor > n.head ? -1 : 1)) && (r = {
      left: Math.min(r.left, i.left),
      top: Math.min(r.top, i.top),
      right: Math.max(r.right, i.right),
      bottom: Math.max(r.bottom, i.bottom)
    });
    let o = M1(this.view), s = {
      left: r.left - o.left,
      top: r.top - o.top,
      right: r.right + o.right,
      bottom: r.bottom + o.bottom
    }, { offsetWidth: a, offsetHeight: l } = this.view.scrollDOM;
    K9(this.view.scrollDOM, s, n.head < n.anchor ? -1 : 1, e.x, e.y, Math.max(Math.min(e.xMargin, a), -a), Math.max(Math.min(e.yMargin, l), -l), this.view.textDirection == Nr.LTR);
  }
}
function mN(t) {
  return t.node.nodeType == 1 && t.node.firstChild && (t.offset == 0 || t.node.childNodes[t.offset - 1].contentEditable == "false") && (t.offset == t.node.childNodes.length || t.node.childNodes[t.offset].contentEditable == "false");
}
function o4(t, e) {
  let n = t.observer.selectionRange;
  if (!n.focusNode)
    return null;
  let r = AO(n.focusNode, n.focusOffset), i = MO(n.focusNode, n.focusOffset), o = r || i;
  if (i && r && i.node != r.node) {
    let a = yr.get(i.node);
    if (!a || a instanceof is && a.text != i.node.nodeValue)
      o = i;
    else if (t.docView.lastCompositionAfterCursor) {
      let l = yr.get(r.node);
      !l || l instanceof is && l.text != r.node.nodeValue || (o = i);
    }
  }
  if (t.docView.lastCompositionAfterCursor = o != r, !o)
    return null;
  let s = e - o.offset;
  return { from: s, to: s + o.node.nodeValue.length, node: o.node };
}
function gN(t, e, n) {
  let r = o4(t, n);
  if (!r)
    return null;
  let { node: i, from: o, to: s } = r, a = i.nodeValue;
  if (/[\n\r]/.test(a) || t.state.doc.sliceString(r.from, r.to) != a)
    return null;
  let l = e.invertedDesc, u = new $o(l.mapPos(o), l.mapPos(s), o, s), f = [];
  for (let d = i.parentNode; ; d = d.parentNode) {
    let h = yr.get(d);
    if (h instanceof ma)
      f.push({ node: d, deco: h.mark });
    else {
      if (h instanceof ii || d.nodeName == "DIV" && d.parentNode == t.contentDOM)
        return { range: u, text: i, marks: f, line: d };
      if (d != t.contentDOM)
        f.push({ node: d, deco: new cd({
          inclusive: !0,
          attributes: rN(d),
          tagName: d.tagName.toLowerCase()
        }) });
      else
        return null;
    }
  }
}
function vN(t, e) {
  return t.nodeType != 1 ? 0 : (e && t.childNodes[e - 1].contentEditable == "false" ? 1 : 0) | (e < t.childNodes.length && t.childNodes[e].contentEditable == "false" ? 2 : 0);
}
let bN = class {
  constructor() {
    this.changes = [];
  }
  compareRange(e, n) {
    hp(e, n, this.changes);
  }
  comparePoint(e, n) {
    hp(e, n, this.changes);
  }
  boundChange(e) {
    hp(e, e, this.changes);
  }
};
function yN(t, e, n) {
  let r = new bN();
  return zn.compare(t, e, n, r), r.changes;
}
function xN(t, e) {
  for (let n = t; n && n != e; n = n.assignedSlot || n.parentNode)
    if (n.nodeType == 1 && n.contentEditable == "false")
      return !0;
  return !1;
}
function wN(t, e) {
  let n = !1;
  return e && t.iterChangedRanges((r, i) => {
    r < e.to && i > e.from && (n = !0);
  }), n;
}
function jN(t, e, n = 1) {
  let r = t.charCategorizer(e), i = t.doc.lineAt(e), o = e - i.from;
  if (i.length == 0)
    return Me.cursor(e);
  o == 0 ? n = 1 : o == i.length && (n = -1);
  let s = o, a = o;
  n < 0 ? s = Mi(i.text, o, !1) : a = Mi(i.text, o);
  let l = r(i.text.slice(s, a));
  for (; s > 0; ) {
    let u = Mi(i.text, s, !1);
    if (r(i.text.slice(u, s)) != l)
      break;
    s = u;
  }
  for (; a < i.length; ) {
    let u = Mi(i.text, a);
    if (r(i.text.slice(a, u)) != l)
      break;
    a = u;
  }
  return Me.range(s + i.from, a + i.from);
}
function kN(t, e) {
  return e.left > t ? e.left - t : Math.max(0, t - e.right);
}
function SN(t, e) {
  return e.top > t ? e.top - t : Math.max(0, t - e.bottom);
}
function lv(t, e) {
  return t.top < e.bottom - 1 && t.bottom > e.top + 1;
}
function jj(t, e) {
  return e < t.top ? { top: e, left: t.left, right: t.right, bottom: t.bottom } : t;
}
function kj(t, e) {
  return e > t.bottom ? { top: t.top, left: t.left, right: t.right, bottom: e } : t;
}
function U0(t, e, n) {
  let r, i, o, s, a = !1, l, u, f, d;
  for (let m = t.firstChild; m; m = m.nextSibling) {
    let v = Af(m);
    for (let g = 0; g < v.length; g++) {
      let b = v[g];
      i && lv(i, b) && (b = jj(kj(b, i.bottom), i.top));
      let x = kN(e, b), w = SN(n, b);
      if (x == 0 && w == 0)
        return m.nodeType == 3 ? Sj(m, e, n) : U0(m, e, n);
      (!r || s > w || s == w && o > x) && (r = m, i = b, o = x, s = w, a = x ? e < b.left ? g > 0 : g < v.length - 1 : !0), x == 0 ? n > b.bottom && (!f || f.bottom < b.bottom) ? (l = m, f = b) : n < b.top && (!d || d.top > b.top) && (u = m, d = b) : f && lv(f, b) ? f = kj(f, b.bottom) : d && lv(d, b) && (d = jj(d, b.top));
    }
  }
  if (f && f.bottom >= n ? (r = l, i = f) : d && d.top <= n && (r = u, i = d), !r)
    return { node: t, offset: 0 };
  let h = Math.max(i.left, Math.min(i.right, e));
  if (r.nodeType == 3)
    return Sj(r, h, n);
  if (a && r.contentEditable != "false")
    return U0(r, h, n);
  let p = Array.prototype.indexOf.call(t.childNodes, r) + (e >= (i.left + i.right) / 2 ? 1 : 0);
  return { node: t, offset: p };
}
function Sj(t, e, n) {
  let r = t.nodeValue.length, i = -1, o = 1e9, s = 0;
  for (let a = 0; a < r; a++) {
    let l = Jl(t, a, a + 1).getClientRects();
    for (let u = 0; u < l.length; u++) {
      let f = l[u];
      if (f.top == f.bottom)
        continue;
      s || (s = e - f.left);
      let d = (f.top > n ? f.top - n : n - f.bottom) - 1;
      if (f.left - 1 <= e && f.right + 1 >= e && d < o) {
        let h = e >= (f.left + f.right) / 2, p = h;
        if ((st.chrome || st.gecko) && Jl(t, a).getBoundingClientRect().left == f.right && (p = !h), d <= 0)
          return { node: t, offset: a + (p ? 1 : 0) };
        i = a + (p ? 1 : 0), o = d;
      }
    }
  }
  return { node: t, offset: i > -1 ? i : s > 0 ? t.nodeValue.length : 0 };
}
function s4(t, e, n, r = -1) {
  var i, o;
  let s = t.contentDOM.getBoundingClientRect(), a = s.top + t.viewState.paddingTop, l, { docHeight: u } = t.viewState, { x: f, y: d } = e, h = d - a;
  if (h < 0)
    return 0;
  if (h > u)
    return t.state.doc.length;
  for (let j = t.viewState.heightOracle.textHeight / 2, y = !1; l = t.elementAtHeight(h), l.type != Hi.Text; )
    for (; h = r > 0 ? l.bottom + j : l.top - j, !(h >= 0 && h <= u); ) {
      if (y)
        return n ? null : 0;
      y = !0, r = -r;
    }
  d = a + h;
  let p = l.from;
  if (p < t.viewport.from)
    return t.viewport.from == 0 ? 0 : n ? null : Cj(t, s, l, f, d);
  if (p > t.viewport.to)
    return t.viewport.to == t.state.doc.length ? t.state.doc.length : n ? null : Cj(t, s, l, f, d);
  let m = t.dom.ownerDocument, v = t.root.elementFromPoint ? t.root : m, g = v.elementFromPoint(f, d);
  g && !t.contentDOM.contains(g) && (g = null), g || (f = Math.max(s.left + 1, Math.min(s.right - 1, f)), g = v.elementFromPoint(f, d), g && !t.contentDOM.contains(g) && (g = null));
  let b, x = -1;
  if (g && ((i = t.docView.nearest(g)) === null || i === void 0 ? void 0 : i.isEditable) != !1) {
    if (m.caretPositionFromPoint) {
      let j = m.caretPositionFromPoint(f, d);
      j && ({ offsetNode: b, offset: x } = j);
    } else if (m.caretRangeFromPoint) {
      let j = m.caretRangeFromPoint(f, d);
      j && ({ startContainer: b, startOffset: x } = j, (!t.contentDOM.contains(b) || st.safari && CN(b, x, f) || st.chrome && ON(b, x, f)) && (b = void 0));
    }
    b && (x = Math.min(Rs(b), x));
  }
  if (!b || !t.docView.dom.contains(b)) {
    let j = ii.find(t.docView, p);
    if (!j)
      return h > l.top + l.height / 2 ? l.to : l.from;
    ({ node: b, offset: x } = U0(j.dom, f, d));
  }
  let w = t.docView.nearest(b);
  if (!w)
    return null;
  if (w.isWidget && ((o = w.dom) === null || o === void 0 ? void 0 : o.nodeType) == 1) {
    let j = w.dom.getBoundingClientRect();
    return e.y < j.top || e.y <= j.bottom && e.x <= (j.left + j.right) / 2 ? w.posAtStart : w.posAtEnd;
  } else
    return w.localPosFromDOM(b, x) + w.posAtStart;
}
function Cj(t, e, n, r, i) {
  let o = Math.round((r - e.left) * t.defaultCharacterWidth);
  if (t.lineWrapping && n.height > t.defaultLineHeight * 1.5) {
    let a = t.viewState.heightOracle.textHeight, l = Math.floor((i - n.top - (t.defaultLineHeight - a) * 0.5) / a);
    o += l * t.viewState.heightOracle.lineLength;
  }
  let s = t.state.sliceDoc(n.from, n.to);
  return n.from + A0(s, o, t.state.tabSize);
}
function CN(t, e, n) {
  let r, i = t;
  if (t.nodeType != 3 || e != (r = t.nodeValue.length))
    return !1;
  for (; ; ) {
    let o = i.nextSibling;
    if (o) {
      if (o.nodeName == "BR")
        break;
      return !1;
    } else {
      let s = i.parentNode;
      if (!s || s.nodeName == "DIV")
        break;
      i = s;
    }
  }
  return Jl(t, r - 1, r).getBoundingClientRect().right > n;
}
function ON(t, e, n) {
  if (e != 0)
    return !1;
  for (let i = t; ; ) {
    let o = i.parentNode;
    if (!o || o.nodeType != 1 || o.firstChild != i)
      return !1;
    if (o.classList.contains("cm-line"))
      break;
    i = o;
  }
  let r = t.nodeType == 1 ? t.getBoundingClientRect() : Jl(t, 0, Math.max(t.nodeValue.length, 1)).getBoundingClientRect();
  return n - r.left > 5;
}
function V0(t, e, n) {
  let r = t.lineBlockAt(e);
  if (Array.isArray(r.type)) {
    let i;
    for (let o of r.type) {
      if (o.from > e)
        break;
      if (!(o.to < e)) {
        if (o.from < e && o.to > e)
          return o;
        (!i || o.type == Hi.Text && (i.type != o.type || (n < 0 ? o.from < e : o.to > e))) && (i = o);
      }
    }
    return i || r;
  }
  return r;
}
function EN(t, e, n, r) {
  let i = V0(t, e.head, e.assoc || -1), o = !r || i.type != Hi.Text || !(t.lineWrapping || i.widgetLineBreaks) ? null : t.coordsAtPos(e.assoc < 0 && e.head > i.from ? e.head - 1 : e.head);
  if (o) {
    let s = t.dom.getBoundingClientRect(), a = t.textDirectionAt(i.from), l = t.posAtCoords({
      x: n == (a == Nr.LTR) ? s.right - 1 : s.left + 1,
      y: (o.top + o.bottom) / 2
    });
    if (l != null)
      return Me.cursor(l, n ? -1 : 1);
  }
  return Me.cursor(n ? i.to : i.from, n ? -1 : 1);
}
function Oj(t, e, n, r) {
  let i = t.state.doc.lineAt(e.head), o = t.bidiSpans(i), s = t.textDirectionAt(i.from);
  for (let a = e, l = null; ; ) {
    let u = dN(i, o, s, a, n), f = VO;
    if (!u) {
      if (i.number == (n ? t.state.doc.lines : 1))
        return a;
      f = `
`, i = t.state.doc.line(i.number + (n ? 1 : -1)), o = t.bidiSpans(i), u = t.visualLineSide(i, !n);
    }
    if (l) {
      if (!l(f))
        return a;
    } else {
      if (!r)
        return u;
      l = r(f);
    }
    a = u;
  }
}
function _N(t, e, n) {
  let r = t.state.charCategorizer(e), i = r(n);
  return (o) => {
    let s = r(o);
    return i == Fr.Space && (i = s), i == s;
  };
}
function AN(t, e, n, r) {
  let i = e.head, o = n ? 1 : -1;
  if (i == (n ? t.state.doc.length : 0))
    return Me.cursor(i, e.assoc);
  let s = e.goalColumn, a, l = t.contentDOM.getBoundingClientRect(), u = t.coordsAtPos(i, e.assoc || -1), f = t.documentTop;
  if (u)
    s == null && (s = u.left - l.left), a = o < 0 ? u.top : u.bottom;
  else {
    let p = t.viewState.lineBlockAt(i);
    s == null && (s = Math.min(l.right - l.left, t.defaultCharacterWidth * (i - p.from))), a = (o < 0 ? p.top : p.bottom) + f;
  }
  let d = l.left + s, h = r ?? t.viewState.heightOracle.textHeight >> 1;
  for (let p = 0; ; p += 10) {
    let m = a + (h + p) * o, v = s4(t, { x: d, y: m }, !1, o);
    if (m < l.top || m > l.bottom || (o < 0 ? v < i : v > i)) {
      let g = t.docView.coordsForChar(v), b = !g || m < g.top ? -1 : 1;
      return Me.cursor(v, b, void 0, s);
    }
  }
}
function pp(t, e, n) {
  for (; ; ) {
    let r = 0;
    for (let i of t)
      i.between(e - 1, e + 1, (o, s, a) => {
        if (e > o && e < s) {
          let l = r || n || (e - o < s - e ? -1 : 1);
          e = l < 0 ? o : s, r = l;
        }
      });
    if (!r)
      return e;
  }
}
function cv(t, e, n) {
  let r = pp(t.state.facet(A1).map((i) => i(t)), n.from, e.head > n.from ? -1 : 1);
  return r == n.from ? n : Me.cursor(r, r < n.from ? 1 : -1);
}
const Zu = "￿";
class MN {
  constructor(e, n) {
    this.points = e, this.text = "", this.lineSeparator = n.facet(En.lineSeparator);
  }
  append(e) {
    this.text += e;
  }
  lineBreak() {
    this.text += Zu;
  }
  readRange(e, n) {
    if (!e)
      return this;
    let r = e.parentNode;
    for (let i = e; ; ) {
      this.findPointBefore(r, i);
      let o = this.text.length;
      this.readNode(i);
      let s = i.nextSibling;
      if (s == n)
        break;
      let a = yr.get(i), l = yr.get(s);
      (a && l ? a.breakAfter : (a ? a.breakAfter : Fp(i)) || Fp(s) && (i.nodeName != "BR" || i.cmIgnore) && this.text.length > o) && this.lineBreak(), i = s;
    }
    return this.findPointBefore(r, n), this;
  }
  readTextNode(e) {
    let n = e.nodeValue;
    for (let r of this.points)
      r.node == e && (r.pos = this.text.length + Math.min(r.offset, n.length));
    for (let r = 0, i = this.lineSeparator ? null : /\r\n?|\n/g; ; ) {
      let o = -1, s = 1, a;
      if (this.lineSeparator ? (o = n.indexOf(this.lineSeparator, r), s = this.lineSeparator.length) : (a = i.exec(n)) && (o = a.index, s = a[0].length), this.append(n.slice(r, o < 0 ? n.length : o)), o < 0)
        break;
      if (this.lineBreak(), s > 1)
        for (let l of this.points)
          l.node == e && l.pos > this.text.length && (l.pos -= s - 1);
      r = o + s;
    }
  }
  readNode(e) {
    if (e.cmIgnore)
      return;
    let n = yr.get(e), r = n && n.overrideDOMText;
    if (r != null) {
      this.findPointInside(e, r.length);
      for (let i = r.iter(); !i.next().done; )
        i.lineBreak ? this.lineBreak() : this.append(i.value);
    } else e.nodeType == 3 ? this.readTextNode(e) : e.nodeName == "BR" ? e.nextSibling && this.lineBreak() : e.nodeType == 1 && this.readRange(e.firstChild, null);
  }
  findPointBefore(e, n) {
    for (let r of this.points)
      r.node == e && e.childNodes[r.offset] == n && (r.pos = this.text.length);
  }
  findPointInside(e, n) {
    for (let r of this.points)
      (e.nodeType == 3 ? r.node == e : e.contains(r.node)) && (r.pos = this.text.length + (TN(e, r.node, r.offset) ? n : 0));
  }
}
function TN(t, e, n) {
  for (; ; ) {
    if (!e || n < Rs(e))
      return !1;
    if (e == t)
      return !0;
    n = Gl(e) + 1, e = e.parentNode;
  }
}
class Ej {
  constructor(e, n) {
    this.node = e, this.offset = n, this.pos = -1;
  }
}
class $N {
  constructor(e, n, r, i) {
    this.typeOver = i, this.bounds = null, this.text = "", this.domChanged = n > -1;
    let { impreciseHead: o, impreciseAnchor: s } = e.docView;
    if (e.state.readOnly && n > -1)
      this.newSel = null;
    else if (n > -1 && (this.bounds = e.docView.domBoundsAround(n, r, 0))) {
      let a = o || s ? [] : NN(e), l = new MN(a, e.state);
      l.readRange(this.bounds.startDOM, this.bounds.endDOM), this.text = l.text, this.newSel = DN(a, this.bounds.from);
    } else {
      let a = e.observer.selectionRange, l = o && o.node == a.focusNode && o.offset == a.focusOffset || !$0(e.contentDOM, a.focusNode) ? e.state.selection.main.head : e.docView.posFromDOM(a.focusNode, a.focusOffset), u = s && s.node == a.anchorNode && s.offset == a.anchorOffset || !$0(e.contentDOM, a.anchorNode) ? e.state.selection.main.anchor : e.docView.posFromDOM(a.anchorNode, a.anchorOffset), f = e.viewport;
      if ((st.ios || st.chrome) && e.state.selection.main.empty && l != u && (f.from > 0 || f.to < e.state.doc.length)) {
        let d = Math.min(l, u), h = Math.max(l, u), p = f.from - d, m = f.to - h;
        (p == 0 || p == 1 || d == 0) && (m == 0 || m == -1 || h == e.state.doc.length) && (l = 0, u = e.state.doc.length);
      }
      this.newSel = Me.single(u, l);
    }
  }
}
function a4(t, e) {
  let n, { newSel: r } = e, i = t.state.selection.main, o = t.inputState.lastKeyTime > Date.now() - 100 ? t.inputState.lastKeyCode : -1;
  if (e.bounds) {
    let { from: s, to: a } = e.bounds, l = i.from, u = null;
    (o === 8 || st.android && e.text.length < a - s) && (l = i.to, u = "end");
    let f = RN(t.state.doc.sliceString(s, a, Zu), e.text, l - s, u);
    f && (st.chrome && o == 13 && f.toB == f.from + 2 && e.text.slice(f.from, f.toB) == Zu + Zu && f.toB--, n = {
      from: s + f.from,
      to: s + f.toA,
      insert: rr.of(e.text.slice(f.from, f.toB).split(Zu))
    });
  } else r && (!t.hasFocus && t.state.facet(ea) || r.main.eq(i)) && (r = null);
  if (!n && !r)
    return !1;
  if (!n && e.typeOver && !i.empty && r && r.main.empty ? n = { from: i.from, to: i.to, insert: t.state.doc.slice(i.from, i.to) } : (st.mac || st.android) && n && n.from == n.to && n.from == i.head - 1 && /^\. ?$/.test(n.insert.toString()) && t.contentDOM.getAttribute("autocorrect") == "off" ? (r && n.insert.length == 2 && (r = Me.single(r.main.anchor - 1, r.main.head - 1)), n = { from: n.from, to: n.to, insert: rr.of([n.insert.toString().replace(".", " ")]) }) : n && n.from >= i.from && n.to <= i.to && (n.from != i.from || n.to != i.to) && i.to - i.from - (n.to - n.from) <= 4 ? n = {
    from: i.from,
    to: i.to,
    insert: t.state.doc.slice(i.from, n.from).append(n.insert).append(t.state.doc.slice(n.to, i.to))
  } : st.chrome && n && n.from == n.to && n.from == i.head && n.insert.toString() == `
 ` && t.lineWrapping && (r && (r = Me.single(r.main.anchor - 1, r.main.head - 1)), n = { from: i.from, to: i.to, insert: rr.of([" "]) }), n)
    return T1(t, n, r, o);
  if (r && !r.main.eq(i)) {
    let s = !1, a = "select";
    return t.inputState.lastSelectionTime > Date.now() - 50 && (t.inputState.lastSelectionOrigin == "select" && (s = !0), a = t.inputState.lastSelectionOrigin), t.dispatch({ selection: r, scrollIntoView: s, userEvent: a }), !0;
  } else
    return !1;
}
function T1(t, e, n, r = -1) {
  if (st.ios && t.inputState.flushIOSKey(e))
    return !0;
  let i = t.state.selection.main;
  if (st.android && (e.to == i.to && // GBoard will sometimes remove a space it just inserted
  // after a completion when you press enter
  (e.from == i.from || e.from == i.from - 1 && t.state.sliceDoc(e.from, i.from) == " ") && e.insert.length == 1 && e.insert.lines == 2 && Hc(t.contentDOM, "Enter", 13) || (e.from == i.from - 1 && e.to == i.to && e.insert.length == 0 || r == 8 && e.insert.length < e.to - e.from && e.to > i.head) && Hc(t.contentDOM, "Backspace", 8) || e.from == i.from && e.to == i.to + 1 && e.insert.length == 0 && Hc(t.contentDOM, "Delete", 46)))
    return !0;
  let o = e.insert.toString();
  t.inputState.composing >= 0 && t.inputState.composing++;
  let s, a = () => s || (s = PN(t, e, n));
  return t.state.facet(JO).some((l) => l(t, e.from, e.to, o, a)) || t.dispatch(a()), !0;
}
function PN(t, e, n) {
  let r, i = t.state, o = i.selection.main;
  if (e.from >= o.from && e.to <= o.to && e.to - e.from >= (o.to - o.from) / 3 && (!n || n.main.empty && n.main.from == e.from + e.insert.length) && t.inputState.composing < 0) {
    let a = o.from < e.from ? i.sliceDoc(o.from, e.from) : "", l = o.to > e.to ? i.sliceDoc(e.to, o.to) : "";
    r = i.replaceSelection(t.state.toText(a + e.insert.sliceString(0, void 0, t.state.lineBreak) + l));
  } else {
    let a = i.changes(e), l = n && n.main.to <= a.newLength ? n.main : void 0;
    if (i.selection.ranges.length > 1 && t.inputState.composing >= 0 && e.to <= o.to && e.to >= o.to - 10) {
      let u = t.state.sliceDoc(e.from, e.to), f, d = n && o4(t, n.main.head);
      if (d) {
        let m = e.insert.length - (e.to - e.from);
        f = { from: d.from, to: d.to - m };
      } else
        f = t.state.doc.lineAt(o.head);
      let h = o.to - e.to, p = o.to - o.from;
      r = i.changeByRange((m) => {
        if (m.from == o.from && m.to == o.to)
          return { changes: a, range: l || m.map(a) };
        let v = m.to - h, g = v - u.length;
        if (m.to - m.from != p || t.state.sliceDoc(g, v) != u || // Unfortunately, there's no way to make multiple
        // changes in the same node work without aborting
        // composition, so cursors in the composition range are
        // ignored.
        m.to >= f.from && m.from <= f.to)
          return { range: m };
        let b = i.changes({ from: g, to: v, insert: e.insert }), x = m.to - o.to;
        return {
          changes: b,
          range: l ? Me.range(Math.max(0, l.anchor + x), Math.max(0, l.head + x)) : m.map(b)
        };
      });
    } else
      r = {
        changes: a,
        selection: l && i.selection.replaceRange(l)
      };
  }
  let s = "input.type";
  return (t.composing || t.inputState.compositionPendingChange && t.inputState.compositionEndedAt > Date.now() - 50) && (t.inputState.compositionPendingChange = !1, s += ".compose", t.inputState.compositionFirstChange && (s += ".start", t.inputState.compositionFirstChange = !1)), i.update(r, { userEvent: s, scrollIntoView: !0 });
}
function RN(t, e, n, r) {
  let i = Math.min(t.length, e.length), o = 0;
  for (; o < i && t.charCodeAt(o) == e.charCodeAt(o); )
    o++;
  if (o == i && t.length == e.length)
    return null;
  let s = t.length, a = e.length;
  for (; s > 0 && a > 0 && t.charCodeAt(s - 1) == e.charCodeAt(a - 1); )
    s--, a--;
  if (r == "end") {
    let l = Math.max(0, o - Math.min(s, a));
    n -= s + l - o;
  }
  if (s < o && t.length < e.length) {
    let l = n <= o && n >= s ? o - n : 0;
    o -= l, a = o + (a - s), s = o;
  } else if (a < o) {
    let l = n <= o && n >= a ? o - n : 0;
    o -= l, s = o + (s - a), a = o;
  }
  return { from: o, toA: s, toB: a };
}
function NN(t) {
  let e = [];
  if (t.root.activeElement != t.contentDOM)
    return e;
  let { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: o } = t.observer.selectionRange;
  return n && (e.push(new Ej(n, r)), (i != n || o != r) && e.push(new Ej(i, o))), e;
}
function DN(t, e) {
  if (t.length == 0)
    return null;
  let n = t[0].pos, r = t.length == 2 ? t[1].pos : n;
  return n > -1 && r > -1 ? Me.single(n + e, r + e) : null;
}
class IN {
  setSelectionOrigin(e) {
    this.lastSelectionOrigin = e, this.lastSelectionTime = Date.now();
  }
  constructor(e) {
    this.view = e, this.lastKeyCode = 0, this.lastKeyTime = 0, this.lastTouchTime = 0, this.lastFocusTime = 0, this.lastScrollTop = 0, this.lastScrollLeft = 0, this.pendingIOSKey = void 0, this.tabFocusMode = -1, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastContextMenu = 0, this.scrollHandlers = [], this.handlers = /* @__PURE__ */ Object.create(null), this.composing = -1, this.compositionFirstChange = null, this.compositionEndedAt = 0, this.compositionPendingKey = !1, this.compositionPendingChange = !1, this.mouseSelection = null, this.draggedContent = null, this.handleEvent = this.handleEvent.bind(this), this.notifiedFocused = e.hasFocus, st.safari && e.contentDOM.addEventListener("input", () => null), st.gecko && ZN(e.contentDOM.ownerDocument);
  }
  handleEvent(e) {
    !WN(this.view, e) || this.ignoreDuringComposition(e) || e.type == "keydown" && this.keydown(e) || (this.view.updateState != 0 ? Promise.resolve().then(() => this.runHandlers(e.type, e)) : this.runHandlers(e.type, e));
  }
  runHandlers(e, n) {
    let r = this.handlers[e];
    if (r) {
      for (let i of r.observers)
        i(this.view, n);
      for (let i of r.handlers) {
        if (n.defaultPrevented)
          break;
        if (i(this.view, n)) {
          n.preventDefault();
          break;
        }
      }
    }
  }
  ensureHandlers(e) {
    let n = zN(e), r = this.handlers, i = this.view.contentDOM;
    for (let o in n)
      if (o != "scroll") {
        let s = !n[o].handlers.length, a = r[o];
        a && s != !a.handlers.length && (i.removeEventListener(o, this.handleEvent), a = null), a || i.addEventListener(o, this.handleEvent, { passive: s });
      }
    for (let o in r)
      o != "scroll" && !n[o] && i.removeEventListener(o, this.handleEvent);
    this.handlers = n;
  }
  keydown(e) {
    if (this.lastKeyCode = e.keyCode, this.lastKeyTime = Date.now(), e.keyCode == 9 && this.tabFocusMode > -1 && (!this.tabFocusMode || Date.now() <= this.tabFocusMode))
      return !0;
    if (this.tabFocusMode > 0 && e.keyCode != 27 && c4.indexOf(e.keyCode) < 0 && (this.tabFocusMode = -1), st.android && st.chrome && !e.synthetic && (e.keyCode == 13 || e.keyCode == 8))
      return this.view.observer.delayAndroidKey(e.key, e.keyCode), !0;
    let n;
    return st.ios && !e.synthetic && !e.altKey && !e.metaKey && ((n = l4.find((r) => r.keyCode == e.keyCode)) && !e.ctrlKey || LN.indexOf(e.key) > -1 && e.ctrlKey && !e.shiftKey) ? (this.pendingIOSKey = n || e, setTimeout(() => this.flushIOSKey(), 250), !0) : (e.keyCode != 229 && this.view.observer.forceFlush(), !1);
  }
  flushIOSKey(e) {
    let n = this.pendingIOSKey;
    return !n || n.key == "Enter" && e && e.from < e.to && /^\S+$/.test(e.insert.toString()) ? !1 : (this.pendingIOSKey = void 0, Hc(this.view.contentDOM, n.key, n.keyCode, n instanceof KeyboardEvent ? n : void 0));
  }
  ignoreDuringComposition(e) {
    return /^key/.test(e.type) ? this.composing > 0 ? !0 : st.safari && !st.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100 ? (this.compositionPendingKey = !1, !0) : !1 : !1;
  }
  startMouseSelection(e) {
    this.mouseSelection && this.mouseSelection.destroy(), this.mouseSelection = e;
  }
  update(e) {
    this.view.observer.update(e), this.mouseSelection && this.mouseSelection.update(e), this.draggedContent && e.docChanged && (this.draggedContent = this.draggedContent.map(e.changes)), e.transactions.length && (this.lastKeyCode = this.lastSelectionTime = 0);
  }
  destroy() {
    this.mouseSelection && this.mouseSelection.destroy();
  }
}
function _j(t, e) {
  return (n, r) => {
    try {
      return e.call(t, r, n);
    } catch (i) {
      Wi(n.state, i);
    }
  };
}
function zN(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(r) {
    return e[r] || (e[r] = { observers: [], handlers: [] });
  }
  for (let r of t) {
    let i = r.spec, o = i && i.plugin.domEventHandlers, s = i && i.plugin.domEventObservers;
    if (o)
      for (let a in o) {
        let l = o[a];
        l && n(a).handlers.push(_j(r.value, l));
      }
    if (s)
      for (let a in s) {
        let l = s[a];
        l && n(a).observers.push(_j(r.value, l));
      }
  }
  for (let r in os)
    n(r).handlers.push(os[r]);
  for (let r in No)
    n(r).observers.push(No[r]);
  return e;
}
const l4 = [
  { key: "Backspace", keyCode: 8, inputType: "deleteContentBackward" },
  { key: "Enter", keyCode: 13, inputType: "insertParagraph" },
  { key: "Enter", keyCode: 13, inputType: "insertLineBreak" },
  { key: "Delete", keyCode: 46, inputType: "deleteContentForward" }
], LN = "dthko", c4 = [16, 17, 18, 20, 91, 92, 224, 225], Ch = 6;
function Oh(t) {
  return Math.max(0, t) * 0.7 + 8;
}
function BN(t, e) {
  return Math.max(Math.abs(t.clientX - e.clientX), Math.abs(t.clientY - e.clientY));
}
class qN {
  constructor(e, n, r, i) {
    this.view = e, this.startEvent = n, this.style = r, this.mustSelect = i, this.scrollSpeed = { x: 0, y: 0 }, this.scrolling = -1, this.lastEvent = n, this.scrollParents = G9(e.contentDOM), this.atoms = e.state.facet(A1).map((s) => s(e));
    let o = e.contentDOM.ownerDocument;
    o.addEventListener("mousemove", this.move = this.move.bind(this)), o.addEventListener("mouseup", this.up = this.up.bind(this)), this.extend = n.shiftKey, this.multiple = e.state.facet(En.allowMultipleSelections) && FN(e, n), this.dragging = VN(e, n) && d4(n) == 1 ? null : !1;
  }
  start(e) {
    this.dragging === !1 && this.select(e);
  }
  move(e) {
    if (e.buttons == 0)
      return this.destroy();
    if (this.dragging || this.dragging == null && BN(this.startEvent, e) < 10)
      return;
    this.select(this.lastEvent = e);
    let n = 0, r = 0, i = 0, o = 0, s = this.view.win.innerWidth, a = this.view.win.innerHeight;
    this.scrollParents.x && ({ left: i, right: s } = this.scrollParents.x.getBoundingClientRect()), this.scrollParents.y && ({ top: o, bottom: a } = this.scrollParents.y.getBoundingClientRect());
    let l = M1(this.view);
    e.clientX - l.left <= i + Ch ? n = -Oh(i - e.clientX) : e.clientX + l.right >= s - Ch && (n = Oh(e.clientX - s)), e.clientY - l.top <= o + Ch ? r = -Oh(o - e.clientY) : e.clientY + l.bottom >= a - Ch && (r = Oh(e.clientY - a)), this.setScrollSpeed(n, r);
  }
  up(e) {
    this.dragging == null && this.select(this.lastEvent), this.dragging || e.preventDefault(), this.destroy();
  }
  destroy() {
    this.setScrollSpeed(0, 0);
    let e = this.view.contentDOM.ownerDocument;
    e.removeEventListener("mousemove", this.move), e.removeEventListener("mouseup", this.up), this.view.inputState.mouseSelection = this.view.inputState.draggedContent = null;
  }
  setScrollSpeed(e, n) {
    this.scrollSpeed = { x: e, y: n }, e || n ? this.scrolling < 0 && (this.scrolling = setInterval(() => this.scroll(), 50)) : this.scrolling > -1 && (clearInterval(this.scrolling), this.scrolling = -1);
  }
  scroll() {
    let { x: e, y: n } = this.scrollSpeed;
    e && this.scrollParents.x && (this.scrollParents.x.scrollLeft += e, e = 0), n && this.scrollParents.y && (this.scrollParents.y.scrollTop += n, n = 0), (e || n) && this.view.win.scrollBy(e, n), this.dragging === !1 && this.select(this.lastEvent);
  }
  skipAtoms(e) {
    let n = null;
    for (let r = 0; r < e.ranges.length; r++) {
      let i = e.ranges[r], o = null;
      if (i.empty) {
        let s = pp(this.atoms, i.from, 0);
        s != i.from && (o = Me.cursor(s, -1));
      } else {
        let s = pp(this.atoms, i.from, -1), a = pp(this.atoms, i.to, 1);
        (s != i.from || a != i.to) && (o = Me.range(i.from == i.anchor ? s : a, i.from == i.head ? s : a));
      }
      o && (n || (n = e.ranges.slice()), n[r] = o);
    }
    return n ? Me.create(n, e.mainIndex) : e;
  }
  select(e) {
    let { view: n } = this, r = this.skipAtoms(this.style.get(e, this.extend, this.multiple));
    (this.mustSelect || !r.eq(n.state.selection, this.dragging === !1)) && this.view.dispatch({
      selection: r,
      userEvent: "select.pointer"
    }), this.mustSelect = !1;
  }
  update(e) {
    e.transactions.some((n) => n.isUserEvent("input.type")) ? this.destroy() : this.style.update(e) && setTimeout(() => this.select(this.lastEvent), 20);
  }
}
function FN(t, e) {
  let n = t.state.facet(WO);
  return n.length ? n[0](e) : st.mac ? e.metaKey : e.ctrlKey;
}
function UN(t, e) {
  let n = t.state.facet(HO);
  return n.length ? n[0](e) : st.mac ? !e.altKey : !e.ctrlKey;
}
function VN(t, e) {
  let { main: n } = t.state.selection;
  if (n.empty)
    return !1;
  let r = _f(t.root);
  if (!r || r.rangeCount == 0)
    return !0;
  let i = r.getRangeAt(0).getClientRects();
  for (let o = 0; o < i.length; o++) {
    let s = i[o];
    if (s.left <= e.clientX && s.right >= e.clientX && s.top <= e.clientY && s.bottom >= e.clientY)
      return !0;
  }
  return !1;
}
function WN(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target, r; n != t.contentDOM; n = n.parentNode)
    if (!n || n.nodeType == 11 || (r = yr.get(n)) && r.ignoreEvent(e))
      return !1;
  return !0;
}
const os = /* @__PURE__ */ Object.create(null), No = /* @__PURE__ */ Object.create(null), u4 = st.ie && st.ie_version < 15 || st.ios && st.webkit_version < 604;
function HN(t) {
  let e = t.dom.parentNode;
  if (!e)
    return;
  let n = e.appendChild(document.createElement("textarea"));
  n.style.cssText = "position: fixed; left: -10000px; top: 10px", n.focus(), setTimeout(() => {
    t.focus(), n.remove(), f4(t, n.value);
  }, 50);
}
function tg(t, e, n) {
  for (let r of t.facet(e))
    n = r(n, t);
  return n;
}
function f4(t, e) {
  e = tg(t.state, O1, e);
  let { state: n } = t, r, i = 1, o = n.toText(e), s = o.lines == n.selection.ranges.length;
  if (W0 != null && n.selection.ranges.every((l) => l.empty) && W0 == o.toString()) {
    let l = -1;
    r = n.changeByRange((u) => {
      let f = n.doc.lineAt(u.from);
      if (f.from == l)
        return { range: u };
      l = f.from;
      let d = n.toText((s ? o.line(i++).text : e) + n.lineBreak);
      return {
        changes: { from: f.from, insert: d },
        range: Me.cursor(u.from + d.length)
      };
    });
  } else s ? r = n.changeByRange((l) => {
    let u = o.line(i++);
    return {
      changes: { from: l.from, to: l.to, insert: u.text },
      range: Me.cursor(l.from + u.length)
    };
  }) : r = n.replaceSelection(o);
  t.dispatch(r, {
    userEvent: "input.paste",
    scrollIntoView: !0
  });
}
No.scroll = (t) => {
  t.inputState.lastScrollTop = t.scrollDOM.scrollTop, t.inputState.lastScrollLeft = t.scrollDOM.scrollLeft;
};
os.keydown = (t, e) => (t.inputState.setSelectionOrigin("select"), e.keyCode == 27 && t.inputState.tabFocusMode != 0 && (t.inputState.tabFocusMode = Date.now() + 2e3), !1);
No.touchstart = (t, e) => {
  t.inputState.lastTouchTime = Date.now(), t.inputState.setSelectionOrigin("select.pointer");
};
No.touchmove = (t) => {
  t.inputState.setSelectionOrigin("select.pointer");
};
os.mousedown = (t, e) => {
  if (t.observer.flush(), t.inputState.lastTouchTime > Date.now() - 2e3)
    return !1;
  let n = null;
  for (let r of t.state.facet(KO))
    if (n = r(t, e), n)
      break;
  if (!n && e.button == 0 && (n = JN(t, e)), n) {
    let r = !t.hasFocus;
    t.inputState.startMouseSelection(new qN(t, e, n, r)), r && t.observer.ignore(() => {
      OO(t.contentDOM);
      let o = t.root.activeElement;
      o && !o.contains(t.contentDOM) && o.blur();
    });
    let i = t.inputState.mouseSelection;
    if (i)
      return i.start(e), i.dragging === !1;
  }
  return !1;
};
function Aj(t, e, n, r) {
  if (r == 1)
    return Me.cursor(e, n);
  if (r == 2)
    return jN(t.state, e, n);
  {
    let i = ii.find(t.docView, e), o = t.state.doc.lineAt(i ? i.posAtEnd : e), s = i ? i.posAtStart : o.from, a = i ? i.posAtEnd : o.to;
    return a < t.state.doc.length && a == o.to && a++, Me.range(s, a);
  }
}
let Mj = (t, e, n) => e >= n.top && e <= n.bottom && t >= n.left && t <= n.right;
function KN(t, e, n, r) {
  let i = ii.find(t.docView, e);
  if (!i)
    return 1;
  let o = e - i.posAtStart;
  if (o == 0)
    return 1;
  if (o == i.length)
    return -1;
  let s = i.coordsAt(o, -1);
  if (s && Mj(n, r, s))
    return -1;
  let a = i.coordsAt(o, 1);
  return a && Mj(n, r, a) ? 1 : s && s.bottom >= r ? -1 : 1;
}
function Tj(t, e) {
  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1);
  return { pos: n, bias: KN(t, n, e.clientX, e.clientY) };
}
const GN = st.ie && st.ie_version <= 11;
let $j = null, Pj = 0, Rj = 0;
function d4(t) {
  if (!GN)
    return t.detail;
  let e = $j, n = Rj;
  return $j = t, Rj = Date.now(), Pj = !e || n > Date.now() - 400 && Math.abs(e.clientX - t.clientX) < 2 && Math.abs(e.clientY - t.clientY) < 2 ? (Pj + 1) % 3 : 1;
}
function JN(t, e) {
  let n = Tj(t, e), r = d4(e), i = t.state.selection;
  return {
    update(o) {
      o.docChanged && (n.pos = o.changes.mapPos(n.pos), i = i.map(o.changes));
    },
    get(o, s, a) {
      let l = Tj(t, o), u, f = Aj(t, l.pos, l.bias, r);
      if (n.pos != l.pos && !s) {
        let d = Aj(t, n.pos, n.bias, r), h = Math.min(d.from, f.from), p = Math.max(d.to, f.to);
        f = h < f.from ? Me.range(h, p) : Me.range(p, h);
      }
      return s ? i.replaceRange(i.main.extend(f.from, f.to)) : a && r == 1 && i.ranges.length > 1 && (u = YN(i, l.pos)) ? u : a ? i.addRange(f) : Me.create([f]);
    }
  };
}
function YN(t, e) {
  for (let n = 0; n < t.ranges.length; n++) {
    let { from: r, to: i } = t.ranges[n];
    if (r <= e && i >= e)
      return Me.create(t.ranges.slice(0, n).concat(t.ranges.slice(n + 1)), t.mainIndex == n ? 0 : t.mainIndex - (t.mainIndex > n ? 1 : 0));
  }
  return null;
}
os.dragstart = (t, e) => {
  let { selection: { main: n } } = t.state;
  if (e.target.draggable) {
    let i = t.docView.nearest(e.target);
    if (i && i.isWidget) {
      let o = i.posAtStart, s = o + i.length;
      (o >= n.to || s <= n.from) && (n = Me.range(o, s));
    }
  }
  let { inputState: r } = t;
  return r.mouseSelection && (r.mouseSelection.dragging = !0), r.draggedContent = n, e.dataTransfer && (e.dataTransfer.setData("Text", tg(t.state, E1, t.state.sliceDoc(n.from, n.to))), e.dataTransfer.effectAllowed = "copyMove"), !1;
};
os.dragend = (t) => (t.inputState.draggedContent = null, !1);
function Nj(t, e, n, r) {
  if (n = tg(t.state, O1, n), !n)
    return;
  let i = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), { draggedContent: o } = t.inputState, s = r && o && UN(t, e) ? { from: o.from, to: o.to } : null, a = { from: i, insert: n }, l = t.state.changes(s ? [s, a] : a);
  t.focus(), t.dispatch({
    changes: l,
    selection: { anchor: l.mapPos(i, -1), head: l.mapPos(i, 1) },
    userEvent: s ? "move.drop" : "input.drop"
  }), t.inputState.draggedContent = null;
}
os.drop = (t, e) => {
  if (!e.dataTransfer)
    return !1;
  if (t.state.readOnly)
    return !0;
  let n = e.dataTransfer.files;
  if (n && n.length) {
    let r = Array(n.length), i = 0, o = () => {
      ++i == n.length && Nj(t, e, r.filter((s) => s != null).join(t.state.lineBreak), !1);
    };
    for (let s = 0; s < n.length; s++) {
      let a = new FileReader();
      a.onerror = o, a.onload = () => {
        /[\x00-\x08\x0e-\x1f]{2}/.test(a.result) || (r[s] = a.result), o();
      }, a.readAsText(n[s]);
    }
    return !0;
  } else {
    let r = e.dataTransfer.getData("Text");
    if (r)
      return Nj(t, e, r, !0), !0;
  }
  return !1;
};
os.paste = (t, e) => {
  if (t.state.readOnly)
    return !0;
  t.observer.flush();
  let n = u4 ? null : e.clipboardData;
  return n ? (f4(t, n.getData("text/plain") || n.getData("text/uri-list")), !0) : (HN(t), !1);
};
function QN(t, e) {
  let n = t.dom.parentNode;
  if (!n)
    return;
  let r = n.appendChild(document.createElement("textarea"));
  r.style.cssText = "position: fixed; left: -10000px; top: 10px", r.value = e, r.focus(), r.selectionEnd = e.length, r.selectionStart = 0, setTimeout(() => {
    r.remove(), t.focus();
  }, 50);
}
function XN(t) {
  let e = [], n = [], r = !1;
  for (let i of t.selection.ranges)
    i.empty || (e.push(t.sliceDoc(i.from, i.to)), n.push(i));
  if (!e.length) {
    let i = -1;
    for (let { from: o } of t.selection.ranges) {
      let s = t.doc.lineAt(o);
      s.number > i && (e.push(s.text), n.push({ from: s.from, to: Math.min(t.doc.length, s.to + 1) })), i = s.number;
    }
    r = !0;
  }
  return { text: tg(t, E1, e.join(t.lineBreak)), ranges: n, linewise: r };
}
let W0 = null;
os.copy = os.cut = (t, e) => {
  let { text: n, ranges: r, linewise: i } = XN(t.state);
  if (!n && !i)
    return !1;
  W0 = i ? n : null, e.type == "cut" && !t.state.readOnly && t.dispatch({
    changes: r,
    scrollIntoView: !0,
    userEvent: "delete.cut"
  });
  let o = u4 ? null : e.clipboardData;
  return o ? (o.clearData(), o.setData("text/plain", n), !0) : (QN(t, n), !1);
};
const h4 = /* @__PURE__ */ hl.define();
function p4(t, e) {
  let n = [];
  for (let r of t.facet(YO)) {
    let i = r(t, e);
    i && n.push(i);
  }
  return n.length ? t.update({ effects: n, annotations: h4.of(!0) }) : null;
}
function m4(t) {
  setTimeout(() => {
    let e = t.hasFocus;
    if (e != t.inputState.notifiedFocused) {
      let n = p4(t.state, e);
      n ? t.dispatch(n) : t.update([]);
    }
  }, 10);
}
No.focus = (t) => {
  t.inputState.lastFocusTime = Date.now(), !t.scrollDOM.scrollTop && (t.inputState.lastScrollTop || t.inputState.lastScrollLeft) && (t.scrollDOM.scrollTop = t.inputState.lastScrollTop, t.scrollDOM.scrollLeft = t.inputState.lastScrollLeft), m4(t);
};
No.blur = (t) => {
  t.observer.clearSelectionRange(), m4(t);
};
No.compositionstart = No.compositionupdate = (t) => {
  t.observer.editContext || (t.inputState.compositionFirstChange == null && (t.inputState.compositionFirstChange = !0), t.inputState.composing < 0 && (t.inputState.composing = 0));
};
No.compositionend = (t) => {
  t.observer.editContext || (t.inputState.composing = -1, t.inputState.compositionEndedAt = Date.now(), t.inputState.compositionPendingKey = !0, t.inputState.compositionPendingChange = t.observer.pendingRecords().length > 0, t.inputState.compositionFirstChange = null, st.chrome && st.android ? t.observer.flushSoon() : t.inputState.compositionPendingChange ? Promise.resolve().then(() => t.observer.flush()) : setTimeout(() => {
    t.inputState.composing < 0 && t.docView.hasComposition && t.update([]);
  }, 50));
};
No.contextmenu = (t) => {
  t.inputState.lastContextMenu = Date.now();
};
os.beforeinput = (t, e) => {
  var n, r;
  if (e.inputType == "insertReplacementText" && t.observer.editContext) {
    let o = (n = e.dataTransfer) === null || n === void 0 ? void 0 : n.getData("text/plain"), s = e.getTargetRanges();
    if (o && s.length) {
      let a = s[0], l = t.posAtDOM(a.startContainer, a.startOffset), u = t.posAtDOM(a.endContainer, a.endOffset);
      return T1(t, { from: l, to: u, insert: t.state.toText(o) }, null), !0;
    }
  }
  let i;
  if (st.chrome && st.android && (i = l4.find((o) => o.inputType == e.inputType)) && (t.observer.delayAndroidKey(i.key, i.keyCode), i.key == "Backspace" || i.key == "Delete")) {
    let o = ((r = window.visualViewport) === null || r === void 0 ? void 0 : r.height) || 0;
    setTimeout(() => {
      var s;
      (((s = window.visualViewport) === null || s === void 0 ? void 0 : s.height) || 0) > o + 10 && t.hasFocus && (t.contentDOM.blur(), t.focus());
    }, 100);
  }
  return st.ios && e.inputType == "deleteContentForward" && t.observer.flushSoon(), st.safari && e.inputType == "insertText" && t.inputState.composing >= 0 && setTimeout(() => No.compositionend(t, e), 20), !1;
};
const Dj = /* @__PURE__ */ new Set();
function ZN(t) {
  Dj.has(t) || (Dj.add(t), t.addEventListener("copy", () => {
  }), t.addEventListener("cut", () => {
  }));
}
const Ij = ["pre-wrap", "normal", "pre-line", "break-spaces"];
let su = !1;
function zj() {
  su = !1;
}
class eD {
  constructor(e) {
    this.lineWrapping = e, this.doc = rr.empty, this.heightSamples = {}, this.lineHeight = 14, this.charWidth = 7, this.textHeight = 14, this.lineLength = 30;
  }
  heightForGap(e, n) {
    let r = this.doc.lineAt(n).number - this.doc.lineAt(e).number + 1;
    return this.lineWrapping && (r += Math.max(0, Math.ceil((n - e - r * this.lineLength * 0.5) / this.lineLength))), this.lineHeight * r;
  }
  heightForLine(e) {
    return this.lineWrapping ? (1 + Math.max(0, Math.ceil((e - this.lineLength) / Math.max(1, this.lineLength - 5)))) * this.lineHeight : this.lineHeight;
  }
  setDoc(e) {
    return this.doc = e, this;
  }
  mustRefreshForWrapping(e) {
    return Ij.indexOf(e) > -1 != this.lineWrapping;
  }
  mustRefreshForHeights(e) {
    let n = !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r];
      i < 0 ? r++ : this.heightSamples[Math.floor(i * 10)] || (n = !0, this.heightSamples[Math.floor(i * 10)] = !0);
    }
    return n;
  }
  refresh(e, n, r, i, o, s) {
    let a = Ij.indexOf(e) > -1, l = Math.round(n) != Math.round(this.lineHeight) || this.lineWrapping != a;
    if (this.lineWrapping = a, this.lineHeight = n, this.charWidth = r, this.textHeight = i, this.lineLength = o, l) {
      this.heightSamples = {};
      for (let u = 0; u < s.length; u++) {
        let f = s[u];
        f < 0 ? u++ : this.heightSamples[Math.floor(f * 10)] = !0;
      }
    }
    return l;
  }
}
class tD {
  constructor(e, n) {
    this.from = e, this.heights = n, this.index = 0;
  }
  get more() {
    return this.index < this.heights.length;
  }
}
class js {
  /**
  @internal
  */
  constructor(e, n, r, i, o) {
    this.from = e, this.length = n, this.top = r, this.height = i, this._content = o;
  }
  /**
  The type of element this is. When querying lines, this may be
  an array of all the blocks that make up the line.
  */
  get type() {
    return typeof this._content == "number" ? Hi.Text : Array.isArray(this._content) ? this._content : this._content.type;
  }
  /**
  The end of the element as a document position.
  */
  get to() {
    return this.from + this.length;
  }
  /**
  The bottom position of the element.
  */
  get bottom() {
    return this.top + this.height;
  }
  /**
  If this is a widget block, this will return the widget
  associated with it.
  */
  get widget() {
    return this._content instanceof nl ? this._content.widget : null;
  }
  /**
  If this is a textblock, this holds the number of line breaks
  that appear in widgets inside the block.
  */
  get widgetLineBreaks() {
    return typeof this._content == "number" ? this._content : 0;
  }
  /**
  @internal
  */
  join(e) {
    let n = (Array.isArray(this._content) ? this._content : [this]).concat(Array.isArray(e._content) ? e._content : [e]);
    return new js(this.from, this.length + e.length, this.top, this.height + e.height, n);
  }
}
var Rr = /* @__PURE__ */ (function(t) {
  return t[t.ByPos = 0] = "ByPos", t[t.ByHeight = 1] = "ByHeight", t[t.ByPosNoHeight = 2] = "ByPosNoHeight", t;
})(Rr || (Rr = {}));
const mp = 1e-3;
class Ki {
  constructor(e, n, r = 2) {
    this.length = e, this.height = n, this.flags = r;
  }
  get outdated() {
    return (this.flags & 2) > 0;
  }
  set outdated(e) {
    this.flags = (e ? 2 : 0) | this.flags & -3;
  }
  setHeight(e) {
    this.height != e && (Math.abs(this.height - e) > mp && (su = !0), this.height = e);
  }
  // Base case is to replace a leaf node, which simply builds a tree
  // from the new nodes and returns that (HeightMapBranch and
  // HeightMapGap override this to actually use from/to)
  replace(e, n, r) {
    return Ki.of(r);
  }
  // Again, these are base cases, and are overridden for branch and gap nodes.
  decomposeLeft(e, n) {
    n.push(this);
  }
  decomposeRight(e, n) {
    n.push(this);
  }
  applyChanges(e, n, r, i) {
    let o = this, s = r.doc;
    for (let a = i.length - 1; a >= 0; a--) {
      let { fromA: l, toA: u, fromB: f, toB: d } = i[a], h = o.lineAt(l, Rr.ByPosNoHeight, r.setDoc(n), 0, 0), p = h.to >= u ? h : o.lineAt(u, Rr.ByPosNoHeight, r, 0, 0);
      for (d += p.to - u, u = p.to; a > 0 && h.from <= i[a - 1].toA; )
        l = i[a - 1].fromA, f = i[a - 1].fromB, a--, l < h.from && (h = o.lineAt(l, Rr.ByPosNoHeight, r, 0, 0));
      f += h.from - l, l = h.from;
      let m = $1.build(r.setDoc(s), e, f, d);
      o = Wp(o, o.replace(l, u, m));
    }
    return o.updateHeight(r, 0);
  }
  static empty() {
    return new mo(0, 0);
  }
  // nodes uses null values to indicate the position of line breaks.
  // There are never line breaks at the start or end of the array, or
  // two line breaks next to each other, and the array isn't allowed
  // to be empty (same restrictions as return value from the builder).
  static of(e) {
    if (e.length == 1)
      return e[0];
    let n = 0, r = e.length, i = 0, o = 0;
    for (; ; )
      if (n == r)
        if (i > o * 2) {
          let a = e[n - 1];
          a.break ? e.splice(--n, 1, a.left, null, a.right) : e.splice(--n, 1, a.left, a.right), r += 1 + a.break, i -= a.size;
        } else if (o > i * 2) {
          let a = e[r];
          a.break ? e.splice(r, 1, a.left, null, a.right) : e.splice(r, 1, a.left, a.right), r += 2 + a.break, o -= a.size;
        } else
          break;
      else if (i < o) {
        let a = e[n++];
        a && (i += a.size);
      } else {
        let a = e[--r];
        a && (o += a.size);
      }
    let s = 0;
    return e[n - 1] == null ? (s = 1, n--) : e[n] == null && (s = 1, r++), new nD(Ki.of(e.slice(0, n)), s, Ki.of(e.slice(r)));
  }
}
function Wp(t, e) {
  return t == e ? t : (t.constructor != e.constructor && (su = !0), e);
}
Ki.prototype.size = 1;
class g4 extends Ki {
  constructor(e, n, r) {
    super(e, n), this.deco = r;
  }
  blockAt(e, n, r, i) {
    return new js(i, this.length, r, this.height, this.deco || 0);
  }
  lineAt(e, n, r, i, o) {
    return this.blockAt(0, r, i, o);
  }
  forEachLine(e, n, r, i, o, s) {
    e <= o + this.length && n >= o && s(this.blockAt(0, r, i, o));
  }
  updateHeight(e, n = 0, r = !1, i) {
    return i && i.from <= n && i.more && this.setHeight(i.heights[i.index++]), this.outdated = !1, this;
  }
  toString() {
    return `block(${this.length})`;
  }
}
class mo extends g4 {
  constructor(e, n) {
    super(e, n, null), this.collapsed = 0, this.widgetHeight = 0, this.breaks = 0;
  }
  blockAt(e, n, r, i) {
    return new js(i, this.length, r, this.height, this.breaks);
  }
  replace(e, n, r) {
    let i = r[0];
    return r.length == 1 && (i instanceof mo || i instanceof _i && i.flags & 4) && Math.abs(this.length - i.length) < 10 ? (i instanceof _i ? i = new mo(i.length, this.height) : i.height = this.height, this.outdated || (i.outdated = !1), i) : Ki.of(r);
  }
  updateHeight(e, n = 0, r = !1, i) {
    return i && i.from <= n && i.more ? this.setHeight(i.heights[i.index++]) : (r || this.outdated) && this.setHeight(Math.max(this.widgetHeight, e.heightForLine(this.length - this.collapsed)) + this.breaks * e.lineHeight), this.outdated = !1, this;
  }
  toString() {
    return `line(${this.length}${this.collapsed ? -this.collapsed : ""}${this.widgetHeight ? ":" + this.widgetHeight : ""})`;
  }
}
class _i extends Ki {
  constructor(e) {
    super(e, 0);
  }
  heightMetrics(e, n) {
    let r = e.doc.lineAt(n).number, i = e.doc.lineAt(n + this.length).number, o = i - r + 1, s, a = 0;
    if (e.lineWrapping) {
      let l = Math.min(this.height, e.lineHeight * o);
      s = l / o, this.length > o + 1 && (a = (this.height - l) / (this.length - o - 1));
    } else
      s = this.height / o;
    return { firstLine: r, lastLine: i, perLine: s, perChar: a };
  }
  blockAt(e, n, r, i) {
    let { firstLine: o, lastLine: s, perLine: a, perChar: l } = this.heightMetrics(n, i);
    if (n.lineWrapping) {
      let u = i + (e < n.lineHeight ? 0 : Math.round(Math.max(0, Math.min(1, (e - r) / this.height)) * this.length)), f = n.doc.lineAt(u), d = a + f.length * l, h = Math.max(r, e - d / 2);
      return new js(f.from, f.length, h, d, 0);
    } else {
      let u = Math.max(0, Math.min(s - o, Math.floor((e - r) / a))), { from: f, length: d } = n.doc.line(o + u);
      return new js(f, d, r + a * u, a, 0);
    }
  }
  lineAt(e, n, r, i, o) {
    if (n == Rr.ByHeight)
      return this.blockAt(e, r, i, o);
    if (n == Rr.ByPosNoHeight) {
      let { from: p, to: m } = r.doc.lineAt(e);
      return new js(p, m - p, 0, 0, 0);
    }
    let { firstLine: s, perLine: a, perChar: l } = this.heightMetrics(r, o), u = r.doc.lineAt(e), f = a + u.length * l, d = u.number - s, h = i + a * d + l * (u.from - o - d);
    return new js(u.from, u.length, Math.max(i, Math.min(h, i + this.height - f)), f, 0);
  }
  forEachLine(e, n, r, i, o, s) {
    e = Math.max(e, o), n = Math.min(n, o + this.length);
    let { firstLine: a, perLine: l, perChar: u } = this.heightMetrics(r, o);
    for (let f = e, d = i; f <= n; ) {
      let h = r.doc.lineAt(f);
      if (f == e) {
        let m = h.number - a;
        d += l * m + u * (e - o - m);
      }
      let p = l + u * h.length;
      s(new js(h.from, h.length, d, p, 0)), d += p, f = h.to + 1;
    }
  }
  replace(e, n, r) {
    let i = this.length - n;
    if (i > 0) {
      let o = r[r.length - 1];
      o instanceof _i ? r[r.length - 1] = new _i(o.length + i) : r.push(null, new _i(i - 1));
    }
    if (e > 0) {
      let o = r[0];
      o instanceof _i ? r[0] = new _i(e + o.length) : r.unshift(new _i(e - 1), null);
    }
    return Ki.of(r);
  }
  decomposeLeft(e, n) {
    n.push(new _i(e - 1), null);
  }
  decomposeRight(e, n) {
    n.push(null, new _i(this.length - e - 1));
  }
  updateHeight(e, n = 0, r = !1, i) {
    let o = n + this.length;
    if (i && i.from <= n + this.length && i.more) {
      let s = [], a = Math.max(n, i.from), l = -1;
      for (i.from > n && s.push(new _i(i.from - n - 1).updateHeight(e, n)); a <= o && i.more; ) {
        let f = e.doc.lineAt(a).length;
        s.length && s.push(null);
        let d = i.heights[i.index++];
        l == -1 ? l = d : Math.abs(d - l) >= mp && (l = -2);
        let h = new mo(f, d);
        h.outdated = !1, s.push(h), a += f + 1;
      }
      a <= o && s.push(null, new _i(o - a).updateHeight(e, a));
      let u = Ki.of(s);
      return (l < 0 || Math.abs(u.height - this.height) >= mp || Math.abs(l - this.heightMetrics(e, n).perLine) >= mp) && (su = !0), Wp(this, u);
    } else (r || this.outdated) && (this.setHeight(e.heightForGap(n, n + this.length)), this.outdated = !1);
    return this;
  }
  toString() {
    return `gap(${this.length})`;
  }
}
class nD extends Ki {
  constructor(e, n, r) {
    super(e.length + n + r.length, e.height + r.height, n | (e.outdated || r.outdated ? 2 : 0)), this.left = e, this.right = r, this.size = e.size + r.size;
  }
  get break() {
    return this.flags & 1;
  }
  blockAt(e, n, r, i) {
    let o = r + this.left.height;
    return e < o ? this.left.blockAt(e, n, r, i) : this.right.blockAt(e, n, o, i + this.left.length + this.break);
  }
  lineAt(e, n, r, i, o) {
    let s = i + this.left.height, a = o + this.left.length + this.break, l = n == Rr.ByHeight ? e < s : e < a, u = l ? this.left.lineAt(e, n, r, i, o) : this.right.lineAt(e, n, r, s, a);
    if (this.break || (l ? u.to < a : u.from > a))
      return u;
    let f = n == Rr.ByPosNoHeight ? Rr.ByPosNoHeight : Rr.ByPos;
    return l ? u.join(this.right.lineAt(a, f, r, s, a)) : this.left.lineAt(a, f, r, i, o).join(u);
  }
  forEachLine(e, n, r, i, o, s) {
    let a = i + this.left.height, l = o + this.left.length + this.break;
    if (this.break)
      e < l && this.left.forEachLine(e, n, r, i, o, s), n >= l && this.right.forEachLine(e, n, r, a, l, s);
    else {
      let u = this.lineAt(l, Rr.ByPos, r, i, o);
      e < u.from && this.left.forEachLine(e, u.from - 1, r, i, o, s), u.to >= e && u.from <= n && s(u), n > u.to && this.right.forEachLine(u.to + 1, n, r, a, l, s);
    }
  }
  replace(e, n, r) {
    let i = this.left.length + this.break;
    if (n < i)
      return this.balanced(this.left.replace(e, n, r), this.right);
    if (e > this.left.length)
      return this.balanced(this.left, this.right.replace(e - i, n - i, r));
    let o = [];
    e > 0 && this.decomposeLeft(e, o);
    let s = o.length;
    for (let a of r)
      o.push(a);
    if (e > 0 && Lj(o, s - 1), n < this.length) {
      let a = o.length;
      this.decomposeRight(n, o), Lj(o, a);
    }
    return Ki.of(o);
  }
  decomposeLeft(e, n) {
    let r = this.left.length;
    if (e <= r)
      return this.left.decomposeLeft(e, n);
    n.push(this.left), this.break && (r++, e >= r && n.push(null)), e > r && this.right.decomposeLeft(e - r, n);
  }
  decomposeRight(e, n) {
    let r = this.left.length, i = r + this.break;
    if (e >= i)
      return this.right.decomposeRight(e - i, n);
    e < r && this.left.decomposeRight(e, n), this.break && e < i && n.push(null), n.push(this.right);
  }
  balanced(e, n) {
    return e.size > 2 * n.size || n.size > 2 * e.size ? Ki.of(this.break ? [e, null, n] : [e, n]) : (this.left = Wp(this.left, e), this.right = Wp(this.right, n), this.setHeight(e.height + n.height), this.outdated = e.outdated || n.outdated, this.size = e.size + n.size, this.length = e.length + this.break + n.length, this);
  }
  updateHeight(e, n = 0, r = !1, i) {
    let { left: o, right: s } = this, a = n + o.length + this.break, l = null;
    return i && i.from <= n + o.length && i.more ? l = o = o.updateHeight(e, n, r, i) : o.updateHeight(e, n, r), i && i.from <= a + s.length && i.more ? l = s = s.updateHeight(e, a, r, i) : s.updateHeight(e, a, r), l ? this.balanced(o, s) : (this.height = this.left.height + this.right.height, this.outdated = !1, this);
  }
  toString() {
    return this.left + (this.break ? " " : "-") + this.right;
  }
}
function Lj(t, e) {
  let n, r;
  t[e] == null && (n = t[e - 1]) instanceof _i && (r = t[e + 1]) instanceof _i && t.splice(e - 1, 3, new _i(n.length + 1 + r.length));
}
const rD = 5;
class $1 {
  constructor(e, n) {
    this.pos = e, this.oracle = n, this.nodes = [], this.lineStart = -1, this.lineEnd = -1, this.covering = null, this.writtenTo = e;
  }
  get isCovered() {
    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;
  }
  span(e, n) {
    if (this.lineStart > -1) {
      let r = Math.min(n, this.lineEnd), i = this.nodes[this.nodes.length - 1];
      i instanceof mo ? i.length += r - this.pos : (r > this.pos || !this.isCovered) && this.nodes.push(new mo(r - this.pos, -1)), this.writtenTo = r, n > r && (this.nodes.push(null), this.writtenTo++, this.lineStart = -1);
    }
    this.pos = n;
  }
  point(e, n, r) {
    if (e < n || r.heightRelevant) {
      let i = r.widget ? r.widget.estimatedHeight : 0, o = r.widget ? r.widget.lineBreaks : 0;
      i < 0 && (i = this.oracle.lineHeight);
      let s = n - e;
      r.block ? this.addBlock(new g4(s, i, r)) : (s || o || i >= rD) && this.addLineDeco(i, o, s);
    } else n > e && this.span(e, n);
    this.lineEnd > -1 && this.lineEnd < this.pos && (this.lineEnd = this.oracle.doc.lineAt(this.pos).to);
  }
  enterLine() {
    if (this.lineStart > -1)
      return;
    let { from: e, to: n } = this.oracle.doc.lineAt(this.pos);
    this.lineStart = e, this.lineEnd = n, this.writtenTo < e && ((this.writtenTo < e - 1 || this.nodes[this.nodes.length - 1] == null) && this.nodes.push(this.blankContent(this.writtenTo, e - 1)), this.nodes.push(null)), this.pos > e && this.nodes.push(new mo(this.pos - e, -1)), this.writtenTo = this.pos;
  }
  blankContent(e, n) {
    let r = new _i(n - e);
    return this.oracle.doc.lineAt(e).to == n && (r.flags |= 4), r;
  }
  ensureLine() {
    this.enterLine();
    let e = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;
    if (e instanceof mo)
      return e;
    let n = new mo(0, -1);
    return this.nodes.push(n), n;
  }
  addBlock(e) {
    this.enterLine();
    let n = e.deco;
    n && n.startSide > 0 && !this.isCovered && this.ensureLine(), this.nodes.push(e), this.writtenTo = this.pos = this.pos + e.length, n && n.endSide > 0 && (this.covering = e);
  }
  addLineDeco(e, n, r) {
    let i = this.ensureLine();
    i.length += r, i.collapsed += r, i.widgetHeight = Math.max(i.widgetHeight, e), i.breaks += n, this.writtenTo = this.pos = this.pos + r;
  }
  finish(e) {
    let n = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];
    this.lineStart > -1 && !(n instanceof mo) && !this.isCovered ? this.nodes.push(new mo(0, -1)) : (this.writtenTo < this.pos || n == null) && this.nodes.push(this.blankContent(this.writtenTo, this.pos));
    let r = e;
    for (let i of this.nodes)
      i instanceof mo && i.updateHeight(this.oracle, r), r += i ? i.length : 1;
    return this.nodes;
  }
  // Always called with a region that on both sides either stretches
  // to a line break or the end of the document.
  // The returned array uses null to indicate line breaks, but never
  // starts or ends in a line break, or has multiple line breaks next
  // to each other.
  static build(e, n, r, i) {
    let o = new $1(r, e);
    return zn.spans(n, r, i, o, 0), o.finish(r);
  }
}
function iD(t, e, n) {
  let r = new oD();
  return zn.compare(t, e, n, r, 0), r.changes;
}
class oD {
  constructor() {
    this.changes = [];
  }
  compareRange() {
  }
  comparePoint(e, n, r, i) {
    (e < n || r && r.heightRelevant || i && i.heightRelevant) && hp(e, n, this.changes, 5);
  }
}
function sD(t, e) {
  let n = t.getBoundingClientRect(), r = t.ownerDocument, i = r.defaultView || window, o = Math.max(0, n.left), s = Math.min(i.innerWidth, n.right), a = Math.max(0, n.top), l = Math.min(i.innerHeight, n.bottom);
  for (let u = t.parentNode; u && u != r.body; )
    if (u.nodeType == 1) {
      let f = u, d = window.getComputedStyle(f);
      if ((f.scrollHeight > f.clientHeight || f.scrollWidth > f.clientWidth) && d.overflow != "visible") {
        let h = f.getBoundingClientRect();
        o = Math.max(o, h.left), s = Math.min(s, h.right), a = Math.max(a, h.top), l = Math.min(u == t.parentNode ? i.innerHeight : l, h.bottom);
      }
      u = d.position == "absolute" || d.position == "fixed" ? f.offsetParent : f.parentNode;
    } else if (u.nodeType == 11)
      u = u.host;
    else
      break;
  return {
    left: o - n.left,
    right: Math.max(o, s) - n.left,
    top: a - (n.top + e),
    bottom: Math.max(a, l) - (n.top + e)
  };
}
function aD(t) {
  let e = t.getBoundingClientRect(), n = t.ownerDocument.defaultView || window;
  return e.left < n.innerWidth && e.right > 0 && e.top < n.innerHeight && e.bottom > 0;
}
function lD(t, e) {
  let n = t.getBoundingClientRect();
  return {
    left: 0,
    right: n.right - n.left,
    top: e,
    bottom: n.bottom - (n.top + e)
  };
}
class uv {
  constructor(e, n, r, i) {
    this.from = e, this.to = n, this.size = r, this.displaySize = i;
  }
  static same(e, n) {
    if (e.length != n.length)
      return !1;
    for (let r = 0; r < e.length; r++) {
      let i = e[r], o = n[r];
      if (i.from != o.from || i.to != o.to || i.size != o.size)
        return !1;
    }
    return !0;
  }
  draw(e, n) {
    return Bt.replace({
      widget: new cD(this.displaySize * (n ? e.scaleY : e.scaleX), n)
    }).range(this.from, this.to);
  }
}
class cD extends pl {
  constructor(e, n) {
    super(), this.size = e, this.vertical = n;
  }
  eq(e) {
    return e.size == this.size && e.vertical == this.vertical;
  }
  toDOM() {
    let e = document.createElement("div");
    return this.vertical ? e.style.height = this.size + "px" : (e.style.width = this.size + "px", e.style.height = "2px", e.style.display = "inline-block"), e;
  }
  get estimatedHeight() {
    return this.vertical ? this.size : -1;
  }
}
class Bj {
  constructor(e) {
    this.state = e, this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 }, this.inView = !0, this.paddingTop = 0, this.paddingBottom = 0, this.contentDOMWidth = 0, this.contentDOMHeight = 0, this.editorHeight = 0, this.editorWidth = 0, this.scrollTop = 0, this.scrolledToBottom = !1, this.scaleX = 1, this.scaleY = 1, this.scrollAnchorPos = 0, this.scrollAnchorHeight = -1, this.scaler = qj, this.scrollTarget = null, this.printing = !1, this.mustMeasureContent = !0, this.defaultTextDirection = Nr.LTR, this.visibleRanges = [], this.mustEnforceCursorAssoc = !1;
    let n = e.facet(_1).some((r) => typeof r != "function" && r.class == "cm-lineWrapping");
    this.heightOracle = new eD(n), this.stateDeco = e.facet(Mf).filter((r) => typeof r != "function"), this.heightMap = Ki.empty().applyChanges(this.stateDeco, rr.empty, this.heightOracle.setDoc(e.doc), [new $o(0, 0, 0, e.doc.length)]);
    for (let r = 0; r < 2 && (this.viewport = this.getViewport(0, null), !!this.updateForViewport()); r++)
      ;
    this.updateViewportLines(), this.lineGaps = this.ensureLineGaps([]), this.lineGapDeco = Bt.set(this.lineGaps.map((r) => r.draw(this, !1))), this.computeVisibleRanges();
  }
  updateForViewport() {
    let e = [this.viewport], { main: n } = this.state.selection;
    for (let r = 0; r <= 1; r++) {
      let i = r ? n.head : n.anchor;
      if (!e.some(({ from: o, to: s }) => i >= o && i <= s)) {
        let { from: o, to: s } = this.lineBlockAt(i);
        e.push(new Eh(o, s));
      }
    }
    return this.viewports = e.sort((r, i) => r.from - i.from), this.updateScaler();
  }
  updateScaler() {
    let e = this.scaler;
    return this.scaler = this.heightMap.height <= 7e6 ? qj : new P1(this.heightOracle, this.heightMap, this.viewports), e.eq(this.scaler) ? 0 : 2;
  }
  updateViewportLines() {
    this.viewportLines = [], this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, (e) => {
      this.viewportLines.push(ef(e, this.scaler));
    });
  }
  update(e, n = null) {
    this.state = e.state;
    let r = this.stateDeco;
    this.stateDeco = this.state.facet(Mf).filter((f) => typeof f != "function");
    let i = e.changedRanges, o = $o.extendWithRanges(i, iD(r, this.stateDeco, e ? e.changes : si.empty(this.state.doc.length))), s = this.heightMap.height, a = this.scrolledToBottom ? null : this.scrollAnchorAt(this.scrollTop);
    zj(), this.heightMap = this.heightMap.applyChanges(this.stateDeco, e.startState.doc, this.heightOracle.setDoc(this.state.doc), o), (this.heightMap.height != s || su) && (e.flags |= 2), a ? (this.scrollAnchorPos = e.changes.mapPos(a.from, -1), this.scrollAnchorHeight = a.top) : (this.scrollAnchorPos = -1, this.scrollAnchorHeight = s);
    let l = o.length ? this.mapViewport(this.viewport, e.changes) : this.viewport;
    (n && (n.range.head < l.from || n.range.head > l.to) || !this.viewportIsAppropriate(l)) && (l = this.getViewport(0, n));
    let u = l.from != this.viewport.from || l.to != this.viewport.to;
    this.viewport = l, e.flags |= this.updateForViewport(), (u || !e.changes.empty || e.flags & 2) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, e.changes))), e.flags |= this.computeVisibleRanges(e.changes), n && (this.scrollTarget = n), !this.mustEnforceCursorAssoc && e.selectionSet && e.view.lineWrapping && e.state.selection.main.empty && e.state.selection.main.assoc && !e.state.facet(XO) && (this.mustEnforceCursorAssoc = !0);
  }
  measure(e) {
    let n = e.contentDOM, r = window.getComputedStyle(n), i = this.heightOracle, o = r.whiteSpace;
    this.defaultTextDirection = r.direction == "rtl" ? Nr.RTL : Nr.LTR;
    let s = this.heightOracle.mustRefreshForWrapping(o), a = n.getBoundingClientRect(), l = s || this.mustMeasureContent || this.contentDOMHeight != a.height;
    this.contentDOMHeight = a.height, this.mustMeasureContent = !1;
    let u = 0, f = 0;
    if (a.width && a.height) {
      let { scaleX: j, scaleY: y } = CO(n, a);
      (j > 5e-3 && Math.abs(this.scaleX - j) > 5e-3 || y > 5e-3 && Math.abs(this.scaleY - y) > 5e-3) && (this.scaleX = j, this.scaleY = y, u |= 16, s = l = !0);
    }
    let d = (parseInt(r.paddingTop) || 0) * this.scaleY, h = (parseInt(r.paddingBottom) || 0) * this.scaleY;
    (this.paddingTop != d || this.paddingBottom != h) && (this.paddingTop = d, this.paddingBottom = h, u |= 18), this.editorWidth != e.scrollDOM.clientWidth && (i.lineWrapping && (l = !0), this.editorWidth = e.scrollDOM.clientWidth, u |= 16);
    let p = e.scrollDOM.scrollTop * this.scaleY;
    this.scrollTop != p && (this.scrollAnchorHeight = -1, this.scrollTop = p), this.scrolledToBottom = _O(e.scrollDOM);
    let m = (this.printing ? lD : sD)(n, this.paddingTop), v = m.top - this.pixelViewport.top, g = m.bottom - this.pixelViewport.bottom;
    this.pixelViewport = m;
    let b = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;
    if (b != this.inView && (this.inView = b, b && (l = !0)), !this.inView && !this.scrollTarget && !aD(e.dom))
      return 0;
    let x = a.width;
    if ((this.contentDOMWidth != x || this.editorHeight != e.scrollDOM.clientHeight) && (this.contentDOMWidth = a.width, this.editorHeight = e.scrollDOM.clientHeight, u |= 16), l) {
      let j = e.docView.measureVisibleLineHeights(this.viewport);
      if (i.mustRefreshForHeights(j) && (s = !0), s || i.lineWrapping && Math.abs(x - this.contentDOMWidth) > i.charWidth) {
        let { lineHeight: y, charWidth: k, textHeight: S } = e.docView.measureTextSize();
        s = y > 0 && i.refresh(o, y, k, S, Math.max(5, x / k), j), s && (e.docView.minWidth = 0, u |= 16);
      }
      v > 0 && g > 0 ? f = Math.max(v, g) : v < 0 && g < 0 && (f = Math.min(v, g)), zj();
      for (let y of this.viewports) {
        let k = y.from == this.viewport.from ? j : e.docView.measureVisibleLineHeights(y);
        this.heightMap = (s ? Ki.empty().applyChanges(this.stateDeco, rr.empty, this.heightOracle, [new $o(0, 0, 0, e.state.doc.length)]) : this.heightMap).updateHeight(i, 0, s, new tD(y.from, k));
      }
      su && (u |= 2);
    }
    let w = !this.viewportIsAppropriate(this.viewport, f) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);
    return w && (u & 2 && (u |= this.updateScaler()), this.viewport = this.getViewport(f, this.scrollTarget), u |= this.updateForViewport()), (u & 2 || w) && this.updateViewportLines(), (this.lineGaps.length || this.viewport.to - this.viewport.from > 4e3) && this.updateLineGaps(this.ensureLineGaps(s ? [] : this.lineGaps, e)), u |= this.computeVisibleRanges(), this.mustEnforceCursorAssoc && (this.mustEnforceCursorAssoc = !1, e.docView.enforceCursorAssoc()), u;
  }
  get visibleTop() {
    return this.scaler.fromDOM(this.pixelViewport.top);
  }
  get visibleBottom() {
    return this.scaler.fromDOM(this.pixelViewport.bottom);
  }
  getViewport(e, n) {
    let r = 0.5 - Math.max(-0.5, Math.min(0.5, e / 1e3 / 2)), i = this.heightMap, o = this.heightOracle, { visibleTop: s, visibleBottom: a } = this, l = new Eh(i.lineAt(s - r * 1e3, Rr.ByHeight, o, 0, 0).from, i.lineAt(a + (1 - r) * 1e3, Rr.ByHeight, o, 0, 0).to);
    if (n) {
      let { head: u } = n.range;
      if (u < l.from || u > l.to) {
        let f = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top), d = i.lineAt(u, Rr.ByPos, o, 0, 0), h;
        n.y == "center" ? h = (d.top + d.bottom) / 2 - f / 2 : n.y == "start" || n.y == "nearest" && u < l.from ? h = d.top : h = d.bottom - f, l = new Eh(i.lineAt(h - 1e3 / 2, Rr.ByHeight, o, 0, 0).from, i.lineAt(h + f + 1e3 / 2, Rr.ByHeight, o, 0, 0).to);
      }
    }
    return l;
  }
  mapViewport(e, n) {
    let r = n.mapPos(e.from, -1), i = n.mapPos(e.to, 1);
    return new Eh(this.heightMap.lineAt(r, Rr.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(i, Rr.ByPos, this.heightOracle, 0, 0).to);
  }
  // Checks if a given viewport covers the visible part of the
  // document and not too much beyond that.
  viewportIsAppropriate({ from: e, to: n }, r = 0) {
    if (!this.inView)
      return !0;
    let { top: i } = this.heightMap.lineAt(e, Rr.ByPos, this.heightOracle, 0, 0), { bottom: o } = this.heightMap.lineAt(n, Rr.ByPos, this.heightOracle, 0, 0), { visibleTop: s, visibleBottom: a } = this;
    return (e == 0 || i <= s - Math.max(10, Math.min(
      -r,
      250
      /* VP.MaxCoverMargin */
    ))) && (n == this.state.doc.length || o >= a + Math.max(10, Math.min(
      r,
      250
      /* VP.MaxCoverMargin */
    ))) && i > s - 2 * 1e3 && o < a + 2 * 1e3;
  }
  mapLineGaps(e, n) {
    if (!e.length || n.empty)
      return e;
    let r = [];
    for (let i of e)
      n.touchesRange(i.from, i.to) || r.push(new uv(n.mapPos(i.from), n.mapPos(i.to), i.size, i.displaySize));
    return r;
  }
  // Computes positions in the viewport where the start or end of a
  // line should be hidden, trying to reuse existing line gaps when
  // appropriate to avoid unneccesary redraws.
  // Uses crude character-counting for the positioning and sizing,
  // since actual DOM coordinates aren't always available and
  // predictable. Relies on generous margins (see LG.Margin) to hide
  // the artifacts this might produce from the user.
  ensureLineGaps(e, n) {
    let r = this.heightOracle.lineWrapping, i = r ? 1e4 : 2e3, o = i >> 1, s = i << 1;
    if (this.defaultTextDirection != Nr.LTR && !r)
      return [];
    let a = [], l = (f, d, h, p) => {
      if (d - f < o)
        return;
      let m = this.state.selection.main, v = [m.from];
      m.empty || v.push(m.to);
      for (let b of v)
        if (b > f && b < d) {
          l(f, b - 10, h, p), l(b + 10, d, h, p);
          return;
        }
      let g = fD(e, (b) => b.from >= h.from && b.to <= h.to && Math.abs(b.from - f) < o && Math.abs(b.to - d) < o && !v.some((x) => b.from < x && b.to > x));
      if (!g) {
        if (d < h.to && n && r && n.visibleRanges.some((w) => w.from <= d && w.to >= d)) {
          let w = n.moveToLineBoundary(Me.cursor(d), !1, !0).head;
          w > f && (d = w);
        }
        let b = this.gapSize(h, f, d, p), x = r || b < 2e6 ? b : 2e6;
        g = new uv(f, d, b, x);
      }
      a.push(g);
    }, u = (f) => {
      if (f.length < s || f.type != Hi.Text)
        return;
      let d = uD(f.from, f.to, this.stateDeco);
      if (d.total < s)
        return;
      let h = this.scrollTarget ? this.scrollTarget.range.head : null, p, m;
      if (r) {
        let v = i / this.heightOracle.lineLength * this.heightOracle.lineHeight, g, b;
        if (h != null) {
          let x = Ah(d, h), w = ((this.visibleBottom - this.visibleTop) / 2 + v) / f.height;
          g = x - w, b = x + w;
        } else
          g = (this.visibleTop - f.top - v) / f.height, b = (this.visibleBottom - f.top + v) / f.height;
        p = _h(d, g), m = _h(d, b);
      } else {
        let v = d.total * this.heightOracle.charWidth, g = i * this.heightOracle.charWidth, b = 0;
        if (v > 2e6)
          for (let k of e)
            k.from >= f.from && k.from < f.to && k.size != k.displaySize && k.from * this.heightOracle.charWidth + b < this.pixelViewport.left && (b = k.size - k.displaySize);
        let x = this.pixelViewport.left + b, w = this.pixelViewport.right + b, j, y;
        if (h != null) {
          let k = Ah(d, h), S = ((w - x) / 2 + g) / v;
          j = k - S, y = k + S;
        } else
          j = (x - g) / v, y = (w + g) / v;
        p = _h(d, j), m = _h(d, y);
      }
      p > f.from && l(f.from, p, f, d), m < f.to && l(m, f.to, f, d);
    };
    for (let f of this.viewportLines)
      Array.isArray(f.type) ? f.type.forEach(u) : u(f);
    return a;
  }
  gapSize(e, n, r, i) {
    let o = Ah(i, r) - Ah(i, n);
    return this.heightOracle.lineWrapping ? e.height * o : i.total * this.heightOracle.charWidth * o;
  }
  updateLineGaps(e) {
    uv.same(e, this.lineGaps) || (this.lineGaps = e, this.lineGapDeco = Bt.set(e.map((n) => n.draw(this, this.heightOracle.lineWrapping))));
  }
  computeVisibleRanges(e) {
    let n = this.stateDeco;
    this.lineGaps.length && (n = n.concat(this.lineGapDeco));
    let r = [];
    zn.spans(n, this.viewport.from, this.viewport.to, {
      span(o, s) {
        r.push({ from: o, to: s });
      },
      point() {
      }
    }, 20);
    let i = 0;
    if (r.length != this.visibleRanges.length)
      i = 12;
    else
      for (let o = 0; o < r.length && !(i & 8); o++) {
        let s = this.visibleRanges[o], a = r[o];
        (s.from != a.from || s.to != a.to) && (i |= 4, e && e.mapPos(s.from, -1) == a.from && e.mapPos(s.to, 1) == a.to || (i |= 8));
      }
    return this.visibleRanges = r, i;
  }
  lineBlockAt(e) {
    return e >= this.viewport.from && e <= this.viewport.to && this.viewportLines.find((n) => n.from <= e && n.to >= e) || ef(this.heightMap.lineAt(e, Rr.ByPos, this.heightOracle, 0, 0), this.scaler);
  }
  lineBlockAtHeight(e) {
    return e >= this.viewportLines[0].top && e <= this.viewportLines[this.viewportLines.length - 1].bottom && this.viewportLines.find((n) => n.top <= e && n.bottom >= e) || ef(this.heightMap.lineAt(this.scaler.fromDOM(e), Rr.ByHeight, this.heightOracle, 0, 0), this.scaler);
  }
  scrollAnchorAt(e) {
    let n = this.lineBlockAtHeight(e + 8);
    return n.from >= this.viewport.from || this.viewportLines[0].top - e > 200 ? n : this.viewportLines[0];
  }
  elementAtHeight(e) {
    return ef(this.heightMap.blockAt(this.scaler.fromDOM(e), this.heightOracle, 0, 0), this.scaler);
  }
  get docHeight() {
    return this.scaler.toDOM(this.heightMap.height);
  }
  get contentHeight() {
    return this.docHeight + this.paddingTop + this.paddingBottom;
  }
}
class Eh {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
function uD(t, e, n) {
  let r = [], i = t, o = 0;
  return zn.spans(n, t, e, {
    span() {
    },
    point(s, a) {
      s > i && (r.push({ from: i, to: s }), o += s - i), i = a;
    }
  }, 20), i < e && (r.push({ from: i, to: e }), o += e - i), { total: o, ranges: r };
}
function _h({ total: t, ranges: e }, n) {
  if (n <= 0)
    return e[0].from;
  if (n >= 1)
    return e[e.length - 1].to;
  let r = Math.floor(t * n);
  for (let i = 0; ; i++) {
    let { from: o, to: s } = e[i], a = s - o;
    if (r <= a)
      return o + r;
    r -= a;
  }
}
function Ah(t, e) {
  let n = 0;
  for (let { from: r, to: i } of t.ranges) {
    if (e <= i) {
      n += e - r;
      break;
    }
    n += i - r;
  }
  return n / t.total;
}
function fD(t, e) {
  for (let n of t)
    if (e(n))
      return n;
}
const qj = {
  toDOM(t) {
    return t;
  },
  fromDOM(t) {
    return t;
  },
  scale: 1,
  eq(t) {
    return t == this;
  }
};
class P1 {
  constructor(e, n, r) {
    let i = 0, o = 0, s = 0;
    this.viewports = r.map(({ from: a, to: l }) => {
      let u = n.lineAt(a, Rr.ByPos, e, 0, 0).top, f = n.lineAt(l, Rr.ByPos, e, 0, 0).bottom;
      return i += f - u, { from: a, to: l, top: u, bottom: f, domTop: 0, domBottom: 0 };
    }), this.scale = (7e6 - i) / (n.height - i);
    for (let a of this.viewports)
      a.domTop = s + (a.top - o) * this.scale, s = a.domBottom = a.domTop + (a.bottom - a.top), o = a.bottom;
  }
  toDOM(e) {
    for (let n = 0, r = 0, i = 0; ; n++) {
      let o = n < this.viewports.length ? this.viewports[n] : null;
      if (!o || e < o.top)
        return i + (e - r) * this.scale;
      if (e <= o.bottom)
        return o.domTop + (e - o.top);
      r = o.bottom, i = o.domBottom;
    }
  }
  fromDOM(e) {
    for (let n = 0, r = 0, i = 0; ; n++) {
      let o = n < this.viewports.length ? this.viewports[n] : null;
      if (!o || e < o.domTop)
        return r + (e - i) / this.scale;
      if (e <= o.domBottom)
        return o.top + (e - o.domTop);
      r = o.bottom, i = o.domBottom;
    }
  }
  eq(e) {
    return e instanceof P1 ? this.scale == e.scale && this.viewports.length == e.viewports.length && this.viewports.every((n, r) => n.from == e.viewports[r].from && n.to == e.viewports[r].to) : !1;
  }
}
function ef(t, e) {
  if (e.scale == 1)
    return t;
  let n = e.toDOM(t.top), r = e.toDOM(t.bottom);
  return new js(t.from, t.length, n, r - n, Array.isArray(t._content) ? t._content.map((i) => ef(i, e)) : t._content);
}
const Mh = /* @__PURE__ */ lt.define({ combine: (t) => t.join(" ") }), H0 = /* @__PURE__ */ lt.define({ combine: (t) => t.indexOf(!0) > -1 }), K0 = /* @__PURE__ */ el.newName(), v4 = /* @__PURE__ */ el.newName(), b4 = /* @__PURE__ */ el.newName(), y4 = { "&light": "." + v4, "&dark": "." + b4 };
function G0(t, e, n) {
  return new el(e, {
    finish(r) {
      return /&/.test(r) ? r.replace(/&\w*/, (i) => {
        if (i == "&")
          return t;
        if (!n || !n[i])
          throw new RangeError(`Unsupported selector: ${i}`);
        return n[i];
      }) : t + " " + r;
    }
  });
}
const dD = /* @__PURE__ */ G0("." + K0, {
  "&": {
    position: "relative !important",
    boxSizing: "border-box",
    "&.cm-focused": {
      // Provide a simple default outline to make sure a focused
      // editor is visually distinct. Can't leave the default behavior
      // because that will apply to the content element, which is
      // inside the scrollable container and doesn't include the
      // gutters. We also can't use an 'auto' outline, since those
      // are, for some reason, drawn behind the element content, which
      // will cause things like the active line background to cover
      // the outline (#297).
      outline: "1px dotted #212121"
    },
    display: "flex !important",
    flexDirection: "column"
  },
  ".cm-scroller": {
    display: "flex !important",
    alignItems: "flex-start !important",
    fontFamily: "monospace",
    lineHeight: 1.4,
    height: "100%",
    overflowX: "auto",
    position: "relative",
    zIndex: 0,
    overflowAnchor: "none"
  },
  ".cm-content": {
    margin: 0,
    flexGrow: 2,
    flexShrink: 0,
    display: "block",
    whiteSpace: "pre",
    wordWrap: "normal",
    // https://github.com/codemirror/dev/issues/456
    boxSizing: "border-box",
    minHeight: "100%",
    padding: "4px 0",
    outline: "none",
    "&[contenteditable=true]": {
      WebkitUserModify: "read-write-plaintext-only"
    }
  },
  ".cm-lineWrapping": {
    whiteSpace_fallback: "pre-wrap",
    // For IE
    whiteSpace: "break-spaces",
    wordBreak: "break-word",
    // For Safari, which doesn't support overflow-wrap: anywhere
    overflowWrap: "anywhere",
    flexShrink: 1
  },
  "&light .cm-content": { caretColor: "black" },
  "&dark .cm-content": { caretColor: "white" },
  ".cm-line": {
    display: "block",
    padding: "0 2px 0 6px"
  },
  ".cm-layer": {
    position: "absolute",
    left: 0,
    top: 0,
    contain: "size style",
    "& > *": {
      position: "absolute"
    }
  },
  "&light .cm-selectionBackground": {
    background: "#d9d9d9"
  },
  "&dark .cm-selectionBackground": {
    background: "#222"
  },
  "&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#d7d4f0"
  },
  "&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground": {
    background: "#233"
  },
  ".cm-cursorLayer": {
    pointerEvents: "none"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer": {
    animation: "steps(1) cm-blink 1.2s infinite"
  },
  // Two animations defined so that we can switch between them to
  // restart the animation without forcing another style
  // recomputation.
  "@keyframes cm-blink": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  "@keyframes cm-blink2": { "0%": {}, "50%": { opacity: 0 }, "100%": {} },
  ".cm-cursor, .cm-dropCursor": {
    borderLeft: "1.2px solid black",
    marginLeft: "-0.6px",
    pointerEvents: "none"
  },
  ".cm-cursor": {
    display: "none"
  },
  "&dark .cm-cursor": {
    borderLeftColor: "#ddd"
  },
  ".cm-dropCursor": {
    position: "absolute"
  },
  "&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor": {
    display: "block"
  },
  ".cm-iso": {
    unicodeBidi: "isolate"
  },
  ".cm-announced": {
    position: "fixed",
    top: "-10000px"
  },
  "@media print": {
    ".cm-announced": { display: "none" }
  },
  "&light .cm-activeLine": { backgroundColor: "#cceeff44" },
  "&dark .cm-activeLine": { backgroundColor: "#99eeff33" },
  "&light .cm-specialChar": { color: "red" },
  "&dark .cm-specialChar": { color: "#f78" },
  ".cm-gutters": {
    flexShrink: 0,
    display: "flex",
    height: "100%",
    boxSizing: "border-box",
    zIndex: 200
  },
  ".cm-gutters-before": { insetInlineStart: 0 },
  ".cm-gutters-after": { insetInlineEnd: 0 },
  "&light .cm-gutters": {
    backgroundColor: "#f5f5f5",
    color: "#6c6c6c",
    border: "0px solid #ddd",
    "&.cm-gutters-before": { borderRightWidth: "1px" },
    "&.cm-gutters-after": { borderLeftWidth: "1px" }
  },
  "&dark .cm-gutters": {
    backgroundColor: "#333338",
    color: "#ccc"
  },
  ".cm-gutter": {
    display: "flex !important",
    // Necessary -- prevents margin collapsing
    flexDirection: "column",
    flexShrink: 0,
    boxSizing: "border-box",
    minHeight: "100%",
    overflow: "hidden"
  },
  ".cm-gutterElement": {
    boxSizing: "border-box"
  },
  ".cm-lineNumbers .cm-gutterElement": {
    padding: "0 3px 0 5px",
    minWidth: "20px",
    textAlign: "right",
    whiteSpace: "nowrap"
  },
  "&light .cm-activeLineGutter": {
    backgroundColor: "#e2f2ff"
  },
  "&dark .cm-activeLineGutter": {
    backgroundColor: "#222227"
  },
  ".cm-panels": {
    boxSizing: "border-box",
    position: "sticky",
    left: 0,
    right: 0,
    zIndex: 300
  },
  "&light .cm-panels": {
    backgroundColor: "#f5f5f5",
    color: "black"
  },
  "&light .cm-panels-top": {
    borderBottom: "1px solid #ddd"
  },
  "&light .cm-panels-bottom": {
    borderTop: "1px solid #ddd"
  },
  "&dark .cm-panels": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-dialog": {
    padding: "2px 19px 4px 6px",
    position: "relative",
    "& label": { fontSize: "80%" }
  },
  ".cm-dialog-close": {
    position: "absolute",
    top: "3px",
    right: "4px",
    backgroundColor: "inherit",
    border: "none",
    font: "inherit",
    fontSize: "14px",
    padding: "0"
  },
  ".cm-tab": {
    display: "inline-block",
    overflow: "hidden",
    verticalAlign: "bottom"
  },
  ".cm-widgetBuffer": {
    verticalAlign: "text-top",
    height: "1em",
    width: 0,
    display: "inline"
  },
  ".cm-placeholder": {
    color: "#888",
    display: "inline-block",
    verticalAlign: "top",
    userSelect: "none"
  },
  ".cm-highlightSpace": {
    backgroundImage: "radial-gradient(circle at 50% 55%, #aaa 20%, transparent 5%)",
    backgroundPosition: "center"
  },
  ".cm-highlightTab": {
    backgroundImage: `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="20"><path stroke="%23888" stroke-width="1" fill="none" d="M1 10H196L190 5M190 15L196 10M197 4L197 16"/></svg>')`,
    backgroundSize: "auto 100%",
    backgroundPosition: "right 90%",
    backgroundRepeat: "no-repeat"
  },
  ".cm-trailingSpace": {
    backgroundColor: "#ff332255"
  },
  ".cm-button": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    padding: ".2em 1em",
    borderRadius: "1px"
  },
  "&light .cm-button": {
    backgroundImage: "linear-gradient(#eff1f5, #d9d9df)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#b4b4b4, #d0d3d6)"
    }
  },
  "&dark .cm-button": {
    backgroundImage: "linear-gradient(#393939, #111)",
    border: "1px solid #888",
    "&:active": {
      backgroundImage: "linear-gradient(#111, #333)"
    }
  },
  ".cm-textfield": {
    verticalAlign: "middle",
    color: "inherit",
    fontSize: "70%",
    border: "1px solid silver",
    padding: ".2em .5em"
  },
  "&light .cm-textfield": {
    backgroundColor: "white"
  },
  "&dark .cm-textfield": {
    border: "1px solid #555",
    backgroundColor: "inherit"
  }
}, y4), hD = {
  childList: !0,
  characterData: !0,
  subtree: !0,
  attributes: !0,
  characterDataOldValue: !0
}, fv = st.ie && st.ie_version <= 11;
class pD {
  constructor(e) {
    this.view = e, this.active = !1, this.editContext = null, this.selectionRange = new J9(), this.selectionChanged = !1, this.delayedFlush = -1, this.resizeTimeout = -1, this.queue = [], this.delayedAndroidKey = null, this.flushingAndroidKey = -1, this.lastChange = 0, this.scrollTargets = [], this.intersection = null, this.resizeScroll = null, this.intersecting = !1, this.gapIntersection = null, this.gaps = [], this.printQuery = null, this.parentCheck = -1, this.dom = e.contentDOM, this.observer = new MutationObserver((n) => {
      for (let r of n)
        this.queue.push(r);
      (st.ie && st.ie_version <= 11 || st.ios && e.composing) && n.some((r) => r.type == "childList" && r.removedNodes.length || r.type == "characterData" && r.oldValue.length > r.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), window.EditContext && st.android && e.constructor.EDIT_CONTEXT !== !1 && // Chrome <126 doesn't support inverted selections in edit context (#1392)
    !(st.chrome && st.chrome_version < 126) && (this.editContext = new gD(e), e.state.facet(ea) && (e.contentDOM.editContext = this.editContext.editContext)), fv && (this.onCharData = (n) => {
      this.queue.push({
        target: n.target,
        type: "characterData",
        oldValue: n.prevValue
      }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this), this.onResize = this.onResize.bind(this), this.onPrint = this.onPrint.bind(this), this.onScroll = this.onScroll.bind(this), window.matchMedia && (this.printQuery = window.matchMedia("print")), typeof ResizeObserver == "function" && (this.resizeScroll = new ResizeObserver(() => {
      var n;
      ((n = this.view.docView) === null || n === void 0 ? void 0 : n.lastUpdate) < Date.now() - 75 && this.onResize();
    }), this.resizeScroll.observe(e.scrollDOM)), this.addWindowListeners(this.win = e.win), this.start(), typeof IntersectionObserver == "function" && (this.intersection = new IntersectionObserver((n) => {
      this.parentCheck < 0 && (this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1e3)), n.length > 0 && n[n.length - 1].intersectionRatio > 0 != this.intersecting && (this.intersecting = !this.intersecting, this.intersecting != this.view.inView && this.onScrollChanged(document.createEvent("Event")));
    }, { threshold: [0, 1e-3] }), this.intersection.observe(this.dom), this.gapIntersection = new IntersectionObserver((n) => {
      n.length > 0 && n[n.length - 1].intersectionRatio > 0 && this.onScrollChanged(document.createEvent("Event"));
    }, {})), this.listenForScroll(), this.readSelectionRange();
  }
  onScrollChanged(e) {
    this.view.inputState.runHandlers("scroll", e), this.intersecting && this.view.measure();
  }
  onScroll(e) {
    this.intersecting && this.flush(!1), this.editContext && this.view.requestMeasure(this.editContext.measureReq), this.onScrollChanged(e);
  }
  onResize() {
    this.resizeTimeout < 0 && (this.resizeTimeout = setTimeout(() => {
      this.resizeTimeout = -1, this.view.requestMeasure();
    }, 50));
  }
  onPrint(e) {
    (e.type == "change" || !e.type) && !e.matches || (this.view.viewState.printing = !0, this.view.measure(), setTimeout(() => {
      this.view.viewState.printing = !1, this.view.requestMeasure();
    }, 500));
  }
  updateGaps(e) {
    if (this.gapIntersection && (e.length != this.gaps.length || this.gaps.some((n, r) => n != e[r]))) {
      this.gapIntersection.disconnect();
      for (let n of e)
        this.gapIntersection.observe(n);
      this.gaps = e;
    }
  }
  onSelectionChange(e) {
    let n = this.selectionChanged;
    if (!this.readSelectionRange() || this.delayedAndroidKey)
      return;
    let { view: r } = this, i = this.selectionRange;
    if (r.state.facet(ea) ? r.root.activeElement != this.dom : !dp(this.dom, i))
      return;
    let o = i.anchorNode && r.docView.nearest(i.anchorNode);
    if (o && o.ignoreEvent(e)) {
      n || (this.selectionChanged = !1);
      return;
    }
    (st.ie && st.ie_version <= 11 || st.android && st.chrome) && !r.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)
    i.focusNode && hf(i.focusNode, i.focusOffset, i.anchorNode, i.anchorOffset) ? this.flushSoon() : this.flush(!1);
  }
  readSelectionRange() {
    let { view: e } = this, n = _f(e.root);
    if (!n)
      return !1;
    let r = st.safari && e.root.nodeType == 11 && e.root.activeElement == this.dom && mD(this.view, n) || n;
    if (!r || this.selectionRange.eq(r))
      return !1;
    let i = dp(this.dom, r);
    return i && !this.selectionChanged && e.inputState.lastFocusTime > Date.now() - 200 && e.inputState.lastTouchTime < Date.now() - 300 && Q9(this.dom, r) ? (this.view.inputState.lastFocusTime = 0, e.docView.updateSelection(), !1) : (this.selectionRange.setRange(r), i && (this.selectionChanged = !0), !0);
  }
  setSelectionRange(e, n) {
    this.selectionRange.set(e.node, e.offset, n.node, n.offset), this.selectionChanged = !1;
  }
  clearSelectionRange() {
    this.selectionRange.set(null, 0, null, 0);
  }
  listenForScroll() {
    this.parentCheck = -1;
    let e = 0, n = null;
    for (let r = this.dom; r; )
      if (r.nodeType == 1)
        !n && e < this.scrollTargets.length && this.scrollTargets[e] == r ? e++ : n || (n = this.scrollTargets.slice(0, e)), n && n.push(r), r = r.assignedSlot || r.parentNode;
      else if (r.nodeType == 11)
        r = r.host;
      else
        break;
    if (e < this.scrollTargets.length && !n && (n = this.scrollTargets.slice(0, e)), n) {
      for (let r of this.scrollTargets)
        r.removeEventListener("scroll", this.onScroll);
      for (let r of this.scrollTargets = n)
        r.addEventListener("scroll", this.onScroll);
    }
  }
  ignore(e) {
    if (!this.active)
      return e();
    try {
      return this.stop(), e();
    } finally {
      this.start(), this.clear();
    }
  }
  start() {
    this.active || (this.observer.observe(this.dom, hD), fv && this.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.active = !0);
  }
  stop() {
    this.active && (this.active = !1, this.observer.disconnect(), fv && this.dom.removeEventListener("DOMCharacterDataModified", this.onCharData));
  }
  // Throw away any pending changes
  clear() {
    this.processRecords(), this.queue.length = 0, this.selectionChanged = !1;
  }
  // Chrome Android, especially in combination with GBoard, not only
  // doesn't reliably fire regular key events, but also often
  // surrounds the effect of enter or backspace with a bunch of
  // composition events that, when interrupted, cause text duplication
  // or other kinds of corruption. This hack makes the editor back off
  // from handling DOM changes for a moment when such a key is
  // detected (via beforeinput or keydown), and then tries to flush
  // them or, if that has no effect, dispatches the given key.
  delayAndroidKey(e, n) {
    var r;
    if (!this.delayedAndroidKey) {
      let i = () => {
        let o = this.delayedAndroidKey;
        o && (this.clearDelayedAndroidKey(), this.view.inputState.lastKeyCode = o.keyCode, this.view.inputState.lastKeyTime = Date.now(), !this.flush() && o.force && Hc(this.dom, o.key, o.keyCode));
      };
      this.flushingAndroidKey = this.view.win.requestAnimationFrame(i);
    }
    (!this.delayedAndroidKey || e == "Enter") && (this.delayedAndroidKey = {
      key: e,
      keyCode: n,
      // Only run the key handler when no changes are detected if
      // this isn't coming right after another change, in which case
      // it is probably part of a weird chain of updates, and should
      // be ignored if it returns the DOM to its previous state.
      force: this.lastChange < Date.now() - 50 || !!(!((r = this.delayedAndroidKey) === null || r === void 0) && r.force)
    });
  }
  clearDelayedAndroidKey() {
    this.win.cancelAnimationFrame(this.flushingAndroidKey), this.delayedAndroidKey = null, this.flushingAndroidKey = -1;
  }
  flushSoon() {
    this.delayedFlush < 0 && (this.delayedFlush = this.view.win.requestAnimationFrame(() => {
      this.delayedFlush = -1, this.flush();
    }));
  }
  forceFlush() {
    this.delayedFlush >= 0 && (this.view.win.cancelAnimationFrame(this.delayedFlush), this.delayedFlush = -1), this.flush();
  }
  pendingRecords() {
    for (let e of this.observer.takeRecords())
      this.queue.push(e);
    return this.queue;
  }
  processRecords() {
    let e = this.pendingRecords();
    e.length && (this.queue = []);
    let n = -1, r = -1, i = !1;
    for (let o of e) {
      let s = this.readMutation(o);
      s && (s.typeOver && (i = !0), n == -1 ? { from: n, to: r } = s : (n = Math.min(s.from, n), r = Math.max(s.to, r)));
    }
    return { from: n, to: r, typeOver: i };
  }
  readChange() {
    let { from: e, to: n, typeOver: r } = this.processRecords(), i = this.selectionChanged && dp(this.dom, this.selectionRange);
    if (e < 0 && !i)
      return null;
    e > -1 && (this.lastChange = Date.now()), this.view.inputState.lastFocusTime = 0, this.selectionChanged = !1;
    let o = new $N(this.view, e, n, r);
    return this.view.docView.domChanged = { newSel: o.newSel ? o.newSel.main : null }, o;
  }
  // Apply pending changes, if any
  flush(e = !0) {
    if (this.delayedFlush >= 0 || this.delayedAndroidKey)
      return !1;
    e && this.readSelectionRange();
    let n = this.readChange();
    if (!n)
      return this.view.requestMeasure(), !1;
    let r = this.view.state, i = a4(this.view, n);
    return this.view.state == r && (n.domChanged || n.newSel && !n.newSel.main.eq(this.view.state.selection.main)) && this.view.update([]), i;
  }
  readMutation(e) {
    let n = this.view.docView.nearest(e.target);
    if (!n || n.ignoreMutation(e))
      return null;
    if (n.markDirty(e.type == "attributes"), e.type == "attributes" && (n.flags |= 4), e.type == "childList") {
      let r = Fj(n, e.previousSibling || e.target.previousSibling, -1), i = Fj(n, e.nextSibling || e.target.nextSibling, 1);
      return {
        from: r ? n.posAfter(r) : n.posAtStart,
        to: i ? n.posBefore(i) : n.posAtEnd,
        typeOver: !1
      };
    } else return e.type == "characterData" ? { from: n.posAtStart, to: n.posAtEnd, typeOver: e.target.nodeValue == e.oldValue } : null;
  }
  setWindow(e) {
    e != this.win && (this.removeWindowListeners(this.win), this.win = e, this.addWindowListeners(this.win));
  }
  addWindowListeners(e) {
    e.addEventListener("resize", this.onResize), this.printQuery ? this.printQuery.addEventListener ? this.printQuery.addEventListener("change", this.onPrint) : this.printQuery.addListener(this.onPrint) : e.addEventListener("beforeprint", this.onPrint), e.addEventListener("scroll", this.onScroll), e.document.addEventListener("selectionchange", this.onSelectionChange);
  }
  removeWindowListeners(e) {
    e.removeEventListener("scroll", this.onScroll), e.removeEventListener("resize", this.onResize), this.printQuery ? this.printQuery.removeEventListener ? this.printQuery.removeEventListener("change", this.onPrint) : this.printQuery.removeListener(this.onPrint) : e.removeEventListener("beforeprint", this.onPrint), e.document.removeEventListener("selectionchange", this.onSelectionChange);
  }
  update(e) {
    this.editContext && (this.editContext.update(e), e.startState.facet(ea) != e.state.facet(ea) && (e.view.contentDOM.editContext = e.state.facet(ea) ? this.editContext.editContext : null));
  }
  destroy() {
    var e, n, r;
    this.stop(), (e = this.intersection) === null || e === void 0 || e.disconnect(), (n = this.gapIntersection) === null || n === void 0 || n.disconnect(), (r = this.resizeScroll) === null || r === void 0 || r.disconnect();
    for (let i of this.scrollTargets)
      i.removeEventListener("scroll", this.onScroll);
    this.removeWindowListeners(this.win), clearTimeout(this.parentCheck), clearTimeout(this.resizeTimeout), this.win.cancelAnimationFrame(this.delayedFlush), this.win.cancelAnimationFrame(this.flushingAndroidKey), this.editContext && (this.view.contentDOM.editContext = null, this.editContext.destroy());
  }
}
function Fj(t, e, n) {
  for (; e; ) {
    let r = yr.get(e);
    if (r && r.parent == t)
      return r;
    let i = e.parentNode;
    e = i != t.dom ? i : n > 0 ? e.nextSibling : e.previousSibling;
  }
  return null;
}
function Uj(t, e) {
  let n = e.startContainer, r = e.startOffset, i = e.endContainer, o = e.endOffset, s = t.docView.domAtPos(t.state.selection.main.anchor);
  return hf(s.node, s.offset, i, o) && ([n, r, i, o] = [i, o, n, r]), { anchorNode: n, anchorOffset: r, focusNode: i, focusOffset: o };
}
function mD(t, e) {
  if (e.getComposedRanges) {
    let i = e.getComposedRanges(t.root)[0];
    if (i)
      return Uj(t, i);
  }
  let n = null;
  function r(i) {
    i.preventDefault(), i.stopImmediatePropagation(), n = i.getTargetRanges()[0];
  }
  return t.contentDOM.addEventListener("beforeinput", r, !0), t.dom.ownerDocument.execCommand("indent"), t.contentDOM.removeEventListener("beforeinput", r, !0), n ? Uj(t, n) : null;
}
class gD {
  constructor(e) {
    this.from = 0, this.to = 0, this.pendingContextChange = null, this.handlers = /* @__PURE__ */ Object.create(null), this.composing = null, this.resetRange(e.state);
    let n = this.editContext = new window.EditContext({
      text: e.state.doc.sliceString(this.from, this.to),
      selectionStart: this.toContextPos(Math.max(this.from, Math.min(this.to, e.state.selection.main.anchor))),
      selectionEnd: this.toContextPos(e.state.selection.main.head)
    });
    this.handlers.textupdate = (r) => {
      let i = e.state.selection.main, { anchor: o, head: s } = i, a = this.toEditorPos(r.updateRangeStart), l = this.toEditorPos(r.updateRangeEnd);
      e.inputState.composing >= 0 && !this.composing && (this.composing = { contextBase: r.updateRangeStart, editorBase: a, drifted: !1 });
      let u = { from: a, to: l, insert: rr.of(r.text.split(`
`)) };
      if (u.from == this.from && o < this.from ? u.from = o : u.to == this.to && o > this.to && (u.to = o), u.from == u.to && !u.insert.length) {
        let f = Me.single(this.toEditorPos(r.selectionStart), this.toEditorPos(r.selectionEnd));
        f.main.eq(i) || e.dispatch({ selection: f, userEvent: "select" });
        return;
      }
      if ((st.mac || st.android) && u.from == s - 1 && /^\. ?$/.test(r.text) && e.contentDOM.getAttribute("autocorrect") == "off" && (u = { from: a, to: l, insert: rr.of([r.text.replace(".", " ")]) }), this.pendingContextChange = u, !e.state.readOnly) {
        let f = this.to - this.from + (u.to - u.from + u.insert.length);
        T1(e, u, Me.single(this.toEditorPos(r.selectionStart, f), this.toEditorPos(r.selectionEnd, f)));
      }
      this.pendingContextChange && (this.revertPending(e.state), this.setSelection(e.state));
    }, this.handlers.characterboundsupdate = (r) => {
      let i = [], o = null;
      for (let s = this.toEditorPos(r.rangeStart), a = this.toEditorPos(r.rangeEnd); s < a; s++) {
        let l = e.coordsForChar(s);
        o = l && new DOMRect(l.left, l.top, l.right - l.left, l.bottom - l.top) || o || new DOMRect(), i.push(o);
      }
      n.updateCharacterBounds(r.rangeStart, i);
    }, this.handlers.textformatupdate = (r) => {
      let i = [];
      for (let o of r.getTextFormats()) {
        let s = o.underlineStyle, a = o.underlineThickness;
        if (s != "None" && a != "None") {
          let l = this.toEditorPos(o.rangeStart), u = this.toEditorPos(o.rangeEnd);
          if (l < u) {
            let f = `text-decoration: underline ${s == "Dashed" ? "dashed " : s == "Squiggle" ? "wavy " : ""}${a == "Thin" ? 1 : 2}px`;
            i.push(Bt.mark({ attributes: { style: f } }).range(l, u));
          }
        }
      }
      e.dispatch({ effects: e4.of(Bt.set(i)) });
    }, this.handlers.compositionstart = () => {
      e.inputState.composing < 0 && (e.inputState.composing = 0, e.inputState.compositionFirstChange = !0);
    }, this.handlers.compositionend = () => {
      if (e.inputState.composing = -1, e.inputState.compositionFirstChange = null, this.composing) {
        let { drifted: r } = this.composing;
        this.composing = null, r && this.reset(e.state);
      }
    };
    for (let r in this.handlers)
      n.addEventListener(r, this.handlers[r]);
    this.measureReq = { read: (r) => {
      this.editContext.updateControlBounds(r.contentDOM.getBoundingClientRect());
      let i = _f(r.root);
      i && i.rangeCount && this.editContext.updateSelectionBounds(i.getRangeAt(0).getBoundingClientRect());
    } };
  }
  applyEdits(e) {
    let n = 0, r = !1, i = this.pendingContextChange;
    return e.changes.iterChanges((o, s, a, l, u) => {
      if (r)
        return;
      let f = u.length - (s - o);
      if (i && s >= i.to)
        if (i.from == o && i.to == s && i.insert.eq(u)) {
          i = this.pendingContextChange = null, n += f, this.to += f;
          return;
        } else
          i = null, this.revertPending(e.state);
      if (o += n, s += n, s <= this.from)
        this.from += f, this.to += f;
      else if (o < this.to) {
        if (o < this.from || s > this.to || this.to - this.from + u.length > 3e4) {
          r = !0;
          return;
        }
        this.editContext.updateText(this.toContextPos(o), this.toContextPos(s), u.toString()), this.to += f;
      }
      n += f;
    }), i && !r && this.revertPending(e.state), !r;
  }
  update(e) {
    let n = this.pendingContextChange, r = e.startState.selection.main;
    this.composing && (this.composing.drifted || !e.changes.touchesRange(r.from, r.to) && e.transactions.some((i) => !i.isUserEvent("input.type") && i.changes.touchesRange(this.from, this.to))) ? (this.composing.drifted = !0, this.composing.editorBase = e.changes.mapPos(this.composing.editorBase)) : !this.applyEdits(e) || !this.rangeIsValid(e.state) ? (this.pendingContextChange = null, this.reset(e.state)) : (e.docChanged || e.selectionSet || n) && this.setSelection(e.state), (e.geometryChanged || e.docChanged || e.selectionSet) && e.view.requestMeasure(this.measureReq);
  }
  resetRange(e) {
    let { head: n } = e.selection.main;
    this.from = Math.max(
      0,
      n - 1e4
      /* CxVp.Margin */
    ), this.to = Math.min(
      e.doc.length,
      n + 1e4
      /* CxVp.Margin */
    );
  }
  reset(e) {
    this.resetRange(e), this.editContext.updateText(0, this.editContext.text.length, e.doc.sliceString(this.from, this.to)), this.setSelection(e);
  }
  revertPending(e) {
    let n = this.pendingContextChange;
    this.pendingContextChange = null, this.editContext.updateText(this.toContextPos(n.from), this.toContextPos(n.from + n.insert.length), e.doc.sliceString(n.from, n.to));
  }
  setSelection(e) {
    let { main: n } = e.selection, r = this.toContextPos(Math.max(this.from, Math.min(this.to, n.anchor))), i = this.toContextPos(n.head);
    (this.editContext.selectionStart != r || this.editContext.selectionEnd != i) && this.editContext.updateSelection(r, i);
  }
  rangeIsValid(e) {
    let { head: n } = e.selection.main;
    return !(this.from > 0 && n - this.from < 500 || this.to < e.doc.length && this.to - n < 500 || this.to - this.from > 1e4 * 3);
  }
  toEditorPos(e, n = this.to - this.from) {
    e = Math.min(e, n);
    let r = this.composing;
    return r && r.drifted ? r.editorBase + (e - r.contextBase) : e + this.from;
  }
  toContextPos(e) {
    let n = this.composing;
    return n && n.drifted ? n.contextBase + (e - n.editorBase) : e - this.from;
  }
  destroy() {
    for (let e in this.handlers)
      this.editContext.removeEventListener(e, this.handlers[e]);
  }
}
class nt {
  /**
  The current editor state.
  */
  get state() {
    return this.viewState.state;
  }
  /**
  To be able to display large documents without consuming too much
  memory or overloading the browser, CodeMirror only draws the
  code that is visible (plus a margin around it) to the DOM. This
  property tells you the extent of the current drawn viewport, in
  document positions.
  */
  get viewport() {
    return this.viewState.viewport;
  }
  /**
  When there are, for example, large collapsed ranges in the
  viewport, its size can be a lot bigger than the actual visible
  content. Thus, if you are doing something like styling the
  content in the viewport, it is preferable to only do so for
  these ranges, which are the subset of the viewport that is
  actually drawn.
  */
  get visibleRanges() {
    return this.viewState.visibleRanges;
  }
  /**
  Returns false when the editor is entirely scrolled out of view
  or otherwise hidden.
  */
  get inView() {
    return this.viewState.inView;
  }
  /**
  Indicates whether the user is currently composing text via
  [IME](https://en.wikipedia.org/wiki/Input_method), and at least
  one change has been made in the current composition.
  */
  get composing() {
    return !!this.inputState && this.inputState.composing > 0;
  }
  /**
  Indicates whether the user is currently in composing state. Note
  that on some platforms, like Android, this will be the case a
  lot, since just putting the cursor on a word starts a
  composition there.
  */
  get compositionStarted() {
    return !!this.inputState && this.inputState.composing >= 0;
  }
  /**
  The document or shadow root that the view lives in.
  */
  get root() {
    return this._root;
  }
  /**
  @internal
  */
  get win() {
    return this.dom.ownerDocument.defaultView || window;
  }
  /**
  Construct a new view. You'll want to either provide a `parent`
  option, or put `view.dom` into your document after creating a
  view, so that the user can see the editor.
  */
  constructor(e = {}) {
    var n;
    this.plugins = [], this.pluginMap = /* @__PURE__ */ new Map(), this.editorAttrs = {}, this.contentAttrs = {}, this.bidiCache = [], this.destroyed = !1, this.updateState = 2, this.measureScheduled = -1, this.measureRequests = [], this.contentDOM = document.createElement("div"), this.scrollDOM = document.createElement("div"), this.scrollDOM.tabIndex = -1, this.scrollDOM.className = "cm-scroller", this.scrollDOM.appendChild(this.contentDOM), this.announceDOM = document.createElement("div"), this.announceDOM.className = "cm-announced", this.announceDOM.setAttribute("aria-live", "polite"), this.dom = document.createElement("div"), this.dom.appendChild(this.announceDOM), this.dom.appendChild(this.scrollDOM), e.parent && e.parent.appendChild(this.dom);
    let { dispatch: r } = e;
    this.dispatchTransactions = e.dispatchTransactions || r && ((i) => i.forEach((o) => r(o, this))) || ((i) => this.update(i)), this.dispatch = this.dispatch.bind(this), this._root = e.root || Y9(e.parent) || document, this.viewState = new Bj(e.state || En.create(e)), e.scrollTo && e.scrollTo.is(Sh) && (this.viewState.scrollTarget = e.scrollTo.value.clip(this.viewState.state)), this.plugins = this.state.facet(Pc).map((i) => new av(i));
    for (let i of this.plugins)
      i.update(this);
    this.observer = new pD(this), this.inputState = new IN(this), this.inputState.ensureHandlers(this.plugins), this.docView = new wj(this), this.mountStyles(), this.updateAttrs(), this.updateState = 0, this.requestMeasure(), !((n = document.fonts) === null || n === void 0) && n.ready && document.fonts.ready.then(() => this.requestMeasure());
  }
  dispatch(...e) {
    let n = e.length == 1 && e[0] instanceof Ii ? e : e.length == 1 && Array.isArray(e[0]) ? e[0] : [this.state.update(...e)];
    this.dispatchTransactions(n, this);
  }
  /**
  Update the view for the given array of transactions. This will
  update the visible document and selection to match the state
  produced by the transactions, and notify view plugins of the
  change. You should usually call
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this
  as a primitive.
  */
  update(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.update are not allowed while an update is in progress");
    let n = !1, r = !1, i, o = this.state;
    for (let h of e) {
      if (h.startState != o)
        throw new RangeError("Trying to update state with a transaction that doesn't start from the previous state.");
      o = h.state;
    }
    if (this.destroyed) {
      this.viewState.state = o;
      return;
    }
    let s = this.hasFocus, a = 0, l = null;
    e.some((h) => h.annotation(h4)) ? (this.inputState.notifiedFocused = s, a = 1) : s != this.inputState.notifiedFocused && (this.inputState.notifiedFocused = s, l = p4(o, s), l || (a = 1));
    let u = this.observer.delayedAndroidKey, f = null;
    if (u ? (this.observer.clearDelayedAndroidKey(), f = this.observer.readChange(), (f && !this.state.doc.eq(o.doc) || !this.state.selection.eq(o.selection)) && (f = null)) : this.observer.clear(), o.facet(En.phrases) != this.state.facet(En.phrases))
      return this.setState(o);
    i = Vp.create(this, o, e), i.flags |= a;
    let d = this.viewState.scrollTarget;
    try {
      this.updateState = 2;
      for (let h of e) {
        if (d && (d = d.map(h.changes)), h.scrollIntoView) {
          let { main: p } = h.state.selection;
          d = new Kc(p.empty ? p : Me.cursor(p.head, p.head > p.anchor ? -1 : 1));
        }
        for (let p of h.effects)
          p.is(Sh) && (d = p.value.clip(this.state));
      }
      this.viewState.update(i, d), this.bidiCache = Hp.update(this.bidiCache, i.changes), i.empty || (this.updatePlugins(i), this.inputState.update(i)), n = this.docView.update(i), this.state.facet(Xu) != this.styleModules && this.mountStyles(), r = this.updateAttrs(), this.showAnnouncements(e), this.docView.updateSelection(n, e.some((h) => h.isUserEvent("select.pointer")));
    } finally {
      this.updateState = 0;
    }
    if (i.startState.facet(Mh) != i.state.facet(Mh) && (this.viewState.mustMeasureContent = !0), (n || r || d || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent) && this.requestMeasure(), n && this.docViewUpdate(), !i.empty)
      for (let h of this.state.facet(F0))
        try {
          h(i);
        } catch (p) {
          Wi(this.state, p, "update listener");
        }
    (l || f) && Promise.resolve().then(() => {
      l && this.state == l.startState && this.dispatch(l), f && !a4(this, f) && u.force && Hc(this.contentDOM, u.key, u.keyCode);
    });
  }
  /**
  Reset the view to the given state. (This will cause the entire
  document to be redrawn and all view plugins to be reinitialized,
  so you should probably only use it when the new state isn't
  derived from the old state. Otherwise, use
  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)
  */
  setState(e) {
    if (this.updateState != 0)
      throw new Error("Calls to EditorView.setState are not allowed while an update is in progress");
    if (this.destroyed) {
      this.viewState.state = e;
      return;
    }
    this.updateState = 2;
    let n = this.hasFocus;
    try {
      for (let r of this.plugins)
        r.destroy(this);
      this.viewState = new Bj(e), this.plugins = e.facet(Pc).map((r) => new av(r)), this.pluginMap.clear();
      for (let r of this.plugins)
        r.update(this);
      this.docView.destroy(), this.docView = new wj(this), this.inputState.ensureHandlers(this.plugins), this.mountStyles(), this.updateAttrs(), this.bidiCache = [];
    } finally {
      this.updateState = 0;
    }
    n && this.focus(), this.requestMeasure();
  }
  updatePlugins(e) {
    let n = e.startState.facet(Pc), r = e.state.facet(Pc);
    if (n != r) {
      let i = [];
      for (let o of r) {
        let s = n.indexOf(o);
        if (s < 0)
          i.push(new av(o));
        else {
          let a = this.plugins[s];
          a.mustUpdate = e, i.push(a);
        }
      }
      for (let o of this.plugins)
        o.mustUpdate != e && o.destroy(this);
      this.plugins = i, this.pluginMap.clear();
    } else
      for (let i of this.plugins)
        i.mustUpdate = e;
    for (let i = 0; i < this.plugins.length; i++)
      this.plugins[i].update(this);
    n != r && this.inputState.ensureHandlers(this.plugins);
  }
  docViewUpdate() {
    for (let e of this.plugins) {
      let n = e.value;
      if (n && n.docViewUpdate)
        try {
          n.docViewUpdate(this);
        } catch (r) {
          Wi(this.state, r, "doc view update listener");
        }
    }
  }
  /**
  @internal
  */
  measure(e = !0) {
    if (this.destroyed)
      return;
    if (this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.observer.delayedAndroidKey) {
      this.measureScheduled = -1, this.requestMeasure();
      return;
    }
    this.measureScheduled = 0, e && this.observer.forceFlush();
    let n = null, r = this.scrollDOM, i = r.scrollTop * this.scaleY, { scrollAnchorPos: o, scrollAnchorHeight: s } = this.viewState;
    Math.abs(i - this.viewState.scrollTop) > 1 && (s = -1), this.viewState.scrollAnchorHeight = -1;
    try {
      for (let a = 0; ; a++) {
        if (s < 0)
          if (_O(r))
            o = -1, s = this.viewState.heightMap.height;
          else {
            let p = this.viewState.scrollAnchorAt(i);
            o = p.from, s = p.top;
          }
        this.updateState = 1;
        let l = this.viewState.measure(this);
        if (!l && !this.measureRequests.length && this.viewState.scrollTarget == null)
          break;
        if (a > 5) {
          console.warn(this.measureRequests.length ? "Measure loop restarted more than 5 times" : "Viewport failed to stabilize");
          break;
        }
        let u = [];
        l & 4 || ([this.measureRequests, u] = [u, this.measureRequests]);
        let f = u.map((p) => {
          try {
            return p.read(this);
          } catch (m) {
            return Wi(this.state, m), Vj;
          }
        }), d = Vp.create(this, this.state, []), h = !1;
        d.flags |= l, n ? n.flags |= l : n = d, this.updateState = 2, d.empty || (this.updatePlugins(d), this.inputState.update(d), this.updateAttrs(), h = this.docView.update(d), h && this.docViewUpdate());
        for (let p = 0; p < u.length; p++)
          if (f[p] != Vj)
            try {
              let m = u[p];
              m.write && m.write(f[p], this);
            } catch (m) {
              Wi(this.state, m);
            }
        if (h && this.docView.updateSelection(!0), !d.viewportChanged && this.measureRequests.length == 0) {
          if (this.viewState.editorHeight)
            if (this.viewState.scrollTarget) {
              this.docView.scrollIntoView(this.viewState.scrollTarget), this.viewState.scrollTarget = null, s = -1;
              continue;
            } else {
              let m = (o < 0 ? this.viewState.heightMap.height : this.viewState.lineBlockAt(o).top) - s;
              if (m > 1 || m < -1) {
                i = i + m, r.scrollTop = i / this.scaleY, s = -1;
                continue;
              }
            }
          break;
        }
      }
    } finally {
      this.updateState = 0, this.measureScheduled = -1;
    }
    if (n && !n.empty)
      for (let a of this.state.facet(F0))
        a(n);
  }
  /**
  Get the CSS classes for the currently active editor themes.
  */
  get themeClasses() {
    return K0 + " " + (this.state.facet(H0) ? b4 : v4) + " " + this.state.facet(Mh);
  }
  updateAttrs() {
    let e = Wj(this, t4, {
      class: "cm-editor" + (this.hasFocus ? " cm-focused " : " ") + this.themeClasses
    }), n = {
      spellcheck: "false",
      autocorrect: "off",
      autocapitalize: "off",
      writingsuggestions: "false",
      translate: "no",
      contenteditable: this.state.facet(ea) ? "true" : "false",
      class: "cm-content",
      style: `${st.tabSize}: ${this.state.tabSize}`,
      role: "textbox",
      "aria-multiline": "true"
    };
    this.state.readOnly && (n["aria-readonly"] = "true"), Wj(this, _1, n);
    let r = this.observer.ignore(() => {
      let i = I0(this.contentDOM, this.contentAttrs, n), o = I0(this.dom, this.editorAttrs, e);
      return i || o;
    });
    return this.editorAttrs = e, this.contentAttrs = n, r;
  }
  showAnnouncements(e) {
    let n = !0;
    for (let r of e)
      for (let i of r.effects)
        if (i.is(nt.announce)) {
          n && (this.announceDOM.textContent = ""), n = !1;
          let o = this.announceDOM.appendChild(document.createElement("div"));
          o.textContent = i.value;
        }
  }
  mountStyles() {
    this.styleModules = this.state.facet(Xu);
    let e = this.state.facet(nt.cspNonce);
    el.mount(this.root, this.styleModules.concat(dD).reverse(), e ? { nonce: e } : void 0);
  }
  readMeasured() {
    if (this.updateState == 2)
      throw new Error("Reading the editor layout isn't allowed during an update");
    this.updateState == 0 && this.measureScheduled > -1 && this.measure(!1);
  }
  /**
  Schedule a layout measurement, optionally providing callbacks to
  do custom DOM measuring followed by a DOM write phase. Using
  this is preferable reading DOM layout directly from, for
  example, an event handler, because it'll make sure measuring and
  drawing done by other components is synchronized, avoiding
  unnecessary DOM layout computations.
  */
  requestMeasure(e) {
    if (this.measureScheduled < 0 && (this.measureScheduled = this.win.requestAnimationFrame(() => this.measure())), e) {
      if (this.measureRequests.indexOf(e) > -1)
        return;
      if (e.key != null) {
        for (let n = 0; n < this.measureRequests.length; n++)
          if (this.measureRequests[n].key === e.key) {
            this.measureRequests[n] = e;
            return;
          }
      }
      this.measureRequests.push(e);
    }
  }
  /**
  Get the value of a specific plugin, if present. Note that
  plugins that crash can be dropped from a view, so even when you
  know you registered a given plugin, it is recommended to check
  the return value of this method.
  */
  plugin(e) {
    let n = this.pluginMap.get(e);
    return (n === void 0 || n && n.plugin != e) && this.pluginMap.set(e, n = this.plugins.find((r) => r.plugin == e) || null), n && n.update(this).value;
  }
  /**
  The top position of the document, in screen coordinates. This
  may be negative when the editor is scrolled down. Points
  directly to the top of the first line, not above the padding.
  */
  get documentTop() {
    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;
  }
  /**
  Reports the padding above and below the document.
  */
  get documentPadding() {
    return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };
  }
  /**
  If the editor is transformed with CSS, this provides the scale
  along the X axis. Otherwise, it will just be 1. Note that
  transforms other than translation and scaling are not supported.
  */
  get scaleX() {
    return this.viewState.scaleX;
  }
  /**
  Provide the CSS transformed scale along the Y axis.
  */
  get scaleY() {
    return this.viewState.scaleY;
  }
  /**
  Find the text line or block widget at the given vertical
  position (which is interpreted as relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).
  */
  elementAtHeight(e) {
    return this.readMeasured(), this.viewState.elementAtHeight(e);
  }
  /**
  Find the line block (see
  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given
  height, again interpreted relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).
  */
  lineBlockAtHeight(e) {
    return this.readMeasured(), this.viewState.lineBlockAtHeight(e);
  }
  /**
  Get the extent and vertical position of all [line
  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions
  are relative to the [top of the
  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);
  */
  get viewportLineBlocks() {
    return this.viewState.viewportLines;
  }
  /**
  Find the line block around the given document position. A line
  block is a range delimited on both sides by either a
  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line break, or the
  start/end of the document. It will usually just hold a line of
  text, but may be broken into multiple textblocks by block
  widgets.
  */
  lineBlockAt(e) {
    return this.viewState.lineBlockAt(e);
  }
  /**
  The editor's total content height.
  */
  get contentHeight() {
    return this.viewState.contentHeight;
  }
  /**
  Move a cursor position by [grapheme
  cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether
  the motion is away from the line start, or towards it. In
  bidirectional text, the line is traversed in visual order, using
  the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).
  When the start position was the last one on the line, the
  returned position will be across the line break. If there is no
  further line, the original position is returned.
  
  By default, this method moves over a single cluster. The
  optional `by` argument can be used to move across more. It will
  be called with the first cluster as argument, and should return
  a predicate that determines, for each subsequent cluster,
  whether it should also be moved over.
  */
  moveByChar(e, n, r) {
    return cv(this, e, Oj(this, e, n, r));
  }
  /**
  Move a cursor position across the next group of either
  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter
  non-whitespace characters.
  */
  moveByGroup(e, n) {
    return cv(this, e, Oj(this, e, n, (r) => _N(this, e.head, r)));
  }
  /**
  Get the cursor position visually at the start or end of a line.
  Note that this may differ from the _logical_ position at its
  start or end (which is simply at `line.from`/`line.to`) if text
  at the start or end goes against the line's base text direction.
  */
  visualLineSide(e, n) {
    let r = this.bidiSpans(e), i = this.textDirectionAt(e.from), o = r[n ? r.length - 1 : 0];
    return Me.cursor(o.side(n, i) + e.from, o.forward(!n, i) ? 1 : -1);
  }
  /**
  Move to the next line boundary in the given direction. If
  `includeWrap` is true, line wrapping is on, and there is a
  further wrap point on the current line, the wrap point will be
  returned. Otherwise this function will return the start or end
  of the line.
  */
  moveToLineBoundary(e, n, r = !0) {
    return EN(this, e, n, r);
  }
  /**
  Move a cursor position vertically. When `distance` isn't given,
  it defaults to moving to the next line (including wrapped
  lines). Otherwise, `distance` should provide a positive distance
  in pixels.
  
  When `start` has a
  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical
  motion will use that as a target horizontal position. Otherwise,
  the cursor's own horizontal position is used. The returned
  cursor will have its goal column set to whichever column was
  used.
  */
  moveVertically(e, n, r) {
    return cv(this, e, AN(this, e, n, r));
  }
  /**
  Find the DOM parent node and offset (child offset if `node` is
  an element, character offset when it is a text node) at the
  given document position.
  
  Note that for positions that aren't currently in
  `visibleRanges`, the resulting DOM position isn't necessarily
  meaningful (it may just point before or after a placeholder
  element).
  */
  domAtPos(e) {
    return this.docView.domAtPos(e);
  }
  /**
  Find the document position at the given DOM node. Can be useful
  for associating positions with DOM events. Will raise an error
  when `node` isn't part of the editor content.
  */
  posAtDOM(e, n = 0) {
    return this.docView.posFromDOM(e, n);
  }
  posAtCoords(e, n = !0) {
    return this.readMeasured(), s4(this, e, n);
  }
  /**
  Get the screen coordinates at the given document position.
  `side` determines whether the coordinates are based on the
  element before (-1) or after (1) the position (if no element is
  available on the given side, the method will transparently use
  another strategy to get reasonable coordinates).
  */
  coordsAtPos(e, n = 1) {
    this.readMeasured();
    let r = this.docView.coordsAt(e, n);
    if (!r || r.left == r.right)
      return r;
    let i = this.state.doc.lineAt(e), o = this.bidiSpans(i), s = o[za.find(o, e - i.from, -1, n)];
    return Zm(r, s.dir == Nr.LTR == n > 0);
  }
  /**
  Return the rectangle around a given character. If `pos` does not
  point in front of a character that is in the viewport and
  rendered (i.e. not replaced, not a line break), this will return
  null. For space characters that are a line wrap point, this will
  return the position before the line break.
  */
  coordsForChar(e) {
    return this.readMeasured(), this.docView.coordsForChar(e);
  }
  /**
  The default width of a character in the editor. May not
  accurately reflect the width of all characters (given variable
  width fonts or styling of invididual ranges).
  */
  get defaultCharacterWidth() {
    return this.viewState.heightOracle.charWidth;
  }
  /**
  The default height of a line in the editor. May not be accurate
  for all lines.
  */
  get defaultLineHeight() {
    return this.viewState.heightOracle.lineHeight;
  }
  /**
  The text direction
  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)
  CSS property) of the editor's content element.
  */
  get textDirection() {
    return this.viewState.defaultTextDirection;
  }
  /**
  Find the text direction of the block at the given position, as
  assigned by CSS. If
  [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)
  isn't enabled, or the given position is outside of the viewport,
  this will always return the same as
  [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that
  this may trigger a DOM layout.
  */
  textDirectionAt(e) {
    return !this.state.facet(QO) || e < this.viewport.from || e > this.viewport.to ? this.textDirection : (this.readMeasured(), this.docView.textDirectionAt(e));
  }
  /**
  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)
  (as determined by the
  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)
  CSS property of its content element).
  */
  get lineWrapping() {
    return this.viewState.heightOracle.lineWrapping;
  }
  /**
  Returns the bidirectional text structure of the given line
  (which should be in the current document) as an array of span
  objects. The order of these spans matches the [text
  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is
  left-to-right, the leftmost spans come first, otherwise the
  rightmost spans come first.
  */
  bidiSpans(e) {
    if (e.length > vD)
      return UO(e.length);
    let n = this.textDirectionAt(e.from), r;
    for (let o of this.bidiCache)
      if (o.from == e.from && o.dir == n && (o.fresh || FO(o.isolates, r = xj(this, e))))
        return o.order;
    r || (r = xj(this, e));
    let i = fN(e.text, n, r);
    return this.bidiCache.push(new Hp(e.from, e.to, n, r, !0, i)), i;
  }
  /**
  Check whether the editor has focus.
  */
  get hasFocus() {
    var e;
    return (this.dom.ownerDocument.hasFocus() || st.safari && ((e = this.inputState) === null || e === void 0 ? void 0 : e.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;
  }
  /**
  Put focus on the editor.
  */
  focus() {
    this.observer.ignore(() => {
      OO(this.contentDOM), this.docView.updateSelection();
    });
  }
  /**
  Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only
  necessary when moving the editor's existing DOM to a new window or shadow root.
  */
  setRoot(e) {
    this._root != e && (this._root = e, this.observer.setWindow((e.nodeType == 9 ? e : e.ownerDocument).defaultView || window), this.mountStyles());
  }
  /**
  Clean up this editor view, removing its element from the
  document, unregistering event handlers, and notifying
  plugins. The view instance can no longer be used after
  calling this.
  */
  destroy() {
    this.root.activeElement == this.contentDOM && this.contentDOM.blur();
    for (let e of this.plugins)
      e.destroy(this);
    this.plugins = [], this.inputState.destroy(), this.docView.destroy(), this.dom.remove(), this.observer.destroy(), this.measureScheduled > -1 && this.win.cancelAnimationFrame(this.measureScheduled), this.destroyed = !0;
  }
  /**
  Returns an effect that can be
  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to
  cause it to scroll the given position or range into view.
  */
  static scrollIntoView(e, n = {}) {
    return Sh.of(new Kc(typeof e == "number" ? Me.cursor(e) : e, n.y, n.x, n.yMargin, n.xMargin));
  }
  /**
  Return an effect that resets the editor to its current (at the
  time this method was called) scroll position. Note that this
  only affects the editor's own scrollable element, not parents.
  See also
  [`EditorViewConfig.scrollTo`](https://codemirror.net/6/docs/ref/#view.EditorViewConfig.scrollTo).
  
  The effect should be used with a document identical to the one
  it was created for. Failing to do so is not an error, but may
  not scroll to the expected position. You can
  [map](https://codemirror.net/6/docs/ref/#state.StateEffect.map) the effect to account for changes.
  */
  scrollSnapshot() {
    let { scrollTop: e, scrollLeft: n } = this.scrollDOM, r = this.viewState.scrollAnchorAt(e);
    return Sh.of(new Kc(Me.cursor(r.from), "start", "start", r.top - e, n, !0));
  }
  /**
  Enable or disable tab-focus mode, which disables key bindings
  for Tab and Shift-Tab, letting the browser's default
  focus-changing behavior go through instead. This is useful to
  prevent trapping keyboard users in your editor.
  
  Without argument, this toggles the mode. With a boolean, it
  enables (true) or disables it (false). Given a number, it
  temporarily enables the mode until that number of milliseconds
  have passed or another non-Tab key is pressed.
  */
  setTabFocusMode(e) {
    e == null ? this.inputState.tabFocusMode = this.inputState.tabFocusMode < 0 ? 0 : -1 : typeof e == "boolean" ? this.inputState.tabFocusMode = e ? 0 : -1 : this.inputState.tabFocusMode != 0 && (this.inputState.tabFocusMode = Date.now() + e);
  }
  /**
  Returns an extension that can be used to add DOM event handlers.
  The value should be an object mapping event names to handler
  functions. For any given event, such functions are ordered by
  extension precedence, and the first handler to return true will
  be assumed to have handled that event, and no other handlers or
  built-in behavior will be activated for it. These are registered
  on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except
  for `scroll` handlers, which will be called any time the
  editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of
  its parent nodes is scrolled.
  */
  static domEventHandlers(e) {
    return Gr.define(() => ({}), { eventHandlers: e });
  }
  /**
  Create an extension that registers DOM event observers. Contrary
  to event [handlers](https://codemirror.net/6/docs/ref/#view.EditorView^domEventHandlers),
  observers can't be prevented from running by a higher-precedence
  handler returning true. They also don't prevent other handlers
  and observers from running when they return true, and should not
  call `preventDefault`.
  */
  static domEventObservers(e) {
    return Gr.define(() => ({}), { eventObservers: e });
  }
  /**
  Create a theme extension. The first argument can be a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)
  style spec providing the styles for the theme. These will be
  prefixed with a generated class for the style.
  
  Because the selectors will be prefixed with a scope class, rule
  that directly match the editor's [wrapper
  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be
  added—need to be explicitly differentiated by adding an `&` to
  the selector for that element—for example
  `&.cm-focused`.
  
  When `dark` is set to true, the theme will be marked as dark,
  which will cause the `&dark` rules from [base
  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to
  `&light` when a light theme is active).
  */
  static theme(e, n) {
    let r = el.newName(), i = [Mh.of(r), Xu.of(G0(`.${r}`, e))];
    return n && n.dark && i.push(H0.of(!0)), i;
  }
  /**
  Create an extension that adds styles to the base theme. Like
  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the
  place of the editor wrapper element when directly targeting
  that. You can also use `&dark` or `&light` instead to only
  target editors with a dark or light theme.
  */
  static baseTheme(e) {
    return lc.lowest(Xu.of(G0("." + K0, e, y4)));
  }
  /**
  Retrieve an editor view instance from the view's DOM
  representation.
  */
  static findFromDOM(e) {
    var n;
    let r = e.querySelector(".cm-content"), i = r && yr.get(r) || yr.get(e);
    return ((n = i?.rootView) === null || n === void 0 ? void 0 : n.view) || null;
  }
}
nt.styleModule = Xu;
nt.inputHandler = JO;
nt.clipboardInputFilter = O1;
nt.clipboardOutputFilter = E1;
nt.scrollHandler = ZO;
nt.focusChangeEffect = YO;
nt.perLineTextDirection = QO;
nt.exceptionSink = GO;
nt.updateListener = F0;
nt.editable = ea;
nt.mouseSelectionStyle = KO;
nt.dragMovesSelection = HO;
nt.clickAddsSelectionRange = WO;
nt.decorations = Mf;
nt.outerDecorations = n4;
nt.atomicRanges = A1;
nt.bidiIsolatedRanges = r4;
nt.scrollMargins = i4;
nt.darkTheme = H0;
nt.cspNonce = /* @__PURE__ */ lt.define({ combine: (t) => t.length ? t[0] : "" });
nt.contentAttributes = _1;
nt.editorAttributes = t4;
nt.lineWrapping = /* @__PURE__ */ nt.contentAttributes.of({ class: "cm-lineWrapping" });
nt.announce = /* @__PURE__ */ vn.define();
const vD = 4096, Vj = {};
class Hp {
  constructor(e, n, r, i, o, s) {
    this.from = e, this.to = n, this.dir = r, this.isolates = i, this.fresh = o, this.order = s;
  }
  static update(e, n) {
    if (n.empty && !e.some((o) => o.fresh))
      return e;
    let r = [], i = e.length ? e[e.length - 1].dir : Nr.LTR;
    for (let o = Math.max(0, e.length - 10); o < e.length; o++) {
      let s = e[o];
      s.dir == i && !n.touchesRange(s.from, s.to) && r.push(new Hp(n.mapPos(s.from, 1), n.mapPos(s.to, -1), s.dir, s.isolates, !1, s.order));
    }
    return r;
  }
}
function Wj(t, e, n) {
  for (let r = t.state.facet(e), i = r.length - 1; i >= 0; i--) {
    let o = r[i], s = typeof o == "function" ? o(t) : o;
    s && D0(s, n);
  }
  return n;
}
const bD = st.mac ? "mac" : st.windows ? "win" : st.linux ? "linux" : "key";
function yD(t, e) {
  const n = t.split(/-(?!$)/);
  let r = n[n.length - 1];
  r == "Space" && (r = " ");
  let i, o, s, a;
  for (let l = 0; l < n.length - 1; ++l) {
    const u = n[l];
    if (/^(cmd|meta|m)$/i.test(u))
      a = !0;
    else if (/^a(lt)?$/i.test(u))
      i = !0;
    else if (/^(c|ctrl|control)$/i.test(u))
      o = !0;
    else if (/^s(hift)?$/i.test(u))
      s = !0;
    else if (/^mod$/i.test(u))
      e == "mac" ? a = !0 : o = !0;
    else
      throw new Error("Unrecognized modifier name: " + u);
  }
  return i && (r = "Alt-" + r), o && (r = "Ctrl-" + r), a && (r = "Meta-" + r), s && (r = "Shift-" + r), r;
}
function Th(t, e, n) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n !== !1 && e.shiftKey && (t = "Shift-" + t), t;
}
const xD = /* @__PURE__ */ lc.default(/* @__PURE__ */ nt.domEventHandlers({
  keydown(t, e) {
    return w4(x4(e.state), t, e, "editor");
  }
})), Kp = /* @__PURE__ */ lt.define({ enables: xD }), Hj = /* @__PURE__ */ new WeakMap();
function x4(t) {
  let e = t.facet(Kp), n = Hj.get(e);
  return n || Hj.set(e, n = kD(e.reduce((r, i) => r.concat(i), []))), n;
}
function wD(t, e, n) {
  return w4(x4(t.state), e, t, n);
}
let Ra = null;
const jD = 4e3;
function kD(t, e = bD) {
  let n = /* @__PURE__ */ Object.create(null), r = /* @__PURE__ */ Object.create(null), i = (s, a) => {
    let l = r[s];
    if (l == null)
      r[s] = a;
    else if (l != a)
      throw new Error("Key binding " + s + " is used both as a regular binding and as a multi-stroke prefix");
  }, o = (s, a, l, u, f) => {
    var d, h;
    let p = n[s] || (n[s] = /* @__PURE__ */ Object.create(null)), m = a.split(/ (?!$)/).map((b) => yD(b, e));
    for (let b = 1; b < m.length; b++) {
      let x = m.slice(0, b).join(" ");
      i(x, !0), p[x] || (p[x] = {
        preventDefault: !0,
        stopPropagation: !1,
        run: [(w) => {
          let j = Ra = { view: w, prefix: x, scope: s };
          return setTimeout(() => {
            Ra == j && (Ra = null);
          }, jD), !0;
        }]
      });
    }
    let v = m.join(" ");
    i(v, !1);
    let g = p[v] || (p[v] = {
      preventDefault: !1,
      stopPropagation: !1,
      run: ((h = (d = p._any) === null || d === void 0 ? void 0 : d.run) === null || h === void 0 ? void 0 : h.slice()) || []
    });
    l && g.run.push(l), u && (g.preventDefault = !0), f && (g.stopPropagation = !0);
  };
  for (let s of t) {
    let a = s.scope ? s.scope.split(" ") : ["editor"];
    if (s.any)
      for (let u of a) {
        let f = n[u] || (n[u] = /* @__PURE__ */ Object.create(null));
        f._any || (f._any = { preventDefault: !1, stopPropagation: !1, run: [] });
        let { any: d } = s;
        for (let h in f)
          f[h].run.push((p) => d(p, J0));
      }
    let l = s[e] || s.key;
    if (l)
      for (let u of a)
        o(u, l, s.run, s.preventDefault, s.stopPropagation), s.shift && o(u, "Shift-" + l, s.shift, s.preventDefault, s.stopPropagation);
  }
  return n;
}
let J0 = null;
function w4(t, e, n, r) {
  J0 = e;
  let i = W9(e), o = Yi(i, 0), s = ws(o) == i.length && i != " ", a = "", l = !1, u = !1, f = !1;
  Ra && Ra.view == n && Ra.scope == r && (a = Ra.prefix + " ", c4.indexOf(e.keyCode) < 0 && (u = !0, Ra = null));
  let d = /* @__PURE__ */ new Set(), h = (g) => {
    if (g) {
      for (let b of g.run)
        if (!d.has(b) && (d.add(b), b(n)))
          return g.stopPropagation && (f = !0), !0;
      g.preventDefault && (g.stopPropagation && (f = !0), u = !0);
    }
    return !1;
  }, p = t[r], m, v;
  return p && (h(p[a + Th(i, e, !s)]) ? l = !0 : s && (e.altKey || e.metaKey || e.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
  !(st.windows && e.ctrlKey && e.altKey) && // Alt-combinations on macOS tend to be typed characters
  !(st.mac && e.altKey && !e.ctrlKey) && (m = tl[e.keyCode]) && m != i ? (h(p[a + Th(m, e, !0)]) || e.shiftKey && (v = Ef[e.keyCode]) != i && v != m && h(p[a + Th(v, e, !1)])) && (l = !0) : s && e.shiftKey && h(p[a + Th(i, e, !0)]) && (l = !0), !l && h(p._any) && (l = !0)), u && (l = !0), l && f && e.stopPropagation(), J0 = null, l;
}
class fd {
  /**
  Create a marker with the given class and dimensions. If `width`
  is null, the DOM element will get no width style.
  */
  constructor(e, n, r, i, o) {
    this.className = e, this.left = n, this.top = r, this.width = i, this.height = o;
  }
  draw() {
    let e = document.createElement("div");
    return e.className = this.className, this.adjust(e), e;
  }
  update(e, n) {
    return n.className != this.className ? !1 : (this.adjust(e), !0);
  }
  adjust(e) {
    e.style.left = this.left + "px", e.style.top = this.top + "px", this.width != null && (e.style.width = this.width + "px"), e.style.height = this.height + "px";
  }
  eq(e) {
    return this.left == e.left && this.top == e.top && this.width == e.width && this.height == e.height && this.className == e.className;
  }
  /**
  Create a set of rectangles for the given selection range,
  assigning them theclass`className`. Will create a single
  rectangle for empty ranges, and a set of selection-style
  rectangles covering the range's content (in a bidi-aware
  way) for non-empty ones.
  */
  static forRange(e, n, r) {
    if (r.empty) {
      let i = e.coordsAtPos(r.head, r.assoc || 1);
      if (!i)
        return [];
      let o = j4(e);
      return [new fd(n, i.left - o.left, i.top - o.top, null, i.bottom - i.top)];
    } else
      return SD(e, n, r);
  }
}
function j4(t) {
  let e = t.scrollDOM.getBoundingClientRect();
  return { left: (t.textDirection == Nr.LTR ? e.left : e.right - t.scrollDOM.clientWidth * t.scaleX) - t.scrollDOM.scrollLeft * t.scaleX, top: e.top - t.scrollDOM.scrollTop * t.scaleY };
}
function Kj(t, e, n, r) {
  let i = t.coordsAtPos(e, n * 2);
  if (!i)
    return r;
  let o = t.dom.getBoundingClientRect(), s = (i.top + i.bottom) / 2, a = t.posAtCoords({ x: o.left + 1, y: s }), l = t.posAtCoords({ x: o.right - 1, y: s });
  return a == null || l == null ? r : { from: Math.max(r.from, Math.min(a, l)), to: Math.min(r.to, Math.max(a, l)) };
}
function SD(t, e, n) {
  if (n.to <= t.viewport.from || n.from >= t.viewport.to)
    return [];
  let r = Math.max(n.from, t.viewport.from), i = Math.min(n.to, t.viewport.to), o = t.textDirection == Nr.LTR, s = t.contentDOM, a = s.getBoundingClientRect(), l = j4(t), u = s.querySelector(".cm-line"), f = u && window.getComputedStyle(u), d = a.left + (f ? parseInt(f.paddingLeft) + Math.min(0, parseInt(f.textIndent)) : 0), h = a.right - (f ? parseInt(f.paddingRight) : 0), p = V0(t, r, 1), m = V0(t, i, -1), v = p.type == Hi.Text ? p : null, g = m.type == Hi.Text ? m : null;
  if (v && (t.lineWrapping || p.widgetLineBreaks) && (v = Kj(t, r, 1, v)), g && (t.lineWrapping || m.widgetLineBreaks) && (g = Kj(t, i, -1, g)), v && g && v.from == g.from && v.to == g.to)
    return x(w(n.from, n.to, v));
  {
    let y = v ? w(n.from, null, v) : j(p, !1), k = g ? w(null, n.to, g) : j(m, !0), S = [];
    return (v || p).to < (g || m).from - (v && g ? 1 : 0) || p.widgetLineBreaks > 1 && y.bottom + t.defaultLineHeight / 2 < k.top ? S.push(b(d, y.bottom, h, k.top)) : y.bottom < k.top && t.elementAtHeight((y.bottom + k.top) / 2).type == Hi.Text && (y.bottom = k.top = (y.bottom + k.top) / 2), x(y).concat(S).concat(x(k));
  }
  function b(y, k, S, T) {
    return new fd(e, y - l.left, k - l.top, S - y, T - k);
  }
  function x({ top: y, bottom: k, horizontal: S }) {
    let T = [];
    for (let M = 0; M < S.length; M += 2)
      T.push(b(S[M], y, S[M + 1], k));
    return T;
  }
  function w(y, k, S) {
    let T = 1e9, M = -1e9, N = [];
    function z(ce, te, we, Ee, ae) {
      let re = t.coordsAtPos(ce, ce == S.to ? -2 : 2), G = t.coordsAtPos(we, we == S.from ? 2 : -2);
      !re || !G || (T = Math.min(re.top, G.top, T), M = Math.max(re.bottom, G.bottom, M), ae == Nr.LTR ? N.push(o && te ? d : re.left, o && Ee ? h : G.right) : N.push(!o && Ee ? d : G.left, !o && te ? h : re.right));
    }
    let L = y ?? S.from, W = k ?? S.to;
    for (let ce of t.visibleRanges)
      if (ce.to > L && ce.from < W)
        for (let te = Math.max(ce.from, L), we = Math.min(ce.to, W); ; ) {
          let Ee = t.state.doc.lineAt(te);
          for (let ae of t.bidiSpans(Ee)) {
            let re = ae.from + Ee.from, G = ae.to + Ee.from;
            if (re >= we)
              break;
            G > te && z(Math.max(re, te), y == null && re <= L, Math.min(G, we), k == null && G >= W, ae.dir);
          }
          if (te = Ee.to + 1, te >= we)
            break;
        }
    return N.length == 0 && z(L, y == null, W, k == null, t.textDirection), { top: T, bottom: M, horizontal: N };
  }
  function j(y, k) {
    let S = a.top + (k ? y.top : y.bottom);
    return { top: S, bottom: S, horizontal: [] };
  }
}
function CD(t, e) {
  return t.constructor == e.constructor && t.eq(e);
}
class OD {
  constructor(e, n) {
    this.view = e, this.layer = n, this.drawn = [], this.scaleX = 1, this.scaleY = 1, this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) }, this.dom = e.scrollDOM.appendChild(document.createElement("div")), this.dom.classList.add("cm-layer"), n.above && this.dom.classList.add("cm-layer-above"), n.class && this.dom.classList.add(n.class), this.scale(), this.dom.setAttribute("aria-hidden", "true"), this.setOrder(e.state), e.requestMeasure(this.measureReq), n.mount && n.mount(this.dom, e);
  }
  update(e) {
    e.startState.facet(gp) != e.state.facet(gp) && this.setOrder(e.state), (this.layer.update(e, this.dom) || e.geometryChanged) && (this.scale(), e.view.requestMeasure(this.measureReq));
  }
  docViewUpdate(e) {
    this.layer.updateOnDocViewUpdate !== !1 && e.requestMeasure(this.measureReq);
  }
  setOrder(e) {
    let n = 0, r = e.facet(gp);
    for (; n < r.length && r[n] != this.layer; )
      n++;
    this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - n);
  }
  measure() {
    return this.layer.markers(this.view);
  }
  scale() {
    let { scaleX: e, scaleY: n } = this.view;
    (e != this.scaleX || n != this.scaleY) && (this.scaleX = e, this.scaleY = n, this.dom.style.transform = `scale(${1 / e}, ${1 / n})`);
  }
  draw(e) {
    if (e.length != this.drawn.length || e.some((n, r) => !CD(n, this.drawn[r]))) {
      let n = this.dom.firstChild, r = 0;
      for (let i of e)
        i.update && n && i.constructor && this.drawn[r].constructor && i.update(n, this.drawn[r]) ? (n = n.nextSibling, r++) : this.dom.insertBefore(i.draw(), n);
      for (; n; ) {
        let i = n.nextSibling;
        n.remove(), n = i;
      }
      this.drawn = e;
    }
  }
  destroy() {
    this.layer.destroy && this.layer.destroy(this.dom, this.view), this.dom.remove();
  }
}
const gp = /* @__PURE__ */ lt.define();
function k4(t) {
  return [
    Gr.define((e) => new OD(e, t)),
    gp.of(t)
  ];
}
const Tf = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      cursorBlinkRate: 1200,
      drawRangeCursor: !0
    }, {
      cursorBlinkRate: (e, n) => Math.min(e, n),
      drawRangeCursor: (e, n) => e || n
    });
  }
});
function ED(t = {}) {
  return [
    Tf.of(t),
    _D,
    AD,
    MD,
    XO.of(!0)
  ];
}
function S4(t) {
  return t.startState.facet(Tf) != t.state.facet(Tf);
}
const _D = /* @__PURE__ */ k4({
  above: !0,
  markers(t) {
    let { state: e } = t, n = e.facet(Tf), r = [];
    for (let i of e.selection.ranges) {
      let o = i == e.selection.main;
      if (i.empty || n.drawRangeCursor) {
        let s = o ? "cm-cursor cm-cursor-primary" : "cm-cursor cm-cursor-secondary", a = i.empty ? i : Me.cursor(i.head, i.head > i.anchor ? -1 : 1);
        for (let l of fd.forRange(t, s, a))
          r.push(l);
      }
    }
    return r;
  },
  update(t, e) {
    t.transactions.some((r) => r.selection) && (e.style.animationName = e.style.animationName == "cm-blink" ? "cm-blink2" : "cm-blink");
    let n = S4(t);
    return n && Gj(t.state, e), t.docChanged || t.selectionSet || n;
  },
  mount(t, e) {
    Gj(e.state, t);
  },
  class: "cm-cursorLayer"
});
function Gj(t, e) {
  e.style.animationDuration = t.facet(Tf).cursorBlinkRate + "ms";
}
const AD = /* @__PURE__ */ k4({
  above: !1,
  markers(t) {
    return t.state.selection.ranges.map((e) => e.empty ? [] : fd.forRange(t, "cm-selectionBackground", e)).reduce((e, n) => e.concat(n));
  },
  update(t, e) {
    return t.docChanged || t.selectionSet || t.viewportChanged || S4(t);
  },
  class: "cm-selectionLayer"
}), MD = /* @__PURE__ */ lc.highest(/* @__PURE__ */ nt.theme({
  ".cm-line": {
    "& ::selection, &::selection": { backgroundColor: "transparent !important" },
    caretColor: "transparent !important"
  },
  ".cm-content": {
    caretColor: "transparent !important",
    "& :focus": {
      caretColor: "initial !important",
      "&::selection, & ::selection": {
        backgroundColor: "Highlight !important"
      }
    }
  }
})), C4 = /* @__PURE__ */ vn.define({
  map(t, e) {
    return t == null ? null : e.mapPos(t);
  }
}), tf = /* @__PURE__ */ wi.define({
  create() {
    return null;
  },
  update(t, e) {
    return t != null && (t = e.changes.mapPos(t)), e.effects.reduce((n, r) => r.is(C4) ? r.value : n, t);
  }
}), TD = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.cursor = null, this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };
  }
  update(t) {
    var e;
    let n = t.state.field(tf);
    n == null ? this.cursor != null && ((e = this.cursor) === null || e === void 0 || e.remove(), this.cursor = null) : (this.cursor || (this.cursor = this.view.scrollDOM.appendChild(document.createElement("div")), this.cursor.className = "cm-dropCursor"), (t.startState.field(tf) != n || t.docChanged || t.geometryChanged) && this.view.requestMeasure(this.measureReq));
  }
  readPos() {
    let { view: t } = this, e = t.state.field(tf), n = e != null && t.coordsAtPos(e);
    if (!n)
      return null;
    let r = t.scrollDOM.getBoundingClientRect();
    return {
      left: n.left - r.left + t.scrollDOM.scrollLeft * t.scaleX,
      top: n.top - r.top + t.scrollDOM.scrollTop * t.scaleY,
      height: n.bottom - n.top
    };
  }
  drawCursor(t) {
    if (this.cursor) {
      let { scaleX: e, scaleY: n } = this.view;
      t ? (this.cursor.style.left = t.left / e + "px", this.cursor.style.top = t.top / n + "px", this.cursor.style.height = t.height / n + "px") : this.cursor.style.left = "-100000px";
    }
  }
  destroy() {
    this.cursor && this.cursor.remove();
  }
  setDropPos(t) {
    this.view.state.field(tf) != t && this.view.dispatch({ effects: C4.of(t) });
  }
}, {
  eventObservers: {
    dragover(t) {
      this.setDropPos(this.view.posAtCoords({ x: t.clientX, y: t.clientY }));
    },
    dragleave(t) {
      (t.target == this.view.contentDOM || !this.view.contentDOM.contains(t.relatedTarget)) && this.setDropPos(null);
    },
    dragend() {
      this.setDropPos(null);
    },
    drop() {
      this.setDropPos(null);
    }
  }
});
function $D() {
  return [tf, TD];
}
function Jj(t, e, n, r, i) {
  e.lastIndex = 0;
  for (let o = t.iterRange(n, r), s = n, a; !o.next().done; s += o.value.length)
    if (!o.lineBreak)
      for (; a = e.exec(o.value); )
        i(s + a.index, a);
}
function PD(t, e) {
  let n = t.visibleRanges;
  if (n.length == 1 && n[0].from == t.viewport.from && n[0].to == t.viewport.to)
    return n;
  let r = [];
  for (let { from: i, to: o } of n)
    i = Math.max(t.state.doc.lineAt(i).from, i - e), o = Math.min(t.state.doc.lineAt(o).to, o + e), r.length && r[r.length - 1].to >= i ? r[r.length - 1].to = o : r.push({ from: i, to: o });
  return r;
}
class RD {
  /**
  Create a decorator.
  */
  constructor(e) {
    const { regexp: n, decoration: r, decorate: i, boundary: o, maxLength: s = 1e3 } = e;
    if (!n.global)
      throw new RangeError("The regular expression given to MatchDecorator should have its 'g' flag set");
    if (this.regexp = n, i)
      this.addMatch = (a, l, u, f) => i(f, u, u + a[0].length, a, l);
    else if (typeof r == "function")
      this.addMatch = (a, l, u, f) => {
        let d = r(a, l, u);
        d && f(u, u + a[0].length, d);
      };
    else if (r)
      this.addMatch = (a, l, u, f) => f(u, u + a[0].length, r);
    else
      throw new RangeError("Either 'decorate' or 'decoration' should be provided to MatchDecorator");
    this.boundary = o, this.maxLength = s;
  }
  /**
  Compute the full set of decorations for matches in the given
  view's viewport. You'll want to call this when initializing your
  plugin.
  */
  createDeco(e) {
    let n = new rs(), r = n.add.bind(n);
    for (let { from: i, to: o } of PD(e, this.maxLength))
      Jj(e.state.doc, this.regexp, i, o, (s, a) => this.addMatch(a, e, s, r));
    return n.finish();
  }
  /**
  Update a set of decorations for a view update. `deco` _must_ be
  the set of decorations produced by _this_ `MatchDecorator` for
  the view state before the update.
  */
  updateDeco(e, n) {
    let r = 1e9, i = -1;
    return e.docChanged && e.changes.iterChanges((o, s, a, l) => {
      l >= e.view.viewport.from && a <= e.view.viewport.to && (r = Math.min(a, r), i = Math.max(l, i));
    }), e.viewportMoved || i - r > 1e3 ? this.createDeco(e.view) : i > -1 ? this.updateRange(e.view, n.map(e.changes), r, i) : n;
  }
  updateRange(e, n, r, i) {
    for (let o of e.visibleRanges) {
      let s = Math.max(o.from, r), a = Math.min(o.to, i);
      if (a >= s) {
        let l = e.state.doc.lineAt(s), u = l.to < a ? e.state.doc.lineAt(a) : l, f = Math.max(o.from, l.from), d = Math.min(o.to, u.to);
        if (this.boundary) {
          for (; s > l.from; s--)
            if (this.boundary.test(l.text[s - 1 - l.from])) {
              f = s;
              break;
            }
          for (; a < u.to; a++)
            if (this.boundary.test(u.text[a - u.from])) {
              d = a;
              break;
            }
        }
        let h = [], p, m = (v, g, b) => h.push(b.range(v, g));
        if (l == u)
          for (this.regexp.lastIndex = f - l.from; (p = this.regexp.exec(l.text)) && p.index < d - l.from; )
            this.addMatch(p, e, p.index + l.from, m);
        else
          Jj(e.state.doc, this.regexp, f, d, (v, g) => this.addMatch(g, e, v, m));
        n = n.update({ filterFrom: f, filterTo: d, filter: (v, g) => v < f || g > d, add: h });
      }
    }
    return n;
  }
}
const Y0 = /x/.unicode != null ? "gu" : "g", ND = /* @__PURE__ */ new RegExp(`[\0-\b
--­؜​‎‏\u2028\u2029‭‮⁦⁧⁩\uFEFF￹-￼]`, Y0), DD = {
  0: "null",
  7: "bell",
  8: "backspace",
  10: "newline",
  11: "vertical tab",
  13: "carriage return",
  27: "escape",
  8203: "zero width space",
  8204: "zero width non-joiner",
  8205: "zero width joiner",
  8206: "left-to-right mark",
  8207: "right-to-left mark",
  8232: "line separator",
  8237: "left-to-right override",
  8238: "right-to-left override",
  8294: "left-to-right isolate",
  8295: "right-to-left isolate",
  8297: "pop directional isolate",
  8233: "paragraph separator",
  65279: "zero width no-break space",
  65532: "object replacement"
};
let dv = null;
function ID() {
  var t;
  if (dv == null && typeof document < "u" && document.body) {
    let e = document.body.style;
    dv = ((t = e.tabSize) !== null && t !== void 0 ? t : e.MozTabSize) != null;
  }
  return dv || !1;
}
const vp = /* @__PURE__ */ lt.define({
  combine(t) {
    let e = us(t, {
      render: null,
      specialChars: ND,
      addSpecialChars: null
    });
    return (e.replaceTabs = !ID()) && (e.specialChars = new RegExp("	|" + e.specialChars.source, Y0)), e.addSpecialChars && (e.specialChars = new RegExp(e.specialChars.source + "|" + e.addSpecialChars.source, Y0)), e;
  }
});
function zD(t = {}) {
  return [vp.of(t), LD()];
}
let Yj = null;
function LD() {
  return Yj || (Yj = Gr.fromClass(class {
    constructor(t) {
      this.view = t, this.decorations = Bt.none, this.decorationCache = /* @__PURE__ */ Object.create(null), this.decorator = this.makeDecorator(t.state.facet(vp)), this.decorations = this.decorator.createDeco(t);
    }
    makeDecorator(t) {
      return new RD({
        regexp: t.specialChars,
        decoration: (e, n, r) => {
          let { doc: i } = n.state, o = Yi(e[0], 0);
          if (o == 9) {
            let s = i.lineAt(r), a = n.state.tabSize, l = xu(s.text, a, r - s.from);
            return Bt.replace({
              widget: new UD((a - l % a) * this.view.defaultCharacterWidth / this.view.scaleX)
            });
          }
          return this.decorationCache[o] || (this.decorationCache[o] = Bt.replace({ widget: new FD(t, o) }));
        },
        boundary: t.replaceTabs ? void 0 : /[^]/
      });
    }
    update(t) {
      let e = t.state.facet(vp);
      t.startState.facet(vp) != e ? (this.decorator = this.makeDecorator(e), this.decorations = this.decorator.createDeco(t.view)) : this.decorations = this.decorator.updateDeco(t, this.decorations);
    }
  }, {
    decorations: (t) => t.decorations
  }));
}
const BD = "•";
function qD(t) {
  return t >= 32 ? BD : t == 10 ? "␤" : String.fromCharCode(9216 + t);
}
class FD extends pl {
  constructor(e, n) {
    super(), this.options = e, this.code = n;
  }
  eq(e) {
    return e.code == this.code;
  }
  toDOM(e) {
    let n = qD(this.code), r = e.state.phrase("Control character") + " " + (DD[this.code] || "0x" + this.code.toString(16)), i = this.options.render && this.options.render(this.code, r, n);
    if (i)
      return i;
    let o = document.createElement("span");
    return o.textContent = n, o.title = r, o.setAttribute("aria-label", r), o.className = "cm-specialChar", o;
  }
  ignoreEvent() {
    return !1;
  }
}
class UD extends pl {
  constructor(e) {
    super(), this.width = e;
  }
  eq(e) {
    return e.width == this.width;
  }
  toDOM() {
    let e = document.createElement("span");
    return e.textContent = "	", e.className = "cm-tab", e.style.width = this.width + "px", e;
  }
  ignoreEvent() {
    return !1;
  }
}
function VD() {
  return HD;
}
const WD = /* @__PURE__ */ Bt.line({ class: "cm-activeLine" }), HD = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.decorations = this.getDeco(t);
  }
  update(t) {
    (t.docChanged || t.selectionSet) && (this.decorations = this.getDeco(t.view));
  }
  getDeco(t) {
    let e = -1, n = [];
    for (let r of t.state.selection.ranges) {
      let i = t.lineBlockAt(r.head);
      i.from > e && (n.push(WD.range(i.from)), e = i.from);
    }
    return Bt.set(n);
  }
}, {
  decorations: (t) => t.decorations
}), Q0 = 2e3;
function KD(t, e, n) {
  let r = Math.min(e.line, n.line), i = Math.max(e.line, n.line), o = [];
  if (e.off > Q0 || n.off > Q0 || e.col < 0 || n.col < 0) {
    let s = Math.min(e.off, n.off), a = Math.max(e.off, n.off);
    for (let l = r; l <= i; l++) {
      let u = t.doc.line(l);
      u.length <= a && o.push(Me.range(u.from + s, u.to + a));
    }
  } else {
    let s = Math.min(e.col, n.col), a = Math.max(e.col, n.col);
    for (let l = r; l <= i; l++) {
      let u = t.doc.line(l), f = A0(u.text, s, t.tabSize, !0);
      if (f < 0)
        o.push(Me.cursor(u.to));
      else {
        let d = A0(u.text, a, t.tabSize);
        o.push(Me.range(u.from + f, u.from + d));
      }
    }
  }
  return o;
}
function GD(t, e) {
  let n = t.coordsAtPos(t.viewport.from);
  return n ? Math.round(Math.abs((n.left - e) / t.defaultCharacterWidth)) : -1;
}
function Qj(t, e) {
  let n = t.posAtCoords({ x: e.clientX, y: e.clientY }, !1), r = t.state.doc.lineAt(n), i = n - r.from, o = i > Q0 ? -1 : i == r.length ? GD(t, e.clientX) : xu(r.text, t.state.tabSize, n - r.from);
  return { line: r.number, col: o, off: i };
}
function JD(t, e) {
  let n = Qj(t, e), r = t.state.selection;
  return n ? {
    update(i) {
      if (i.docChanged) {
        let o = i.changes.mapPos(i.startState.doc.line(n.line).from), s = i.state.doc.lineAt(o);
        n = { line: s.number, col: n.col, off: Math.min(n.off, s.length) }, r = r.map(i.changes);
      }
    },
    get(i, o, s) {
      let a = Qj(t, i);
      if (!a)
        return r;
      let l = KD(t.state, n, a);
      return l.length ? s ? Me.create(l.concat(r.ranges)) : Me.create(l) : r;
    }
  } : null;
}
function YD(t) {
  let e = ((n) => n.altKey && n.button == 0);
  return nt.mouseSelectionStyle.of((n, r) => e(r) ? JD(n, r) : null);
}
const QD = {
  Alt: [18, (t) => !!t.altKey],
  Control: [17, (t) => !!t.ctrlKey],
  Shift: [16, (t) => !!t.shiftKey],
  Meta: [91, (t) => !!t.metaKey]
}, XD = { style: "cursor: crosshair" };
function ZD(t = {}) {
  let [e, n] = QD[t.key || "Alt"], r = Gr.fromClass(class {
    constructor(i) {
      this.view = i, this.isDown = !1;
    }
    set(i) {
      this.isDown != i && (this.isDown = i, this.view.update([]));
    }
  }, {
    eventObservers: {
      keydown(i) {
        this.set(i.keyCode == e || n(i));
      },
      keyup(i) {
        (i.keyCode == e || !n(i)) && this.set(!1);
      },
      mousemove(i) {
        this.set(n(i));
      }
    }
  });
  return [
    r,
    nt.contentAttributes.of((i) => {
      var o;
      return !((o = i.plugin(r)) === null || o === void 0) && o.isDown ? XD : null;
    })
  ];
}
const Fu = "-10000px";
class O4 {
  constructor(e, n, r, i) {
    this.facet = n, this.createTooltipView = r, this.removeTooltipView = i, this.input = e.state.facet(n), this.tooltips = this.input.filter((s) => s);
    let o = null;
    this.tooltipViews = this.tooltips.map((s) => o = r(s, o));
  }
  update(e, n) {
    var r;
    let i = e.state.facet(this.facet), o = i.filter((l) => l);
    if (i === this.input) {
      for (let l of this.tooltipViews)
        l.update && l.update(e);
      return !1;
    }
    let s = [], a = n ? [] : null;
    for (let l = 0; l < o.length; l++) {
      let u = o[l], f = -1;
      if (u) {
        for (let d = 0; d < this.tooltips.length; d++) {
          let h = this.tooltips[d];
          h && h.create == u.create && (f = d);
        }
        if (f < 0)
          s[l] = this.createTooltipView(u, l ? s[l - 1] : null), a && (a[l] = !!u.above);
        else {
          let d = s[l] = this.tooltipViews[f];
          a && (a[l] = n[f]), d.update && d.update(e);
        }
      }
    }
    for (let l of this.tooltipViews)
      s.indexOf(l) < 0 && (this.removeTooltipView(l), (r = l.destroy) === null || r === void 0 || r.call(l));
    return n && (a.forEach((l, u) => n[u] = l), n.length = a.length), this.input = i, this.tooltips = o, this.tooltipViews = s, !0;
  }
}
function eI(t) {
  let e = t.dom.ownerDocument.documentElement;
  return { top: 0, left: 0, bottom: e.clientHeight, right: e.clientWidth };
}
const hv = /* @__PURE__ */ lt.define({
  combine: (t) => {
    var e, n, r;
    return {
      position: st.ios ? "absolute" : ((e = t.find((i) => i.position)) === null || e === void 0 ? void 0 : e.position) || "fixed",
      parent: ((n = t.find((i) => i.parent)) === null || n === void 0 ? void 0 : n.parent) || null,
      tooltipSpace: ((r = t.find((i) => i.tooltipSpace)) === null || r === void 0 ? void 0 : r.tooltipSpace) || eI
    };
  }
}), Xj = /* @__PURE__ */ new WeakMap(), R1 = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.above = [], this.inView = !0, this.madeAbsolute = !1, this.lastTransaction = 0, this.measureTimeout = -1;
    let e = t.state.facet(hv);
    this.position = e.position, this.parent = e.parent, this.classes = t.themeClasses, this.createContainer(), this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this }, this.resizeObserver = typeof ResizeObserver == "function" ? new ResizeObserver(() => this.measureSoon()) : null, this.manager = new O4(t, ng, (n, r) => this.createTooltip(n, r), (n) => {
      this.resizeObserver && this.resizeObserver.unobserve(n.dom), n.dom.remove();
    }), this.above = this.manager.tooltips.map((n) => !!n.above), this.intersectionObserver = typeof IntersectionObserver == "function" ? new IntersectionObserver((n) => {
      Date.now() > this.lastTransaction - 50 && n.length > 0 && n[n.length - 1].intersectionRatio < 1 && this.measureSoon();
    }, { threshold: [1] }) : null, this.observeIntersection(), t.win.addEventListener("resize", this.measureSoon = this.measureSoon.bind(this)), this.maybeMeasure();
  }
  createContainer() {
    this.parent ? (this.container = document.createElement("div"), this.container.style.position = "relative", this.container.className = this.view.themeClasses, this.parent.appendChild(this.container)) : this.container = this.view.dom;
  }
  observeIntersection() {
    if (this.intersectionObserver) {
      this.intersectionObserver.disconnect();
      for (let t of this.manager.tooltipViews)
        this.intersectionObserver.observe(t.dom);
    }
  }
  measureSoon() {
    this.measureTimeout < 0 && (this.measureTimeout = setTimeout(() => {
      this.measureTimeout = -1, this.maybeMeasure();
    }, 50));
  }
  update(t) {
    t.transactions.length && (this.lastTransaction = Date.now());
    let e = this.manager.update(t, this.above);
    e && this.observeIntersection();
    let n = e || t.geometryChanged, r = t.state.facet(hv);
    if (r.position != this.position && !this.madeAbsolute) {
      this.position = r.position;
      for (let i of this.manager.tooltipViews)
        i.dom.style.position = this.position;
      n = !0;
    }
    if (r.parent != this.parent) {
      this.parent && this.container.remove(), this.parent = r.parent, this.createContainer();
      for (let i of this.manager.tooltipViews)
        this.container.appendChild(i.dom);
      n = !0;
    } else this.parent && this.view.themeClasses != this.classes && (this.classes = this.container.className = this.view.themeClasses);
    n && this.maybeMeasure();
  }
  createTooltip(t, e) {
    let n = t.create(this.view), r = e ? e.dom : null;
    if (n.dom.classList.add("cm-tooltip"), t.arrow && !n.dom.querySelector(".cm-tooltip > .cm-tooltip-arrow")) {
      let i = document.createElement("div");
      i.className = "cm-tooltip-arrow", n.dom.appendChild(i);
    }
    return n.dom.style.position = this.position, n.dom.style.top = Fu, n.dom.style.left = "0px", this.container.insertBefore(n.dom, r), n.mount && n.mount(this.view), this.resizeObserver && this.resizeObserver.observe(n.dom), n;
  }
  destroy() {
    var t, e, n;
    this.view.win.removeEventListener("resize", this.measureSoon);
    for (let r of this.manager.tooltipViews)
      r.dom.remove(), (t = r.destroy) === null || t === void 0 || t.call(r);
    this.parent && this.container.remove(), (e = this.resizeObserver) === null || e === void 0 || e.disconnect(), (n = this.intersectionObserver) === null || n === void 0 || n.disconnect(), clearTimeout(this.measureTimeout);
  }
  readMeasure() {
    let t = 1, e = 1, n = !1;
    if (this.position == "fixed" && this.manager.tooltipViews.length) {
      let { dom: o } = this.manager.tooltipViews[0];
      if (st.gecko)
        n = o.offsetParent != this.container.ownerDocument.body;
      else if (o.style.top == Fu && o.style.left == "0px") {
        let s = o.getBoundingClientRect();
        n = Math.abs(s.top + 1e4) > 1 || Math.abs(s.left) > 1;
      }
    }
    if (n || this.position == "absolute")
      if (this.parent) {
        let o = this.parent.getBoundingClientRect();
        o.width && o.height && (t = o.width / this.parent.offsetWidth, e = o.height / this.parent.offsetHeight);
      } else
        ({ scaleX: t, scaleY: e } = this.view.viewState);
    let r = this.view.scrollDOM.getBoundingClientRect(), i = M1(this.view);
    return {
      visible: {
        left: r.left + i.left,
        top: r.top + i.top,
        right: r.right - i.right,
        bottom: r.bottom - i.bottom
      },
      parent: this.parent ? this.container.getBoundingClientRect() : this.view.dom.getBoundingClientRect(),
      pos: this.manager.tooltips.map((o, s) => {
        let a = this.manager.tooltipViews[s];
        return a.getCoords ? a.getCoords(o.pos) : this.view.coordsAtPos(o.pos);
      }),
      size: this.manager.tooltipViews.map(({ dom: o }) => o.getBoundingClientRect()),
      space: this.view.state.facet(hv).tooltipSpace(this.view),
      scaleX: t,
      scaleY: e,
      makeAbsolute: n
    };
  }
  writeMeasure(t) {
    var e;
    if (t.makeAbsolute) {
      this.madeAbsolute = !0, this.position = "absolute";
      for (let a of this.manager.tooltipViews)
        a.dom.style.position = "absolute";
    }
    let { visible: n, space: r, scaleX: i, scaleY: o } = t, s = [];
    for (let a = 0; a < this.manager.tooltips.length; a++) {
      let l = this.manager.tooltips[a], u = this.manager.tooltipViews[a], { dom: f } = u, d = t.pos[a], h = t.size[a];
      if (!d || l.clip !== !1 && (d.bottom <= Math.max(n.top, r.top) || d.top >= Math.min(n.bottom, r.bottom) || d.right < Math.max(n.left, r.left) - 0.1 || d.left > Math.min(n.right, r.right) + 0.1)) {
        f.style.top = Fu;
        continue;
      }
      let p = l.arrow ? u.dom.querySelector(".cm-tooltip-arrow") : null, m = p ? 7 : 0, v = h.right - h.left, g = (e = Xj.get(u)) !== null && e !== void 0 ? e : h.bottom - h.top, b = u.offset || nI, x = this.view.textDirection == Nr.LTR, w = h.width > r.right - r.left ? x ? r.left : r.right - h.width : x ? Math.max(r.left, Math.min(d.left - (p ? 14 : 0) + b.x, r.right - v)) : Math.min(Math.max(r.left, d.left - v + (p ? 14 : 0) - b.x), r.right - v), j = this.above[a];
      !l.strictSide && (j ? d.top - g - m - b.y < r.top : d.bottom + g + m + b.y > r.bottom) && j == r.bottom - d.bottom > d.top - r.top && (j = this.above[a] = !j);
      let y = (j ? d.top - r.top : r.bottom - d.bottom) - m;
      if (y < g && u.resize !== !1) {
        if (y < this.view.defaultLineHeight) {
          f.style.top = Fu;
          continue;
        }
        Xj.set(u, g), f.style.height = (g = y) / o + "px";
      } else f.style.height && (f.style.height = "");
      let k = j ? d.top - g - m - b.y : d.bottom + m + b.y, S = w + v;
      if (u.overlap !== !0)
        for (let T of s)
          T.left < S && T.right > w && T.top < k + g && T.bottom > k && (k = j ? T.top - g - 2 - m : T.bottom + m + 2);
      if (this.position == "absolute" ? (f.style.top = (k - t.parent.top) / o + "px", Zj(f, (w - t.parent.left) / i)) : (f.style.top = k / o + "px", Zj(f, w / i)), p) {
        let T = d.left + (x ? b.x : -b.x) - (w + 14 - 7);
        p.style.left = T / i + "px";
      }
      u.overlap !== !0 && s.push({ left: w, top: k, right: S, bottom: k + g }), f.classList.toggle("cm-tooltip-above", j), f.classList.toggle("cm-tooltip-below", !j), u.positioned && u.positioned(t.space);
    }
  }
  maybeMeasure() {
    if (this.manager.tooltips.length && (this.view.inView && this.view.requestMeasure(this.measureReq), this.inView != this.view.inView && (this.inView = this.view.inView, !this.inView)))
      for (let t of this.manager.tooltipViews)
        t.dom.style.top = Fu;
  }
}, {
  eventObservers: {
    scroll() {
      this.maybeMeasure();
    }
  }
});
function Zj(t, e) {
  let n = parseInt(t.style.left, 10);
  (isNaN(n) || Math.abs(e - n) > 1) && (t.style.left = e + "px");
}
const tI = /* @__PURE__ */ nt.baseTheme({
  ".cm-tooltip": {
    zIndex: 500,
    boxSizing: "border-box"
  },
  "&light .cm-tooltip": {
    border: "1px solid #bbb",
    backgroundColor: "#f5f5f5"
  },
  "&light .cm-tooltip-section:not(:first-child)": {
    borderTop: "1px solid #bbb"
  },
  "&dark .cm-tooltip": {
    backgroundColor: "#333338",
    color: "white"
  },
  ".cm-tooltip-arrow": {
    height: "7px",
    width: "14px",
    position: "absolute",
    zIndex: -1,
    overflow: "hidden",
    "&:before, &:after": {
      content: "''",
      position: "absolute",
      width: 0,
      height: 0,
      borderLeft: "7px solid transparent",
      borderRight: "7px solid transparent"
    },
    ".cm-tooltip-above &": {
      bottom: "-7px",
      "&:before": {
        borderTop: "7px solid #bbb"
      },
      "&:after": {
        borderTop: "7px solid #f5f5f5",
        bottom: "1px"
      }
    },
    ".cm-tooltip-below &": {
      top: "-7px",
      "&:before": {
        borderBottom: "7px solid #bbb"
      },
      "&:after": {
        borderBottom: "7px solid #f5f5f5",
        top: "1px"
      }
    }
  },
  "&dark .cm-tooltip .cm-tooltip-arrow": {
    "&:before": {
      borderTopColor: "#333338",
      borderBottomColor: "#333338"
    },
    "&:after": {
      borderTopColor: "transparent",
      borderBottomColor: "transparent"
    }
  }
}), nI = { x: 0, y: 0 }, ng = /* @__PURE__ */ lt.define({
  enables: [R1, tI]
}), Gp = /* @__PURE__ */ lt.define({
  combine: (t) => t.reduce((e, n) => e.concat(n), [])
});
class rg {
  // Needs to be static so that host tooltip instances always match
  static create(e) {
    return new rg(e);
  }
  constructor(e) {
    this.view = e, this.mounted = !1, this.dom = document.createElement("div"), this.dom.classList.add("cm-tooltip-hover"), this.manager = new O4(e, Gp, (n, r) => this.createHostedView(n, r), (n) => n.dom.remove());
  }
  createHostedView(e, n) {
    let r = e.create(this.view);
    return r.dom.classList.add("cm-tooltip-section"), this.dom.insertBefore(r.dom, n ? n.dom.nextSibling : this.dom.firstChild), this.mounted && r.mount && r.mount(this.view), r;
  }
  mount(e) {
    for (let n of this.manager.tooltipViews)
      n.mount && n.mount(e);
    this.mounted = !0;
  }
  positioned(e) {
    for (let n of this.manager.tooltipViews)
      n.positioned && n.positioned(e);
  }
  update(e) {
    this.manager.update(e);
  }
  destroy() {
    var e;
    for (let n of this.manager.tooltipViews)
      (e = n.destroy) === null || e === void 0 || e.call(n);
  }
  passProp(e) {
    let n;
    for (let r of this.manager.tooltipViews) {
      let i = r[e];
      if (i !== void 0) {
        if (n === void 0)
          n = i;
        else if (n !== i)
          return;
      }
    }
    return n;
  }
  get offset() {
    return this.passProp("offset");
  }
  get getCoords() {
    return this.passProp("getCoords");
  }
  get overlap() {
    return this.passProp("overlap");
  }
  get resize() {
    return this.passProp("resize");
  }
}
const rI = /* @__PURE__ */ ng.compute([Gp], (t) => {
  let e = t.facet(Gp);
  return e.length === 0 ? null : {
    pos: Math.min(...e.map((n) => n.pos)),
    end: Math.max(...e.map((n) => {
      var r;
      return (r = n.end) !== null && r !== void 0 ? r : n.pos;
    })),
    create: rg.create,
    above: e[0].above,
    arrow: e.some((n) => n.arrow)
  };
});
class iI {
  constructor(e, n, r, i, o) {
    this.view = e, this.source = n, this.field = r, this.setHover = i, this.hoverTime = o, this.hoverTimeout = -1, this.restartTimeout = -1, this.pending = null, this.lastMove = { x: 0, y: 0, target: e.dom, time: 0 }, this.checkHover = this.checkHover.bind(this), e.dom.addEventListener("mouseleave", this.mouseleave = this.mouseleave.bind(this)), e.dom.addEventListener("mousemove", this.mousemove = this.mousemove.bind(this));
  }
  update() {
    this.pending && (this.pending = null, clearTimeout(this.restartTimeout), this.restartTimeout = setTimeout(() => this.startHover(), 20));
  }
  get active() {
    return this.view.state.field(this.field);
  }
  checkHover() {
    if (this.hoverTimeout = -1, this.active.length)
      return;
    let e = Date.now() - this.lastMove.time;
    e < this.hoverTime ? this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - e) : this.startHover();
  }
  startHover() {
    clearTimeout(this.restartTimeout);
    let { view: e, lastMove: n } = this, r = e.docView.nearest(n.target);
    if (!r)
      return;
    let i, o = 1;
    if (r instanceof Ia)
      i = r.posAtStart;
    else {
      if (i = e.posAtCoords(n), i == null)
        return;
      let a = e.coordsAtPos(i);
      if (!a || n.y < a.top || n.y > a.bottom || n.x < a.left - e.defaultCharacterWidth || n.x > a.right + e.defaultCharacterWidth)
        return;
      let l = e.bidiSpans(e.state.doc.lineAt(i)).find((f) => f.from <= i && f.to >= i), u = l && l.dir == Nr.RTL ? -1 : 1;
      o = n.x < a.left ? -u : u;
    }
    let s = this.source(e, i, o);
    if (s?.then) {
      let a = this.pending = { pos: i };
      s.then((l) => {
        this.pending == a && (this.pending = null, l && !(Array.isArray(l) && !l.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(l) ? l : [l]) }));
      }, (l) => Wi(e.state, l, "hover tooltip"));
    } else s && !(Array.isArray(s) && !s.length) && e.dispatch({ effects: this.setHover.of(Array.isArray(s) ? s : [s]) });
  }
  get tooltip() {
    let e = this.view.plugin(R1), n = e ? e.manager.tooltips.findIndex((r) => r.create == rg.create) : -1;
    return n > -1 ? e.manager.tooltipViews[n] : null;
  }
  mousemove(e) {
    var n, r;
    this.lastMove = { x: e.clientX, y: e.clientY, target: e.target, time: Date.now() }, this.hoverTimeout < 0 && (this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime));
    let { active: i, tooltip: o } = this;
    if (i.length && o && !oI(o.dom, e) || this.pending) {
      let { pos: s } = i[0] || this.pending, a = (r = (n = i[0]) === null || n === void 0 ? void 0 : n.end) !== null && r !== void 0 ? r : s;
      (s == a ? this.view.posAtCoords(this.lastMove) != s : !sI(this.view, s, a, e.clientX, e.clientY)) && (this.view.dispatch({ effects: this.setHover.of([]) }), this.pending = null);
    }
  }
  mouseleave(e) {
    clearTimeout(this.hoverTimeout), this.hoverTimeout = -1;
    let { active: n } = this;
    if (n.length) {
      let { tooltip: r } = this;
      r && r.dom.contains(e.relatedTarget) ? this.watchTooltipLeave(r.dom) : this.view.dispatch({ effects: this.setHover.of([]) });
    }
  }
  watchTooltipLeave(e) {
    let n = (r) => {
      e.removeEventListener("mouseleave", n), this.active.length && !this.view.dom.contains(r.relatedTarget) && this.view.dispatch({ effects: this.setHover.of([]) });
    };
    e.addEventListener("mouseleave", n);
  }
  destroy() {
    clearTimeout(this.hoverTimeout), this.view.dom.removeEventListener("mouseleave", this.mouseleave), this.view.dom.removeEventListener("mousemove", this.mousemove);
  }
}
const $h = 4;
function oI(t, e) {
  let { left: n, right: r, top: i, bottom: o } = t.getBoundingClientRect(), s;
  if (s = t.querySelector(".cm-tooltip-arrow")) {
    let a = s.getBoundingClientRect();
    i = Math.min(a.top, i), o = Math.max(a.bottom, o);
  }
  return e.clientX >= n - $h && e.clientX <= r + $h && e.clientY >= i - $h && e.clientY <= o + $h;
}
function sI(t, e, n, r, i, o) {
  let s = t.scrollDOM.getBoundingClientRect(), a = t.documentTop + t.documentPadding.top + t.contentHeight;
  if (s.left > r || s.right < r || s.top > i || Math.min(s.bottom, a) < i)
    return !1;
  let l = t.posAtCoords({ x: r, y: i }, !1);
  return l >= e && l <= n;
}
function aI(t, e = {}) {
  let n = vn.define(), r = wi.define({
    create() {
      return [];
    },
    update(i, o) {
      if (i.length && (e.hideOnChange && (o.docChanged || o.selection) ? i = [] : e.hideOn && (i = i.filter((s) => !e.hideOn(o, s))), o.docChanged)) {
        let s = [];
        for (let a of i) {
          let l = o.changes.mapPos(a.pos, -1, Vi.TrackDel);
          if (l != null) {
            let u = Object.assign(/* @__PURE__ */ Object.create(null), a);
            u.pos = l, u.end != null && (u.end = o.changes.mapPos(u.end)), s.push(u);
          }
        }
        i = s;
      }
      for (let s of o.effects)
        s.is(n) && (i = s.value), s.is(lI) && (i = []);
      return i;
    },
    provide: (i) => Gp.from(i)
  });
  return {
    active: r,
    extension: [
      r,
      Gr.define((i) => new iI(
        i,
        t,
        r,
        n,
        e.hoverTime || 300
        /* Hover.Time */
      )),
      rI
    ]
  };
}
function E4(t, e) {
  let n = t.plugin(R1);
  if (!n)
    return null;
  let r = n.manager.tooltips.indexOf(e);
  return r < 0 ? null : n.manager.tooltipViews[r];
}
const lI = /* @__PURE__ */ vn.define(), e2 = /* @__PURE__ */ lt.define({
  combine(t) {
    let e, n;
    for (let r of t)
      e = e || r.topContainer, n = n || r.bottomContainer;
    return { topContainer: e, bottomContainer: n };
  }
});
function $f(t, e) {
  let n = t.plugin(_4), r = n ? n.specs.indexOf(e) : -1;
  return r > -1 ? n.panels[r] : null;
}
const _4 = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.input = t.state.facet(Pf), this.specs = this.input.filter((n) => n), this.panels = this.specs.map((n) => n(t));
    let e = t.state.facet(e2);
    this.top = new Ph(t, !0, e.topContainer), this.bottom = new Ph(t, !1, e.bottomContainer), this.top.sync(this.panels.filter((n) => n.top)), this.bottom.sync(this.panels.filter((n) => !n.top));
    for (let n of this.panels)
      n.dom.classList.add("cm-panel"), n.mount && n.mount();
  }
  update(t) {
    let e = t.state.facet(e2);
    this.top.container != e.topContainer && (this.top.sync([]), this.top = new Ph(t.view, !0, e.topContainer)), this.bottom.container != e.bottomContainer && (this.bottom.sync([]), this.bottom = new Ph(t.view, !1, e.bottomContainer)), this.top.syncClasses(), this.bottom.syncClasses();
    let n = t.state.facet(Pf);
    if (n != this.input) {
      let r = n.filter((l) => l), i = [], o = [], s = [], a = [];
      for (let l of r) {
        let u = this.specs.indexOf(l), f;
        u < 0 ? (f = l(t.view), a.push(f)) : (f = this.panels[u], f.update && f.update(t)), i.push(f), (f.top ? o : s).push(f);
      }
      this.specs = r, this.panels = i, this.top.sync(o), this.bottom.sync(s);
      for (let l of a)
        l.dom.classList.add("cm-panel"), l.mount && l.mount();
    } else
      for (let r of this.panels)
        r.update && r.update(t);
  }
  destroy() {
    this.top.sync([]), this.bottom.sync([]);
  }
}, {
  provide: (t) => nt.scrollMargins.of((e) => {
    let n = e.plugin(t);
    return n && { top: n.top.scrollMargin(), bottom: n.bottom.scrollMargin() };
  })
});
class Ph {
  constructor(e, n, r) {
    this.view = e, this.top = n, this.container = r, this.dom = void 0, this.classes = "", this.panels = [], this.syncClasses();
  }
  sync(e) {
    for (let n of this.panels)
      n.destroy && e.indexOf(n) < 0 && n.destroy();
    this.panels = e, this.syncDOM();
  }
  syncDOM() {
    if (this.panels.length == 0) {
      this.dom && (this.dom.remove(), this.dom = void 0);
      return;
    }
    if (!this.dom) {
      this.dom = document.createElement("div"), this.dom.className = this.top ? "cm-panels cm-panels-top" : "cm-panels cm-panels-bottom", this.dom.style[this.top ? "top" : "bottom"] = "0";
      let n = this.container || this.view.dom;
      n.insertBefore(this.dom, this.top ? n.firstChild : null);
    }
    let e = this.dom.firstChild;
    for (let n of this.panels)
      if (n.dom.parentNode == this.dom) {
        for (; e != n.dom; )
          e = t2(e);
        e = e.nextSibling;
      } else
        this.dom.insertBefore(n.dom, e);
    for (; e; )
      e = t2(e);
  }
  scrollMargin() {
    return !this.dom || this.container ? 0 : Math.max(0, this.top ? this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) : Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);
  }
  syncClasses() {
    if (!(!this.container || this.classes == this.view.themeClasses)) {
      for (let e of this.classes.split(" "))
        e && this.container.classList.remove(e);
      for (let e of (this.classes = this.view.themeClasses).split(" "))
        e && this.container.classList.add(e);
    }
  }
}
function t2(t) {
  let e = t.nextSibling;
  return t.remove(), e;
}
const Pf = /* @__PURE__ */ lt.define({
  enables: _4
});
class Ns extends Kl {
  /**
  @internal
  */
  compare(e) {
    return this == e || this.constructor == e.constructor && this.eq(e);
  }
  /**
  Compare this marker to another marker of the same type.
  */
  eq(e) {
    return !1;
  }
  /**
  Called if the marker has a `toDOM` method and its representation
  was removed from a gutter.
  */
  destroy(e) {
  }
}
Ns.prototype.elementClass = "";
Ns.prototype.toDOM = void 0;
Ns.prototype.mapMode = Vi.TrackBefore;
Ns.prototype.startSide = Ns.prototype.endSide = -1;
Ns.prototype.point = !0;
const bp = /* @__PURE__ */ lt.define(), cI = /* @__PURE__ */ lt.define(), uI = {
  class: "",
  renderEmptyElements: !1,
  elementStyle: "",
  markers: () => zn.empty,
  lineMarker: () => null,
  widgetMarker: () => null,
  lineMarkerChange: null,
  initialSpacer: null,
  updateSpacer: null,
  domEventHandlers: {},
  side: "before"
}, mf = /* @__PURE__ */ lt.define();
function A4(t) {
  return [M4(), mf.of({ ...uI, ...t })];
}
const n2 = /* @__PURE__ */ lt.define({
  combine: (t) => t.some((e) => e)
});
function M4(t) {
  return [
    fI
  ];
}
const fI = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.domAfter = null, this.prevViewport = t.viewport, this.dom = document.createElement("div"), this.dom.className = "cm-gutters cm-gutters-before", this.dom.setAttribute("aria-hidden", "true"), this.dom.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.gutters = t.state.facet(mf).map((e) => new i2(t, e)), this.fixed = !t.state.facet(n2);
    for (let e of this.gutters)
      e.config.side == "after" ? this.getDOMAfter().appendChild(e.dom) : this.dom.appendChild(e.dom);
    this.fixed && (this.dom.style.position = "sticky"), this.syncGutters(!1), t.scrollDOM.insertBefore(this.dom, t.contentDOM);
  }
  getDOMAfter() {
    return this.domAfter || (this.domAfter = document.createElement("div"), this.domAfter.className = "cm-gutters cm-gutters-after", this.domAfter.setAttribute("aria-hidden", "true"), this.domAfter.style.minHeight = this.view.contentHeight / this.view.scaleY + "px", this.domAfter.style.position = this.fixed ? "sticky" : "", this.view.scrollDOM.appendChild(this.domAfter)), this.domAfter;
  }
  update(t) {
    if (this.updateGutters(t)) {
      let e = this.prevViewport, n = t.view.viewport, r = Math.min(e.to, n.to) - Math.max(e.from, n.from);
      this.syncGutters(r < (n.to - n.from) * 0.8);
    }
    if (t.geometryChanged) {
      let e = this.view.contentHeight / this.view.scaleY + "px";
      this.dom.style.minHeight = e, this.domAfter && (this.domAfter.style.minHeight = e);
    }
    this.view.state.facet(n2) != !this.fixed && (this.fixed = !this.fixed, this.dom.style.position = this.fixed ? "sticky" : "", this.domAfter && (this.domAfter.style.position = this.fixed ? "sticky" : "")), this.prevViewport = t.view.viewport;
  }
  syncGutters(t) {
    let e = this.dom.nextSibling;
    t && (this.dom.remove(), this.domAfter && this.domAfter.remove());
    let n = zn.iter(this.view.state.facet(bp), this.view.viewport.from), r = [], i = this.gutters.map((o) => new dI(o, this.view.viewport, -this.view.documentPadding.top));
    for (let o of this.view.viewportLineBlocks)
      if (r.length && (r = []), Array.isArray(o.type)) {
        let s = !0;
        for (let a of o.type)
          if (a.type == Hi.Text && s) {
            X0(n, r, a.from);
            for (let l of i)
              l.line(this.view, a, r);
            s = !1;
          } else if (a.widget)
            for (let l of i)
              l.widget(this.view, a);
      } else if (o.type == Hi.Text) {
        X0(n, r, o.from);
        for (let s of i)
          s.line(this.view, o, r);
      } else if (o.widget)
        for (let s of i)
          s.widget(this.view, o);
    for (let o of i)
      o.finish();
    t && (this.view.scrollDOM.insertBefore(this.dom, e), this.domAfter && this.view.scrollDOM.appendChild(this.domAfter));
  }
  updateGutters(t) {
    let e = t.startState.facet(mf), n = t.state.facet(mf), r = t.docChanged || t.heightChanged || t.viewportChanged || !zn.eq(t.startState.facet(bp), t.state.facet(bp), t.view.viewport.from, t.view.viewport.to);
    if (e == n)
      for (let i of this.gutters)
        i.update(t) && (r = !0);
    else {
      r = !0;
      let i = [];
      for (let o of n) {
        let s = e.indexOf(o);
        s < 0 ? i.push(new i2(this.view, o)) : (this.gutters[s].update(t), i.push(this.gutters[s]));
      }
      for (let o of this.gutters)
        o.dom.remove(), i.indexOf(o) < 0 && o.destroy();
      for (let o of i)
        o.config.side == "after" ? this.getDOMAfter().appendChild(o.dom) : this.dom.appendChild(o.dom);
      this.gutters = i;
    }
    return r;
  }
  destroy() {
    for (let t of this.gutters)
      t.destroy();
    this.dom.remove(), this.domAfter && this.domAfter.remove();
  }
}, {
  provide: (t) => nt.scrollMargins.of((e) => {
    let n = e.plugin(t);
    if (!n || n.gutters.length == 0 || !n.fixed)
      return null;
    let r = n.dom.offsetWidth * e.scaleX, i = n.domAfter ? n.domAfter.offsetWidth * e.scaleX : 0;
    return e.textDirection == Nr.LTR ? { left: r, right: i } : { right: r, left: i };
  })
});
function r2(t) {
  return Array.isArray(t) ? t : [t];
}
function X0(t, e, n) {
  for (; t.value && t.from <= n; )
    t.from == n && e.push(t.value), t.next();
}
class dI {
  constructor(e, n, r) {
    this.gutter = e, this.height = r, this.i = 0, this.cursor = zn.iter(e.markers, n.from);
  }
  addElement(e, n, r) {
    let { gutter: i } = this, o = (n.top - this.height) / e.scaleY, s = n.height / e.scaleY;
    if (this.i == i.elements.length) {
      let a = new T4(e, s, o, r);
      i.elements.push(a), i.dom.appendChild(a.dom);
    } else
      i.elements[this.i].update(e, s, o, r);
    this.height = n.bottom, this.i++;
  }
  line(e, n, r) {
    let i = [];
    X0(this.cursor, i, n.from), r.length && (i = i.concat(r));
    let o = this.gutter.config.lineMarker(e, n, i);
    o && i.unshift(o);
    let s = this.gutter;
    i.length == 0 && !s.config.renderEmptyElements || this.addElement(e, n, i);
  }
  widget(e, n) {
    let r = this.gutter.config.widgetMarker(e, n.widget, n), i = r ? [r] : null;
    for (let o of e.state.facet(cI)) {
      let s = o(e, n.widget, n);
      s && (i || (i = [])).push(s);
    }
    i && this.addElement(e, n, i);
  }
  finish() {
    let e = this.gutter;
    for (; e.elements.length > this.i; ) {
      let n = e.elements.pop();
      e.dom.removeChild(n.dom), n.destroy();
    }
  }
}
class i2 {
  constructor(e, n) {
    this.view = e, this.config = n, this.elements = [], this.spacer = null, this.dom = document.createElement("div"), this.dom.className = "cm-gutter" + (this.config.class ? " " + this.config.class : "");
    for (let r in n.domEventHandlers)
      this.dom.addEventListener(r, (i) => {
        let o = i.target, s;
        if (o != this.dom && this.dom.contains(o)) {
          for (; o.parentNode != this.dom; )
            o = o.parentNode;
          let l = o.getBoundingClientRect();
          s = (l.top + l.bottom) / 2;
        } else
          s = i.clientY;
        let a = e.lineBlockAtHeight(s - e.documentTop);
        n.domEventHandlers[r](e, a, i) && i.preventDefault();
      });
    this.markers = r2(n.markers(e)), n.initialSpacer && (this.spacer = new T4(e, 0, 0, [n.initialSpacer(e)]), this.dom.appendChild(this.spacer.dom), this.spacer.dom.style.cssText += "visibility: hidden; pointer-events: none");
  }
  update(e) {
    let n = this.markers;
    if (this.markers = r2(this.config.markers(e.view)), this.spacer && this.config.updateSpacer) {
      let i = this.config.updateSpacer(this.spacer.markers[0], e);
      i != this.spacer.markers[0] && this.spacer.update(e.view, 0, 0, [i]);
    }
    let r = e.view.viewport;
    return !zn.eq(this.markers, n, r.from, r.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(e) : !1);
  }
  destroy() {
    for (let e of this.elements)
      e.destroy();
  }
}
class T4 {
  constructor(e, n, r, i) {
    this.height = -1, this.above = 0, this.markers = [], this.dom = document.createElement("div"), this.dom.className = "cm-gutterElement", this.update(e, n, r, i);
  }
  update(e, n, r, i) {
    this.height != n && (this.height = n, this.dom.style.height = n + "px"), this.above != r && (this.dom.style.marginTop = (this.above = r) ? r + "px" : ""), hI(this.markers, i) || this.setMarkers(e, i);
  }
  setMarkers(e, n) {
    let r = "cm-gutterElement", i = this.dom.firstChild;
    for (let o = 0, s = 0; ; ) {
      let a = s, l = o < n.length ? n[o++] : null, u = !1;
      if (l) {
        let f = l.elementClass;
        f && (r += " " + f);
        for (let d = s; d < this.markers.length; d++)
          if (this.markers[d].compare(l)) {
            a = d, u = !0;
            break;
          }
      } else
        a = this.markers.length;
      for (; s < a; ) {
        let f = this.markers[s++];
        if (f.toDOM) {
          f.destroy(i);
          let d = i.nextSibling;
          i.remove(), i = d;
        }
      }
      if (!l)
        break;
      l.toDOM && (u ? i = i.nextSibling : this.dom.insertBefore(l.toDOM(e), i)), u && s++;
    }
    this.dom.className = r, this.markers = n;
  }
  destroy() {
    this.setMarkers(null, []);
  }
}
function hI(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].compare(e[n]))
      return !1;
  return !0;
}
const pI = /* @__PURE__ */ lt.define(), mI = /* @__PURE__ */ lt.define(), Rc = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, { formatNumber: String, domEventHandlers: {} }, {
      domEventHandlers(e, n) {
        let r = Object.assign({}, e);
        for (let i in n) {
          let o = r[i], s = n[i];
          r[i] = o ? (a, l, u) => o(a, l, u) || s(a, l, u) : s;
        }
        return r;
      }
    });
  }
});
class pv extends Ns {
  constructor(e) {
    super(), this.number = e;
  }
  eq(e) {
    return this.number == e.number;
  }
  toDOM() {
    return document.createTextNode(this.number);
  }
}
function mv(t, e) {
  return t.state.facet(Rc).formatNumber(e, t.state);
}
const gI = /* @__PURE__ */ mf.compute([Rc], (t) => ({
  class: "cm-lineNumbers",
  renderEmptyElements: !1,
  markers(e) {
    return e.state.facet(pI);
  },
  lineMarker(e, n, r) {
    return r.some((i) => i.toDOM) ? null : new pv(mv(e, e.state.doc.lineAt(n.from).number));
  },
  widgetMarker: (e, n, r) => {
    for (let i of e.state.facet(mI)) {
      let o = i(e, n, r);
      if (o)
        return o;
    }
    return null;
  },
  lineMarkerChange: (e) => e.startState.facet(Rc) != e.state.facet(Rc),
  initialSpacer(e) {
    return new pv(mv(e, o2(e.state.doc.lines)));
  },
  updateSpacer(e, n) {
    let r = mv(n.view, o2(n.view.state.doc.lines));
    return r == e.number ? e : new pv(r);
  },
  domEventHandlers: t.facet(Rc).domEventHandlers,
  side: "before"
}));
function vI(t = {}) {
  return [
    Rc.of(t),
    M4(),
    gI
  ];
}
function o2(t) {
  let e = 9;
  for (; e < t; )
    e = e * 10 + 9;
  return e;
}
const bI = /* @__PURE__ */ new class extends Ns {
  constructor() {
    super(...arguments), this.elementClass = "cm-activeLineGutter";
  }
}(), yI = /* @__PURE__ */ bp.compute(["selection"], (t) => {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let i = t.doc.lineAt(r.head).from;
    i > n && (n = i, e.push(bI.range(i)));
  }
  return zn.of(e);
});
function xI() {
  return yI;
}
const $4 = 1024;
let wI = 0;
class gv {
  constructor(e, n) {
    this.from = e, this.to = n;
  }
}
class Cn {
  /**
  Create a new node prop type.
  */
  constructor(e = {}) {
    this.id = wI++, this.perNode = !!e.perNode, this.deserialize = e.deserialize || (() => {
      throw new Error("This node type doesn't define a deserialize function");
    });
  }
  /**
  This is meant to be used with
  [`NodeSet.extend`](#common.NodeSet.extend) or
  [`LRParser.configure`](#lr.ParserConfig.props) to compute
  prop values for each node type in the set. Takes a [match
  object](#common.NodeType^match) or function that returns undefined
  if the node type doesn't get this prop, and the prop's value if
  it does.
  */
  add(e) {
    if (this.perNode)
      throw new RangeError("Can't add per-node props to node types");
    return typeof e != "function" && (e = oo.match(e)), (n) => {
      let r = e(n);
      return r === void 0 ? null : [this, r];
    };
  }
}
Cn.closedBy = new Cn({ deserialize: (t) => t.split(" ") });
Cn.openedBy = new Cn({ deserialize: (t) => t.split(" ") });
Cn.group = new Cn({ deserialize: (t) => t.split(" ") });
Cn.isolate = new Cn({ deserialize: (t) => {
  if (t && t != "rtl" && t != "ltr" && t != "auto")
    throw new RangeError("Invalid value for isolate: " + t);
  return t || "auto";
} });
Cn.contextHash = new Cn({ perNode: !0 });
Cn.lookAhead = new Cn({ perNode: !0 });
Cn.mounted = new Cn({ perNode: !0 });
class Jp {
  constructor(e, n, r) {
    this.tree = e, this.overlay = n, this.parser = r;
  }
  /**
  @internal
  */
  static get(e) {
    return e && e.props && e.props[Cn.mounted.id];
  }
}
const jI = /* @__PURE__ */ Object.create(null);
class oo {
  /**
  @internal
  */
  constructor(e, n, r, i = 0) {
    this.name = e, this.props = n, this.id = r, this.flags = i;
  }
  /**
  Define a node type.
  */
  static define(e) {
    let n = e.props && e.props.length ? /* @__PURE__ */ Object.create(null) : jI, r = (e.top ? 1 : 0) | (e.skipped ? 2 : 0) | (e.error ? 4 : 0) | (e.name == null ? 8 : 0), i = new oo(e.name || "", n, e.id, r);
    if (e.props) {
      for (let o of e.props)
        if (Array.isArray(o) || (o = o(i)), o) {
          if (o[0].perNode)
            throw new RangeError("Can't store a per-node prop on a node type");
          n[o[0].id] = o[1];
        }
    }
    return i;
  }
  /**
  Retrieves a node prop for this type. Will return `undefined` if
  the prop isn't present on this node.
  */
  prop(e) {
    return this.props[e.id];
  }
  /**
  True when this is the top node of a grammar.
  */
  get isTop() {
    return (this.flags & 1) > 0;
  }
  /**
  True when this node is produced by a skip rule.
  */
  get isSkipped() {
    return (this.flags & 2) > 0;
  }
  /**
  Indicates whether this is an error node.
  */
  get isError() {
    return (this.flags & 4) > 0;
  }
  /**
  When true, this node type doesn't correspond to a user-declared
  named node, for example because it is used to cache repetition.
  */
  get isAnonymous() {
    return (this.flags & 8) > 0;
  }
  /**
  Returns true when this node's name or one of its
  [groups](#common.NodeProp^group) matches the given string.
  */
  is(e) {
    if (typeof e == "string") {
      if (this.name == e)
        return !0;
      let n = this.prop(Cn.group);
      return n ? n.indexOf(e) > -1 : !1;
    }
    return this.id == e;
  }
  /**
  Create a function from node types to arbitrary values by
  specifying an object whose property names are node or
  [group](#common.NodeProp^group) names. Often useful with
  [`NodeProp.add`](#common.NodeProp.add). You can put multiple
  names, separated by spaces, in a single property name to map
  multiple node names to a single value.
  */
  static match(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let r in e)
      for (let i of r.split(" "))
        n[i] = e[r];
    return (r) => {
      for (let i = r.prop(Cn.group), o = -1; o < (i ? i.length : 0); o++) {
        let s = n[o < 0 ? r.name : i[o]];
        if (s)
          return s;
      }
    };
  }
}
oo.none = new oo(
  "",
  /* @__PURE__ */ Object.create(null),
  0,
  8
  /* NodeFlag.Anonymous */
);
class N1 {
  /**
  Create a set with the given types. The `id` property of each
  type should correspond to its position within the array.
  */
  constructor(e) {
    this.types = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].id != n)
        throw new RangeError("Node type ids should correspond to array positions when creating a node set");
  }
  /**
  Create a copy of this set with some node properties added. The
  arguments to this method can be created with
  [`NodeProp.add`](#common.NodeProp.add).
  */
  extend(...e) {
    let n = [];
    for (let r of this.types) {
      let i = null;
      for (let o of e) {
        let s = o(r);
        s && (i || (i = Object.assign({}, r.props)), i[s[0].id] = s[1]);
      }
      n.push(i ? new oo(r.name, i, r.id, r.flags) : r);
    }
    return new N1(n);
  }
}
const Rh = /* @__PURE__ */ new WeakMap(), s2 = /* @__PURE__ */ new WeakMap();
var vi;
(function(t) {
  t[t.ExcludeBuffers = 1] = "ExcludeBuffers", t[t.IncludeAnonymous = 2] = "IncludeAnonymous", t[t.IgnoreMounts = 4] = "IgnoreMounts", t[t.IgnoreOverlays = 8] = "IgnoreOverlays";
})(vi || (vi = {}));
class ci {
  /**
  Construct a new tree. See also [`Tree.build`](#common.Tree^build).
  */
  constructor(e, n, r, i, o) {
    if (this.type = e, this.children = n, this.positions = r, this.length = i, this.props = null, o && o.length) {
      this.props = /* @__PURE__ */ Object.create(null);
      for (let [s, a] of o)
        this.props[typeof s == "number" ? s : s.id] = a;
    }
  }
  /**
  @internal
  */
  toString() {
    let e = Jp.get(this);
    if (e && !e.overlay)
      return e.tree.toString();
    let n = "";
    for (let r of this.children) {
      let i = r.toString();
      i && (n && (n += ","), n += i);
    }
    return this.type.name ? (/\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) + (n.length ? "(" + n + ")" : "") : n;
  }
  /**
  Get a [tree cursor](#common.TreeCursor) positioned at the top of
  the tree. Mode can be used to [control](#common.IterMode) which
  nodes the cursor visits.
  */
  cursor(e = 0) {
    return new eb(this.topNode, e);
  }
  /**
  Get a [tree cursor](#common.TreeCursor) pointing into this tree
  at the given position and side (see
  [`moveTo`](#common.TreeCursor.moveTo).
  */
  cursorAt(e, n = 0, r = 0) {
    let i = Rh.get(this) || this.topNode, o = new eb(i);
    return o.moveTo(e, n), Rh.set(this, o._tree), o;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) object for the top of the
  tree.
  */
  get topNode() {
    return new Po(this, 0, 0, null);
  }
  /**
  Get the [syntax node](#common.SyntaxNode) at the given position.
  If `side` is -1, this will move into nodes that end at the
  position. If 1, it'll move into nodes that start at the
  position. With 0, it'll only enter nodes that cover the position
  from both sides.
  
  Note that this will not enter
  [overlays](#common.MountedTree.overlay), and you often want
  [`resolveInner`](#common.Tree.resolveInner) instead.
  */
  resolve(e, n = 0) {
    let r = Rf(Rh.get(this) || this.topNode, e, n, !1);
    return Rh.set(this, r), r;
  }
  /**
  Like [`resolve`](#common.Tree.resolve), but will enter
  [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node
  pointing into the innermost overlaid tree at the given position
  (with parent links going through all parent structure, including
  the host trees).
  */
  resolveInner(e, n = 0) {
    let r = Rf(s2.get(this) || this.topNode, e, n, !0);
    return s2.set(this, r), r;
  }
  /**
  In some situations, it can be useful to iterate through all
  nodes around a position, including those in overlays that don't
  directly cover the position. This method gives you an iterator
  that will produce all nodes, from small to big, around the given
  position.
  */
  resolveStack(e, n = 0) {
    return CI(this, e, n);
  }
  /**
  Iterate over the tree and its children, calling `enter` for any
  node that touches the `from`/`to` region (if given) before
  running over such a node's children, and `leave` (if given) when
  leaving the node. When `enter` returns `false`, that node will
  not have its children iterated over (or `leave` called).
  */
  iterate(e) {
    let { enter: n, leave: r, from: i = 0, to: o = this.length } = e, s = e.mode || 0, a = (s & vi.IncludeAnonymous) > 0;
    for (let l = this.cursor(s | vi.IncludeAnonymous); ; ) {
      let u = !1;
      if (l.from <= o && l.to >= i && (!a && l.type.isAnonymous || n(l) !== !1)) {
        if (l.firstChild())
          continue;
        u = !0;
      }
      for (; u && r && (a || !l.type.isAnonymous) && r(l), !l.nextSibling(); ) {
        if (!l.parent())
          return;
        u = !0;
      }
    }
  }
  /**
  Get the value of the given [node prop](#common.NodeProp) for this
  node. Works with both per-node and per-type props.
  */
  prop(e) {
    return e.perNode ? this.props ? this.props[e.id] : void 0 : this.type.prop(e);
  }
  /**
  Returns the node's [per-node props](#common.NodeProp.perNode) in a
  format that can be passed to the [`Tree`](#common.Tree)
  constructor.
  */
  get propValues() {
    let e = [];
    if (this.props)
      for (let n in this.props)
        e.push([+n, this.props[n]]);
    return e;
  }
  /**
  Balance the direct children of this tree, producing a copy of
  which may have children grouped into subtrees with type
  [`NodeType.none`](#common.NodeType^none).
  */
  balance(e = {}) {
    return this.children.length <= 8 ? this : z1(oo.none, this.children, this.positions, 0, this.children.length, 0, this.length, (n, r, i) => new ci(this.type, n, r, i, this.propValues), e.makeTree || ((n, r, i) => new ci(oo.none, n, r, i)));
  }
  /**
  Build a tree from a postfix-ordered buffer of node information,
  or a cursor over such a buffer.
  */
  static build(e) {
    return OI(e);
  }
}
ci.empty = new ci(oo.none, [], [], 0);
class D1 {
  constructor(e, n) {
    this.buffer = e, this.index = n;
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  get pos() {
    return this.index;
  }
  next() {
    this.index -= 4;
  }
  fork() {
    return new D1(this.buffer, this.index);
  }
}
class rl {
  /**
  Create a tree buffer.
  */
  constructor(e, n, r) {
    this.buffer = e, this.length = n, this.set = r;
  }
  /**
  @internal
  */
  get type() {
    return oo.none;
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    for (let n = 0; n < this.buffer.length; )
      e.push(this.childString(n)), n = this.buffer[n + 3];
    return e.join(",");
  }
  /**
  @internal
  */
  childString(e) {
    let n = this.buffer[e], r = this.buffer[e + 3], i = this.set.types[n], o = i.name;
    if (/\W/.test(o) && !i.isError && (o = JSON.stringify(o)), e += 4, r == e)
      return o;
    let s = [];
    for (; e < r; )
      s.push(this.childString(e)), e = this.buffer[e + 3];
    return o + "(" + s.join(",") + ")";
  }
  /**
  @internal
  */
  findChild(e, n, r, i, o) {
    let { buffer: s } = this, a = -1;
    for (let l = e; l != n && !(P4(o, i, s[l + 1], s[l + 2]) && (a = l, r > 0)); l = s[l + 3])
      ;
    return a;
  }
  /**
  @internal
  */
  slice(e, n, r) {
    let i = this.buffer, o = new Uint16Array(n - e), s = 0;
    for (let a = e, l = 0; a < n; ) {
      o[l++] = i[a++], o[l++] = i[a++] - r;
      let u = o[l++] = i[a++] - r;
      o[l++] = i[a++] - e, s = Math.max(s, u);
    }
    return new rl(o, s, this.set);
  }
}
function P4(t, e, n, r) {
  switch (t) {
    case -2:
      return n < e;
    case -1:
      return r >= e && n < e;
    case 0:
      return n < e && r > e;
    case 1:
      return n <= e && r > e;
    case 2:
      return r > e;
    case 4:
      return !0;
  }
}
function Rf(t, e, n, r) {
  for (var i; t.from == t.to || (n < 1 ? t.from >= e : t.from > e) || (n > -1 ? t.to <= e : t.to < e); ) {
    let s = !r && t instanceof Po && t.index < 0 ? null : t.parent;
    if (!s)
      return t;
    t = s;
  }
  let o = r ? 0 : vi.IgnoreOverlays;
  if (r)
    for (let s = t, a = s.parent; a; s = a, a = s.parent)
      s instanceof Po && s.index < 0 && ((i = a.enter(e, n, o)) === null || i === void 0 ? void 0 : i.from) != s.from && (t = a);
  for (; ; ) {
    let s = t.enter(e, n, o);
    if (!s)
      return t;
    t = s;
  }
}
class R4 {
  cursor(e = 0) {
    return new eb(this, e);
  }
  getChild(e, n = null, r = null) {
    let i = a2(this, e, n, r);
    return i.length ? i[0] : null;
  }
  getChildren(e, n = null, r = null) {
    return a2(this, e, n, r);
  }
  resolve(e, n = 0) {
    return Rf(this, e, n, !1);
  }
  resolveInner(e, n = 0) {
    return Rf(this, e, n, !0);
  }
  matchContext(e) {
    return Z0(this.parent, e);
  }
  enterUnfinishedNodesBefore(e) {
    let n = this.childBefore(e), r = this;
    for (; n; ) {
      let i = n.lastChild;
      if (!i || i.to != n.to)
        break;
      i.type.isError && i.from == i.to ? (r = n, n = i.prevSibling) : n = i;
    }
    return r;
  }
  get node() {
    return this;
  }
  get next() {
    return this.parent;
  }
}
class Po extends R4 {
  constructor(e, n, r, i) {
    super(), this._tree = e, this.from = n, this.index = r, this._parent = i;
  }
  get type() {
    return this._tree.type;
  }
  get name() {
    return this._tree.type.name;
  }
  get to() {
    return this.from + this._tree.length;
  }
  nextChild(e, n, r, i, o = 0) {
    for (let s = this; ; ) {
      for (let { children: a, positions: l } = s._tree, u = n > 0 ? a.length : -1; e != u; e += n) {
        let f = a[e], d = l[e] + s.from;
        if (P4(i, r, d, d + f.length)) {
          if (f instanceof rl) {
            if (o & vi.ExcludeBuffers)
              continue;
            let h = f.findChild(0, f.buffer.length, n, r - d, i);
            if (h > -1)
              return new La(new kI(s, f, e, d), null, h);
          } else if (o & vi.IncludeAnonymous || !f.type.isAnonymous || I1(f)) {
            let h;
            if (!(o & vi.IgnoreMounts) && (h = Jp.get(f)) && !h.overlay)
              return new Po(h.tree, d, e, s);
            let p = new Po(f, d, e, s);
            return o & vi.IncludeAnonymous || !p.type.isAnonymous ? p : p.nextChild(n < 0 ? f.children.length - 1 : 0, n, r, i);
          }
        }
      }
      if (o & vi.IncludeAnonymous || !s.type.isAnonymous || (s.index >= 0 ? e = s.index + n : e = n < 0 ? -1 : s._parent._tree.children.length, s = s._parent, !s))
        return null;
    }
  }
  get firstChild() {
    return this.nextChild(
      0,
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.nextChild(
      0,
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.nextChild(
      this._tree.children.length - 1,
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    let i;
    if (!(r & vi.IgnoreOverlays) && (i = Jp.get(this._tree)) && i.overlay) {
      let o = e - this.from;
      for (let { from: s, to: a } of i.overlay)
        if ((n > 0 ? s <= o : s < o) && (n < 0 ? a >= o : a > o))
          return new Po(i.tree, i.overlay[0].from + this.from, -1, this);
    }
    return this.nextChild(0, 1, e, n, r);
  }
  nextSignificantParent() {
    let e = this;
    for (; e.type.isAnonymous && e._parent; )
      e = e._parent;
    return e;
  }
  get parent() {
    return this._parent ? this._parent.nextSignificantParent() : null;
  }
  get nextSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index + 1,
      1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get prevSibling() {
    return this._parent && this.index >= 0 ? this._parent.nextChild(
      this.index - 1,
      -1,
      0,
      4
      /* Side.DontCare */
    ) : null;
  }
  get tree() {
    return this._tree;
  }
  toTree() {
    return this._tree;
  }
  /**
  @internal
  */
  toString() {
    return this._tree.toString();
  }
}
function a2(t, e, n, r) {
  let i = t.cursor(), o = [];
  if (!i.firstChild())
    return o;
  if (n != null) {
    for (let s = !1; !s; )
      if (s = i.type.is(n), !i.nextSibling())
        return o;
  }
  for (; ; ) {
    if (r != null && i.type.is(r))
      return o;
    if (i.type.is(e) && o.push(i.node), !i.nextSibling())
      return r == null ? o : [];
  }
}
function Z0(t, e, n = e.length - 1) {
  for (let r = t; n >= 0; r = r.parent) {
    if (!r)
      return !1;
    if (!r.type.isAnonymous) {
      if (e[n] && e[n] != r.name)
        return !1;
      n--;
    }
  }
  return !0;
}
class kI {
  constructor(e, n, r, i) {
    this.parent = e, this.buffer = n, this.index = r, this.start = i;
  }
}
class La extends R4 {
  get name() {
    return this.type.name;
  }
  get from() {
    return this.context.start + this.context.buffer.buffer[this.index + 1];
  }
  get to() {
    return this.context.start + this.context.buffer.buffer[this.index + 2];
  }
  constructor(e, n, r) {
    super(), this.context = e, this._parent = n, this.index = r, this.type = e.buffer.set.types[e.buffer.buffer[r]];
  }
  child(e, n, r) {
    let { buffer: i } = this.context, o = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.context.start, r);
    return o < 0 ? null : new La(this.context, this, o);
  }
  get firstChild() {
    return this.child(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  get lastChild() {
    return this.child(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  childAfter(e) {
    return this.child(
      1,
      e,
      2
      /* Side.After */
    );
  }
  childBefore(e) {
    return this.child(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  enter(e, n, r = 0) {
    if (r & vi.ExcludeBuffers)
      return null;
    let { buffer: i } = this.context, o = i.findChild(this.index + 4, i.buffer[this.index + 3], n > 0 ? 1 : -1, e - this.context.start, n);
    return o < 0 ? null : new La(this.context, this, o);
  }
  get parent() {
    return this._parent || this.context.parent.nextSignificantParent();
  }
  externalSibling(e) {
    return this._parent ? null : this.context.parent.nextChild(
      this.context.index + e,
      e,
      0,
      4
      /* Side.DontCare */
    );
  }
  get nextSibling() {
    let { buffer: e } = this.context, n = e.buffer[this.index + 3];
    return n < (this._parent ? e.buffer[this._parent.index + 3] : e.buffer.length) ? new La(this.context, this._parent, n) : this.externalSibling(1);
  }
  get prevSibling() {
    let { buffer: e } = this.context, n = this._parent ? this._parent.index + 4 : 0;
    return this.index == n ? this.externalSibling(-1) : new La(this.context, this._parent, e.findChild(
      n,
      this.index,
      -1,
      0,
      4
      /* Side.DontCare */
    ));
  }
  get tree() {
    return null;
  }
  toTree() {
    let e = [], n = [], { buffer: r } = this.context, i = this.index + 4, o = r.buffer[this.index + 3];
    if (o > i) {
      let s = r.buffer[this.index + 1];
      e.push(r.slice(i, o, s)), n.push(0);
    }
    return new ci(this.type, e, n, this.to - this.from);
  }
  /**
  @internal
  */
  toString() {
    return this.context.buffer.childString(this.index);
  }
}
function N4(t) {
  if (!t.length)
    return null;
  let e = 0, n = t[0];
  for (let o = 1; o < t.length; o++) {
    let s = t[o];
    (s.from > n.from || s.to < n.to) && (n = s, e = o);
  }
  let r = n instanceof Po && n.index < 0 ? null : n.parent, i = t.slice();
  return r ? i[e] = r : i.splice(e, 1), new SI(i, n);
}
class SI {
  constructor(e, n) {
    this.heads = e, this.node = n;
  }
  get next() {
    return N4(this.heads);
  }
}
function CI(t, e, n) {
  let r = t.resolveInner(e, n), i = null;
  for (let o = r instanceof Po ? r : r.context.parent; o; o = o.parent)
    if (o.index < 0) {
      let s = o.parent;
      (i || (i = [r])).push(s.resolve(e, n)), o = s;
    } else {
      let s = Jp.get(o.tree);
      if (s && s.overlay && s.overlay[0].from <= e && s.overlay[s.overlay.length - 1].to >= e) {
        let a = new Po(s.tree, s.overlay[0].from + o.from, -1, o);
        (i || (i = [r])).push(Rf(a, e, n, !1));
      }
    }
  return i ? N4(i) : r;
}
class eb {
  /**
  Shorthand for `.type.name`.
  */
  get name() {
    return this.type.name;
  }
  /**
  @internal
  */
  constructor(e, n = 0) {
    if (this.mode = n, this.buffer = null, this.stack = [], this.index = 0, this.bufferNode = null, e instanceof Po)
      this.yieldNode(e);
    else {
      this._tree = e.context.parent, this.buffer = e.context;
      for (let r = e._parent; r; r = r._parent)
        this.stack.unshift(r.index);
      this.bufferNode = e, this.yieldBuf(e.index);
    }
  }
  yieldNode(e) {
    return e ? (this._tree = e, this.type = e.type, this.from = e.from, this.to = e.to, !0) : !1;
  }
  yieldBuf(e, n) {
    this.index = e;
    let { start: r, buffer: i } = this.buffer;
    return this.type = n || i.set.types[i.buffer[e]], this.from = r + i.buffer[e + 1], this.to = r + i.buffer[e + 2], !0;
  }
  /**
  @internal
  */
  yield(e) {
    return e ? e instanceof Po ? (this.buffer = null, this.yieldNode(e)) : (this.buffer = e.context, this.yieldBuf(e.index, e.type)) : !1;
  }
  /**
  @internal
  */
  toString() {
    return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();
  }
  /**
  @internal
  */
  enterChild(e, n, r) {
    if (!this.buffer)
      return this.yield(this._tree.nextChild(e < 0 ? this._tree._tree.children.length - 1 : 0, e, n, r, this.mode));
    let { buffer: i } = this.buffer, o = i.findChild(this.index + 4, i.buffer[this.index + 3], e, n - this.buffer.start, r);
    return o < 0 ? !1 : (this.stack.push(this.index), this.yieldBuf(o));
  }
  /**
  Move the cursor to this node's first child. When this returns
  false, the node has no child, and the cursor has not been moved.
  */
  firstChild() {
    return this.enterChild(
      1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to this node's last child.
  */
  lastChild() {
    return this.enterChild(
      -1,
      0,
      4
      /* Side.DontCare */
    );
  }
  /**
  Move the cursor to the first child that ends after `pos`.
  */
  childAfter(e) {
    return this.enterChild(
      1,
      e,
      2
      /* Side.After */
    );
  }
  /**
  Move to the last child that starts before `pos`.
  */
  childBefore(e) {
    return this.enterChild(
      -1,
      e,
      -2
      /* Side.Before */
    );
  }
  /**
  Move the cursor to the child around `pos`. If side is -1 the
  child may end at that position, when 1 it may start there. This
  will also enter [overlaid](#common.MountedTree.overlay)
  [mounted](#common.NodeProp^mounted) trees unless `overlays` is
  set to false.
  */
  enter(e, n, r = this.mode) {
    return this.buffer ? r & vi.ExcludeBuffers ? !1 : this.enterChild(1, e, n) : this.yield(this._tree.enter(e, n, r));
  }
  /**
  Move to the node's parent node, if this isn't the top node.
  */
  parent() {
    if (!this.buffer)
      return this.yieldNode(this.mode & vi.IncludeAnonymous ? this._tree._parent : this._tree.parent);
    if (this.stack.length)
      return this.yieldBuf(this.stack.pop());
    let e = this.mode & vi.IncludeAnonymous ? this.buffer.parent : this.buffer.parent.nextSignificantParent();
    return this.buffer = null, this.yieldNode(e);
  }
  /**
  @internal
  */
  sibling(e) {
    if (!this.buffer)
      return this._tree._parent ? this.yield(this._tree.index < 0 ? null : this._tree._parent.nextChild(this._tree.index + e, e, 0, 4, this.mode)) : !1;
    let { buffer: n } = this.buffer, r = this.stack.length - 1;
    if (e < 0) {
      let i = r < 0 ? 0 : this.stack[r] + 4;
      if (this.index != i)
        return this.yieldBuf(n.findChild(
          i,
          this.index,
          -1,
          0,
          4
          /* Side.DontCare */
        ));
    } else {
      let i = n.buffer[this.index + 3];
      if (i < (r < 0 ? n.buffer.length : n.buffer[this.stack[r] + 3]))
        return this.yieldBuf(i);
    }
    return r < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + e, e, 0, 4, this.mode)) : !1;
  }
  /**
  Move to this node's next sibling, if any.
  */
  nextSibling() {
    return this.sibling(1);
  }
  /**
  Move to this node's previous sibling, if any.
  */
  prevSibling() {
    return this.sibling(-1);
  }
  atLastNode(e) {
    let n, r, { buffer: i } = this;
    if (i) {
      if (e > 0) {
        if (this.index < i.buffer.buffer.length)
          return !1;
      } else
        for (let o = 0; o < this.index; o++)
          if (i.buffer.buffer[o + 3] < this.index)
            return !1;
      ({ index: n, parent: r } = i);
    } else
      ({ index: n, _parent: r } = this._tree);
    for (; r; { index: n, _parent: r } = r)
      if (n > -1)
        for (let o = n + e, s = e < 0 ? -1 : r._tree.children.length; o != s; o += e) {
          let a = r._tree.children[o];
          if (this.mode & vi.IncludeAnonymous || a instanceof rl || !a.type.isAnonymous || I1(a))
            return !1;
        }
    return !0;
  }
  move(e, n) {
    if (n && this.enterChild(
      e,
      0,
      4
      /* Side.DontCare */
    ))
      return !0;
    for (; ; ) {
      if (this.sibling(e))
        return !0;
      if (this.atLastNode(e) || !this.parent())
        return !1;
    }
  }
  /**
  Move to the next node in a
  [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)
  traversal, going from a node to its first child or, if the
  current node is empty or `enter` is false, its next sibling or
  the next sibling of the first parent node that has one.
  */
  next(e = !0) {
    return this.move(1, e);
  }
  /**
  Move to the next node in a last-to-first pre-order traversal. A
  node is followed by its last child or, if it has none, its
  previous sibling or the previous sibling of the first parent
  node that has one.
  */
  prev(e = !0) {
    return this.move(-1, e);
  }
  /**
  Move the cursor to the innermost node that covers `pos`. If
  `side` is -1, it will enter nodes that end at `pos`. If it is 1,
  it will enter nodes that start at `pos`.
  */
  moveTo(e, n = 0) {
    for (; (this.from == this.to || (n < 1 ? this.from >= e : this.from > e) || (n > -1 ? this.to <= e : this.to < e)) && this.parent(); )
      ;
    for (; this.enterChild(1, e, n); )
      ;
    return this;
  }
  /**
  Get a [syntax node](#common.SyntaxNode) at the cursor's current
  position.
  */
  get node() {
    if (!this.buffer)
      return this._tree;
    let e = this.bufferNode, n = null, r = 0;
    if (e && e.context == this.buffer)
      e: for (let i = this.index, o = this.stack.length; o >= 0; ) {
        for (let s = e; s; s = s._parent)
          if (s.index == i) {
            if (i == this.index)
              return s;
            n = s, r = o + 1;
            break e;
          }
        i = this.stack[--o];
      }
    for (let i = r; i < this.stack.length; i++)
      n = new La(this.buffer, n, this.stack[i]);
    return this.bufferNode = new La(this.buffer, n, this.index);
  }
  /**
  Get the [tree](#common.Tree) that represents the current node, if
  any. Will return null when the node is in a [tree
  buffer](#common.TreeBuffer).
  */
  get tree() {
    return this.buffer ? null : this._tree._tree;
  }
  /**
  Iterate over the current node and all its descendants, calling
  `enter` when entering a node and `leave`, if given, when leaving
  one. When `enter` returns `false`, any children of that node are
  skipped, and `leave` isn't called for it.
  */
  iterate(e, n) {
    for (let r = 0; ; ) {
      let i = !1;
      if (this.type.isAnonymous || e(this) !== !1) {
        if (this.firstChild()) {
          r++;
          continue;
        }
        this.type.isAnonymous || (i = !0);
      }
      for (; ; ) {
        if (i && n && n(this), i = this.type.isAnonymous, !r)
          return;
        if (this.nextSibling())
          break;
        this.parent(), r--, i = !0;
      }
    }
  }
  /**
  Test whether the current node matches a given context—a sequence
  of direct parent node names. Empty strings in the context array
  are treated as wildcards.
  */
  matchContext(e) {
    if (!this.buffer)
      return Z0(this.node.parent, e);
    let { buffer: n } = this.buffer, { types: r } = n.set;
    for (let i = e.length - 1, o = this.stack.length - 1; i >= 0; o--) {
      if (o < 0)
        return Z0(this._tree, e, i);
      let s = r[n.buffer[this.stack[o]]];
      if (!s.isAnonymous) {
        if (e[i] && e[i] != s.name)
          return !1;
        i--;
      }
    }
    return !0;
  }
}
function I1(t) {
  return t.children.some((e) => e instanceof rl || !e.type.isAnonymous || I1(e));
}
function OI(t) {
  var e;
  let { buffer: n, nodeSet: r, maxBufferLength: i = $4, reused: o = [], minRepeatType: s = r.types.length } = t, a = Array.isArray(n) ? new D1(n, n.length) : n, l = r.types, u = 0, f = 0;
  function d(y, k, S, T, M, N) {
    let { id: z, start: L, end: W, size: ce } = a, te = f, we = u;
    for (; ce < 0; )
      if (a.next(), ce == -1) {
        let B = o[z];
        S.push(B), T.push(L - y);
        return;
      } else if (ce == -3) {
        u = z;
        return;
      } else if (ce == -4) {
        f = z;
        return;
      } else
        throw new RangeError(`Unrecognized record size: ${ce}`);
    let Ee = l[z], ae, re, G = L - y;
    if (W - L <= i && (re = g(a.pos - k, M))) {
      let B = new Uint16Array(re.size - re.skip), ie = a.pos - re.size, R = B.length;
      for (; a.pos > ie; )
        R = b(re.start, B, R);
      ae = new rl(B, W - re.start, r), G = re.start - y;
    } else {
      let B = a.pos - ce;
      a.next();
      let ie = [], R = [], O = z >= s ? z : -1, $ = 0, ne = W;
      for (; a.pos > B; )
        O >= 0 && a.id == O && a.size >= 0 ? (a.end <= ne - i && (m(ie, R, L, $, a.end, ne, O, te, we), $ = ie.length, ne = a.end), a.next()) : N > 2500 ? h(L, B, ie, R) : d(L, B, ie, R, O, N + 1);
      if (O >= 0 && $ > 0 && $ < ie.length && m(ie, R, L, $, L, ne, O, te, we), ie.reverse(), R.reverse(), O > -1 && $ > 0) {
        let je = p(Ee, we);
        ae = z1(Ee, ie, R, 0, ie.length, 0, W - L, je, je);
      } else
        ae = v(Ee, ie, R, W - L, te - W, we);
    }
    S.push(ae), T.push(G);
  }
  function h(y, k, S, T) {
    let M = [], N = 0, z = -1;
    for (; a.pos > k; ) {
      let { id: L, start: W, end: ce, size: te } = a;
      if (te > 4)
        a.next();
      else {
        if (z > -1 && W < z)
          break;
        z < 0 && (z = ce - i), M.push(L, W, ce), N++, a.next();
      }
    }
    if (N) {
      let L = new Uint16Array(N * 4), W = M[M.length - 2];
      for (let ce = M.length - 3, te = 0; ce >= 0; ce -= 3)
        L[te++] = M[ce], L[te++] = M[ce + 1] - W, L[te++] = M[ce + 2] - W, L[te++] = te;
      S.push(new rl(L, M[2] - W, r)), T.push(W - y);
    }
  }
  function p(y, k) {
    return (S, T, M) => {
      let N = 0, z = S.length - 1, L, W;
      if (z >= 0 && (L = S[z]) instanceof ci) {
        if (!z && L.type == y && L.length == M)
          return L;
        (W = L.prop(Cn.lookAhead)) && (N = T[z] + L.length + W);
      }
      return v(y, S, T, M, N, k);
    };
  }
  function m(y, k, S, T, M, N, z, L, W) {
    let ce = [], te = [];
    for (; y.length > T; )
      ce.push(y.pop()), te.push(k.pop() + S - M);
    y.push(v(r.types[z], ce, te, N - M, L - N, W)), k.push(M - S);
  }
  function v(y, k, S, T, M, N, z) {
    if (N) {
      let L = [Cn.contextHash, N];
      z = z ? [L].concat(z) : [L];
    }
    if (M > 25) {
      let L = [Cn.lookAhead, M];
      z = z ? [L].concat(z) : [L];
    }
    return new ci(y, k, S, T, z);
  }
  function g(y, k) {
    let S = a.fork(), T = 0, M = 0, N = 0, z = S.end - i, L = { size: 0, start: 0, skip: 0 };
    e: for (let W = S.pos - y; S.pos > W; ) {
      let ce = S.size;
      if (S.id == k && ce >= 0) {
        L.size = T, L.start = M, L.skip = N, N += 4, T += 4, S.next();
        continue;
      }
      let te = S.pos - ce;
      if (ce < 0 || te < W || S.start < z)
        break;
      let we = S.id >= s ? 4 : 0, Ee = S.start;
      for (S.next(); S.pos > te; ) {
        if (S.size < 0)
          if (S.size == -3)
            we += 4;
          else
            break e;
        else S.id >= s && (we += 4);
        S.next();
      }
      M = Ee, T += ce, N += we;
    }
    return (k < 0 || T == y) && (L.size = T, L.start = M, L.skip = N), L.size > 4 ? L : void 0;
  }
  function b(y, k, S) {
    let { id: T, start: M, end: N, size: z } = a;
    if (a.next(), z >= 0 && T < s) {
      let L = S;
      if (z > 4) {
        let W = a.pos - (z - 4);
        for (; a.pos > W; )
          S = b(y, k, S);
      }
      k[--S] = L, k[--S] = N - y, k[--S] = M - y, k[--S] = T;
    } else z == -3 ? u = T : z == -4 && (f = T);
    return S;
  }
  let x = [], w = [];
  for (; a.pos > 0; )
    d(t.start || 0, t.bufferStart || 0, x, w, -1, 0);
  let j = (e = t.length) !== null && e !== void 0 ? e : x.length ? w[0] + x[0].length : 0;
  return new ci(l[t.topID], x.reverse(), w.reverse(), j);
}
const l2 = /* @__PURE__ */ new WeakMap();
function yp(t, e) {
  if (!t.isAnonymous || e instanceof rl || e.type != t)
    return 1;
  let n = l2.get(e);
  if (n == null) {
    n = 1;
    for (let r of e.children) {
      if (r.type != t || !(r instanceof ci)) {
        n = 1;
        break;
      }
      n += yp(t, r);
    }
    l2.set(e, n);
  }
  return n;
}
function z1(t, e, n, r, i, o, s, a, l) {
  let u = 0;
  for (let m = r; m < i; m++)
    u += yp(t, e[m]);
  let f = Math.ceil(
    u * 1.5 / 8
    /* Balance.BranchFactor */
  ), d = [], h = [];
  function p(m, v, g, b, x) {
    for (let w = g; w < b; ) {
      let j = w, y = v[w], k = yp(t, m[w]);
      for (w++; w < b; w++) {
        let S = yp(t, m[w]);
        if (k + S >= f)
          break;
        k += S;
      }
      if (w == j + 1) {
        if (k > f) {
          let S = m[j];
          p(S.children, S.positions, 0, S.children.length, v[j] + x);
          continue;
        }
        d.push(m[j]);
      } else {
        let S = v[w - 1] + m[w - 1].length - y;
        d.push(z1(t, m, v, j, w, y, S, null, l));
      }
      h.push(y + x - o);
    }
  }
  return p(e, n, r, i, 0), (a || l)(d, h, s);
}
class Il {
  /**
  Construct a tree fragment. You'll usually want to use
  [`addTree`](#common.TreeFragment^addTree) and
  [`applyChanges`](#common.TreeFragment^applyChanges) instead of
  calling this directly.
  */
  constructor(e, n, r, i, o = !1, s = !1) {
    this.from = e, this.to = n, this.tree = r, this.offset = i, this.open = (o ? 1 : 0) | (s ? 2 : 0);
  }
  /**
  Whether the start of the fragment represents the start of a
  parse, or the end of a change. (In the second case, it may not
  be safe to reuse some nodes at the start, depending on the
  parsing algorithm.)
  */
  get openStart() {
    return (this.open & 1) > 0;
  }
  /**
  Whether the end of the fragment represents the end of a
  full-document parse, or the start of a change.
  */
  get openEnd() {
    return (this.open & 2) > 0;
  }
  /**
  Create a set of fragments from a freshly parsed tree, or update
  an existing set of fragments by replacing the ones that overlap
  with a tree with content from the new tree. When `partial` is
  true, the parse is treated as incomplete, and the resulting
  fragment has [`openEnd`](#common.TreeFragment.openEnd) set to
  true.
  */
  static addTree(e, n = [], r = !1) {
    let i = [new Il(0, e.length, e, 0, !1, r)];
    for (let o of n)
      o.to > e.length && i.push(o);
    return i;
  }
  /**
  Apply a set of edits to an array of fragments, removing or
  splitting fragments as necessary to remove edited ranges, and
  adjusting offsets for fragments that moved.
  */
  static applyChanges(e, n, r = 128) {
    if (!n.length)
      return e;
    let i = [], o = 1, s = e.length ? e[0] : null;
    for (let a = 0, l = 0, u = 0; ; a++) {
      let f = a < n.length ? n[a] : null, d = f ? f.fromA : 1e9;
      if (d - l >= r)
        for (; s && s.from < d; ) {
          let h = s;
          if (l >= h.from || d <= h.to || u) {
            let p = Math.max(h.from, l) - u, m = Math.min(h.to, d) - u;
            h = p >= m ? null : new Il(p, m, h.tree, h.offset + u, a > 0, !!f);
          }
          if (h && i.push(h), s.to > d)
            break;
          s = o < e.length ? e[o++] : null;
        }
      if (!f)
        break;
      l = f.toA, u = f.toA - f.toB;
    }
    return i;
  }
}
class D4 {
  /**
  Start a parse, returning a [partial parse](#common.PartialParse)
  object. [`fragments`](#common.TreeFragment) can be passed in to
  make the parse incremental.
  
  By default, the entire input is parsed. You can pass `ranges`,
  which should be a sorted array of non-empty, non-overlapping
  ranges, to parse only those ranges. The tree returned in that
  case will start at `ranges[0].from`.
  */
  startParse(e, n, r) {
    return typeof e == "string" && (e = new EI(e)), r = r ? r.length ? r.map((i) => new gv(i.from, i.to)) : [new gv(0, 0)] : [new gv(0, e.length)], this.createParse(e, n || [], r);
  }
  /**
  Run a full parse, returning the resulting tree.
  */
  parse(e, n, r) {
    let i = this.startParse(e, n, r);
    for (; ; ) {
      let o = i.advance();
      if (o)
        return o;
    }
  }
}
class EI {
  constructor(e) {
    this.string = e;
  }
  get length() {
    return this.string.length;
  }
  chunk(e) {
    return this.string.slice(e);
  }
  get lineChunks() {
    return !1;
  }
  read(e, n) {
    return this.string.slice(e, n);
  }
}
new Cn({ perNode: !0 });
let _I = 0;
class Ao {
  /**
  @internal
  */
  constructor(e, n, r, i) {
    this.name = e, this.set = n, this.base = r, this.modified = i, this.id = _I++;
  }
  toString() {
    let { name: e } = this;
    for (let n of this.modified)
      n.name && (e = `${n.name}(${e})`);
    return e;
  }
  static define(e, n) {
    let r = typeof e == "string" ? e : "?";
    if (e instanceof Ao && (n = e), n?.base)
      throw new Error("Can not derive from a modified tag");
    let i = new Ao(r, [], null, []);
    if (i.set.push(i), n)
      for (let o of n.set)
        i.set.push(o);
    return i;
  }
  /**
  Define a tag _modifier_, which is a function that, given a tag,
  will return a tag that is a subtag of the original. Applying the
  same modifier to a twice tag will return the same value (`m1(t1)
  == m1(t1)`) and applying multiple modifiers will, regardless or
  order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).
  
  When multiple modifiers are applied to a given base tag, each
  smaller set of modifiers is registered as a parent, so that for
  example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,
  `m1(m3(t1)`, and so on.
  */
  static defineModifier(e) {
    let n = new Yp(e);
    return (r) => r.modified.indexOf(n) > -1 ? r : Yp.get(r.base || r, r.modified.concat(n).sort((i, o) => i.id - o.id));
  }
}
let AI = 0;
class Yp {
  constructor(e) {
    this.name = e, this.instances = [], this.id = AI++;
  }
  static get(e, n) {
    if (!n.length)
      return e;
    let r = n[0].instances.find((a) => a.base == e && MI(n, a.modified));
    if (r)
      return r;
    let i = [], o = new Ao(e.name, i, e, n);
    for (let a of n)
      a.instances.push(o);
    let s = TI(n);
    for (let a of e.set)
      if (!a.modified.length)
        for (let l of s)
          i.push(Yp.get(a, l));
    return o;
  }
}
function MI(t, e) {
  return t.length == e.length && t.every((n, r) => n == e[r]);
}
function TI(t) {
  let e = [[]];
  for (let n = 0; n < t.length; n++)
    for (let r = 0, i = e.length; r < i; r++)
      e.push(e[r].concat(t[n]));
  return e.sort((n, r) => r.length - n.length);
}
function I4(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let r = t[n];
    Array.isArray(r) || (r = [r]);
    for (let i of n.split(" "))
      if (i) {
        let o = [], s = 2, a = i;
        for (let d = 0; ; ) {
          if (a == "..." && d > 0 && d + 3 == i.length) {
            s = 1;
            break;
          }
          let h = /^"(?:[^"\\]|\\.)*?"|[^\/!]+/.exec(a);
          if (!h)
            throw new RangeError("Invalid path: " + i);
          if (o.push(h[0] == "*" ? "" : h[0][0] == '"' ? JSON.parse(h[0]) : h[0]), d += h[0].length, d == i.length)
            break;
          let p = i[d++];
          if (d == i.length && p == "!") {
            s = 0;
            break;
          }
          if (p != "/")
            throw new RangeError("Invalid path: " + i);
          a = i.slice(d);
        }
        let l = o.length - 1, u = o[l];
        if (!u)
          throw new RangeError("Invalid path: " + i);
        let f = new Qp(r, s, l > 0 ? o.slice(0, l) : null);
        e[u] = f.sort(e[u]);
      }
  }
  return z4.add(e);
}
const z4 = new Cn();
class Qp {
  constructor(e, n, r, i) {
    this.tags = e, this.mode = n, this.context = r, this.next = i;
  }
  get opaque() {
    return this.mode == 0;
  }
  get inherit() {
    return this.mode == 1;
  }
  sort(e) {
    return !e || e.depth < this.depth ? (this.next = e, this) : (e.next = this.sort(e.next), e);
  }
  get depth() {
    return this.context ? this.context.length : 0;
  }
}
Qp.empty = new Qp([], 2, null);
function L4(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let o of t)
    if (!Array.isArray(o.tag))
      n[o.tag.id] = o.class;
    else
      for (let s of o.tag)
        n[s.id] = o.class;
  let { scope: r, all: i = null } = e || {};
  return {
    style: (o) => {
      let s = i;
      for (let a of o)
        for (let l of a.set) {
          let u = n[l.id];
          if (u) {
            s = s ? s + " " + u : u;
            break;
          }
        }
      return s;
    },
    scope: r
  };
}
function $I(t, e) {
  let n = null;
  for (let r of t) {
    let i = r.style(e);
    i && (n = n ? n + " " + i : i);
  }
  return n;
}
function PI(t, e, n, r = 0, i = t.length) {
  let o = new RI(r, Array.isArray(e) ? e : [e], n);
  o.highlightRange(t.cursor(), r, i, "", o.highlighters), o.flush(i);
}
class RI {
  constructor(e, n, r) {
    this.at = e, this.highlighters = n, this.span = r, this.class = "";
  }
  startSpan(e, n) {
    n != this.class && (this.flush(e), e > this.at && (this.at = e), this.class = n);
  }
  flush(e) {
    e > this.at && this.class && this.span(this.at, e, this.class);
  }
  highlightRange(e, n, r, i, o) {
    let { type: s, from: a, to: l } = e;
    if (a >= r || l <= n)
      return;
    s.isTop && (o = this.highlighters.filter((p) => !p.scope || p.scope(s)));
    let u = i, f = NI(e) || Qp.empty, d = $I(o, f.tags);
    if (d && (u && (u += " "), u += d, f.mode == 1 && (i += (i ? " " : "") + d)), this.startSpan(Math.max(n, a), u), f.opaque)
      return;
    let h = e.tree && e.tree.prop(Cn.mounted);
    if (h && h.overlay) {
      let p = e.node.enter(h.overlay[0].from + a, 1), m = this.highlighters.filter((g) => !g.scope || g.scope(h.tree.type)), v = e.firstChild();
      for (let g = 0, b = a; ; g++) {
        let x = g < h.overlay.length ? h.overlay[g] : null, w = x ? x.from + a : l, j = Math.max(n, b), y = Math.min(r, w);
        if (j < y && v)
          for (; e.from < y && (this.highlightRange(e, j, y, i, o), this.startSpan(Math.min(y, e.to), u), !(e.to >= w || !e.nextSibling())); )
            ;
        if (!x || w > r)
          break;
        b = x.to + a, b > n && (this.highlightRange(p.cursor(), Math.max(n, x.from + a), Math.min(r, b), "", m), this.startSpan(Math.min(r, b), u));
      }
      v && e.parent();
    } else if (e.firstChild()) {
      h && (i = "");
      do
        if (!(e.to <= n)) {
          if (e.from >= r)
            break;
          this.highlightRange(e, n, r, i, o), this.startSpan(Math.min(r, e.to), u);
        }
      while (e.nextSibling());
      e.parent();
    }
  }
}
function NI(t) {
  let e = t.type.prop(z4);
  for (; e && e.context && !t.matchContext(e.context); )
    e = e.next;
  return e || null;
}
const Ye = Ao.define, Nh = Ye(), Ma = Ye(), c2 = Ye(Ma), u2 = Ye(Ma), Ta = Ye(), Dh = Ye(Ta), vv = Ye(Ta), bs = Ye(), Ol = Ye(bs), gs = Ye(), vs = Ye(), tb = Ye(), Uu = Ye(tb), Ih = Ye(), Ve = {
  /**
  A comment.
  */
  comment: Nh,
  /**
  A line [comment](#highlight.tags.comment).
  */
  lineComment: Ye(Nh),
  /**
  A block [comment](#highlight.tags.comment).
  */
  blockComment: Ye(Nh),
  /**
  A documentation [comment](#highlight.tags.comment).
  */
  docComment: Ye(Nh),
  /**
  Any kind of identifier.
  */
  name: Ma,
  /**
  The [name](#highlight.tags.name) of a variable.
  */
  variableName: Ye(Ma),
  /**
  A type [name](#highlight.tags.name).
  */
  typeName: c2,
  /**
  A tag name (subtag of [`typeName`](#highlight.tags.typeName)).
  */
  tagName: Ye(c2),
  /**
  A property or field [name](#highlight.tags.name).
  */
  propertyName: u2,
  /**
  An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).
  */
  attributeName: Ye(u2),
  /**
  The [name](#highlight.tags.name) of a class.
  */
  className: Ye(Ma),
  /**
  A label [name](#highlight.tags.name).
  */
  labelName: Ye(Ma),
  /**
  A namespace [name](#highlight.tags.name).
  */
  namespace: Ye(Ma),
  /**
  The [name](#highlight.tags.name) of a macro.
  */
  macroName: Ye(Ma),
  /**
  A literal value.
  */
  literal: Ta,
  /**
  A string [literal](#highlight.tags.literal).
  */
  string: Dh,
  /**
  A documentation [string](#highlight.tags.string).
  */
  docString: Ye(Dh),
  /**
  A character literal (subtag of [string](#highlight.tags.string)).
  */
  character: Ye(Dh),
  /**
  An attribute value (subtag of [string](#highlight.tags.string)).
  */
  attributeValue: Ye(Dh),
  /**
  A number [literal](#highlight.tags.literal).
  */
  number: vv,
  /**
  An integer [number](#highlight.tags.number) literal.
  */
  integer: Ye(vv),
  /**
  A floating-point [number](#highlight.tags.number) literal.
  */
  float: Ye(vv),
  /**
  A boolean [literal](#highlight.tags.literal).
  */
  bool: Ye(Ta),
  /**
  Regular expression [literal](#highlight.tags.literal).
  */
  regexp: Ye(Ta),
  /**
  An escape [literal](#highlight.tags.literal), for example a
  backslash escape in a string.
  */
  escape: Ye(Ta),
  /**
  A color [literal](#highlight.tags.literal).
  */
  color: Ye(Ta),
  /**
  A URL [literal](#highlight.tags.literal).
  */
  url: Ye(Ta),
  /**
  A language keyword.
  */
  keyword: gs,
  /**
  The [keyword](#highlight.tags.keyword) for the self or this
  object.
  */
  self: Ye(gs),
  /**
  The [keyword](#highlight.tags.keyword) for null.
  */
  null: Ye(gs),
  /**
  A [keyword](#highlight.tags.keyword) denoting some atomic value.
  */
  atom: Ye(gs),
  /**
  A [keyword](#highlight.tags.keyword) that represents a unit.
  */
  unit: Ye(gs),
  /**
  A modifier [keyword](#highlight.tags.keyword).
  */
  modifier: Ye(gs),
  /**
  A [keyword](#highlight.tags.keyword) that acts as an operator.
  */
  operatorKeyword: Ye(gs),
  /**
  A control-flow related [keyword](#highlight.tags.keyword).
  */
  controlKeyword: Ye(gs),
  /**
  A [keyword](#highlight.tags.keyword) that defines something.
  */
  definitionKeyword: Ye(gs),
  /**
  A [keyword](#highlight.tags.keyword) related to defining or
  interfacing with modules.
  */
  moduleKeyword: Ye(gs),
  /**
  An operator.
  */
  operator: vs,
  /**
  An [operator](#highlight.tags.operator) that dereferences something.
  */
  derefOperator: Ye(vs),
  /**
  Arithmetic-related [operator](#highlight.tags.operator).
  */
  arithmeticOperator: Ye(vs),
  /**
  Logical [operator](#highlight.tags.operator).
  */
  logicOperator: Ye(vs),
  /**
  Bit [operator](#highlight.tags.operator).
  */
  bitwiseOperator: Ye(vs),
  /**
  Comparison [operator](#highlight.tags.operator).
  */
  compareOperator: Ye(vs),
  /**
  [Operator](#highlight.tags.operator) that updates its operand.
  */
  updateOperator: Ye(vs),
  /**
  [Operator](#highlight.tags.operator) that defines something.
  */
  definitionOperator: Ye(vs),
  /**
  Type-related [operator](#highlight.tags.operator).
  */
  typeOperator: Ye(vs),
  /**
  Control-flow [operator](#highlight.tags.operator).
  */
  controlOperator: Ye(vs),
  /**
  Program or markup punctuation.
  */
  punctuation: tb,
  /**
  [Punctuation](#highlight.tags.punctuation) that separates
  things.
  */
  separator: Ye(tb),
  /**
  Bracket-style [punctuation](#highlight.tags.punctuation).
  */
  bracket: Uu,
  /**
  Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`
  tokens).
  */
  angleBracket: Ye(Uu),
  /**
  Square [brackets](#highlight.tags.bracket) (usually `[` and `]`
  tokens).
  */
  squareBracket: Ye(Uu),
  /**
  Parentheses (usually `(` and `)` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  paren: Ye(Uu),
  /**
  Braces (usually `{` and `}` tokens). Subtag of
  [bracket](#highlight.tags.bracket).
  */
  brace: Ye(Uu),
  /**
  Content, for example plain text in XML or markup documents.
  */
  content: bs,
  /**
  [Content](#highlight.tags.content) that represents a heading.
  */
  heading: Ol,
  /**
  A level 1 [heading](#highlight.tags.heading).
  */
  heading1: Ye(Ol),
  /**
  A level 2 [heading](#highlight.tags.heading).
  */
  heading2: Ye(Ol),
  /**
  A level 3 [heading](#highlight.tags.heading).
  */
  heading3: Ye(Ol),
  /**
  A level 4 [heading](#highlight.tags.heading).
  */
  heading4: Ye(Ol),
  /**
  A level 5 [heading](#highlight.tags.heading).
  */
  heading5: Ye(Ol),
  /**
  A level 6 [heading](#highlight.tags.heading).
  */
  heading6: Ye(Ol),
  /**
  A prose [content](#highlight.tags.content) separator (such as a horizontal rule).
  */
  contentSeparator: Ye(bs),
  /**
  [Content](#highlight.tags.content) that represents a list.
  */
  list: Ye(bs),
  /**
  [Content](#highlight.tags.content) that represents a quote.
  */
  quote: Ye(bs),
  /**
  [Content](#highlight.tags.content) that is emphasized.
  */
  emphasis: Ye(bs),
  /**
  [Content](#highlight.tags.content) that is styled strong.
  */
  strong: Ye(bs),
  /**
  [Content](#highlight.tags.content) that is part of a link.
  */
  link: Ye(bs),
  /**
  [Content](#highlight.tags.content) that is styled as code or
  monospace.
  */
  monospace: Ye(bs),
  /**
  [Content](#highlight.tags.content) that has a strike-through
  style.
  */
  strikethrough: Ye(bs),
  /**
  Inserted text in a change-tracking format.
  */
  inserted: Ye(),
  /**
  Deleted text.
  */
  deleted: Ye(),
  /**
  Changed text.
  */
  changed: Ye(),
  /**
  An invalid or unsyntactic element.
  */
  invalid: Ye(),
  /**
  Metadata or meta-instruction.
  */
  meta: Ih,
  /**
  [Metadata](#highlight.tags.meta) that applies to the entire
  document.
  */
  documentMeta: Ye(Ih),
  /**
  [Metadata](#highlight.tags.meta) that annotates or adds
  attributes to a given syntactic element.
  */
  annotation: Ye(Ih),
  /**
  Processing instruction or preprocessor directive. Subtag of
  [meta](#highlight.tags.meta).
  */
  processingInstruction: Ye(Ih),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that a
  given element is being defined. Expected to be used with the
  various [name](#highlight.tags.name) tags.
  */
  definition: Ao.defineModifier("definition"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates that
  something is constant. Mostly expected to be used with
  [variable names](#highlight.tags.variableName).
  */
  constant: Ao.defineModifier("constant"),
  /**
  [Modifier](#highlight.Tag^defineModifier) used to indicate that
  a [variable](#highlight.tags.variableName) or [property
  name](#highlight.tags.propertyName) is being called or defined
  as a function.
  */
  function: Ao.defineModifier("function"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that can be applied to
  [names](#highlight.tags.name) to indicate that they belong to
  the language's standard environment.
  */
  standard: Ao.defineModifier("standard"),
  /**
  [Modifier](#highlight.Tag^defineModifier) that indicates a given
  [names](#highlight.tags.name) is local to some scope.
  */
  local: Ao.defineModifier("local"),
  /**
  A generic variant [modifier](#highlight.Tag^defineModifier) that
  can be used to tag language-specific alternative variants of
  some common tag. It is recommended for themes to define special
  forms of at least the [string](#highlight.tags.string) and
  [variable name](#highlight.tags.variableName) tags, since those
  come up a lot.
  */
  special: Ao.defineModifier("special")
};
for (let t in Ve) {
  let e = Ve[t];
  e instanceof Ao && (e.name = t);
}
L4([
  { tag: Ve.link, class: "tok-link" },
  { tag: Ve.heading, class: "tok-heading" },
  { tag: Ve.emphasis, class: "tok-emphasis" },
  { tag: Ve.strong, class: "tok-strong" },
  { tag: Ve.keyword, class: "tok-keyword" },
  { tag: Ve.atom, class: "tok-atom" },
  { tag: Ve.bool, class: "tok-bool" },
  { tag: Ve.url, class: "tok-url" },
  { tag: Ve.labelName, class: "tok-labelName" },
  { tag: Ve.inserted, class: "tok-inserted" },
  { tag: Ve.deleted, class: "tok-deleted" },
  { tag: Ve.literal, class: "tok-literal" },
  { tag: Ve.string, class: "tok-string" },
  { tag: Ve.number, class: "tok-number" },
  { tag: [Ve.regexp, Ve.escape, Ve.special(Ve.string)], class: "tok-string2" },
  { tag: Ve.variableName, class: "tok-variableName" },
  { tag: Ve.local(Ve.variableName), class: "tok-variableName tok-local" },
  { tag: Ve.definition(Ve.variableName), class: "tok-variableName tok-definition" },
  { tag: Ve.special(Ve.variableName), class: "tok-variableName2" },
  { tag: Ve.definition(Ve.propertyName), class: "tok-propertyName tok-definition" },
  { tag: Ve.typeName, class: "tok-typeName" },
  { tag: Ve.namespace, class: "tok-namespace" },
  { tag: Ve.className, class: "tok-className" },
  { tag: Ve.macroName, class: "tok-macroName" },
  { tag: Ve.propertyName, class: "tok-propertyName" },
  { tag: Ve.operator, class: "tok-operator" },
  { tag: Ve.comment, class: "tok-comment" },
  { tag: Ve.meta, class: "tok-meta" },
  { tag: Ve.invalid, class: "tok-invalid" },
  { tag: Ve.punctuation, class: "tok-punctuation" }
]);
var bv;
const Nc = /* @__PURE__ */ new Cn();
function DI(t) {
  return lt.define({
    combine: t ? (e) => e.concat(t) : void 0
  });
}
const II = /* @__PURE__ */ new Cn();
class Ko {
  /**
  Construct a language object. If you need to invoke this
  directly, first define a data facet with
  [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then
  configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it
  to the language's outer syntax node.
  */
  constructor(e, n, r = [], i = "") {
    this.data = e, this.name = i, En.prototype.hasOwnProperty("tree") || Object.defineProperty(En.prototype, "tree", { get() {
      return Bi(this);
    } }), this.parser = n, this.extension = [
      il.of(this),
      En.languageData.of((o, s, a) => {
        let l = f2(o, s, a), u = l.type.prop(Nc);
        if (!u)
          return [];
        let f = o.facet(u), d = l.type.prop(II);
        if (d) {
          let h = l.resolve(s - l.from, a);
          for (let p of d)
            if (p.test(h, o)) {
              let m = o.facet(p.facet);
              return p.type == "replace" ? m : m.concat(f);
            }
        }
        return f;
      })
    ].concat(r);
  }
  /**
  Query whether this language is active at the given position.
  */
  isActiveAt(e, n, r = -1) {
    return f2(e, n, r).type.prop(Nc) == this.data;
  }
  /**
  Find the document regions that were parsed using this language.
  The returned regions will _include_ any nested languages rooted
  in this language, when those exist.
  */
  findRegions(e) {
    let n = e.facet(il);
    if (n?.data == this.data)
      return [{ from: 0, to: e.doc.length }];
    if (!n || !n.allowsNesting)
      return [];
    let r = [], i = (o, s) => {
      if (o.prop(Nc) == this.data) {
        r.push({ from: s, to: s + o.length });
        return;
      }
      let a = o.prop(Cn.mounted);
      if (a) {
        if (a.tree.prop(Nc) == this.data) {
          if (a.overlay)
            for (let l of a.overlay)
              r.push({ from: l.from + s, to: l.to + s });
          else
            r.push({ from: s, to: s + o.length });
          return;
        } else if (a.overlay) {
          let l = r.length;
          if (i(a.tree, a.overlay[0].from + s), r.length > l)
            return;
        }
      }
      for (let l = 0; l < o.children.length; l++) {
        let u = o.children[l];
        u instanceof ci && i(u, o.positions[l] + s);
      }
    };
    return i(Bi(e), 0), r;
  }
  /**
  Indicates whether this language allows nested languages. The
  default implementation returns true.
  */
  get allowsNesting() {
    return !0;
  }
}
Ko.setState = /* @__PURE__ */ vn.define();
function f2(t, e, n) {
  let r = t.facet(il), i = Bi(t).topNode;
  if (!r || r.allowsNesting)
    for (let o = i; o; o = o.enter(e, n, vi.ExcludeBuffers))
      o.type.isTop && (i = o);
  return i;
}
class Xp extends Ko {
  constructor(e, n, r) {
    super(e, n, [], r), this.parser = n;
  }
  /**
  Define a language from a parser.
  */
  static define(e) {
    let n = DI(e.languageData);
    return new Xp(n, e.parser.configure({
      props: [Nc.add((r) => r.isTop ? n : void 0)]
    }), e.name);
  }
  /**
  Create a new instance of this language with a reconfigured
  version of its parser and optionally a new name.
  */
  configure(e, n) {
    return new Xp(this.data, this.parser.configure(e), n || this.name);
  }
  get allowsNesting() {
    return this.parser.hasWrappers();
  }
}
function Bi(t) {
  let e = t.field(Ko.state, !1);
  return e ? e.tree : ci.empty;
}
class zI {
  /**
  Create an input object for the given document.
  */
  constructor(e) {
    this.doc = e, this.cursorPos = 0, this.string = "", this.cursor = e.iter();
  }
  get length() {
    return this.doc.length;
  }
  syncTo(e) {
    return this.string = this.cursor.next(e - this.cursorPos).value, this.cursorPos = e + this.string.length, this.cursorPos - this.string.length;
  }
  chunk(e) {
    return this.syncTo(e), this.string;
  }
  get lineChunks() {
    return !0;
  }
  read(e, n) {
    let r = this.cursorPos - this.string.length;
    return e < r || n >= this.cursorPos ? this.doc.sliceString(e, n) : this.string.slice(e - r, n - r);
  }
}
let Vu = null;
class Zp {
  constructor(e, n, r = [], i, o, s, a, l) {
    this.parser = e, this.state = n, this.fragments = r, this.tree = i, this.treeLen = o, this.viewport = s, this.skipped = a, this.scheduleOn = l, this.parse = null, this.tempSkipped = [];
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new Zp(e, n, [], ci.empty, 0, r, [], null);
  }
  startParse() {
    return this.parser.startParse(new zI(this.state.doc), this.fragments);
  }
  /**
  @internal
  */
  work(e, n) {
    return n != null && n >= this.state.doc.length && (n = void 0), this.tree != ci.empty && this.isDone(n ?? this.state.doc.length) ? (this.takeTree(), !0) : this.withContext(() => {
      var r;
      if (typeof e == "number") {
        let i = Date.now() + e;
        e = () => Date.now() > i;
      }
      for (this.parse || (this.parse = this.startParse()), n != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > n) && n < this.state.doc.length && this.parse.stopAt(n); ; ) {
        let i = this.parse.advance();
        if (i)
          if (this.fragments = this.withoutTempSkipped(Il.addTree(i, this.fragments, this.parse.stoppedAt != null)), this.treeLen = (r = this.parse.stoppedAt) !== null && r !== void 0 ? r : this.state.doc.length, this.tree = i, this.parse = null, this.treeLen < (n ?? this.state.doc.length))
            this.parse = this.startParse();
          else
            return !0;
        if (e())
          return !1;
      }
    });
  }
  /**
  @internal
  */
  takeTree() {
    let e, n;
    this.parse && (e = this.parse.parsedPos) >= this.treeLen && ((this.parse.stoppedAt == null || this.parse.stoppedAt > e) && this.parse.stopAt(e), this.withContext(() => {
      for (; !(n = this.parse.advance()); )
        ;
    }), this.treeLen = e, this.tree = n, this.fragments = this.withoutTempSkipped(Il.addTree(this.tree, this.fragments, !0)), this.parse = null);
  }
  withContext(e) {
    let n = Vu;
    Vu = this;
    try {
      return e();
    } finally {
      Vu = n;
    }
  }
  withoutTempSkipped(e) {
    for (let n; n = this.tempSkipped.pop(); )
      e = d2(e, n.from, n.to);
    return e;
  }
  /**
  @internal
  */
  changes(e, n) {
    let { fragments: r, tree: i, treeLen: o, viewport: s, skipped: a } = this;
    if (this.takeTree(), !e.empty) {
      let l = [];
      if (e.iterChangedRanges((u, f, d, h) => l.push({ fromA: u, toA: f, fromB: d, toB: h })), r = Il.applyChanges(r, l), i = ci.empty, o = 0, s = { from: e.mapPos(s.from, -1), to: e.mapPos(s.to, 1) }, this.skipped.length) {
        a = [];
        for (let u of this.skipped) {
          let f = e.mapPos(u.from, 1), d = e.mapPos(u.to, -1);
          f < d && a.push({ from: f, to: d });
        }
      }
    }
    return new Zp(this.parser, n, r, i, o, s, a, this.scheduleOn);
  }
  /**
  @internal
  */
  updateViewport(e) {
    if (this.viewport.from == e.from && this.viewport.to == e.to)
      return !1;
    this.viewport = e;
    let n = this.skipped.length;
    for (let r = 0; r < this.skipped.length; r++) {
      let { from: i, to: o } = this.skipped[r];
      i < e.to && o > e.from && (this.fragments = d2(this.fragments, i, o), this.skipped.splice(r--, 1));
    }
    return this.skipped.length >= n ? !1 : (this.reset(), !0);
  }
  /**
  @internal
  */
  reset() {
    this.parse && (this.takeTree(), this.parse = null);
  }
  /**
  Notify the parse scheduler that the given region was skipped
  because it wasn't in view, and the parse should be restarted
  when it comes into view.
  */
  skipUntilInView(e, n) {
    this.skipped.push({ from: e, to: n });
  }
  /**
  Returns a parser intended to be used as placeholder when
  asynchronously loading a nested parser. It'll skip its input and
  mark it as not-really-parsed, so that the next update will parse
  it again.
  
  When `until` is given, a reparse will be scheduled when that
  promise resolves.
  */
  static getSkippingParser(e) {
    return new class extends D4 {
      createParse(n, r, i) {
        let o = i[0].from, s = i[i.length - 1].to;
        return {
          parsedPos: o,
          advance() {
            let l = Vu;
            if (l) {
              for (let u of i)
                l.tempSkipped.push(u);
              e && (l.scheduleOn = l.scheduleOn ? Promise.all([l.scheduleOn, e]) : e);
            }
            return this.parsedPos = s, new ci(oo.none, [], [], s - o);
          },
          stoppedAt: null,
          stopAt() {
          }
        };
      }
    }();
  }
  /**
  @internal
  */
  isDone(e) {
    e = Math.min(e, this.state.doc.length);
    let n = this.fragments;
    return this.treeLen >= e && n.length && n[0].from == 0 && n[0].to >= e;
  }
  /**
  Get the context for the current parse, or `null` if no editor
  parse is in progress.
  */
  static get() {
    return Vu;
  }
}
function d2(t, e, n) {
  return Il.applyChanges(t, [{ fromA: e, toA: n, fromB: e, toB: n }]);
}
class au {
  constructor(e) {
    this.context = e, this.tree = e.tree;
  }
  apply(e) {
    if (!e.docChanged && this.tree == this.context.tree)
      return this;
    let n = this.context.changes(e.changes, e.state), r = this.context.treeLen == e.startState.doc.length ? void 0 : Math.max(e.changes.mapPos(this.context.treeLen), n.viewport.to);
    return n.work(20, r) || n.takeTree(), new au(n);
  }
  static init(e) {
    let n = Math.min(3e3, e.doc.length), r = Zp.create(e.facet(il).parser, e, { from: 0, to: n });
    return r.work(20, n) || r.takeTree(), new au(r);
  }
}
Ko.state = /* @__PURE__ */ wi.define({
  create: au.init,
  update(t, e) {
    for (let n of e.effects)
      if (n.is(Ko.setState))
        return n.value;
    return e.startState.facet(il) != e.state.facet(il) ? au.init(e.state) : t.apply(e);
  }
});
let B4 = (t) => {
  let e = setTimeout(
    () => t(),
    500
    /* Work.MaxPause */
  );
  return () => clearTimeout(e);
};
typeof requestIdleCallback < "u" && (B4 = (t) => {
  let e = -1, n = setTimeout(
    () => {
      e = requestIdleCallback(t, {
        timeout: 400
        /* Work.MinPause */
      });
    },
    100
    /* Work.MinPause */
  );
  return () => e < 0 ? clearTimeout(n) : cancelIdleCallback(e);
});
const yv = typeof navigator < "u" && (!((bv = navigator.scheduling) === null || bv === void 0) && bv.isInputPending) ? () => navigator.scheduling.isInputPending() : null, LI = /* @__PURE__ */ Gr.fromClass(class {
  constructor(e) {
    this.view = e, this.working = null, this.workScheduled = 0, this.chunkEnd = -1, this.chunkBudget = -1, this.work = this.work.bind(this), this.scheduleWork();
  }
  update(e) {
    let n = this.view.state.field(Ko.state).context;
    (n.updateViewport(e.view.viewport) || this.view.viewport.to > n.treeLen) && this.scheduleWork(), (e.docChanged || e.selectionSet) && (this.view.hasFocus && (this.chunkBudget += 50), this.scheduleWork()), this.checkAsyncSchedule(n);
  }
  scheduleWork() {
    if (this.working)
      return;
    let { state: e } = this.view, n = e.field(Ko.state);
    (n.tree != n.context.tree || !n.context.isDone(e.doc.length)) && (this.working = B4(this.work));
  }
  work(e) {
    this.working = null;
    let n = Date.now();
    if (this.chunkEnd < n && (this.chunkEnd < 0 || this.view.hasFocus) && (this.chunkEnd = n + 3e4, this.chunkBudget = 3e3), this.chunkBudget <= 0)
      return;
    let { state: r, viewport: { to: i } } = this.view, o = r.field(Ko.state);
    if (o.tree == o.context.tree && o.context.isDone(
      i + 1e5
      /* Work.MaxParseAhead */
    ))
      return;
    let s = Date.now() + Math.min(this.chunkBudget, 100, e && !yv ? Math.max(25, e.timeRemaining() - 5) : 1e9), a = o.context.treeLen < i && r.doc.length > i + 1e3, l = o.context.work(() => yv && yv() || Date.now() > s, i + (a ? 0 : 1e5));
    this.chunkBudget -= Date.now() - n, (l || this.chunkBudget <= 0) && (o.context.takeTree(), this.view.dispatch({ effects: Ko.setState.of(new au(o.context)) })), this.chunkBudget > 0 && !(l && !a) && this.scheduleWork(), this.checkAsyncSchedule(o.context);
  }
  checkAsyncSchedule(e) {
    e.scheduleOn && (this.workScheduled++, e.scheduleOn.then(() => this.scheduleWork()).catch((n) => Wi(this.view.state, n)).then(() => this.workScheduled--), e.scheduleOn = null);
  }
  destroy() {
    this.working && this.working();
  }
  isWorking() {
    return !!(this.working || this.workScheduled > 0);
  }
}, {
  eventHandlers: { focus() {
    this.scheduleWork();
  } }
}), il = /* @__PURE__ */ lt.define({
  combine(t) {
    return t.length ? t[0] : null;
  },
  enables: (t) => [
    Ko.state,
    LI,
    nt.contentAttributes.compute([t], (e) => {
      let n = e.facet(t);
      return n && n.name ? { "data-language": n.name } : {};
    })
  ]
});
class BI {
  /**
  Create a language support object.
  */
  constructor(e, n = []) {
    this.language = e, this.support = n, this.extension = [e, n];
  }
}
const qI = /* @__PURE__ */ lt.define(), ig = /* @__PURE__ */ lt.define({
  combine: (t) => {
    if (!t.length)
      return "  ";
    let e = t[0];
    if (!e || /\S/.test(e) || Array.from(e).some((n) => n != e[0]))
      throw new Error("Invalid indent unit: " + JSON.stringify(t[0]));
    return e;
  }
});
function ol(t) {
  let e = t.facet(ig);
  return e.charCodeAt(0) == 9 ? t.tabSize * e.length : e.length;
}
function Nf(t, e) {
  let n = "", r = t.tabSize, i = t.facet(ig)[0];
  if (i == "	") {
    for (; e >= r; )
      n += "	", e -= r;
    i = " ";
  }
  for (let o = 0; o < e; o++)
    n += i;
  return n;
}
function L1(t, e) {
  t instanceof En && (t = new og(t));
  for (let r of t.state.facet(qI)) {
    let i = r(t, e);
    if (i !== void 0)
      return i;
  }
  let n = Bi(t.state);
  return n.length >= e ? FI(t, n, e) : null;
}
class og {
  /**
  Create an indent context.
  */
  constructor(e, n = {}) {
    this.state = e, this.options = n, this.unit = ol(e);
  }
  /**
  Get a description of the line at the given position, taking
  [simulated line
  breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  into account. If there is such a break at `pos`, the `bias`
  argument determines whether the part of the line line before or
  after the break is used.
  */
  lineAt(e, n = 1) {
    let r = this.state.doc.lineAt(e), { simulateBreak: i, simulateDoubleBreak: o } = this.options;
    return i != null && i >= r.from && i <= r.to ? o && i == e ? { text: "", from: e } : (n < 0 ? i < e : i <= e) ? { text: r.text.slice(i - r.from), from: i } : { text: r.text.slice(0, i - r.from), from: r.from } : r;
  }
  /**
  Get the text directly after `pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  textAfterPos(e, n = 1) {
    if (this.options.simulateDoubleBreak && e == this.options.simulateBreak)
      return "";
    let { text: r, from: i } = this.lineAt(e, n);
    return r.slice(e - i, Math.min(r.length, e + 100 - i));
  }
  /**
  Find the column for the given position.
  */
  column(e, n = 1) {
    let { text: r, from: i } = this.lineAt(e, n), o = this.countColumn(r, e - i), s = this.options.overrideIndentation ? this.options.overrideIndentation(i) : -1;
    return s > -1 && (o += s - this.countColumn(r, r.search(/\S|$/))), o;
  }
  /**
  Find the column position (taking tabs into account) of the given
  position in the given string.
  */
  countColumn(e, n = e.length) {
    return xu(e, this.state.tabSize, n);
  }
  /**
  Find the indentation column of the line at the given point.
  */
  lineIndent(e, n = 1) {
    let { text: r, from: i } = this.lineAt(e, n), o = this.options.overrideIndentation;
    if (o) {
      let s = o(i);
      if (s > -1)
        return s;
    }
    return this.countColumn(r, r.search(/\S|$/));
  }
  /**
  Returns the [simulated line
  break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)
  for this context, if any.
  */
  get simulatedBreak() {
    return this.options.simulateBreak || null;
  }
}
const q4 = /* @__PURE__ */ new Cn();
function FI(t, e, n) {
  let r = e.resolveStack(n), i = e.resolveInner(n, -1).resolve(n, 0).enterUnfinishedNodesBefore(n);
  if (i != r.node) {
    let o = [];
    for (let s = i; s && !(s.from < r.node.from || s.to > r.node.to || s.from == r.node.from && s.type == r.node.type); s = s.parent)
      o.push(s);
    for (let s = o.length - 1; s >= 0; s--)
      r = { node: o[s], next: r };
  }
  return F4(r, t, n);
}
function F4(t, e, n) {
  for (let r = t; r; r = r.next) {
    let i = VI(r.node);
    if (i)
      return i(B1.create(e, n, r));
  }
  return 0;
}
function UI(t) {
  return t.pos == t.options.simulateBreak && t.options.simulateDoubleBreak;
}
function VI(t) {
  let e = t.type.prop(q4);
  if (e)
    return e;
  let n = t.firstChild, r;
  if (n && (r = n.type.prop(Cn.closedBy))) {
    let i = t.lastChild, o = i && r.indexOf(i.name) > -1;
    return (s) => GI(s, !0, 1, void 0, o && !UI(s) ? i.from : void 0);
  }
  return t.parent == null ? WI : null;
}
function WI() {
  return 0;
}
class B1 extends og {
  constructor(e, n, r) {
    super(e.state, e.options), this.base = e, this.pos = n, this.context = r;
  }
  /**
  The syntax tree node to which the indentation strategy
  applies.
  */
  get node() {
    return this.context.node;
  }
  /**
  @internal
  */
  static create(e, n, r) {
    return new B1(e, n, r);
  }
  /**
  Get the text directly after `this.pos`, either the entire line
  or the next 100 characters, whichever is shorter.
  */
  get textAfter() {
    return this.textAfterPos(this.pos);
  }
  /**
  Get the indentation at the reference line for `this.node`, which
  is the line on which it starts, unless there is a node that is
  _not_ a parent of this node covering the start of that line. If
  so, the line at the start of that node is tried, again skipping
  on if it is covered by another such node.
  */
  get baseIndent() {
    return this.baseIndentFor(this.node);
  }
  /**
  Get the indentation for the reference line of the given node
  (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).
  */
  baseIndentFor(e) {
    let n = this.state.doc.lineAt(e.from);
    for (; ; ) {
      let r = e.resolve(n.from);
      for (; r.parent && r.parent.from == r.from; )
        r = r.parent;
      if (HI(r, e))
        break;
      n = this.state.doc.lineAt(r.from);
    }
    return this.lineIndent(n.from);
  }
  /**
  Continue looking for indentations in the node's parent nodes,
  and return the result of that.
  */
  continue() {
    return F4(this.context.next, this.base, this.pos);
  }
}
function HI(t, e) {
  for (let n = e; n; n = n.parent)
    if (t == n)
      return !0;
  return !1;
}
function KI(t) {
  let e = t.node, n = e.childAfter(e.from), r = e.lastChild;
  if (!n)
    return null;
  let i = t.options.simulateBreak, o = t.state.doc.lineAt(n.from), s = i == null || i <= o.from ? o.to : Math.min(o.to, i);
  for (let a = n.to; ; ) {
    let l = e.childAfter(a);
    if (!l || l == r)
      return null;
    if (!l.type.isSkipped) {
      if (l.from >= s)
        return null;
      let u = /^ */.exec(o.text.slice(n.to - o.from))[0].length;
      return { from: n.from, to: n.to + u };
    }
    a = l.to;
  }
}
function GI(t, e, n, r, i) {
  let o = t.textAfter, s = o.match(/^\s*/)[0].length, a = i == t.pos + s, l = KI(t);
  return l ? a ? t.column(l.from) : t.column(l.to) : t.baseIndent + (a ? 0 : t.unit * n);
}
function h2({ except: t, units: e = 1 } = {}) {
  return (n) => {
    let r = t && t.test(n.textAfter);
    return n.baseIndent + (r ? 0 : e * n.unit);
  };
}
const JI = 200;
function YI() {
  return En.transactionFilter.of((t) => {
    if (!t.docChanged || !t.isUserEvent("input.type") && !t.isUserEvent("input.complete"))
      return t;
    let e = t.startState.languageDataAt("indentOnInput", t.startState.selection.main.head);
    if (!e.length)
      return t;
    let n = t.newDoc, { head: r } = t.newSelection.main, i = n.lineAt(r);
    if (r > i.from + JI)
      return t;
    let o = n.sliceString(i.from, r);
    if (!e.some((u) => u.test(o)))
      return t;
    let { state: s } = t, a = -1, l = [];
    for (let { head: u } of s.selection.ranges) {
      let f = s.doc.lineAt(u);
      if (f.from == a)
        continue;
      a = f.from;
      let d = L1(s, f.from);
      if (d == null)
        continue;
      let h = /^\s*/.exec(f.text)[0], p = Nf(s, d);
      h != p && l.push({ from: f.from, to: f.from + h.length, insert: p });
    }
    return l.length ? [t, { changes: l, sequential: !0 }] : t;
  });
}
const QI = /* @__PURE__ */ lt.define(), U4 = /* @__PURE__ */ new Cn();
function XI(t) {
  let e = t.firstChild, n = t.lastChild;
  return e && e.to < n.from ? { from: e.to, to: n.type.isError ? t.to : n.from } : null;
}
function ZI(t, e, n) {
  let r = Bi(t);
  if (r.length < n)
    return null;
  let i = r.resolveStack(n, 1), o = null;
  for (let s = i; s; s = s.next) {
    let a = s.node;
    if (a.to <= n || a.from > n)
      continue;
    if (o && a.from < e)
      break;
    let l = a.type.prop(U4);
    if (l && (a.to < r.length - 50 || r.length == t.doc.length || !e7(a))) {
      let u = l(a, t);
      u && u.from <= n && u.from >= e && u.to > n && (o = u);
    }
  }
  return o;
}
function e7(t) {
  let e = t.lastChild;
  return e && e.to == t.to && e.type.isError;
}
function em(t, e, n) {
  for (let r of t.facet(QI)) {
    let i = r(t, e, n);
    if (i)
      return i;
  }
  return ZI(t, e, n);
}
function V4(t, e) {
  let n = e.mapPos(t.from, 1), r = e.mapPos(t.to, -1);
  return n >= r ? void 0 : { from: n, to: r };
}
const sg = /* @__PURE__ */ vn.define({ map: V4 }), dd = /* @__PURE__ */ vn.define({ map: V4 });
function W4(t) {
  let e = [];
  for (let { head: n } of t.state.selection.ranges)
    e.some((r) => r.from <= n && r.to >= n) || e.push(t.lineBlockAt(n));
  return e;
}
const Ql = /* @__PURE__ */ wi.define({
  create() {
    return Bt.none;
  },
  update(t, e) {
    e.isUserEvent("delete") && e.changes.iterChangedRanges((n, r) => t = p2(t, n, r)), t = t.map(e.changes);
    for (let n of e.effects)
      if (n.is(sg) && !t7(t, n.value.from, n.value.to)) {
        let { preparePlaceholder: r } = e.state.facet(X4), i = r ? Bt.replace({ widget: new i7(r(e.state, n.value)) }) : m2;
        t = t.update({ add: [i.range(n.value.from, n.value.to)] });
      } else n.is(dd) && (t = t.update({
        filter: (r, i) => n.value.from != r || n.value.to != i,
        filterFrom: n.value.from,
        filterTo: n.value.to
      }));
    return e.selection && (t = p2(t, e.selection.main.head)), t;
  },
  provide: (t) => nt.decorations.from(t),
  toJSON(t, e) {
    let n = [];
    return t.between(0, e.doc.length, (r, i) => {
      n.push(r, i);
    }), n;
  },
  fromJSON(t) {
    if (!Array.isArray(t) || t.length % 2)
      throw new RangeError("Invalid JSON for fold state");
    let e = [];
    for (let n = 0; n < t.length; ) {
      let r = t[n++], i = t[n++];
      if (typeof r != "number" || typeof i != "number")
        throw new RangeError("Invalid JSON for fold state");
      e.push(m2.range(r, i));
    }
    return Bt.set(e, !0);
  }
});
function p2(t, e, n = e) {
  let r = !1;
  return t.between(e, n, (i, o) => {
    i < n && o > e && (r = !0);
  }), r ? t.update({
    filterFrom: e,
    filterTo: n,
    filter: (i, o) => i >= n || o <= e
  }) : t;
}
function tm(t, e, n) {
  var r;
  let i = null;
  return (r = t.field(Ql, !1)) === null || r === void 0 || r.between(e, n, (o, s) => {
    (!i || i.from > o) && (i = { from: o, to: s });
  }), i;
}
function t7(t, e, n) {
  let r = !1;
  return t.between(e, e, (i, o) => {
    i == e && o == n && (r = !0);
  }), r;
}
function H4(t, e) {
  return t.field(Ql, !1) ? e : e.concat(vn.appendConfig.of(Z4()));
}
const K4 = (t) => {
  for (let e of W4(t)) {
    let n = em(t.state, e.from, e.to);
    if (n)
      return t.dispatch({ effects: H4(t.state, [sg.of(n), J4(t, n)]) }), !0;
  }
  return !1;
}, G4 = (t) => {
  if (!t.state.field(Ql, !1))
    return !1;
  let e = [];
  for (let n of W4(t)) {
    let r = tm(t.state, n.from, n.to);
    r && e.push(dd.of(r), J4(t, r, !1));
  }
  return e.length && t.dispatch({ effects: e }), e.length > 0;
};
function J4(t, e, n = !0) {
  let r = t.state.doc.lineAt(e.from).number, i = t.state.doc.lineAt(e.to).number;
  return nt.announce.of(`${t.state.phrase(n ? "Folded lines" : "Unfolded lines")} ${r} ${t.state.phrase("to")} ${i}.`);
}
const Y4 = (t) => {
  let { state: e } = t, n = [];
  for (let r = 0; r < e.doc.length; ) {
    let i = t.lineBlockAt(r), o = em(e, i.from, i.to);
    o && n.push(sg.of(o)), r = (o ? t.lineBlockAt(o.to) : i).to + 1;
  }
  return n.length && t.dispatch({ effects: H4(t.state, n) }), !!n.length;
}, Q4 = (t) => {
  let e = t.state.field(Ql, !1);
  if (!e || !e.size)
    return !1;
  let n = [];
  return e.between(0, t.state.doc.length, (r, i) => {
    n.push(dd.of({ from: r, to: i }));
  }), t.dispatch({ effects: n }), !0;
}, n7 = [
  { key: "Ctrl-Shift-[", mac: "Cmd-Alt-[", run: K4 },
  { key: "Ctrl-Shift-]", mac: "Cmd-Alt-]", run: G4 },
  { key: "Ctrl-Alt-[", run: Y4 },
  { key: "Ctrl-Alt-]", run: Q4 }
], r7 = {
  placeholderDOM: null,
  preparePlaceholder: null,
  placeholderText: "…"
}, X4 = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, r7);
  }
});
function Z4(t) {
  return [Ql, a7];
}
function eE(t, e) {
  let { state: n } = t, r = n.facet(X4), i = (s) => {
    let a = t.lineBlockAt(t.posAtDOM(s.target)), l = tm(t.state, a.from, a.to);
    l && t.dispatch({ effects: dd.of(l) }), s.preventDefault();
  };
  if (r.placeholderDOM)
    return r.placeholderDOM(t, i, e);
  let o = document.createElement("span");
  return o.textContent = r.placeholderText, o.setAttribute("aria-label", n.phrase("folded code")), o.title = n.phrase("unfold"), o.className = "cm-foldPlaceholder", o.onclick = i, o;
}
const m2 = /* @__PURE__ */ Bt.replace({ widget: /* @__PURE__ */ new class extends pl {
  toDOM(t) {
    return eE(t, null);
  }
}() });
class i7 extends pl {
  constructor(e) {
    super(), this.value = e;
  }
  eq(e) {
    return this.value == e.value;
  }
  toDOM(e) {
    return eE(e, this.value);
  }
}
const o7 = {
  openText: "⌄",
  closedText: "›",
  markerDOM: null,
  domEventHandlers: {},
  foldingChanged: () => !1
};
class xv extends Ns {
  constructor(e, n) {
    super(), this.config = e, this.open = n;
  }
  eq(e) {
    return this.config == e.config && this.open == e.open;
  }
  toDOM(e) {
    if (this.config.markerDOM)
      return this.config.markerDOM(this.open);
    let n = document.createElement("span");
    return n.textContent = this.open ? this.config.openText : this.config.closedText, n.title = e.state.phrase(this.open ? "Fold line" : "Unfold line"), n;
  }
}
function s7(t = {}) {
  let e = { ...o7, ...t }, n = new xv(e, !0), r = new xv(e, !1), i = Gr.fromClass(class {
    constructor(s) {
      this.from = s.viewport.from, this.markers = this.buildMarkers(s);
    }
    update(s) {
      (s.docChanged || s.viewportChanged || s.startState.facet(il) != s.state.facet(il) || s.startState.field(Ql, !1) != s.state.field(Ql, !1) || Bi(s.startState) != Bi(s.state) || e.foldingChanged(s)) && (this.markers = this.buildMarkers(s.view));
    }
    buildMarkers(s) {
      let a = new rs();
      for (let l of s.viewportLineBlocks) {
        let u = tm(s.state, l.from, l.to) ? r : em(s.state, l.from, l.to) ? n : null;
        u && a.add(l.from, l.from, u);
      }
      return a.finish();
    }
  }), { domEventHandlers: o } = e;
  return [
    i,
    A4({
      class: "cm-foldGutter",
      markers(s) {
        var a;
        return ((a = s.plugin(i)) === null || a === void 0 ? void 0 : a.markers) || zn.empty;
      },
      initialSpacer() {
        return new xv(e, !1);
      },
      domEventHandlers: {
        ...o,
        click: (s, a, l) => {
          if (o.click && o.click(s, a, l))
            return !0;
          let u = tm(s.state, a.from, a.to);
          if (u)
            return s.dispatch({ effects: dd.of(u) }), !0;
          let f = em(s.state, a.from, a.to);
          return f ? (s.dispatch({ effects: sg.of(f) }), !0) : !1;
        }
      }
    }),
    Z4()
  ];
}
const a7 = /* @__PURE__ */ nt.baseTheme({
  ".cm-foldPlaceholder": {
    backgroundColor: "#eee",
    border: "1px solid #ddd",
    color: "#888",
    borderRadius: ".2em",
    margin: "0 1px",
    padding: "0 1px",
    cursor: "pointer"
  },
  ".cm-foldGutter span": {
    padding: "0 1px",
    cursor: "pointer"
  }
});
class hd {
  constructor(e, n) {
    this.specs = e;
    let r;
    function i(a) {
      let l = el.newName();
      return (r || (r = /* @__PURE__ */ Object.create(null)))["." + l] = a, l;
    }
    const o = typeof n.all == "string" ? n.all : n.all ? i(n.all) : void 0, s = n.scope;
    this.scope = s instanceof Ko ? (a) => a.prop(Nc) == s.data : s ? (a) => a == s : void 0, this.style = L4(e.map((a) => ({
      tag: a.tag,
      class: a.class || i(Object.assign({}, a, { tag: null }))
    })), {
      all: o
    }).style, this.module = r ? new el(r) : null, this.themeType = n.themeType;
  }
  /**
  Create a highlighter style that associates the given styles to
  the given tags. The specs must be objects that hold a style tag
  or array of tags in their `tag` property, and either a single
  `class` property providing a static CSS class (for highlighter
  that rely on external styling), or a
  [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style
  set of CSS properties (which define the styling for those tags).
  
  The CSS rules created for a highlighter will be emitted in the
  order of the spec's properties. That means that for elements that
  have multiple tags associated with them, styles defined further
  down in the list will have a higher CSS precedence than styles
  defined earlier.
  */
  static define(e, n) {
    return new hd(e, n || {});
  }
}
const nb = /* @__PURE__ */ lt.define(), tE = /* @__PURE__ */ lt.define({
  combine(t) {
    return t.length ? [t[0]] : null;
  }
});
function wv(t) {
  let e = t.facet(nb);
  return e.length ? e : t.facet(tE);
}
function nE(t, e) {
  let n = [c7], r;
  return t instanceof hd && (t.module && n.push(nt.styleModule.of(t.module)), r = t.themeType), e?.fallback ? n.push(tE.of(t)) : r ? n.push(nb.computeN([nt.darkTheme], (i) => i.facet(nt.darkTheme) == (r == "dark") ? [t] : [])) : n.push(nb.of(t)), n;
}
class l7 {
  constructor(e) {
    this.markCache = /* @__PURE__ */ Object.create(null), this.tree = Bi(e.state), this.decorations = this.buildDeco(e, wv(e.state)), this.decoratedTo = e.viewport.to;
  }
  update(e) {
    let n = Bi(e.state), r = wv(e.state), i = r != wv(e.startState), { viewport: o } = e.view, s = e.changes.mapPos(this.decoratedTo, 1);
    n.length < o.to && !i && n.type == this.tree.type && s >= o.to ? (this.decorations = this.decorations.map(e.changes), this.decoratedTo = s) : (n != this.tree || e.viewportChanged || i) && (this.tree = n, this.decorations = this.buildDeco(e.view, r), this.decoratedTo = o.to);
  }
  buildDeco(e, n) {
    if (!n || !this.tree.length)
      return Bt.none;
    let r = new rs();
    for (let { from: i, to: o } of e.visibleRanges)
      PI(this.tree, n, (s, a, l) => {
        r.add(s, a, this.markCache[l] || (this.markCache[l] = Bt.mark({ class: l })));
      }, i, o);
    return r.finish();
  }
}
const c7 = /* @__PURE__ */ lc.high(/* @__PURE__ */ Gr.fromClass(l7, {
  decorations: (t) => t.decorations
})), u7 = /* @__PURE__ */ hd.define([
  {
    tag: Ve.meta,
    color: "#404740"
  },
  {
    tag: Ve.link,
    textDecoration: "underline"
  },
  {
    tag: Ve.heading,
    textDecoration: "underline",
    fontWeight: "bold"
  },
  {
    tag: Ve.emphasis,
    fontStyle: "italic"
  },
  {
    tag: Ve.strong,
    fontWeight: "bold"
  },
  {
    tag: Ve.strikethrough,
    textDecoration: "line-through"
  },
  {
    tag: Ve.keyword,
    color: "#708"
  },
  {
    tag: [Ve.atom, Ve.bool, Ve.url, Ve.contentSeparator, Ve.labelName],
    color: "#219"
  },
  {
    tag: [Ve.literal, Ve.inserted],
    color: "#164"
  },
  {
    tag: [Ve.string, Ve.deleted],
    color: "#a11"
  },
  {
    tag: [Ve.regexp, Ve.escape, /* @__PURE__ */ Ve.special(Ve.string)],
    color: "#e40"
  },
  {
    tag: /* @__PURE__ */ Ve.definition(Ve.variableName),
    color: "#00f"
  },
  {
    tag: /* @__PURE__ */ Ve.local(Ve.variableName),
    color: "#30a"
  },
  {
    tag: [Ve.typeName, Ve.namespace],
    color: "#085"
  },
  {
    tag: Ve.className,
    color: "#167"
  },
  {
    tag: [/* @__PURE__ */ Ve.special(Ve.variableName), Ve.macroName],
    color: "#256"
  },
  {
    tag: /* @__PURE__ */ Ve.definition(Ve.propertyName),
    color: "#00c"
  },
  {
    tag: Ve.comment,
    color: "#940"
  },
  {
    tag: Ve.invalid,
    color: "#f00"
  }
]), f7 = /* @__PURE__ */ nt.baseTheme({
  "&.cm-focused .cm-matchingBracket": { backgroundColor: "#328c8252" },
  "&.cm-focused .cm-nonmatchingBracket": { backgroundColor: "#bb555544" }
}), rE = 1e4, iE = "()[]{}", oE = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      afterCursor: !0,
      brackets: iE,
      maxScanDistance: rE,
      renderMatch: p7
    });
  }
}), d7 = /* @__PURE__ */ Bt.mark({ class: "cm-matchingBracket" }), h7 = /* @__PURE__ */ Bt.mark({ class: "cm-nonmatchingBracket" });
function p7(t) {
  let e = [], n = t.matched ? d7 : h7;
  return e.push(n.range(t.start.from, t.start.to)), t.end && e.push(n.range(t.end.from, t.end.to)), e;
}
const m7 = /* @__PURE__ */ wi.define({
  create() {
    return Bt.none;
  },
  update(t, e) {
    if (!e.docChanged && !e.selection)
      return t;
    let n = [], r = e.state.facet(oE);
    for (let i of e.state.selection.ranges) {
      if (!i.empty)
        continue;
      let o = Cs(e.state, i.head, -1, r) || i.head > 0 && Cs(e.state, i.head - 1, 1, r) || r.afterCursor && (Cs(e.state, i.head, 1, r) || i.head < e.state.doc.length && Cs(e.state, i.head + 1, -1, r));
      o && (n = n.concat(r.renderMatch(o, e.state)));
    }
    return Bt.set(n, !0);
  },
  provide: (t) => nt.decorations.from(t)
}), g7 = [
  m7,
  f7
];
function v7(t = {}) {
  return [oE.of(t), g7];
}
const b7 = /* @__PURE__ */ new Cn();
function rb(t, e, n) {
  let r = t.prop(e < 0 ? Cn.openedBy : Cn.closedBy);
  if (r)
    return r;
  if (t.name.length == 1) {
    let i = n.indexOf(t.name);
    if (i > -1 && i % 2 == (e < 0 ? 1 : 0))
      return [n[i + e]];
  }
  return null;
}
function ib(t) {
  let e = t.type.prop(b7);
  return e ? e(t.node) : t;
}
function Cs(t, e, n, r = {}) {
  let i = r.maxScanDistance || rE, o = r.brackets || iE, s = Bi(t), a = s.resolveInner(e, n);
  for (let l = a; l; l = l.parent) {
    let u = rb(l.type, n, o);
    if (u && l.from < l.to) {
      let f = ib(l);
      if (f && (n > 0 ? e >= f.from && e < f.to : e > f.from && e <= f.to))
        return y7(t, e, n, l, f, u, o);
    }
  }
  return x7(t, e, n, s, a.type, i, o);
}
function y7(t, e, n, r, i, o, s) {
  let a = r.parent, l = { from: i.from, to: i.to }, u = 0, f = a?.cursor();
  if (f && (n < 0 ? f.childBefore(r.from) : f.childAfter(r.to)))
    do
      if (n < 0 ? f.to <= r.from : f.from >= r.to) {
        if (u == 0 && o.indexOf(f.type.name) > -1 && f.from < f.to) {
          let d = ib(f);
          return { start: l, end: d ? { from: d.from, to: d.to } : void 0, matched: !0 };
        } else if (rb(f.type, n, s))
          u++;
        else if (rb(f.type, -n, s)) {
          if (u == 0) {
            let d = ib(f);
            return {
              start: l,
              end: d && d.from < d.to ? { from: d.from, to: d.to } : void 0,
              matched: !1
            };
          }
          u--;
        }
      }
    while (n < 0 ? f.prevSibling() : f.nextSibling());
  return { start: l, matched: !1 };
}
function x7(t, e, n, r, i, o, s) {
  let a = n < 0 ? t.sliceDoc(e - 1, e) : t.sliceDoc(e, e + 1), l = s.indexOf(a);
  if (l < 0 || l % 2 == 0 != n > 0)
    return null;
  let u = { from: n < 0 ? e - 1 : e, to: n > 0 ? e + 1 : e }, f = t.doc.iterRange(e, n > 0 ? t.doc.length : 0), d = 0;
  for (let h = 0; !f.next().done && h <= o; ) {
    let p = f.value;
    n < 0 && (h += p.length);
    let m = e + h * n;
    for (let v = n > 0 ? 0 : p.length - 1, g = n > 0 ? p.length : -1; v != g; v += n) {
      let b = s.indexOf(p[v]);
      if (!(b < 0 || r.resolveInner(m + v, 1).type != i))
        if (b % 2 == 0 == n > 0)
          d++;
        else {
          if (d == 1)
            return { start: u, end: { from: m + v, to: m + v + 1 }, matched: b >> 1 == l >> 1 };
          d--;
        }
    }
    n > 0 && (h += p.length);
  }
  return f.done ? { start: u, matched: !1 } : null;
}
const w7 = /* @__PURE__ */ Object.create(null), g2 = [oo.none], v2 = [], b2 = /* @__PURE__ */ Object.create(null), j7 = /* @__PURE__ */ Object.create(null);
for (let [t, e] of [
  ["variable", "variableName"],
  ["variable-2", "variableName.special"],
  ["string-2", "string.special"],
  ["def", "variableName.definition"],
  ["tag", "tagName"],
  ["attribute", "attributeName"],
  ["type", "typeName"],
  ["builtin", "variableName.standard"],
  ["qualifier", "modifier"],
  ["error", "invalid"],
  ["header", "heading"],
  ["property", "propertyName"]
])
  j7[t] = /* @__PURE__ */ k7(w7, e);
function jv(t, e) {
  v2.indexOf(t) > -1 || (v2.push(t), console.warn(e));
}
function k7(t, e) {
  let n = [];
  for (let a of e.split(" ")) {
    let l = [];
    for (let u of a.split(".")) {
      let f = t[u] || Ve[u];
      f ? typeof f == "function" ? l.length ? l = l.map(f) : jv(u, `Modifier ${u} used at start of tag`) : l.length ? jv(u, `Tag ${u} used as modifier`) : l = Array.isArray(f) ? f : [f] : jv(u, `Unknown highlighting tag ${u}`);
    }
    for (let u of l)
      n.push(u);
  }
  if (!n.length)
    return 0;
  let r = e.replace(/ /g, "_"), i = r + " " + n.map((a) => a.id), o = b2[i];
  if (o)
    return o.id;
  let s = b2[i] = oo.define({
    id: g2.length,
    name: r,
    props: [I4({ [r]: n })]
  });
  return g2.push(s), s.id;
}
Nr.RTL, Nr.LTR;
const S7 = (t) => {
  let { state: e } = t, n = e.doc.lineAt(e.selection.main.from), r = F1(t.state, n.from);
  return r.line ? C7(t) : r.block ? E7(t) : !1;
};
function q1(t, e) {
  return ({ state: n, dispatch: r }) => {
    if (n.readOnly)
      return !1;
    let i = t(e, n);
    return i ? (r(n.update(i)), !0) : !1;
  };
}
const C7 = /* @__PURE__ */ q1(
  M7,
  0
  /* CommentOption.Toggle */
), O7 = /* @__PURE__ */ q1(
  sE,
  0
  /* CommentOption.Toggle */
), E7 = /* @__PURE__ */ q1(
  (t, e) => sE(t, e, A7(e)),
  0
  /* CommentOption.Toggle */
);
function F1(t, e) {
  let n = t.languageDataAt("commentTokens", e, 1);
  return n.length ? n[0] : {};
}
const Wu = 50;
function _7(t, { open: e, close: n }, r, i) {
  let o = t.sliceDoc(r - Wu, r), s = t.sliceDoc(i, i + Wu), a = /\s*$/.exec(o)[0].length, l = /^\s*/.exec(s)[0].length, u = o.length - a;
  if (o.slice(u - e.length, u) == e && s.slice(l, l + n.length) == n)
    return {
      open: { pos: r - a, margin: a && 1 },
      close: { pos: i + l, margin: l && 1 }
    };
  let f, d;
  i - r <= 2 * Wu ? f = d = t.sliceDoc(r, i) : (f = t.sliceDoc(r, r + Wu), d = t.sliceDoc(i - Wu, i));
  let h = /^\s*/.exec(f)[0].length, p = /\s*$/.exec(d)[0].length, m = d.length - p - n.length;
  return f.slice(h, h + e.length) == e && d.slice(m, m + n.length) == n ? {
    open: {
      pos: r + h + e.length,
      margin: /\s/.test(f.charAt(h + e.length)) ? 1 : 0
    },
    close: {
      pos: i - p - n.length,
      margin: /\s/.test(d.charAt(m - 1)) ? 1 : 0
    }
  } : null;
}
function A7(t) {
  let e = [];
  for (let n of t.selection.ranges) {
    let r = t.doc.lineAt(n.from), i = n.to <= r.to ? r : t.doc.lineAt(n.to);
    i.from > r.from && i.from == n.to && (i = n.to == r.to + 1 ? r : t.doc.lineAt(n.to - 1));
    let o = e.length - 1;
    o >= 0 && e[o].to > r.from ? e[o].to = i.to : e.push({ from: r.from + /^\s*/.exec(r.text)[0].length, to: i.to });
  }
  return e;
}
function sE(t, e, n = e.selection.ranges) {
  let r = n.map((o) => F1(e, o.from).block);
  if (!r.every((o) => o))
    return null;
  let i = n.map((o, s) => _7(e, r[s], o.from, o.to));
  if (t != 2 && !i.every((o) => o))
    return { changes: e.changes(n.map((o, s) => i[s] ? [] : [{ from: o.from, insert: r[s].open + " " }, { from: o.to, insert: " " + r[s].close }])) };
  if (t != 1 && i.some((o) => o)) {
    let o = [];
    for (let s = 0, a; s < i.length; s++)
      if (a = i[s]) {
        let l = r[s], { open: u, close: f } = a;
        o.push({ from: u.pos - l.open.length, to: u.pos + u.margin }, { from: f.pos - f.margin, to: f.pos + l.close.length });
      }
    return { changes: o };
  }
  return null;
}
function M7(t, e, n = e.selection.ranges) {
  let r = [], i = -1;
  for (let { from: o, to: s } of n) {
    let a = r.length, l = 1e9, u = F1(e, o).line;
    if (u) {
      for (let f = o; f <= s; ) {
        let d = e.doc.lineAt(f);
        if (d.from > i && (o == s || s > d.from)) {
          i = d.from;
          let h = /^\s*/.exec(d.text)[0].length, p = h == d.length, m = d.text.slice(h, h + u.length) == u ? h : -1;
          h < d.text.length && h < l && (l = h), r.push({ line: d, comment: m, token: u, indent: h, empty: p, single: !1 });
        }
        f = d.to + 1;
      }
      if (l < 1e9)
        for (let f = a; f < r.length; f++)
          r[f].indent < r[f].line.text.length && (r[f].indent = l);
      r.length == a + 1 && (r[a].single = !0);
    }
  }
  if (t != 2 && r.some((o) => o.comment < 0 && (!o.empty || o.single))) {
    let o = [];
    for (let { line: a, token: l, indent: u, empty: f, single: d } of r)
      (d || !f) && o.push({ from: a.from + u, insert: l + " " });
    let s = e.changes(o);
    return { changes: s, selection: e.selection.map(s, 1) };
  } else if (t != 1 && r.some((o) => o.comment >= 0)) {
    let o = [];
    for (let { line: s, comment: a, token: l } of r)
      if (a >= 0) {
        let u = s.from + a, f = u + l.length;
        s.text[f - s.from] == " " && f++, o.push({ from: u, to: f });
      }
    return { changes: o };
  }
  return null;
}
function wu(t, e) {
  return Me.create(t.ranges.map(e), t.mainIndex);
}
function Bs(t, e) {
  return t.update({ selection: e, scrollIntoView: !0, userEvent: "select" });
}
function fs({ state: t, dispatch: e }, n) {
  let r = wu(t.selection, n);
  return r.eq(t.selection, !0) ? !1 : (e(Bs(t, r)), !0);
}
function ag(t, e) {
  return Me.cursor(e ? t.to : t.from);
}
function aE(t, e) {
  return fs(t, (n) => n.empty ? t.moveByChar(n, e) : ag(n, e));
}
function qi(t) {
  return t.textDirectionAt(t.state.selection.main.head) == Nr.LTR;
}
const lE = (t) => aE(t, !qi(t)), cE = (t) => aE(t, qi(t));
function uE(t, e) {
  return fs(t, (n) => n.empty ? t.moveByGroup(n, e) : ag(n, e));
}
const T7 = (t) => uE(t, !qi(t)), $7 = (t) => uE(t, qi(t));
function P7(t, e, n) {
  if (e.type.prop(n))
    return !0;
  let r = e.to - e.from;
  return r && (r > 2 || /[^\s,.;:]/.test(t.sliceDoc(e.from, e.to))) || e.firstChild;
}
function lg(t, e, n) {
  let r = Bi(t).resolveInner(e.head), i = n ? Cn.closedBy : Cn.openedBy;
  for (let l = e.head; ; ) {
    let u = n ? r.childAfter(l) : r.childBefore(l);
    if (!u)
      break;
    P7(t, u, i) ? r = u : l = n ? u.to : u.from;
  }
  let o = r.type.prop(i), s, a;
  return o && (s = n ? Cs(t, r.from, 1) : Cs(t, r.to, -1)) && s.matched ? a = n ? s.end.to : s.end.from : a = n ? r.to : r.from, Me.cursor(a, n ? -1 : 1);
}
const R7 = (t) => fs(t, (e) => lg(t.state, e, !qi(t))), N7 = (t) => fs(t, (e) => lg(t.state, e, qi(t)));
function fE(t, e) {
  return fs(t, (n) => {
    if (!n.empty)
      return ag(n, e);
    let r = t.moveVertically(n, e);
    return r.head != n.head ? r : t.moveToLineBoundary(n, e);
  });
}
const dE = (t) => fE(t, !1), hE = (t) => fE(t, !0);
function pE(t) {
  let e = t.scrollDOM.clientHeight < t.scrollDOM.scrollHeight - 2, n = 0, r = 0, i;
  if (e) {
    for (let o of t.state.facet(nt.scrollMargins)) {
      let s = o(t);
      s?.top && (n = Math.max(s?.top, n)), s?.bottom && (r = Math.max(s?.bottom, r));
    }
    i = t.scrollDOM.clientHeight - n - r;
  } else
    i = (t.dom.ownerDocument.defaultView || window).innerHeight;
  return {
    marginTop: n,
    marginBottom: r,
    selfScroll: e,
    height: Math.max(t.defaultLineHeight, i - 5)
  };
}
function mE(t, e) {
  let n = pE(t), { state: r } = t, i = wu(r.selection, (s) => s.empty ? t.moveVertically(s, e, n.height) : ag(s, e));
  if (i.eq(r.selection))
    return !1;
  let o;
  if (n.selfScroll) {
    let s = t.coordsAtPos(r.selection.main.head), a = t.scrollDOM.getBoundingClientRect(), l = a.top + n.marginTop, u = a.bottom - n.marginBottom;
    s && s.top > l && s.bottom < u && (o = nt.scrollIntoView(i.main.head, { y: "start", yMargin: s.top - l }));
  }
  return t.dispatch(Bs(r, i), { effects: o }), !0;
}
const y2 = (t) => mE(t, !1), ob = (t) => mE(t, !0);
function ml(t, e, n) {
  let r = t.lineBlockAt(e.head), i = t.moveToLineBoundary(e, n);
  if (i.head == e.head && i.head != (n ? r.to : r.from) && (i = t.moveToLineBoundary(e, n, !1)), !n && i.head == r.from && r.length) {
    let o = /^\s*/.exec(t.state.sliceDoc(r.from, Math.min(r.from + 100, r.to)))[0].length;
    o && e.head != r.from + o && (i = Me.cursor(r.from + o));
  }
  return i;
}
const D7 = (t) => fs(t, (e) => ml(t, e, !0)), I7 = (t) => fs(t, (e) => ml(t, e, !1)), z7 = (t) => fs(t, (e) => ml(t, e, !qi(t))), L7 = (t) => fs(t, (e) => ml(t, e, qi(t))), B7 = (t) => fs(t, (e) => Me.cursor(t.lineBlockAt(e.head).from, 1)), q7 = (t) => fs(t, (e) => Me.cursor(t.lineBlockAt(e.head).to, -1));
function F7(t, e, n) {
  let r = !1, i = wu(t.selection, (o) => {
    let s = Cs(t, o.head, -1) || Cs(t, o.head, 1) || o.head > 0 && Cs(t, o.head - 1, 1) || o.head < t.doc.length && Cs(t, o.head + 1, -1);
    if (!s || !s.end)
      return o;
    r = !0;
    let a = s.start.from == o.head ? s.end.to : s.end.from;
    return Me.cursor(a);
  });
  return r ? (e(Bs(t, i)), !0) : !1;
}
const U7 = ({ state: t, dispatch: e }) => F7(t, e);
function Lo(t, e) {
  let n = wu(t.state.selection, (r) => {
    let i = e(r);
    return Me.range(r.anchor, i.head, i.goalColumn, i.bidiLevel || void 0);
  });
  return n.eq(t.state.selection) ? !1 : (t.dispatch(Bs(t.state, n)), !0);
}
function gE(t, e) {
  return Lo(t, (n) => t.moveByChar(n, e));
}
const vE = (t) => gE(t, !qi(t)), bE = (t) => gE(t, qi(t));
function yE(t, e) {
  return Lo(t, (n) => t.moveByGroup(n, e));
}
const V7 = (t) => yE(t, !qi(t)), W7 = (t) => yE(t, qi(t)), H7 = (t) => Lo(t, (e) => lg(t.state, e, !qi(t))), K7 = (t) => Lo(t, (e) => lg(t.state, e, qi(t)));
function xE(t, e) {
  return Lo(t, (n) => t.moveVertically(n, e));
}
const wE = (t) => xE(t, !1), jE = (t) => xE(t, !0);
function kE(t, e) {
  return Lo(t, (n) => t.moveVertically(n, e, pE(t).height));
}
const x2 = (t) => kE(t, !1), w2 = (t) => kE(t, !0), G7 = (t) => Lo(t, (e) => ml(t, e, !0)), J7 = (t) => Lo(t, (e) => ml(t, e, !1)), Y7 = (t) => Lo(t, (e) => ml(t, e, !qi(t))), Q7 = (t) => Lo(t, (e) => ml(t, e, qi(t))), X7 = (t) => Lo(t, (e) => Me.cursor(t.lineBlockAt(e.head).from)), Z7 = (t) => Lo(t, (e) => Me.cursor(t.lineBlockAt(e.head).to)), j2 = ({ state: t, dispatch: e }) => (e(Bs(t, { anchor: 0 })), !0), k2 = ({ state: t, dispatch: e }) => (e(Bs(t, { anchor: t.doc.length })), !0), S2 = ({ state: t, dispatch: e }) => (e(Bs(t, { anchor: t.selection.main.anchor, head: 0 })), !0), C2 = ({ state: t, dispatch: e }) => (e(Bs(t, { anchor: t.selection.main.anchor, head: t.doc.length })), !0), ez = ({ state: t, dispatch: e }) => (e(t.update({ selection: { anchor: 0, head: t.doc.length }, userEvent: "select" })), !0), tz = ({ state: t, dispatch: e }) => {
  let n = cg(t).map(({ from: r, to: i }) => Me.range(r, Math.min(i + 1, t.doc.length)));
  return e(t.update({ selection: Me.create(n), userEvent: "select" })), !0;
}, nz = ({ state: t, dispatch: e }) => {
  let n = wu(t.selection, (r) => {
    let i = Bi(t), o = i.resolveStack(r.from, 1);
    if (r.empty) {
      let s = i.resolveStack(r.from, -1);
      s.node.from >= o.node.from && s.node.to <= o.node.to && (o = s);
    }
    for (let s = o; s; s = s.next) {
      let { node: a } = s;
      if ((a.from < r.from && a.to >= r.to || a.to > r.to && a.from <= r.from) && s.next)
        return Me.range(a.to, a.from);
    }
    return r;
  });
  return n.eq(t.selection) ? !1 : (e(Bs(t, n)), !0);
}, rz = ({ state: t, dispatch: e }) => {
  let n = t.selection, r = null;
  return n.ranges.length > 1 ? r = Me.create([n.main]) : n.main.empty || (r = Me.create([Me.cursor(n.main.head)])), r ? (e(Bs(t, r)), !0) : !1;
};
function pd(t, e) {
  if (t.state.readOnly)
    return !1;
  let n = "delete.selection", { state: r } = t, i = r.changeByRange((o) => {
    let { from: s, to: a } = o;
    if (s == a) {
      let l = e(o);
      l < s ? (n = "delete.backward", l = zh(t, l, !1)) : l > s && (n = "delete.forward", l = zh(t, l, !0)), s = Math.min(s, l), a = Math.max(a, l);
    } else
      s = zh(t, s, !1), a = zh(t, a, !0);
    return s == a ? { range: o } : { changes: { from: s, to: a }, range: Me.cursor(s, s < o.head ? -1 : 1) };
  });
  return i.changes.empty ? !1 : (t.dispatch(r.update(i, {
    scrollIntoView: !0,
    userEvent: n,
    effects: n == "delete.selection" ? nt.announce.of(r.phrase("Selection deleted")) : void 0
  })), !0);
}
function zh(t, e, n) {
  if (t instanceof nt)
    for (let r of t.state.facet(nt.atomicRanges).map((i) => i(t)))
      r.between(e, e, (i, o) => {
        i < e && o > e && (e = n ? o : i);
      });
  return e;
}
const SE = (t, e, n) => pd(t, (r) => {
  let i = r.from, { state: o } = t, s = o.doc.lineAt(i), a, l;
  if (n && !e && i > s.from && i < s.from + 200 && !/[^ \t]/.test(a = s.text.slice(0, i - s.from))) {
    if (a[a.length - 1] == "	")
      return i - 1;
    let u = xu(a, o.tabSize), f = u % ol(o) || ol(o);
    for (let d = 0; d < f && a[a.length - 1 - d] == " "; d++)
      i--;
    l = i;
  } else
    l = Mi(s.text, i - s.from, e, e) + s.from, l == i && s.number != (e ? o.doc.lines : 1) ? l += e ? 1 : -1 : !e && /[\ufe00-\ufe0f]/.test(s.text.slice(l - s.from, i - s.from)) && (l = Mi(s.text, l - s.from, !1, !1) + s.from);
  return l;
}), sb = (t) => SE(t, !1, !0), CE = (t) => SE(t, !0, !1), OE = (t, e) => pd(t, (n) => {
  let r = n.head, { state: i } = t, o = i.doc.lineAt(r), s = i.charCategorizer(r);
  for (let a = null; ; ) {
    if (r == (e ? o.to : o.from)) {
      r == n.head && o.number != (e ? i.doc.lines : 1) && (r += e ? 1 : -1);
      break;
    }
    let l = Mi(o.text, r - o.from, e) + o.from, u = o.text.slice(Math.min(r, l) - o.from, Math.max(r, l) - o.from), f = s(u);
    if (a != null && f != a)
      break;
    (u != " " || r != n.head) && (a = f), r = l;
  }
  return r;
}), EE = (t) => OE(t, !1), iz = (t) => OE(t, !0), oz = (t) => pd(t, (e) => {
  let n = t.lineBlockAt(e.head).to;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), sz = (t) => pd(t, (e) => {
  let n = t.moveToLineBoundary(e, !1).head;
  return e.head > n ? n : Math.max(0, e.head - 1);
}), az = (t) => pd(t, (e) => {
  let n = t.moveToLineBoundary(e, !0).head;
  return e.head < n ? n : Math.min(t.state.doc.length, e.head + 1);
}), lz = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => ({
    changes: { from: r.from, to: r.to, insert: rr.of(["", ""]) },
    range: Me.cursor(r.from)
  }));
  return e(t.update(n, { scrollIntoView: !0, userEvent: "input" })), !0;
}, cz = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = t.changeByRange((r) => {
    if (!r.empty || r.from == 0 || r.from == t.doc.length)
      return { range: r };
    let i = r.from, o = t.doc.lineAt(i), s = i == o.from ? i - 1 : Mi(o.text, i - o.from, !1) + o.from, a = i == o.to ? i + 1 : Mi(o.text, i - o.from, !0) + o.from;
    return {
      changes: { from: s, to: a, insert: t.doc.slice(i, a).append(t.doc.slice(s, i)) },
      range: Me.cursor(a)
    };
  });
  return n.changes.empty ? !1 : (e(t.update(n, { scrollIntoView: !0, userEvent: "move.character" })), !0);
};
function cg(t) {
  let e = [], n = -1;
  for (let r of t.selection.ranges) {
    let i = t.doc.lineAt(r.from), o = t.doc.lineAt(r.to);
    if (!r.empty && r.to == o.from && (o = t.doc.lineAt(r.to - 1)), n >= i.number) {
      let s = e[e.length - 1];
      s.to = o.to, s.ranges.push(r);
    } else
      e.push({ from: i.from, to: o.to, ranges: [r] });
    n = o.number + 1;
  }
  return e;
}
function _E(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [], i = [];
  for (let o of cg(t)) {
    if (n ? o.to == t.doc.length : o.from == 0)
      continue;
    let s = t.doc.lineAt(n ? o.to + 1 : o.from - 1), a = s.length + 1;
    if (n) {
      r.push({ from: o.to, to: s.to }, { from: o.from, insert: s.text + t.lineBreak });
      for (let l of o.ranges)
        i.push(Me.range(Math.min(t.doc.length, l.anchor + a), Math.min(t.doc.length, l.head + a)));
    } else {
      r.push({ from: s.from, to: o.from }, { from: o.to, insert: t.lineBreak + s.text });
      for (let l of o.ranges)
        i.push(Me.range(l.anchor - a, l.head - a));
    }
  }
  return r.length ? (e(t.update({
    changes: r,
    scrollIntoView: !0,
    selection: Me.create(i, t.selection.mainIndex),
    userEvent: "move.line"
  })), !0) : !1;
}
const uz = ({ state: t, dispatch: e }) => _E(t, e, !1), fz = ({ state: t, dispatch: e }) => _E(t, e, !0);
function AE(t, e, n) {
  if (t.readOnly)
    return !1;
  let r = [];
  for (let i of cg(t))
    n ? r.push({ from: i.from, insert: t.doc.slice(i.from, i.to) + t.lineBreak }) : r.push({ from: i.to, insert: t.lineBreak + t.doc.slice(i.from, i.to) });
  return e(t.update({ changes: r, scrollIntoView: !0, userEvent: "input.copyline" })), !0;
}
const dz = ({ state: t, dispatch: e }) => AE(t, e, !1), hz = ({ state: t, dispatch: e }) => AE(t, e, !0), pz = (t) => {
  if (t.state.readOnly)
    return !1;
  let { state: e } = t, n = e.changes(cg(e).map(({ from: i, to: o }) => (i > 0 ? i-- : o < e.doc.length && o++, { from: i, to: o }))), r = wu(e.selection, (i) => {
    let o;
    if (t.lineWrapping) {
      let s = t.lineBlockAt(i.head), a = t.coordsAtPos(i.head, i.assoc || 1);
      a && (o = s.bottom + t.documentTop - a.bottom + t.defaultLineHeight / 2);
    }
    return t.moveVertically(i, !0, o);
  }).map(n);
  return t.dispatch({ changes: n, selection: r, scrollIntoView: !0, userEvent: "delete.line" }), !0;
};
function mz(t, e) {
  if (/\(\)|\[\]|\{\}/.test(t.sliceDoc(e - 1, e + 1)))
    return { from: e, to: e };
  let n = Bi(t).resolveInner(e), r = n.childBefore(e), i = n.childAfter(e), o;
  return r && i && r.to <= e && i.from >= e && (o = r.type.prop(Cn.closedBy)) && o.indexOf(i.name) > -1 && t.doc.lineAt(r.to).from == t.doc.lineAt(i.from).from && !/\S/.test(t.sliceDoc(r.to, i.from)) ? { from: r.to, to: i.from } : null;
}
const O2 = /* @__PURE__ */ ME(!1), gz = /* @__PURE__ */ ME(!0);
function ME(t) {
  return ({ state: e, dispatch: n }) => {
    if (e.readOnly)
      return !1;
    let r = e.changeByRange((i) => {
      let { from: o, to: s } = i, a = e.doc.lineAt(o), l = !t && o == s && mz(e, o);
      t && (o = s = (s <= a.to ? a : e.doc.lineAt(s)).to);
      let u = new og(e, { simulateBreak: o, simulateDoubleBreak: !!l }), f = L1(u, o);
      for (f == null && (f = xu(/^\s*/.exec(e.doc.lineAt(o).text)[0], e.tabSize)); s < a.to && /\s/.test(a.text[s - a.from]); )
        s++;
      l ? { from: o, to: s } = l : o > a.from && o < a.from + 100 && !/\S/.test(a.text.slice(0, o)) && (o = a.from);
      let d = ["", Nf(e, f)];
      return l && d.push(Nf(e, u.lineIndent(a.from, -1))), {
        changes: { from: o, to: s, insert: rr.of(d) },
        range: Me.cursor(o + 1 + d[1].length)
      };
    });
    return n(e.update(r, { scrollIntoView: !0, userEvent: "input" })), !0;
  };
}
function U1(t, e) {
  let n = -1;
  return t.changeByRange((r) => {
    let i = [];
    for (let s = r.from; s <= r.to; ) {
      let a = t.doc.lineAt(s);
      a.number > n && (r.empty || r.to > a.from) && (e(a, i, r), n = a.number), s = a.to + 1;
    }
    let o = t.changes(i);
    return {
      changes: i,
      range: Me.range(o.mapPos(r.anchor, 1), o.mapPos(r.head, 1))
    };
  });
}
const vz = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let n = /* @__PURE__ */ Object.create(null), r = new og(t, { overrideIndentation: (o) => {
    let s = n[o];
    return s ?? -1;
  } }), i = U1(t, (o, s, a) => {
    let l = L1(r, o.from);
    if (l == null)
      return;
    /\S/.test(o.text) || (l = 0);
    let u = /^\s*/.exec(o.text)[0], f = Nf(t, l);
    (u != f || a.from < o.from + u.length) && (n[o.from] = l, s.push({ from: o.from, to: o.from + u.length, insert: f }));
  });
  return i.changes.empty || e(t.update(i, { userEvent: "indent" })), !0;
}, TE = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(U1(t, (n, r) => {
  r.push({ from: n.from, insert: t.facet(ig) });
}), { userEvent: "input.indent" })), !0), $E = ({ state: t, dispatch: e }) => t.readOnly ? !1 : (e(t.update(U1(t, (n, r) => {
  let i = /^\s*/.exec(n.text)[0];
  if (!i)
    return;
  let o = xu(i, t.tabSize), s = 0, a = Nf(t, Math.max(0, o - ol(t)));
  for (; s < i.length && s < a.length && i.charCodeAt(s) == a.charCodeAt(s); )
    s++;
  r.push({ from: n.from + s, to: n.from + i.length, insert: a.slice(s) });
}), { userEvent: "delete.dedent" })), !0), bz = (t) => (t.setTabFocusMode(), !0), yz = [
  { key: "Ctrl-b", run: lE, shift: vE, preventDefault: !0 },
  { key: "Ctrl-f", run: cE, shift: bE },
  { key: "Ctrl-p", run: dE, shift: wE },
  { key: "Ctrl-n", run: hE, shift: jE },
  { key: "Ctrl-a", run: B7, shift: X7 },
  { key: "Ctrl-e", run: q7, shift: Z7 },
  { key: "Ctrl-d", run: CE },
  { key: "Ctrl-h", run: sb },
  { key: "Ctrl-k", run: oz },
  { key: "Ctrl-Alt-h", run: EE },
  { key: "Ctrl-o", run: lz },
  { key: "Ctrl-t", run: cz },
  { key: "Ctrl-v", run: ob }
], xz = /* @__PURE__ */ [
  { key: "ArrowLeft", run: lE, shift: vE, preventDefault: !0 },
  { key: "Mod-ArrowLeft", mac: "Alt-ArrowLeft", run: T7, shift: V7, preventDefault: !0 },
  { mac: "Cmd-ArrowLeft", run: z7, shift: Y7, preventDefault: !0 },
  { key: "ArrowRight", run: cE, shift: bE, preventDefault: !0 },
  { key: "Mod-ArrowRight", mac: "Alt-ArrowRight", run: $7, shift: W7, preventDefault: !0 },
  { mac: "Cmd-ArrowRight", run: L7, shift: Q7, preventDefault: !0 },
  { key: "ArrowUp", run: dE, shift: wE, preventDefault: !0 },
  { mac: "Cmd-ArrowUp", run: j2, shift: S2 },
  { mac: "Ctrl-ArrowUp", run: y2, shift: x2 },
  { key: "ArrowDown", run: hE, shift: jE, preventDefault: !0 },
  { mac: "Cmd-ArrowDown", run: k2, shift: C2 },
  { mac: "Ctrl-ArrowDown", run: ob, shift: w2 },
  { key: "PageUp", run: y2, shift: x2 },
  { key: "PageDown", run: ob, shift: w2 },
  { key: "Home", run: I7, shift: J7, preventDefault: !0 },
  { key: "Mod-Home", run: j2, shift: S2 },
  { key: "End", run: D7, shift: G7, preventDefault: !0 },
  { key: "Mod-End", run: k2, shift: C2 },
  { key: "Enter", run: O2, shift: O2 },
  { key: "Mod-a", run: ez },
  { key: "Backspace", run: sb, shift: sb },
  { key: "Delete", run: CE },
  { key: "Mod-Backspace", mac: "Alt-Backspace", run: EE },
  { key: "Mod-Delete", mac: "Alt-Delete", run: iz },
  { mac: "Mod-Backspace", run: sz },
  { mac: "Mod-Delete", run: az }
].concat(/* @__PURE__ */ yz.map((t) => ({ mac: t.key, run: t.run, shift: t.shift }))), wz = /* @__PURE__ */ [
  { key: "Alt-ArrowLeft", mac: "Ctrl-ArrowLeft", run: R7, shift: H7 },
  { key: "Alt-ArrowRight", mac: "Ctrl-ArrowRight", run: N7, shift: K7 },
  { key: "Alt-ArrowUp", run: uz },
  { key: "Shift-Alt-ArrowUp", run: dz },
  { key: "Alt-ArrowDown", run: fz },
  { key: "Shift-Alt-ArrowDown", run: hz },
  { key: "Escape", run: rz },
  { key: "Mod-Enter", run: gz },
  { key: "Alt-l", mac: "Ctrl-l", run: tz },
  { key: "Mod-i", run: nz, preventDefault: !0 },
  { key: "Mod-[", run: $E },
  { key: "Mod-]", run: TE },
  { key: "Mod-Alt-\\", run: vz },
  { key: "Shift-Mod-k", run: pz },
  { key: "Shift-Mod-\\", run: U7 },
  { key: "Mod-/", run: S7 },
  { key: "Alt-A", run: O7 },
  { key: "Ctrl-m", mac: "Shift-Alt-m", run: bz }
].concat(xz), jz = { key: "Tab", run: TE, shift: $E };
class E2 {
  constructor(e, n, r) {
    this.from = e, this.to = n, this.diagnostic = r;
  }
}
class Tl {
  constructor(e, n, r) {
    this.diagnostics = e, this.panel = n, this.selected = r;
  }
  static init(e, n, r) {
    let i = r.facet(Os).markerFilter;
    i && (e = i(e, r));
    let o = e.slice().sort((f, d) => f.from - d.from || f.to - d.to), s = new rs(), a = [], l = 0;
    for (let f = 0; ; ) {
      let d = f == o.length ? null : o[f];
      if (!d && !a.length)
        break;
      let h, p;
      for (a.length ? (h = l, p = a.reduce((v, g) => Math.min(v, g.to), d && d.from > h ? d.from : 1e8)) : (h = d.from, p = d.to, a.push(d), f++); f < o.length; ) {
        let v = o[f];
        if (v.from == h && (v.to > v.from || v.to == h))
          a.push(v), f++, p = Math.min(v.to, p);
        else {
          p = Math.min(v.from, p);
          break;
        }
      }
      let m = LE(a);
      if (a.some((v) => v.from == v.to || v.from == v.to - 1 && r.doc.lineAt(v.from).to == v.from))
        s.add(h, h, Bt.widget({
          widget: new $z(m),
          diagnostics: a.slice()
        }));
      else {
        let v = a.reduce((g, b) => b.markClass ? g + " " + b.markClass : g, "");
        s.add(h, p, Bt.mark({
          class: "cm-lintRange cm-lintRange-" + m + v,
          diagnostics: a.slice(),
          inclusiveEnd: a.some((g) => g.to > p)
        }));
      }
      l = p;
      for (let v = 0; v < a.length; v++)
        a[v].to <= l && a.splice(v--, 1);
    }
    let u = s.finish();
    return new Tl(u, n, lu(u));
  }
}
function lu(t, e = null, n = 0) {
  let r = null;
  return t.between(n, 1e9, (i, o, { spec: s }) => {
    if (!(e && s.diagnostics.indexOf(e) < 0))
      if (!r)
        r = new E2(i, o, e || s.diagnostics[0]);
      else {
        if (s.diagnostics.indexOf(r.diagnostic) < 0)
          return !1;
        r = new E2(r.from, o, r.diagnostic);
      }
  }), r;
}
function PE(t, e) {
  let n = e.pos, r = e.end || n, i = t.state.facet(Os).hideOn(t, n, r);
  if (i != null)
    return i;
  let o = t.startState.doc.lineAt(e.pos);
  return !!(t.effects.some((s) => s.is(ug)) || t.changes.touchesRange(o.from, Math.max(o.to, r)));
}
function RE(t, e) {
  return t.field(xo, !1) ? e : e.concat(vn.appendConfig.of(FE));
}
function kz(t, e) {
  return {
    effects: RE(t, [ug.of(e)])
  };
}
const ug = /* @__PURE__ */ vn.define(), V1 = /* @__PURE__ */ vn.define(), NE = /* @__PURE__ */ vn.define(), xo = /* @__PURE__ */ wi.define({
  create() {
    return new Tl(Bt.none, null, null);
  },
  update(t, e) {
    if (e.docChanged && t.diagnostics.size) {
      let n = t.diagnostics.map(e.changes), r = null, i = t.panel;
      if (t.selected) {
        let o = e.changes.mapPos(t.selected.from, 1);
        r = lu(n, t.selected.diagnostic, o) || lu(n, null, o);
      }
      !n.size && i && e.state.facet(Os).autoPanel && (i = null), t = new Tl(n, i, r);
    }
    for (let n of e.effects)
      if (n.is(ug)) {
        let r = e.state.facet(Os).autoPanel ? n.value.length ? Df.open : null : t.panel;
        t = Tl.init(n.value, r, e.state);
      } else n.is(V1) ? t = new Tl(t.diagnostics, n.value ? Df.open : null, t.selected) : n.is(NE) && (t = new Tl(t.diagnostics, t.panel, n.value));
    return t;
  },
  provide: (t) => [
    Pf.from(t, (e) => e.panel),
    nt.decorations.from(t, (e) => e.diagnostics)
  ]
}), Sz = /* @__PURE__ */ Bt.mark({ class: "cm-lintRange cm-lintRange-active" });
function Cz(t, e, n) {
  let { diagnostics: r } = t.state.field(xo), i, o = -1, s = -1;
  r.between(e - (n < 0 ? 1 : 0), e + (n > 0 ? 1 : 0), (l, u, { spec: f }) => {
    if (e >= l && e <= u && (l == u || (e > l || n > 0) && (e < u || n < 0)))
      return i = f.diagnostics, o = l, s = u, !1;
  });
  let a = t.state.facet(Os).tooltipFilter;
  return i && a && (i = a(i, t.state)), i ? {
    pos: o,
    end: s,
    above: t.state.doc.lineAt(o).to < s,
    create() {
      return { dom: DE(t, i) };
    }
  } : null;
}
function DE(t, e) {
  return vr("ul", { class: "cm-tooltip-lint" }, e.map((n) => zE(t, n, !1)));
}
const Oz = (t) => {
  let e = t.state.field(xo, !1);
  (!e || !e.panel) && t.dispatch({ effects: RE(t.state, [V1.of(!0)]) });
  let n = $f(t, Df.open);
  return n && n.dom.querySelector(".cm-panel-lint ul").focus(), !0;
}, _2 = (t) => {
  let e = t.state.field(xo, !1);
  return !e || !e.panel ? !1 : (t.dispatch({ effects: V1.of(!1) }), !0);
}, Ez = (t) => {
  let e = t.state.field(xo, !1);
  if (!e)
    return !1;
  let n = t.state.selection.main, r = e.diagnostics.iter(n.to + 1);
  return !r.value && (r = e.diagnostics.iter(0), !r.value || r.from == n.from && r.to == n.to) ? !1 : (t.dispatch({ selection: { anchor: r.from, head: r.to }, scrollIntoView: !0 }), !0);
}, _z = [
  { key: "Mod-Shift-m", run: Oz, preventDefault: !0 },
  { key: "F8", run: Ez }
], Az = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.timeout = -1, this.set = !0;
    let { delay: e } = t.state.facet(Os);
    this.lintTime = Date.now() + e, this.run = this.run.bind(this), this.timeout = setTimeout(this.run, e);
  }
  run() {
    clearTimeout(this.timeout);
    let t = Date.now();
    if (t < this.lintTime - 10)
      this.timeout = setTimeout(this.run, this.lintTime - t);
    else {
      this.set = !1;
      let { state: e } = this.view, { sources: n } = e.facet(Os);
      n.length && Mz(n.map((r) => Promise.resolve(r(this.view))), (r) => {
        this.view.state.doc == e.doc && this.view.dispatch(kz(this.view.state, r.reduce((i, o) => i.concat(o))));
      }, (r) => {
        Wi(this.view.state, r);
      });
    }
  }
  update(t) {
    let e = t.state.facet(Os);
    (t.docChanged || e != t.startState.facet(Os) || e.needsRefresh && e.needsRefresh(t)) && (this.lintTime = Date.now() + e.delay, this.set || (this.set = !0, this.timeout = setTimeout(this.run, e.delay)));
  }
  force() {
    this.set && (this.lintTime = Date.now(), this.run());
  }
  destroy() {
    clearTimeout(this.timeout);
  }
});
function Mz(t, e, n) {
  let r = [], i = -1;
  for (let o of t)
    o.then((s) => {
      r.push(s), clearTimeout(i), r.length == t.length ? e(r) : i = setTimeout(() => e(r), 200);
    }, n);
}
const Os = /* @__PURE__ */ lt.define({
  combine(t) {
    return Object.assign({ sources: t.map((e) => e.source).filter((e) => e != null) }, us(t.map((e) => e.config), {
      delay: 750,
      markerFilter: null,
      tooltipFilter: null,
      needsRefresh: null,
      hideOn: () => null
    }, {
      needsRefresh: (e, n) => e ? n ? (r) => e(r) || n(r) : e : n
    }));
  }
});
function Tz(t, e = {}) {
  return [
    Os.of({ source: t, config: e }),
    Az,
    FE
  ];
}
function IE(t) {
  let e = [];
  if (t)
    e: for (let { name: n } of t) {
      for (let r = 0; r < n.length; r++) {
        let i = n[r];
        if (/[a-zA-Z]/.test(i) && !e.some((o) => o.toLowerCase() == i.toLowerCase())) {
          e.push(i);
          continue e;
        }
      }
      e.push("");
    }
  return e;
}
function zE(t, e, n) {
  var r;
  let i = n ? IE(e.actions) : [];
  return vr("li", { class: "cm-diagnostic cm-diagnostic-" + e.severity }, vr("span", { class: "cm-diagnosticText" }, e.renderMessage ? e.renderMessage(t) : e.message), (r = e.actions) === null || r === void 0 ? void 0 : r.map((o, s) => {
    let a = !1, l = (h) => {
      if (h.preventDefault(), a)
        return;
      a = !0;
      let p = lu(t.state.field(xo).diagnostics, e);
      p && o.apply(t, p.from, p.to);
    }, { name: u } = o, f = i[s] ? u.indexOf(i[s]) : -1, d = f < 0 ? u : [
      u.slice(0, f),
      vr("u", u.slice(f, f + 1)),
      u.slice(f + 1)
    ];
    return vr("button", {
      type: "button",
      class: "cm-diagnosticAction",
      onclick: l,
      onmousedown: l,
      "aria-label": ` Action: ${u}${f < 0 ? "" : ` (access key "${i[s]})"`}.`
    }, d);
  }), e.source && vr("div", { class: "cm-diagnosticSource" }, e.source));
}
class $z extends pl {
  constructor(e) {
    super(), this.sev = e;
  }
  eq(e) {
    return e.sev == this.sev;
  }
  toDOM() {
    return vr("span", { class: "cm-lintPoint cm-lintPoint-" + this.sev });
  }
}
class A2 {
  constructor(e, n) {
    this.diagnostic = n, this.id = "item_" + Math.floor(Math.random() * 4294967295).toString(16), this.dom = zE(e, n, !0), this.dom.id = this.id, this.dom.setAttribute("role", "option");
  }
}
class Df {
  constructor(e) {
    this.view = e, this.items = [];
    let n = (i) => {
      if (i.keyCode == 27)
        _2(this.view), this.view.focus();
      else if (i.keyCode == 38 || i.keyCode == 33)
        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);
      else if (i.keyCode == 40 || i.keyCode == 34)
        this.moveSelection((this.selectedIndex + 1) % this.items.length);
      else if (i.keyCode == 36)
        this.moveSelection(0);
      else if (i.keyCode == 35)
        this.moveSelection(this.items.length - 1);
      else if (i.keyCode == 13)
        this.view.focus();
      else if (i.keyCode >= 65 && i.keyCode <= 90 && this.selectedIndex >= 0) {
        let { diagnostic: o } = this.items[this.selectedIndex], s = IE(o.actions);
        for (let a = 0; a < s.length; a++)
          if (s[a].toUpperCase().charCodeAt(0) == i.keyCode) {
            let l = lu(this.view.state.field(xo).diagnostics, o);
            l && o.actions[a].apply(e, l.from, l.to);
          }
      } else
        return;
      i.preventDefault();
    }, r = (i) => {
      for (let o = 0; o < this.items.length; o++)
        this.items[o].dom.contains(i.target) && this.moveSelection(o);
    };
    this.list = vr("ul", {
      tabIndex: 0,
      role: "listbox",
      "aria-label": this.view.state.phrase("Diagnostics"),
      onkeydown: n,
      onclick: r
    }), this.dom = vr("div", { class: "cm-panel-lint" }, this.list, vr("button", {
      type: "button",
      name: "close",
      "aria-label": this.view.state.phrase("close"),
      onclick: () => _2(this.view)
    }, "×")), this.update();
  }
  get selectedIndex() {
    let e = this.view.state.field(xo).selected;
    if (!e)
      return -1;
    for (let n = 0; n < this.items.length; n++)
      if (this.items[n].diagnostic == e.diagnostic)
        return n;
    return -1;
  }
  update() {
    let { diagnostics: e, selected: n } = this.view.state.field(xo), r = 0, i = !1, o = null, s = /* @__PURE__ */ new Set();
    for (e.between(0, this.view.state.doc.length, (a, l, { spec: u }) => {
      for (let f of u.diagnostics) {
        if (s.has(f))
          continue;
        s.add(f);
        let d = -1, h;
        for (let p = r; p < this.items.length; p++)
          if (this.items[p].diagnostic == f) {
            d = p;
            break;
          }
        d < 0 ? (h = new A2(this.view, f), this.items.splice(r, 0, h), i = !0) : (h = this.items[d], d > r && (this.items.splice(r, d - r), i = !0)), n && h.diagnostic == n.diagnostic ? h.dom.hasAttribute("aria-selected") || (h.dom.setAttribute("aria-selected", "true"), o = h) : h.dom.hasAttribute("aria-selected") && h.dom.removeAttribute("aria-selected"), r++;
      }
    }); r < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0); )
      i = !0, this.items.pop();
    this.items.length == 0 && (this.items.push(new A2(this.view, {
      from: -1,
      to: -1,
      severity: "info",
      message: this.view.state.phrase("No diagnostics")
    })), i = !0), o ? (this.list.setAttribute("aria-activedescendant", o.id), this.view.requestMeasure({
      key: this,
      read: () => ({ sel: o.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),
      write: ({ sel: a, panel: l }) => {
        let u = l.height / this.list.offsetHeight;
        a.top < l.top ? this.list.scrollTop -= (l.top - a.top) / u : a.bottom > l.bottom && (this.list.scrollTop += (a.bottom - l.bottom) / u);
      }
    })) : this.selectedIndex < 0 && this.list.removeAttribute("aria-activedescendant"), i && this.sync();
  }
  sync() {
    let e = this.list.firstChild;
    function n() {
      let r = e;
      e = r.nextSibling, r.remove();
    }
    for (let r of this.items)
      if (r.dom.parentNode == this.list) {
        for (; e != r.dom; )
          n();
        e = r.dom.nextSibling;
      } else
        this.list.insertBefore(r.dom, e);
    for (; e; )
      n();
  }
  moveSelection(e) {
    if (this.selectedIndex < 0)
      return;
    let n = this.view.state.field(xo), r = lu(n.diagnostics, this.items[e].diagnostic);
    r && this.view.dispatch({
      selection: { anchor: r.from, head: r.to },
      scrollIntoView: !0,
      effects: NE.of(r)
    });
  }
  static open(e) {
    return new Df(e);
  }
}
function xp(t, e = 'viewBox="0 0 40 40"') {
  return `url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" ${e}>${encodeURIComponent(t)}</svg>')`;
}
function Lh(t) {
  return xp(`<path d="m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0" stroke="${t}" fill="none" stroke-width=".7"/>`, 'width="6" height="3"');
}
const Pz = /* @__PURE__ */ nt.baseTheme({
  ".cm-diagnostic": {
    padding: "3px 6px 3px 8px",
    marginLeft: "-1px",
    display: "block",
    whiteSpace: "pre-wrap"
  },
  ".cm-diagnostic-error": { borderLeft: "5px solid #d11" },
  ".cm-diagnostic-warning": { borderLeft: "5px solid orange" },
  ".cm-diagnostic-info": { borderLeft: "5px solid #999" },
  ".cm-diagnostic-hint": { borderLeft: "5px solid #66d" },
  ".cm-diagnosticAction": {
    font: "inherit",
    border: "none",
    padding: "2px 4px",
    backgroundColor: "#444",
    color: "white",
    borderRadius: "3px",
    marginLeft: "8px",
    cursor: "pointer"
  },
  ".cm-diagnosticSource": {
    fontSize: "70%",
    opacity: 0.7
  },
  ".cm-lintRange": {
    backgroundPosition: "left bottom",
    backgroundRepeat: "repeat-x",
    paddingBottom: "0.7px"
  },
  ".cm-lintRange-error": { backgroundImage: /* @__PURE__ */ Lh("#d11") },
  ".cm-lintRange-warning": { backgroundImage: /* @__PURE__ */ Lh("orange") },
  ".cm-lintRange-info": { backgroundImage: /* @__PURE__ */ Lh("#999") },
  ".cm-lintRange-hint": { backgroundImage: /* @__PURE__ */ Lh("#66d") },
  ".cm-lintRange-active": { backgroundColor: "#ffdd9980" },
  ".cm-tooltip-lint": {
    padding: 0,
    margin: 0
  },
  ".cm-lintPoint": {
    position: "relative",
    "&:after": {
      content: '""',
      position: "absolute",
      bottom: 0,
      left: "-2px",
      borderLeft: "3px solid transparent",
      borderRight: "3px solid transparent",
      borderBottom: "4px solid #d11"
    }
  },
  ".cm-lintPoint-warning": {
    "&:after": { borderBottomColor: "orange" }
  },
  ".cm-lintPoint-info": {
    "&:after": { borderBottomColor: "#999" }
  },
  ".cm-lintPoint-hint": {
    "&:after": { borderBottomColor: "#66d" }
  },
  ".cm-panel.cm-panel-lint": {
    position: "relative",
    "& ul": {
      maxHeight: "100px",
      overflowY: "auto",
      "& [aria-selected]": {
        backgroundColor: "#ddd",
        "& u": { textDecoration: "underline" }
      },
      "&:focus [aria-selected]": {
        background_fallback: "#bdf",
        backgroundColor: "Highlight",
        color_fallback: "white",
        color: "HighlightText"
      },
      "& u": { textDecoration: "none" },
      padding: 0,
      margin: 0
    },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "2px",
      background: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    }
  }
});
function Rz(t) {
  return t == "error" ? 4 : t == "warning" ? 3 : t == "info" ? 2 : 1;
}
function LE(t) {
  let e = "hint", n = 1;
  for (let r of t) {
    let i = Rz(r.severity);
    i > n && (n = i, e = r.severity);
  }
  return e;
}
class BE extends Ns {
  constructor(e) {
    super(), this.diagnostics = e, this.severity = LE(e);
  }
  toDOM(e) {
    let n = document.createElement("div");
    n.className = "cm-lint-marker cm-lint-marker-" + this.severity;
    let r = this.diagnostics, i = e.state.facet(fg).tooltipFilter;
    return i && (r = i(r, e.state)), r.length && (n.onmouseover = () => Dz(e, n, r)), n;
  }
}
function Nz(t, e) {
  let n = (r) => {
    let i = e.getBoundingClientRect();
    if (!(r.clientX > i.left - 10 && r.clientX < i.right + 10 && r.clientY > i.top - 10 && r.clientY < i.bottom + 10)) {
      for (let o = r.target; o; o = o.parentNode)
        if (o.nodeType == 1 && o.classList.contains("cm-tooltip-lint"))
          return;
      window.removeEventListener("mousemove", n), t.state.field(qE) && t.dispatch({ effects: W1.of(null) });
    }
  };
  window.addEventListener("mousemove", n);
}
function Dz(t, e, n) {
  function r() {
    let s = t.elementAtHeight(e.getBoundingClientRect().top + 5 - t.documentTop);
    t.coordsAtPos(s.from) && t.dispatch({ effects: W1.of({
      pos: s.from,
      above: !1,
      clip: !1,
      create() {
        return {
          dom: DE(t, n),
          getCoords: () => e.getBoundingClientRect()
        };
      }
    }) }), e.onmouseout = e.onmousemove = null, Nz(t, e);
  }
  let { hoverTime: i } = t.state.facet(fg), o = setTimeout(r, i);
  e.onmouseout = () => {
    clearTimeout(o), e.onmouseout = e.onmousemove = null;
  }, e.onmousemove = () => {
    clearTimeout(o), o = setTimeout(r, i);
  };
}
function Iz(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let i of e) {
    let o = t.lineAt(i.from);
    (n[o.from] || (n[o.from] = [])).push(i);
  }
  let r = [];
  for (let i in n)
    r.push(new BE(n[i]).range(+i));
  return zn.of(r, !0);
}
const zz = /* @__PURE__ */ A4({
  class: "cm-gutter-lint",
  markers: (t) => t.state.field(ab),
  widgetMarker: (t, e, n) => {
    let r = [];
    return t.state.field(ab).between(n.from, n.to, (i, o, s) => {
      i > n.from && i < n.to && r.push(...s.diagnostics);
    }), r.length ? new BE(r) : null;
  }
}), ab = /* @__PURE__ */ wi.define({
  create() {
    return zn.empty;
  },
  update(t, e) {
    t = t.map(e.changes);
    let n = e.state.facet(fg).markerFilter;
    for (let r of e.effects)
      if (r.is(ug)) {
        let i = r.value;
        n && (i = n(i || [], e.state)), t = Iz(e.state.doc, i.slice(0));
      }
    return t;
  }
}), W1 = /* @__PURE__ */ vn.define(), qE = /* @__PURE__ */ wi.define({
  create() {
    return null;
  },
  update(t, e) {
    return t && e.docChanged && (t = PE(e, t) ? null : Object.assign(Object.assign({}, t), { pos: e.changes.mapPos(t.pos) })), e.effects.reduce((n, r) => r.is(W1) ? r.value : n, t);
  },
  provide: (t) => ng.from(t)
}), Lz = /* @__PURE__ */ nt.baseTheme({
  ".cm-gutter-lint": {
    width: "1.4em",
    "& .cm-gutterElement": {
      padding: ".2em"
    }
  },
  ".cm-lint-marker": {
    width: "1em",
    height: "1em"
  },
  ".cm-lint-marker-info": {
    content: /* @__PURE__ */ xp('<path fill="#aaf" stroke="#77e" stroke-width="6" stroke-linejoin="round" d="M5 5L35 5L35 35L5 35Z"/>')
  },
  ".cm-lint-marker-warning": {
    content: /* @__PURE__ */ xp('<path fill="#fe8" stroke="#fd7" stroke-width="6" stroke-linejoin="round" d="M20 6L37 35L3 35Z"/>')
  },
  ".cm-lint-marker-error": {
    content: /* @__PURE__ */ xp('<circle cx="20" cy="20" r="15" fill="#f87" stroke="#f43" stroke-width="6"/>')
  }
}), FE = [
  xo,
  /* @__PURE__ */ nt.decorations.compute([xo], (t) => {
    let { selected: e, panel: n } = t.field(xo);
    return !e || !n || e.from == e.to ? Bt.none : Bt.set([
      Sz.range(e.from, e.to)
    ]);
  }),
  /* @__PURE__ */ aI(Cz, { hideOn: PE }),
  Pz
], fg = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      hoverTime: 300,
      markerFilter: null,
      tooltipFilter: null
    });
  }
});
function Bz(t = {}) {
  return [fg.of(t), ab, zz, Lz, qE];
}
class nm {
  /**
  @internal
  */
  constructor(e, n, r, i, o, s, a, l, u, f = 0, d) {
    this.p = e, this.stack = n, this.state = r, this.reducePos = i, this.pos = o, this.score = s, this.buffer = a, this.bufferBase = l, this.curContext = u, this.lookAhead = f, this.parent = d;
  }
  /**
  @internal
  */
  toString() {
    return `[${this.stack.filter((e, n) => n % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? "!" + this.score : ""}`;
  }
  // Start an empty stack
  /**
  @internal
  */
  static start(e, n, r = 0) {
    let i = e.parser.context;
    return new nm(e, [], n, r, r, 0, [], 0, i ? new M2(i, i.start) : null, 0, null);
  }
  /**
  The stack's current [context](#lr.ContextTracker) value, if
  any. Its type will depend on the context tracker's type
  parameter, or it will be `null` if there is no context
  tracker.
  */
  get context() {
    return this.curContext ? this.curContext.context : null;
  }
  // Push a state onto the stack, tracking its start position as well
  // as the buffer base at that point.
  /**
  @internal
  */
  pushState(e, n) {
    this.stack.push(this.state, n, this.bufferBase + this.buffer.length), this.state = e;
  }
  // Apply a reduce action
  /**
  @internal
  */
  reduce(e) {
    var n;
    let r = e >> 19, i = e & 65535, { parser: o } = this.p, s = this.reducePos < this.pos - 25;
    s && this.setLookAhead(this.pos);
    let a = o.dynamicPrecedence(i);
    if (a && (this.score += a), r == 0) {
      this.pushState(o.getGoto(this.state, i, !0), this.reducePos), i < o.minRepeatTerm && this.storeNode(i, this.reducePos, this.reducePos, s ? 8 : 4, !0), this.reduceContext(i, this.reducePos);
      return;
    }
    let l = this.stack.length - (r - 1) * 3 - (e & 262144 ? 6 : 0), u = l ? this.stack[l - 2] : this.p.ranges[0].from, f = this.reducePos - u;
    f >= 2e3 && !(!((n = this.p.parser.nodeSet.types[i]) === null || n === void 0) && n.isAnonymous) && (u == this.p.lastBigReductionStart ? (this.p.bigReductionCount++, this.p.lastBigReductionSize = f) : this.p.lastBigReductionSize < f && (this.p.bigReductionCount = 1, this.p.lastBigReductionStart = u, this.p.lastBigReductionSize = f));
    let d = l ? this.stack[l - 1] : 0, h = this.bufferBase + this.buffer.length - d;
    if (i < o.minRepeatTerm || e & 131072) {
      let p = o.stateFlag(
        this.state,
        1
        /* StateFlag.Skipped */
      ) ? this.pos : this.reducePos;
      this.storeNode(i, u, p, h + 4, !0);
    }
    if (e & 262144)
      this.state = this.stack[l];
    else {
      let p = this.stack[l - 3];
      this.state = o.getGoto(p, i, !0);
    }
    for (; this.stack.length > l; )
      this.stack.pop();
    this.reduceContext(i, u);
  }
  // Shift a value into the buffer
  /**
  @internal
  */
  storeNode(e, n, r, i = 4, o = !1) {
    if (e == 0 && (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {
      let s = this, a = this.buffer.length;
      if (a == 0 && s.parent && (a = s.bufferBase - s.parent.bufferBase, s = s.parent), a > 0 && s.buffer[a - 4] == 0 && s.buffer[a - 1] > -1) {
        if (n == r)
          return;
        if (s.buffer[a - 2] >= n) {
          s.buffer[a - 2] = r;
          return;
        }
      }
    }
    if (!o || this.pos == r)
      this.buffer.push(e, n, r, i);
    else {
      let s = this.buffer.length;
      if (s > 0 && this.buffer[s - 4] != 0) {
        let a = !1;
        for (let l = s; l > 0 && this.buffer[l - 2] > r; l -= 4)
          if (this.buffer[l - 1] >= 0) {
            a = !0;
            break;
          }
        if (a)
          for (; s > 0 && this.buffer[s - 2] > r; )
            this.buffer[s] = this.buffer[s - 4], this.buffer[s + 1] = this.buffer[s - 3], this.buffer[s + 2] = this.buffer[s - 2], this.buffer[s + 3] = this.buffer[s - 1], s -= 4, i > 4 && (i -= 4);
      }
      this.buffer[s] = e, this.buffer[s + 1] = n, this.buffer[s + 2] = r, this.buffer[s + 3] = i;
    }
  }
  // Apply a shift action
  /**
  @internal
  */
  shift(e, n, r, i) {
    if (e & 131072)
      this.pushState(e & 65535, this.pos);
    else if ((e & 262144) == 0) {
      let o = e, { parser: s } = this.p;
      (i > this.pos || n <= s.maxNode) && (this.pos = i, s.stateFlag(
        o,
        1
        /* StateFlag.Skipped */
      ) || (this.reducePos = i)), this.pushState(o, r), this.shiftContext(n, r), n <= s.maxNode && this.buffer.push(n, r, i, 4);
    } else
      this.pos = i, this.shiftContext(n, r), n <= this.p.parser.maxNode && this.buffer.push(n, r, i, 4);
  }
  // Apply an action
  /**
  @internal
  */
  apply(e, n, r, i) {
    e & 65536 ? this.reduce(e) : this.shift(e, n, r, i);
  }
  // Add a prebuilt (reused) node into the buffer.
  /**
  @internal
  */
  useNode(e, n) {
    let r = this.p.reused.length - 1;
    (r < 0 || this.p.reused[r] != e) && (this.p.reused.push(e), r++);
    let i = this.pos;
    this.reducePos = this.pos = i + e.length, this.pushState(n, i), this.buffer.push(
      r,
      i,
      this.reducePos,
      -1
      /* size == -1 means this is a reused value */
    ), this.curContext && this.updateContext(this.curContext.tracker.reuse(this.curContext.context, e, this, this.p.stream.reset(this.pos - e.length)));
  }
  // Split the stack. Due to the buffer sharing and the fact
  // that `this.stack` tends to stay quite shallow, this isn't very
  // expensive.
  /**
  @internal
  */
  split() {
    let e = this, n = e.buffer.length;
    for (; n > 0 && e.buffer[n - 2] > e.reducePos; )
      n -= 4;
    let r = e.buffer.slice(n), i = e.bufferBase + n;
    for (; e && i == e.bufferBase; )
      e = e.parent;
    return new nm(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, r, i, this.curContext, this.lookAhead, e);
  }
  // Try to recover from an error by 'deleting' (ignoring) one token.
  /**
  @internal
  */
  recoverByDelete(e, n) {
    let r = e <= this.p.parser.maxNode;
    r && this.storeNode(e, this.pos, n, 4), this.storeNode(0, this.pos, n, r ? 8 : 4), this.pos = this.reducePos = n, this.score -= 190;
  }
  /**
  Check if the given term would be able to be shifted (optionally
  after some reductions) on this stack. This can be useful for
  external tokenizers that want to make sure they only provide a
  given token when it applies.
  */
  canShift(e) {
    for (let n = new qz(this); ; ) {
      let r = this.p.parser.stateSlot(
        n.state,
        4
        /* ParseState.DefaultReduce */
      ) || this.p.parser.hasAction(n.state, e);
      if (r == 0)
        return !1;
      if ((r & 65536) == 0)
        return !0;
      n.reduce(r);
    }
  }
  // Apply up to Recover.MaxNext recovery actions that conceptually
  // inserts some missing token or rule.
  /**
  @internal
  */
  recoverByInsert(e) {
    if (this.stack.length >= 300)
      return [];
    let n = this.p.parser.nextStates(this.state);
    if (n.length > 8 || this.stack.length >= 120) {
      let i = [];
      for (let o = 0, s; o < n.length; o += 2)
        (s = n[o + 1]) != this.state && this.p.parser.hasAction(s, e) && i.push(n[o], s);
      if (this.stack.length < 120)
        for (let o = 0; i.length < 8 && o < n.length; o += 2) {
          let s = n[o + 1];
          i.some((a, l) => l & 1 && a == s) || i.push(n[o], s);
        }
      n = i;
    }
    let r = [];
    for (let i = 0; i < n.length && r.length < 4; i += 2) {
      let o = n[i + 1];
      if (o == this.state)
        continue;
      let s = this.split();
      s.pushState(o, this.pos), s.storeNode(0, s.pos, s.pos, 4, !0), s.shiftContext(n[i], this.pos), s.reducePos = this.pos, s.score -= 200, r.push(s);
    }
    return r;
  }
  // Force a reduce, if possible. Return false if that can't
  // be done.
  /**
  @internal
  */
  forceReduce() {
    let { parser: e } = this.p, n = e.stateSlot(
      this.state,
      5
      /* ParseState.ForcedReduce */
    );
    if ((n & 65536) == 0)
      return !1;
    if (!e.validAction(this.state, n)) {
      let r = n >> 19, i = n & 65535, o = this.stack.length - r * 3;
      if (o < 0 || e.getGoto(this.stack[o], i, !1) < 0) {
        let s = this.findForcedReduction();
        if (s == null)
          return !1;
        n = s;
      }
      this.storeNode(0, this.pos, this.pos, 4, !0), this.score -= 100;
    }
    return this.reducePos = this.pos, this.reduce(n), !0;
  }
  /**
  Try to scan through the automaton to find some kind of reduction
  that can be applied. Used when the regular ForcedReduce field
  isn't a valid action. @internal
  */
  findForcedReduction() {
    let { parser: e } = this.p, n = [], r = (i, o) => {
      if (!n.includes(i))
        return n.push(i), e.allActions(i, (s) => {
          if (!(s & 393216)) if (s & 65536) {
            let a = (s >> 19) - o;
            if (a > 1) {
              let l = s & 65535, u = this.stack.length - a * 3;
              if (u >= 0 && e.getGoto(this.stack[u], l, !1) >= 0)
                return a << 19 | 65536 | l;
            }
          } else {
            let a = r(s, o + 1);
            if (a != null)
              return a;
          }
        });
    };
    return r(this.state, 0);
  }
  /**
  @internal
  */
  forceAll() {
    for (; !this.p.parser.stateFlag(
      this.state,
      2
      /* StateFlag.Accepting */
    ); )
      if (!this.forceReduce()) {
        this.storeNode(0, this.pos, this.pos, 4, !0);
        break;
      }
    return this;
  }
  /**
  Check whether this state has no further actions (assumed to be a direct descendant of the
  top state, since any other states must be able to continue
  somehow). @internal
  */
  get deadEnd() {
    if (this.stack.length != 3)
      return !1;
    let { parser: e } = this.p;
    return e.data[e.stateSlot(
      this.state,
      1
      /* ParseState.Actions */
    )] == 65535 && !e.stateSlot(
      this.state,
      4
      /* ParseState.DefaultReduce */
    );
  }
  /**
  Restart the stack (put it back in its start state). Only safe
  when this.stack.length == 3 (state is directly below the top
  state). @internal
  */
  restart() {
    this.storeNode(0, this.pos, this.pos, 4, !0), this.state = this.stack[0], this.stack.length = 0;
  }
  /**
  @internal
  */
  sameState(e) {
    if (this.state != e.state || this.stack.length != e.stack.length)
      return !1;
    for (let n = 0; n < this.stack.length; n += 3)
      if (this.stack[n] != e.stack[n])
        return !1;
    return !0;
  }
  /**
  Get the parser used by this stack.
  */
  get parser() {
    return this.p.parser;
  }
  /**
  Test whether a given dialect (by numeric ID, as exported from
  the terms file) is enabled.
  */
  dialectEnabled(e) {
    return this.p.parser.dialect.flags[e];
  }
  shiftContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.shift(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  reduceContext(e, n) {
    this.curContext && this.updateContext(this.curContext.tracker.reduce(this.curContext.context, e, this, this.p.stream.reset(n)));
  }
  /**
  @internal
  */
  emitContext() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -3) && this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);
  }
  /**
  @internal
  */
  emitLookAhead() {
    let e = this.buffer.length - 1;
    (e < 0 || this.buffer[e] != -4) && this.buffer.push(this.lookAhead, this.pos, this.pos, -4);
  }
  updateContext(e) {
    if (e != this.curContext.context) {
      let n = new M2(this.curContext.tracker, e);
      n.hash != this.curContext.hash && this.emitContext(), this.curContext = n;
    }
  }
  /**
  @internal
  */
  setLookAhead(e) {
    e > this.lookAhead && (this.emitLookAhead(), this.lookAhead = e);
  }
  /**
  @internal
  */
  close() {
    this.curContext && this.curContext.tracker.strict && this.emitContext(), this.lookAhead > 0 && this.emitLookAhead();
  }
}
class M2 {
  constructor(e, n) {
    this.tracker = e, this.context = n, this.hash = e.strict ? e.hash(n) : 0;
  }
}
class qz {
  constructor(e) {
    this.start = e, this.state = e.state, this.stack = e.stack, this.base = this.stack.length;
  }
  reduce(e) {
    let n = e & 65535, r = e >> 19;
    r == 0 ? (this.stack == this.start.stack && (this.stack = this.stack.slice()), this.stack.push(this.state, 0, 0), this.base += 3) : this.base -= (r - 1) * 3;
    let i = this.start.p.parser.getGoto(this.stack[this.base - 3], n, !0);
    this.state = i;
  }
}
class rm {
  constructor(e, n, r) {
    this.stack = e, this.pos = n, this.index = r, this.buffer = e.buffer, this.index == 0 && this.maybeNext();
  }
  static create(e, n = e.bufferBase + e.buffer.length) {
    return new rm(e, n, n - e.bufferBase);
  }
  maybeNext() {
    let e = this.stack.parent;
    e != null && (this.index = this.stack.bufferBase - e.bufferBase, this.stack = e, this.buffer = e.buffer);
  }
  get id() {
    return this.buffer[this.index - 4];
  }
  get start() {
    return this.buffer[this.index - 3];
  }
  get end() {
    return this.buffer[this.index - 2];
  }
  get size() {
    return this.buffer[this.index - 1];
  }
  next() {
    this.index -= 4, this.pos -= 4, this.index == 0 && this.maybeNext();
  }
  fork() {
    return new rm(this.stack, this.pos, this.index);
  }
}
function Bh(t, e = Uint16Array) {
  if (typeof t != "string")
    return t;
  let n = null;
  for (let r = 0, i = 0; r < t.length; ) {
    let o = 0;
    for (; ; ) {
      let s = t.charCodeAt(r++), a = !1;
      if (s == 126) {
        o = 65535;
        break;
      }
      s >= 92 && s--, s >= 34 && s--;
      let l = s - 32;
      if (l >= 46 && (l -= 46, a = !0), o += l, a)
        break;
      o *= 46;
    }
    n ? n[i++] = o : n = new e(o);
  }
  return n;
}
class wp {
  constructor() {
    this.start = -1, this.value = -1, this.end = -1, this.extended = -1, this.lookAhead = 0, this.mask = 0, this.context = 0;
  }
}
const T2 = new wp();
class Fz {
  /**
  @internal
  */
  constructor(e, n) {
    this.input = e, this.ranges = n, this.chunk = "", this.chunkOff = 0, this.chunk2 = "", this.chunk2Pos = 0, this.next = -1, this.token = T2, this.rangeIndex = 0, this.pos = this.chunkPos = n[0].from, this.range = n[0], this.end = n[n.length - 1].to, this.readNext();
  }
  /**
  @internal
  */
  resolveOffset(e, n) {
    let r = this.range, i = this.rangeIndex, o = this.pos + e;
    for (; o < r.from; ) {
      if (!i)
        return null;
      let s = this.ranges[--i];
      o -= r.from - s.to, r = s;
    }
    for (; n < 0 ? o > r.to : o >= r.to; ) {
      if (i == this.ranges.length - 1)
        return null;
      let s = this.ranges[++i];
      o += s.from - r.to, r = s;
    }
    return o;
  }
  /**
  @internal
  */
  clipPos(e) {
    if (e >= this.range.from && e < this.range.to)
      return e;
    for (let n of this.ranges)
      if (n.to > e)
        return Math.max(e, n.from);
    return this.end;
  }
  /**
  Look at a code unit near the stream position. `.peek(0)` equals
  `.next`, `.peek(-1)` gives you the previous character, and so
  on.
  
  Note that looking around during tokenizing creates dependencies
  on potentially far-away content, which may reduce the
  effectiveness incremental parsing—when looking forward—or even
  cause invalid reparses when looking backward more than 25 code
  units, since the library does not track lookbehind.
  */
  peek(e) {
    let n = this.chunkOff + e, r, i;
    if (n >= 0 && n < this.chunk.length)
      r = this.pos + e, i = this.chunk.charCodeAt(n);
    else {
      let o = this.resolveOffset(e, 1);
      if (o == null)
        return -1;
      if (r = o, r >= this.chunk2Pos && r < this.chunk2Pos + this.chunk2.length)
        i = this.chunk2.charCodeAt(r - this.chunk2Pos);
      else {
        let s = this.rangeIndex, a = this.range;
        for (; a.to <= r; )
          a = this.ranges[++s];
        this.chunk2 = this.input.chunk(this.chunk2Pos = r), r + this.chunk2.length > a.to && (this.chunk2 = this.chunk2.slice(0, a.to - r)), i = this.chunk2.charCodeAt(0);
      }
    }
    return r >= this.token.lookAhead && (this.token.lookAhead = r + 1), i;
  }
  /**
  Accept a token. By default, the end of the token is set to the
  current stream position, but you can pass an offset (relative to
  the stream position) to change that.
  */
  acceptToken(e, n = 0) {
    let r = n ? this.resolveOffset(n, -1) : this.pos;
    if (r == null || r < this.token.start)
      throw new RangeError("Token end out of bounds");
    this.token.value = e, this.token.end = r;
  }
  /**
  Accept a token ending at a specific given position.
  */
  acceptTokenTo(e, n) {
    this.token.value = e, this.token.end = n;
  }
  getChunk() {
    if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {
      let { chunk: e, chunkPos: n } = this;
      this.chunk = this.chunk2, this.chunkPos = this.chunk2Pos, this.chunk2 = e, this.chunk2Pos = n, this.chunkOff = this.pos - this.chunkPos;
    } else {
      this.chunk2 = this.chunk, this.chunk2Pos = this.chunkPos;
      let e = this.input.chunk(this.pos), n = this.pos + e.length;
      this.chunk = n > this.range.to ? e.slice(0, this.range.to - this.pos) : e, this.chunkPos = this.pos, this.chunkOff = 0;
    }
  }
  readNext() {
    return this.chunkOff >= this.chunk.length && (this.getChunk(), this.chunkOff == this.chunk.length) ? this.next = -1 : this.next = this.chunk.charCodeAt(this.chunkOff);
  }
  /**
  Move the stream forward N (defaults to 1) code units. Returns
  the new value of [`next`](#lr.InputStream.next).
  */
  advance(e = 1) {
    for (this.chunkOff += e; this.pos + e >= this.range.to; ) {
      if (this.rangeIndex == this.ranges.length - 1)
        return this.setDone();
      e -= this.range.to - this.pos, this.range = this.ranges[++this.rangeIndex], this.pos = this.range.from;
    }
    return this.pos += e, this.pos >= this.token.lookAhead && (this.token.lookAhead = this.pos + 1), this.readNext();
  }
  setDone() {
    return this.pos = this.chunkPos = this.end, this.range = this.ranges[this.rangeIndex = this.ranges.length - 1], this.chunk = "", this.next = -1;
  }
  /**
  @internal
  */
  reset(e, n) {
    if (n ? (this.token = n, n.start = e, n.lookAhead = e + 1, n.value = n.extended = -1) : this.token = T2, this.pos != e) {
      if (this.pos = e, e == this.end)
        return this.setDone(), this;
      for (; e < this.range.from; )
        this.range = this.ranges[--this.rangeIndex];
      for (; e >= this.range.to; )
        this.range = this.ranges[++this.rangeIndex];
      e >= this.chunkPos && e < this.chunkPos + this.chunk.length ? this.chunkOff = e - this.chunkPos : (this.chunk = "", this.chunkOff = 0), this.readNext();
    }
    return this;
  }
  /**
  @internal
  */
  read(e, n) {
    if (e >= this.chunkPos && n <= this.chunkPos + this.chunk.length)
      return this.chunk.slice(e - this.chunkPos, n - this.chunkPos);
    if (e >= this.chunk2Pos && n <= this.chunk2Pos + this.chunk2.length)
      return this.chunk2.slice(e - this.chunk2Pos, n - this.chunk2Pos);
    if (e >= this.range.from && n <= this.range.to)
      return this.input.read(e, n);
    let r = "";
    for (let i of this.ranges) {
      if (i.from >= n)
        break;
      i.to > e && (r += this.input.read(Math.max(i.from, e), Math.min(i.to, n)));
    }
    return r;
  }
}
class Gc {
  constructor(e, n) {
    this.data = e, this.id = n;
  }
  token(e, n) {
    let { parser: r } = n.p;
    Uz(this.data, e, n, this.id, r.data, r.tokenPrecTable);
  }
}
Gc.prototype.contextual = Gc.prototype.fallback = Gc.prototype.extend = !1;
Gc.prototype.fallback = Gc.prototype.extend = !1;
function Uz(t, e, n, r, i, o) {
  let s = 0, a = 1 << r, { dialect: l } = n.p.parser;
  e: for (; (a & t[s]) != 0; ) {
    let u = t[s + 1];
    for (let p = s + 3; p < u; p += 2)
      if ((t[p + 1] & a) > 0) {
        let m = t[p];
        if (l.allows(m) && (e.token.value == -1 || e.token.value == m || Vz(m, e.token.value, i, o))) {
          e.acceptToken(m);
          break;
        }
      }
    let f = e.next, d = 0, h = t[s + 2];
    if (e.next < 0 && h > d && t[u + h * 3 - 3] == 65535) {
      s = t[u + h * 3 - 1];
      continue e;
    }
    for (; d < h; ) {
      let p = d + h >> 1, m = u + p + (p << 1), v = t[m], g = t[m + 1] || 65536;
      if (f < v)
        h = p;
      else if (f >= g)
        d = p + 1;
      else {
        s = t[m + 2], e.advance();
        continue e;
      }
    }
    break;
  }
}
function $2(t, e, n) {
  for (let r = e, i; (i = t[r]) != 65535; r++)
    if (i == n)
      return r - e;
  return -1;
}
function Vz(t, e, n, r) {
  let i = $2(n, r, e);
  return i < 0 || $2(n, r, t) < i;
}
const fo = typeof process < "u" && process.env && /\bparse\b/.test(process.env.LOG);
let kv = null;
function P2(t, e, n) {
  let r = t.cursor(vi.IncludeAnonymous);
  for (r.moveTo(e); ; )
    if (!(n < 0 ? r.childBefore(e) : r.childAfter(e)))
      for (; ; ) {
        if ((n < 0 ? r.to < e : r.from > e) && !r.type.isError)
          return n < 0 ? Math.max(0, Math.min(
            r.to - 1,
            e - 25
            /* Lookahead.Margin */
          )) : Math.min(t.length, Math.max(
            r.from + 1,
            e + 25
            /* Lookahead.Margin */
          ));
        if (n < 0 ? r.prevSibling() : r.nextSibling())
          break;
        if (!r.parent())
          return n < 0 ? 0 : t.length;
      }
}
class Wz {
  constructor(e, n) {
    this.fragments = e, this.nodeSet = n, this.i = 0, this.fragment = null, this.safeFrom = -1, this.safeTo = -1, this.trees = [], this.start = [], this.index = [], this.nextFragment();
  }
  nextFragment() {
    let e = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];
    if (e) {
      for (this.safeFrom = e.openStart ? P2(e.tree, e.from + e.offset, 1) - e.offset : e.from, this.safeTo = e.openEnd ? P2(e.tree, e.to + e.offset, -1) - e.offset : e.to; this.trees.length; )
        this.trees.pop(), this.start.pop(), this.index.pop();
      this.trees.push(e.tree), this.start.push(-e.offset), this.index.push(0), this.nextStart = this.safeFrom;
    } else
      this.nextStart = 1e9;
  }
  // `pos` must be >= any previously given `pos` for this cursor
  nodeAt(e) {
    if (e < this.nextStart)
      return null;
    for (; this.fragment && this.safeTo <= e; )
      this.nextFragment();
    if (!this.fragment)
      return null;
    for (; ; ) {
      let n = this.trees.length - 1;
      if (n < 0)
        return this.nextFragment(), null;
      let r = this.trees[n], i = this.index[n];
      if (i == r.children.length) {
        this.trees.pop(), this.start.pop(), this.index.pop();
        continue;
      }
      let o = r.children[i], s = this.start[n] + r.positions[i];
      if (s > e)
        return this.nextStart = s, null;
      if (o instanceof ci) {
        if (s == e) {
          if (s < this.safeFrom)
            return null;
          let a = s + o.length;
          if (a <= this.safeTo) {
            let l = o.prop(Cn.lookAhead);
            if (!l || a + l < this.fragment.to)
              return o;
          }
        }
        this.index[n]++, s + o.length >= Math.max(this.safeFrom, e) && (this.trees.push(o), this.start.push(s), this.index.push(0));
      } else
        this.index[n]++, this.nextStart = s + o.length;
    }
  }
}
class Hz {
  constructor(e, n) {
    this.stream = n, this.tokens = [], this.mainToken = null, this.actions = [], this.tokens = e.tokenizers.map((r) => new wp());
  }
  getActions(e) {
    let n = 0, r = null, { parser: i } = e.p, { tokenizers: o } = i, s = i.stateSlot(
      e.state,
      3
      /* ParseState.TokenizerMask */
    ), a = e.curContext ? e.curContext.hash : 0, l = 0;
    for (let u = 0; u < o.length; u++) {
      if ((1 << u & s) == 0)
        continue;
      let f = o[u], d = this.tokens[u];
      if (!(r && !f.fallback) && ((f.contextual || d.start != e.pos || d.mask != s || d.context != a) && (this.updateCachedToken(d, f, e), d.mask = s, d.context = a), d.lookAhead > d.end + 25 && (l = Math.max(d.lookAhead, l)), d.value != 0)) {
        let h = n;
        if (d.extended > -1 && (n = this.addActions(e, d.extended, d.end, n)), n = this.addActions(e, d.value, d.end, n), !f.extend && (r = d, n > h))
          break;
      }
    }
    for (; this.actions.length > n; )
      this.actions.pop();
    return l && e.setLookAhead(l), !r && e.pos == this.stream.end && (r = new wp(), r.value = e.p.parser.eofTerm, r.start = r.end = e.pos, n = this.addActions(e, r.value, r.end, n)), this.mainToken = r, this.actions;
  }
  getMainToken(e) {
    if (this.mainToken)
      return this.mainToken;
    let n = new wp(), { pos: r, p: i } = e;
    return n.start = r, n.end = Math.min(r + 1, i.stream.end), n.value = r == i.stream.end ? i.parser.eofTerm : 0, n;
  }
  updateCachedToken(e, n, r) {
    let i = this.stream.clipPos(r.pos);
    if (n.token(this.stream.reset(i, e), r), e.value > -1) {
      let { parser: o } = r.p;
      for (let s = 0; s < o.specialized.length; s++)
        if (o.specialized[s] == e.value) {
          let a = o.specializers[s](this.stream.read(e.start, e.end), r);
          if (a >= 0 && r.p.parser.dialect.allows(a >> 1)) {
            (a & 1) == 0 ? e.value = a >> 1 : e.extended = a >> 1;
            break;
          }
        }
    } else
      e.value = 0, e.end = this.stream.clipPos(i + 1);
  }
  putAction(e, n, r, i) {
    for (let o = 0; o < i; o += 3)
      if (this.actions[o] == e)
        return i;
    return this.actions[i++] = e, this.actions[i++] = n, this.actions[i++] = r, i;
  }
  addActions(e, n, r, i) {
    let { state: o } = e, { parser: s } = e.p, { data: a } = s;
    for (let l = 0; l < 2; l++)
      for (let u = s.stateSlot(
        o,
        l ? 2 : 1
        /* ParseState.Actions */
      ); ; u += 3) {
        if (a[u] == 65535)
          if (a[u + 1] == 1)
            u = Js(a, u + 2);
          else {
            i == 0 && a[u + 1] == 2 && (i = this.putAction(Js(a, u + 2), n, r, i));
            break;
          }
        a[u] == n && (i = this.putAction(Js(a, u + 1), n, r, i));
      }
    return i;
  }
}
class Kz {
  constructor(e, n, r, i) {
    this.parser = e, this.input = n, this.ranges = i, this.recovering = 0, this.nextStackID = 9812, this.minStackPos = 0, this.reused = [], this.stoppedAt = null, this.lastBigReductionStart = -1, this.lastBigReductionSize = 0, this.bigReductionCount = 0, this.stream = new Fz(n, i), this.tokens = new Hz(e, this.stream), this.topTerm = e.top[1];
    let { from: o } = i[0];
    this.stacks = [nm.start(this, e.top[0], o)], this.fragments = r.length && this.stream.end - o > e.bufferLength * 4 ? new Wz(r, e.nodeSet) : null;
  }
  get parsedPos() {
    return this.minStackPos;
  }
  // Move the parser forward. This will process all parse stacks at
  // `this.pos` and try to advance them to a further position. If no
  // stack for such a position is found, it'll start error-recovery.
  //
  // When the parse is finished, this will return a syntax tree. When
  // not, it returns `null`.
  advance() {
    let e = this.stacks, n = this.minStackPos, r = this.stacks = [], i, o;
    if (this.bigReductionCount > 300 && e.length == 1) {
      let [s] = e;
      for (; s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart; )
        ;
      this.bigReductionCount = this.lastBigReductionSize = 0;
    }
    for (let s = 0; s < e.length; s++) {
      let a = e[s];
      for (; ; ) {
        if (this.tokens.mainToken = null, a.pos > n)
          r.push(a);
        else {
          if (this.advanceStack(a, r, e))
            continue;
          {
            i || (i = [], o = []), i.push(a);
            let l = this.tokens.getMainToken(a);
            o.push(l.value, l.end);
          }
        }
        break;
      }
    }
    if (!r.length) {
      let s = i && Jz(i);
      if (s)
        return fo && console.log("Finish with " + this.stackID(s)), this.stackToTree(s);
      if (this.parser.strict)
        throw fo && i && console.log("Stuck with token " + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : "none")), new SyntaxError("No parse at " + n);
      this.recovering || (this.recovering = 5);
    }
    if (this.recovering && i) {
      let s = this.stoppedAt != null && i[0].pos > this.stoppedAt ? i[0] : this.runRecovery(i, o, r);
      if (s)
        return fo && console.log("Force-finish " + this.stackID(s)), this.stackToTree(s.forceAll());
    }
    if (this.recovering) {
      let s = this.recovering == 1 ? 1 : this.recovering * 3;
      if (r.length > s)
        for (r.sort((a, l) => l.score - a.score); r.length > s; )
          r.pop();
      r.some((a) => a.reducePos > n) && this.recovering--;
    } else if (r.length > 1) {
      e: for (let s = 0; s < r.length - 1; s++) {
        let a = r[s];
        for (let l = s + 1; l < r.length; l++) {
          let u = r[l];
          if (a.sameState(u) || a.buffer.length > 500 && u.buffer.length > 500)
            if ((a.score - u.score || a.buffer.length - u.buffer.length) > 0)
              r.splice(l--, 1);
            else {
              r.splice(s--, 1);
              continue e;
            }
        }
      }
      r.length > 12 && r.splice(
        12,
        r.length - 12
        /* Rec.MaxStackCount */
      );
    }
    this.minStackPos = r[0].pos;
    for (let s = 1; s < r.length; s++)
      r[s].pos < this.minStackPos && (this.minStackPos = r[s].pos);
    return null;
  }
  stopAt(e) {
    if (this.stoppedAt != null && this.stoppedAt < e)
      throw new RangeError("Can't move stoppedAt forward");
    this.stoppedAt = e;
  }
  // Returns an updated version of the given stack, or null if the
  // stack can't advance normally. When `split` and `stacks` are
  // given, stacks split off by ambiguous operations will be pushed to
  // `split`, or added to `stacks` if they move `pos` forward.
  advanceStack(e, n, r) {
    let i = e.pos, { parser: o } = this, s = fo ? this.stackID(e) + " -> " : "";
    if (this.stoppedAt != null && i > this.stoppedAt)
      return e.forceReduce() ? e : null;
    if (this.fragments) {
      let u = e.curContext && e.curContext.tracker.strict, f = u ? e.curContext.hash : 0;
      for (let d = this.fragments.nodeAt(i); d; ) {
        let h = this.parser.nodeSet.types[d.type.id] == d.type ? o.getGoto(e.state, d.type.id) : -1;
        if (h > -1 && d.length && (!u || (d.prop(Cn.contextHash) || 0) == f))
          return e.useNode(d, h), fo && console.log(s + this.stackID(e) + ` (via reuse of ${o.getName(d.type.id)})`), !0;
        if (!(d instanceof ci) || d.children.length == 0 || d.positions[0] > 0)
          break;
        let p = d.children[0];
        if (p instanceof ci && d.positions[0] == 0)
          d = p;
        else
          break;
      }
    }
    let a = o.stateSlot(
      e.state,
      4
      /* ParseState.DefaultReduce */
    );
    if (a > 0)
      return e.reduce(a), fo && console.log(s + this.stackID(e) + ` (via always-reduce ${o.getName(
        a & 65535
        /* Action.ValueMask */
      )})`), !0;
    if (e.stack.length >= 8400)
      for (; e.stack.length > 6e3 && e.forceReduce(); )
        ;
    let l = this.tokens.getActions(e);
    for (let u = 0; u < l.length; ) {
      let f = l[u++], d = l[u++], h = l[u++], p = u == l.length || !r, m = p ? e : e.split(), v = this.tokens.mainToken;
      if (m.apply(f, d, v ? v.start : m.pos, h), fo && console.log(s + this.stackID(m) + ` (via ${(f & 65536) == 0 ? "shift" : `reduce of ${o.getName(
        f & 65535
        /* Action.ValueMask */
      )}`} for ${o.getName(d)} @ ${i}${m == e ? "" : ", split"})`), p)
        return !0;
      m.pos > i ? n.push(m) : r.push(m);
    }
    return !1;
  }
  // Advance a given stack forward as far as it will go. Returns the
  // (possibly updated) stack if it got stuck, or null if it moved
  // forward and was given to `pushStackDedup`.
  advanceFully(e, n) {
    let r = e.pos;
    for (; ; ) {
      if (!this.advanceStack(e, null, null))
        return !1;
      if (e.pos > r)
        return R2(e, n), !0;
    }
  }
  runRecovery(e, n, r) {
    let i = null, o = !1;
    for (let s = 0; s < e.length; s++) {
      let a = e[s], l = n[s << 1], u = n[(s << 1) + 1], f = fo ? this.stackID(a) + " -> " : "";
      if (a.deadEnd && (o || (o = !0, a.restart(), fo && console.log(f + this.stackID(a) + " (restarted)"), this.advanceFully(a, r))))
        continue;
      let d = a.split(), h = f;
      for (let p = 0; d.forceReduce() && p < 10 && (fo && console.log(h + this.stackID(d) + " (via force-reduce)"), !this.advanceFully(d, r)); p++)
        fo && (h = this.stackID(d) + " -> ");
      for (let p of a.recoverByInsert(l))
        fo && console.log(f + this.stackID(p) + " (via recover-insert)"), this.advanceFully(p, r);
      this.stream.end > a.pos ? (u == a.pos && (u++, l = 0), a.recoverByDelete(l, u), fo && console.log(f + this.stackID(a) + ` (via recover-delete ${this.parser.getName(l)})`), R2(a, r)) : (!i || i.score < a.score) && (i = a);
    }
    return i;
  }
  // Convert the stack's buffer to a syntax tree.
  stackToTree(e) {
    return e.close(), ci.build({
      buffer: rm.create(e),
      nodeSet: this.parser.nodeSet,
      topID: this.topTerm,
      maxBufferLength: this.parser.bufferLength,
      reused: this.reused,
      start: this.ranges[0].from,
      length: e.pos - this.ranges[0].from,
      minRepeatType: this.parser.minRepeatTerm
    });
  }
  stackID(e) {
    let n = (kv || (kv = /* @__PURE__ */ new WeakMap())).get(e);
    return n || kv.set(e, n = String.fromCodePoint(this.nextStackID++)), n + e;
  }
}
function R2(t, e) {
  for (let n = 0; n < e.length; n++) {
    let r = e[n];
    if (r.pos == t.pos && r.sameState(t)) {
      e[n].score < t.score && (e[n] = t);
      return;
    }
  }
  e.push(t);
}
class Gz {
  constructor(e, n, r) {
    this.source = e, this.flags = n, this.disabled = r;
  }
  allows(e) {
    return !this.disabled || this.disabled[e] == 0;
  }
}
class im extends D4 {
  /**
  @internal
  */
  constructor(e) {
    if (super(), this.wrappers = [], e.version != 14)
      throw new RangeError(`Parser version (${e.version}) doesn't match runtime version (14)`);
    let n = e.nodeNames.split(" ");
    this.minRepeatTerm = n.length;
    for (let a = 0; a < e.repeatNodeCount; a++)
      n.push("");
    let r = Object.keys(e.topRules).map((a) => e.topRules[a][1]), i = [];
    for (let a = 0; a < n.length; a++)
      i.push([]);
    function o(a, l, u) {
      i[a].push([l, l.deserialize(String(u))]);
    }
    if (e.nodeProps)
      for (let a of e.nodeProps) {
        let l = a[0];
        typeof l == "string" && (l = Cn[l]);
        for (let u = 1; u < a.length; ) {
          let f = a[u++];
          if (f >= 0)
            o(f, l, a[u++]);
          else {
            let d = a[u + -f];
            for (let h = -f; h > 0; h--)
              o(a[u++], l, d);
            u++;
          }
        }
      }
    this.nodeSet = new N1(n.map((a, l) => oo.define({
      name: l >= this.minRepeatTerm ? void 0 : a,
      id: l,
      props: i[l],
      top: r.indexOf(l) > -1,
      error: l == 0,
      skipped: e.skippedNodes && e.skippedNodes.indexOf(l) > -1
    }))), e.propSources && (this.nodeSet = this.nodeSet.extend(...e.propSources)), this.strict = !1, this.bufferLength = $4;
    let s = Bh(e.tokenData);
    this.context = e.context, this.specializerSpecs = e.specialized || [], this.specialized = new Uint16Array(this.specializerSpecs.length);
    for (let a = 0; a < this.specializerSpecs.length; a++)
      this.specialized[a] = this.specializerSpecs[a].term;
    this.specializers = this.specializerSpecs.map(N2), this.states = Bh(e.states, Uint32Array), this.data = Bh(e.stateData), this.goto = Bh(e.goto), this.maxTerm = e.maxTerm, this.tokenizers = e.tokenizers.map((a) => typeof a == "number" ? new Gc(s, a) : a), this.topRules = e.topRules, this.dialects = e.dialects || {}, this.dynamicPrecedences = e.dynamicPrecedences || null, this.tokenPrecTable = e.tokenPrec, this.termNames = e.termNames || null, this.maxNode = this.nodeSet.types.length - 1, this.dialect = this.parseDialect(), this.top = this.topRules[Object.keys(this.topRules)[0]];
  }
  createParse(e, n, r) {
    let i = new Kz(this, e, n, r);
    for (let o of this.wrappers)
      i = o(i, e, n, r);
    return i;
  }
  /**
  Get a goto table entry @internal
  */
  getGoto(e, n, r = !1) {
    let i = this.goto;
    if (n >= i[0])
      return -1;
    for (let o = i[n + 1]; ; ) {
      let s = i[o++], a = s & 1, l = i[o++];
      if (a && r)
        return l;
      for (let u = o + (s >> 1); o < u; o++)
        if (i[o] == e)
          return l;
      if (a)
        return -1;
    }
  }
  /**
  Check if this state has an action for a given terminal @internal
  */
  hasAction(e, n) {
    let r = this.data;
    for (let i = 0; i < 2; i++)
      for (let o = this.stateSlot(
        e,
        i ? 2 : 1
        /* ParseState.Actions */
      ), s; ; o += 3) {
        if ((s = r[o]) == 65535)
          if (r[o + 1] == 1)
            s = r[o = Js(r, o + 2)];
          else {
            if (r[o + 1] == 2)
              return Js(r, o + 2);
            break;
          }
        if (s == n || s == 0)
          return Js(r, o + 1);
      }
    return 0;
  }
  /**
  @internal
  */
  stateSlot(e, n) {
    return this.states[e * 6 + n];
  }
  /**
  @internal
  */
  stateFlag(e, n) {
    return (this.stateSlot(
      e,
      0
      /* ParseState.Flags */
    ) & n) > 0;
  }
  /**
  @internal
  */
  validAction(e, n) {
    return !!this.allActions(e, (r) => r == n ? !0 : null);
  }
  /**
  @internal
  */
  allActions(e, n) {
    let r = this.stateSlot(
      e,
      4
      /* ParseState.DefaultReduce */
    ), i = r ? n(r) : void 0;
    for (let o = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); i == null; o += 3) {
      if (this.data[o] == 65535)
        if (this.data[o + 1] == 1)
          o = Js(this.data, o + 2);
        else
          break;
      i = n(Js(this.data, o + 1));
    }
    return i;
  }
  /**
  Get the states that can follow this one through shift actions or
  goto jumps. @internal
  */
  nextStates(e) {
    let n = [];
    for (let r = this.stateSlot(
      e,
      1
      /* ParseState.Actions */
    ); ; r += 3) {
      if (this.data[r] == 65535)
        if (this.data[r + 1] == 1)
          r = Js(this.data, r + 2);
        else
          break;
      if ((this.data[r + 2] & 1) == 0) {
        let i = this.data[r + 1];
        n.some((o, s) => s & 1 && o == i) || n.push(this.data[r], i);
      }
    }
    return n;
  }
  /**
  Configure the parser. Returns a new parser instance that has the
  given settings modified. Settings not provided in `config` are
  kept from the original parser.
  */
  configure(e) {
    let n = Object.assign(Object.create(im.prototype), this);
    if (e.props && (n.nodeSet = this.nodeSet.extend(...e.props)), e.top) {
      let r = this.topRules[e.top];
      if (!r)
        throw new RangeError(`Invalid top rule name ${e.top}`);
      n.top = r;
    }
    return e.tokenizers && (n.tokenizers = this.tokenizers.map((r) => {
      let i = e.tokenizers.find((o) => o.from == r);
      return i ? i.to : r;
    })), e.specializers && (n.specializers = this.specializers.slice(), n.specializerSpecs = this.specializerSpecs.map((r, i) => {
      let o = e.specializers.find((a) => a.from == r.external);
      if (!o)
        return r;
      let s = Object.assign(Object.assign({}, r), { external: o.to });
      return n.specializers[i] = N2(s), s;
    })), e.contextTracker && (n.context = e.contextTracker), e.dialect && (n.dialect = this.parseDialect(e.dialect)), e.strict != null && (n.strict = e.strict), e.wrap && (n.wrappers = n.wrappers.concat(e.wrap)), e.bufferLength != null && (n.bufferLength = e.bufferLength), n;
  }
  /**
  Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)
  are registered for this parser.
  */
  hasWrappers() {
    return this.wrappers.length > 0;
  }
  /**
  Returns the name associated with a given term. This will only
  work for all terms when the parser was generated with the
  `--names` option. By default, only the names of tagged terms are
  stored.
  */
  getName(e) {
    return this.termNames ? this.termNames[e] : String(e <= this.maxNode && this.nodeSet.types[e].name || e);
  }
  /**
  The eof term id is always allocated directly after the node
  types. @internal
  */
  get eofTerm() {
    return this.maxNode + 1;
  }
  /**
  The type of top node produced by the parser.
  */
  get topNode() {
    return this.nodeSet.types[this.top[1]];
  }
  /**
  @internal
  */
  dynamicPrecedence(e) {
    let n = this.dynamicPrecedences;
    return n == null ? 0 : n[e] || 0;
  }
  /**
  @internal
  */
  parseDialect(e) {
    let n = Object.keys(this.dialects), r = n.map(() => !1);
    if (e)
      for (let o of e.split(" ")) {
        let s = n.indexOf(o);
        s >= 0 && (r[s] = !0);
      }
    let i = null;
    for (let o = 0; o < n.length; o++)
      if (!r[o])
        for (let s = this.dialects[n[o]], a; (a = this.data[s++]) != 65535; )
          (i || (i = new Uint8Array(this.maxTerm + 1)))[a] = 1;
    return new Gz(e, r, i);
  }
  /**
  Used by the output of the parser generator. Not available to
  user code. @hide
  */
  static deserialize(e) {
    return new im(e);
  }
}
function Js(t, e) {
  return t[e] | t[e + 1] << 16;
}
function Jz(t) {
  let e = null;
  for (let n of t) {
    let r = n.p.stoppedAt;
    (n.pos == n.p.stream.end || r != null && n.pos > r) && n.p.parser.stateFlag(
      n.state,
      2
      /* StateFlag.Accepting */
    ) && (!e || e.score < n.score) && (e = n);
  }
  return e;
}
function N2(t) {
  if (t.external) {
    let e = t.extend ? 1 : 0;
    return (n, r) => t.external(n, r) << 1 | e;
  }
  return t.get;
}
const Yz = I4({
  String: Ve.string,
  Number: Ve.number,
  "True False": Ve.bool,
  PropertyName: Ve.propertyName,
  Null: Ve.null,
  ", :": Ve.separator,
  "[ ]": Ve.squareBracket,
  "{ }": Ve.brace
}), Qz = im.deserialize({
  version: 14,
  states: "$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#ClOOQO'#Cr'#CrQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CtOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59W,59WO!iQPO,59WOVQPO,59QOqQPO'#CmO!nQPO,59`OOQO1G.k1G.kOVQPO'#CnO!vQPO,59aOOQO1G.r1G.rOOQO1G.l1G.lOOQO,59X,59XOOQO-E6k-E6kOOQO,59Y,59YOOQO-E6l-E6l",
  stateData: "#O~OeOS~OQSORSOSSOTSOWQO_ROgPO~OVXOgUO~O^[O~PVO[^O~O]_OVhX~OVaO~O]bO^iX~O^dO~O]_OVha~O]bO^ia~O",
  goto: "!kjPPPPPPkPPkqwPPPPk{!RPPP!XP!e!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",
  nodeNames: "⚠ JsonText True False Null Number String } { Object Property PropertyName : , ] [ Array",
  maxTerm: 25,
  nodeProps: [
    ["isolate", -2, 6, 11, ""],
    ["openedBy", 7, "{", 14, "["],
    ["closedBy", 8, "}", 15, "]"]
  ],
  propSources: [Yz],
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oe~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Og~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zO]~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yO[~~'OO_~~'TO^~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",
  tokenizers: [0],
  topRules: { JsonText: [0, 1] },
  tokenPrec: 0
}), Xz = /* @__PURE__ */ Xp.define({
  name: "json",
  parser: /* @__PURE__ */ Qz.configure({
    props: [
      /* @__PURE__ */ q4.add({
        Object: /* @__PURE__ */ h2({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ h2({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ U4.add({
        "Object Array": XI
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function Zz() {
  return new BI(Xz);
}
const D2 = typeof String.prototype.normalize == "function" ? (t) => t.normalize("NFKD") : (t) => t;
class cu {
  /**
  Create a text cursor. The query is the search string, `from` to
  `to` provides the region to search.
  
  When `normalize` is given, it will be called, on both the query
  string and the content it is matched against, before comparing.
  You can, for example, create a case-insensitive search by
  passing `s => s.toLowerCase()`.
  
  Text is always normalized with
  [`.normalize("NFKD")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)
  (when supported).
  */
  constructor(e, n, r = 0, i = e.length, o, s) {
    this.test = s, this.value = { from: 0, to: 0 }, this.done = !1, this.matches = [], this.buffer = "", this.bufferPos = 0, this.iter = e.iterRange(r, i), this.bufferStart = r, this.normalize = o ? (a) => o(D2(a)) : D2, this.query = this.normalize(n);
  }
  peek() {
    if (this.bufferPos == this.buffer.length) {
      if (this.bufferStart += this.buffer.length, this.iter.next(), this.iter.done)
        return -1;
      this.bufferPos = 0, this.buffer = this.iter.value;
    }
    return Yi(this.buffer, this.bufferPos);
  }
  /**
  Look for the next match. Updates the iterator's
  [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and
  [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called
  at least once before using the cursor.
  */
  next() {
    for (; this.matches.length; )
      this.matches.pop();
    return this.nextOverlapping();
  }
  /**
  The `next` method will ignore matches that partially overlap a
  previous match. This method behaves like `next`, but includes
  such matches.
  */
  nextOverlapping() {
    for (; ; ) {
      let e = this.peek();
      if (e < 0)
        return this.done = !0, this;
      let n = x1(e), r = this.bufferStart + this.bufferPos;
      this.bufferPos += ws(e);
      let i = this.normalize(n);
      if (i.length)
        for (let o = 0, s = r; ; o++) {
          let a = i.charCodeAt(o), l = this.match(a, s, this.bufferPos + this.bufferStart);
          if (o == i.length - 1) {
            if (l)
              return this.value = l, this;
            break;
          }
          s == r && o < n.length && n.charCodeAt(o) == a && s++;
        }
    }
  }
  match(e, n, r) {
    let i = null;
    for (let o = 0; o < this.matches.length; o += 2) {
      let s = this.matches[o], a = !1;
      this.query.charCodeAt(s) == e && (s == this.query.length - 1 ? i = { from: this.matches[o + 1], to: r } : (this.matches[o]++, a = !0)), a || (this.matches.splice(o, 2), o -= 2);
    }
    return this.query.charCodeAt(0) == e && (this.query.length == 1 ? i = { from: n, to: r } : this.matches.push(1, n)), i && this.test && !this.test(i.from, i.to, this.buffer, this.bufferStart) && (i = null), i;
  }
}
typeof Symbol < "u" && (cu.prototype[Symbol.iterator] = function() {
  return this;
});
const UE = { from: -1, to: -1, match: /* @__PURE__ */ /.*/.exec("") }, H1 = "gm" + (/x/.unicode == null ? "" : "u");
class VE {
  /**
  Create a cursor that will search the given range in the given
  document. `query` should be the raw pattern (as you'd pass it to
  `new RegExp`).
  */
  constructor(e, n, r, i = 0, o = e.length) {
    if (this.text = e, this.to = o, this.curLine = "", this.done = !1, this.value = UE, /\\[sWDnr]|\n|\r|\[\^/.test(n))
      return new WE(e, n, r, i, o);
    this.re = new RegExp(n, H1 + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.iter = e.iter();
    let s = e.lineAt(i);
    this.curLineStart = s.from, this.matchPos = om(e, i), this.getLine(this.curLineStart);
  }
  getLine(e) {
    this.iter.next(e), this.iter.lineBreak ? this.curLine = "" : (this.curLine = this.iter.value, this.curLineStart + this.curLine.length > this.to && (this.curLine = this.curLine.slice(0, this.to - this.curLineStart)), this.iter.next());
  }
  nextLine() {
    this.curLineStart = this.curLineStart + this.curLine.length + 1, this.curLineStart > this.to ? this.curLine = "" : this.getLine(0);
  }
  /**
  Move to the next match, if there is one.
  */
  next() {
    for (let e = this.matchPos - this.curLineStart; ; ) {
      this.re.lastIndex = e;
      let n = this.matchPos <= this.to && this.re.exec(this.curLine);
      if (n) {
        let r = this.curLineStart + n.index, i = r + n[0].length;
        if (this.matchPos = om(this.text, i + (r == i ? 1 : 0)), r == this.curLineStart + this.curLine.length && this.nextLine(), (r < i || r > this.value.to) && (!this.test || this.test(r, i, n)))
          return this.value = { from: r, to: i, match: n }, this;
        e = this.matchPos - this.curLineStart;
      } else if (this.curLineStart + this.curLine.length < this.to)
        this.nextLine(), e = 0;
      else
        return this.done = !0, this;
    }
  }
}
const Sv = /* @__PURE__ */ new WeakMap();
class Jc {
  constructor(e, n) {
    this.from = e, this.text = n;
  }
  get to() {
    return this.from + this.text.length;
  }
  static get(e, n, r) {
    let i = Sv.get(e);
    if (!i || i.from >= r || i.to <= n) {
      let a = new Jc(n, e.sliceString(n, r));
      return Sv.set(e, a), a;
    }
    if (i.from == n && i.to == r)
      return i;
    let { text: o, from: s } = i;
    return s > n && (o = e.sliceString(n, s) + o, s = n), i.to < r && (o += e.sliceString(i.to, r)), Sv.set(e, new Jc(s, o)), new Jc(n, o.slice(n - s, r - s));
  }
}
class WE {
  constructor(e, n, r, i, o) {
    this.text = e, this.to = o, this.done = !1, this.value = UE, this.matchPos = om(e, i), this.re = new RegExp(n, H1 + (r?.ignoreCase ? "i" : "")), this.test = r?.test, this.flat = Jc.get(e, i, this.chunkEnd(
      i + 5e3
      /* Chunk.Base */
    ));
  }
  chunkEnd(e) {
    return e >= this.to ? this.to : this.text.lineAt(e).to;
  }
  next() {
    for (; ; ) {
      let e = this.re.lastIndex = this.matchPos - this.flat.from, n = this.re.exec(this.flat.text);
      if (n && !n[0] && n.index == e && (this.re.lastIndex = e + 1, n = this.re.exec(this.flat.text)), n) {
        let r = this.flat.from + n.index, i = r + n[0].length;
        if ((this.flat.to >= this.to || n.index + n[0].length <= this.flat.text.length - 10) && (!this.test || this.test(r, i, n)))
          return this.value = { from: r, to: i, match: n }, this.matchPos = om(this.text, i + (r == i ? 1 : 0)), this;
      }
      if (this.flat.to == this.to)
        return this.done = !0, this;
      this.flat = Jc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));
    }
  }
}
typeof Symbol < "u" && (VE.prototype[Symbol.iterator] = WE.prototype[Symbol.iterator] = function() {
  return this;
});
function eL(t) {
  try {
    return new RegExp(t, H1), !0;
  } catch {
    return !1;
  }
}
function om(t, e) {
  if (e >= t.length)
    return e;
  let n = t.lineAt(e), r;
  for (; e < n.to && (r = n.text.charCodeAt(e - n.from)) >= 56320 && r < 57344; )
    e++;
  return e;
}
function lb(t) {
  let e = String(t.state.doc.lineAt(t.state.selection.main.head).number), n = vr("input", { class: "cm-textfield", name: "line", value: e }), r = vr("form", {
    class: "cm-gotoLine",
    onkeydown: (o) => {
      o.keyCode == 27 ? (o.preventDefault(), t.dispatch({ effects: gf.of(!1) }), t.focus()) : o.keyCode == 13 && (o.preventDefault(), i());
    },
    onsubmit: (o) => {
      o.preventDefault(), i();
    }
  }, vr("label", t.state.phrase("Go to line"), ": ", n), " ", vr("button", { class: "cm-button", type: "submit" }, t.state.phrase("go")), vr("button", {
    name: "close",
    onclick: () => {
      t.dispatch({ effects: gf.of(!1) }), t.focus();
    },
    "aria-label": t.state.phrase("close"),
    type: "button"
  }, ["×"]));
  function i() {
    let o = /^([+-])?(\d+)?(:\d+)?(%)?$/.exec(n.value);
    if (!o)
      return;
    let { state: s } = t, a = s.doc.lineAt(s.selection.main.head), [, l, u, f, d] = o, h = f ? +f.slice(1) : 0, p = u ? +u : a.number;
    if (u && d) {
      let g = p / 100;
      l && (g = g * (l == "-" ? -1 : 1) + a.number / s.doc.lines), p = Math.round(s.doc.lines * g);
    } else u && l && (p = p * (l == "-" ? -1 : 1) + a.number);
    let m = s.doc.line(Math.max(1, Math.min(s.doc.lines, p))), v = Me.cursor(m.from + Math.max(0, Math.min(h, m.length)));
    t.dispatch({
      effects: [gf.of(!1), nt.scrollIntoView(v.from, { y: "center" })],
      selection: v
    }), t.focus();
  }
  return { dom: r };
}
const gf = /* @__PURE__ */ vn.define(), I2 = /* @__PURE__ */ wi.define({
  create() {
    return !0;
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(gf) && (t = n.value);
    return t;
  },
  provide: (t) => Pf.from(t, (e) => e ? lb : null)
}), tL = (t) => {
  let e = $f(t, lb);
  if (!e) {
    let n = [gf.of(!0)];
    t.state.field(I2, !1) == null && n.push(vn.appendConfig.of([I2, nL])), t.dispatch({ effects: n }), e = $f(t, lb);
  }
  return e && e.dom.querySelector("input").select(), !0;
}, nL = /* @__PURE__ */ nt.baseTheme({
  ".cm-panel.cm-gotoLine": {
    padding: "2px 6px 4px",
    position: "relative",
    "& label": { fontSize: "80%" },
    "& [name=close]": {
      position: "absolute",
      top: "0",
      bottom: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: "0"
    }
  }
}), rL = {
  highlightWordAroundCursor: !1,
  minSelectionLength: 1,
  maxMatches: 100,
  wholeWords: !1
}, iL = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, rL, {
      highlightWordAroundCursor: (e, n) => e || n,
      minSelectionLength: Math.min,
      maxMatches: Math.min
    });
  }
});
function oL(t) {
  return [uL, cL];
}
const sL = /* @__PURE__ */ Bt.mark({ class: "cm-selectionMatch" }), aL = /* @__PURE__ */ Bt.mark({ class: "cm-selectionMatch cm-selectionMatch-main" });
function z2(t, e, n, r) {
  return (n == 0 || t(e.sliceDoc(n - 1, n)) != Fr.Word) && (r == e.doc.length || t(e.sliceDoc(r, r + 1)) != Fr.Word);
}
function lL(t, e, n, r) {
  return t(e.sliceDoc(n, n + 1)) == Fr.Word && t(e.sliceDoc(r - 1, r)) == Fr.Word;
}
const cL = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.decorations = this.getDeco(t);
  }
  update(t) {
    (t.selectionSet || t.docChanged || t.viewportChanged) && (this.decorations = this.getDeco(t.view));
  }
  getDeco(t) {
    let e = t.state.facet(iL), { state: n } = t, r = n.selection;
    if (r.ranges.length > 1)
      return Bt.none;
    let i = r.main, o, s = null;
    if (i.empty) {
      if (!e.highlightWordAroundCursor)
        return Bt.none;
      let l = n.wordAt(i.head);
      if (!l)
        return Bt.none;
      s = n.charCategorizer(i.head), o = n.sliceDoc(l.from, l.to);
    } else {
      let l = i.to - i.from;
      if (l < e.minSelectionLength || l > 200)
        return Bt.none;
      if (e.wholeWords) {
        if (o = n.sliceDoc(i.from, i.to), s = n.charCategorizer(i.head), !(z2(s, n, i.from, i.to) && lL(s, n, i.from, i.to)))
          return Bt.none;
      } else if (o = n.sliceDoc(i.from, i.to), !o)
        return Bt.none;
    }
    let a = [];
    for (let l of t.visibleRanges) {
      let u = new cu(n.doc, o, l.from, l.to);
      for (; !u.next().done; ) {
        let { from: f, to: d } = u.value;
        if ((!s || z2(s, n, f, d)) && (i.empty && f <= i.from && d >= i.to ? a.push(aL.range(f, d)) : (f >= i.to || d <= i.from) && a.push(sL.range(f, d)), a.length > e.maxMatches))
          return Bt.none;
      }
    }
    return Bt.set(a);
  }
}, {
  decorations: (t) => t.decorations
}), uL = /* @__PURE__ */ nt.baseTheme({
  ".cm-selectionMatch": { backgroundColor: "#99ff7780" },
  ".cm-searchMatch .cm-selectionMatch": { backgroundColor: "transparent" }
}), fL = ({ state: t, dispatch: e }) => {
  let { selection: n } = t, r = Me.create(n.ranges.map((i) => t.wordAt(i.head) || Me.cursor(i.head)), n.mainIndex);
  return r.eq(n) ? !1 : (e(t.update({ selection: r })), !0);
};
function dL(t, e) {
  let { main: n, ranges: r } = t.selection, i = t.wordAt(n.head), o = i && i.from == n.from && i.to == n.to;
  for (let s = !1, a = new cu(t.doc, e, r[r.length - 1].to); ; )
    if (a.next(), a.done) {
      if (s)
        return null;
      a = new cu(t.doc, e, 0, Math.max(0, r[r.length - 1].from - 1)), s = !0;
    } else {
      if (s && r.some((l) => l.from == a.value.from))
        continue;
      if (o) {
        let l = t.wordAt(a.value.from);
        if (!l || l.from != a.value.from || l.to != a.value.to)
          continue;
      }
      return a.value;
    }
}
const hL = ({ state: t, dispatch: e }) => {
  let { ranges: n } = t.selection;
  if (n.some((o) => o.from === o.to))
    return fL({ state: t, dispatch: e });
  let r = t.sliceDoc(n[0].from, n[0].to);
  if (t.selection.ranges.some((o) => t.sliceDoc(o.from, o.to) != r))
    return !1;
  let i = dL(t, r);
  return i ? (e(t.update({
    selection: t.selection.addRange(Me.range(i.from, i.to), !1),
    effects: nt.scrollIntoView(i.to)
  })), !0) : !1;
}, cc = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      top: !1,
      caseSensitive: !1,
      literal: !1,
      regexp: !1,
      wholeWord: !1,
      createPanel: (e) => new OL(e),
      scrollToMatch: (e) => nt.scrollIntoView(e)
    });
  }
});
function pL(t) {
  return t ? [cc.of(t), ub] : ub;
}
class HE {
  /**
  Create a query object.
  */
  constructor(e) {
    this.search = e.search, this.caseSensitive = !!e.caseSensitive, this.literal = !!e.literal, this.regexp = !!e.regexp, this.replace = e.replace || "", this.valid = !!this.search && (!this.regexp || eL(this.search)), this.unquoted = this.unquote(this.search), this.wholeWord = !!e.wholeWord;
  }
  /**
  @internal
  */
  unquote(e) {
    return this.literal ? e : e.replace(/\\([nrt\\])/g, (n, r) => r == "n" ? `
` : r == "r" ? "\r" : r == "t" ? "	" : "\\");
  }
  /**
  Compare this query to another query.
  */
  eq(e) {
    return this.search == e.search && this.replace == e.replace && this.caseSensitive == e.caseSensitive && this.regexp == e.regexp && this.wholeWord == e.wholeWord;
  }
  /**
  @internal
  */
  create() {
    return this.regexp ? new bL(this) : new gL(this);
  }
  /**
  Get a search cursor for this query, searching through the given
  range in the given state.
  */
  getCursor(e, n = 0, r) {
    let i = e.doc ? e : En.create({ doc: e });
    return r == null && (r = i.doc.length), this.regexp ? Ac(this, i, n, r) : _c(this, i, n, r);
  }
}
class KE {
  constructor(e) {
    this.spec = e;
  }
}
function _c(t, e, n, r) {
  return new cu(e.doc, t.unquoted, n, r, t.caseSensitive ? void 0 : (i) => i.toLowerCase(), t.wholeWord ? mL(e.doc, e.charCategorizer(e.selection.main.head)) : void 0);
}
function mL(t, e) {
  return (n, r, i, o) => ((o > n || o + i.length < r) && (o = Math.max(0, n - 2), i = t.sliceString(o, Math.min(t.length, r + 2))), (e(sm(i, n - o)) != Fr.Word || e(am(i, n - o)) != Fr.Word) && (e(am(i, r - o)) != Fr.Word || e(sm(i, r - o)) != Fr.Word));
}
class gL extends KE {
  constructor(e) {
    super(e);
  }
  nextMatch(e, n, r) {
    let i = _c(this.spec, e, r, e.doc.length).nextOverlapping();
    if (i.done) {
      let o = Math.min(e.doc.length, n + this.spec.unquoted.length);
      i = _c(this.spec, e, 0, o).nextOverlapping();
    }
    return i.done || i.value.from == n && i.value.to == r ? null : i.value;
  }
  // Searching in reverse is, rather than implementing an inverted search
  // cursor, done by scanning chunk after chunk forward.
  prevMatchInRange(e, n, r) {
    for (let i = r; ; ) {
      let o = Math.max(n, i - 1e4 - this.spec.unquoted.length), s = _c(this.spec, e, o, i), a = null;
      for (; !s.nextOverlapping().done; )
        a = s.value;
      if (a)
        return a;
      if (o == n)
        return null;
      i -= 1e4;
    }
  }
  prevMatch(e, n, r) {
    let i = this.prevMatchInRange(e, 0, n);
    return i || (i = this.prevMatchInRange(e, Math.max(0, r - this.spec.unquoted.length), e.doc.length)), i && (i.from != n || i.to != r) ? i : null;
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace);
  }
  matchAll(e, n) {
    let r = _c(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= n)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, n, r, i) {
    let o = _c(this.spec, e, Math.max(0, n - this.spec.unquoted.length), Math.min(r + this.spec.unquoted.length, e.doc.length));
    for (; !o.next().done; )
      i(o.value.from, o.value.to);
  }
}
function Ac(t, e, n, r) {
  return new VE(e.doc, t.search, {
    ignoreCase: !t.caseSensitive,
    test: t.wholeWord ? vL(e.charCategorizer(e.selection.main.head)) : void 0
  }, n, r);
}
function sm(t, e) {
  return t.slice(Mi(t, e, !1), e);
}
function am(t, e) {
  return t.slice(e, Mi(t, e));
}
function vL(t) {
  return (e, n, r) => !r[0].length || (t(sm(r.input, r.index)) != Fr.Word || t(am(r.input, r.index)) != Fr.Word) && (t(am(r.input, r.index + r[0].length)) != Fr.Word || t(sm(r.input, r.index + r[0].length)) != Fr.Word);
}
class bL extends KE {
  nextMatch(e, n, r) {
    let i = Ac(this.spec, e, r, e.doc.length).next();
    return i.done && (i = Ac(this.spec, e, 0, n).next()), i.done ? null : i.value;
  }
  prevMatchInRange(e, n, r) {
    for (let i = 1; ; i++) {
      let o = Math.max(
        n,
        r - i * 1e4
        /* FindPrev.ChunkSize */
      ), s = Ac(this.spec, e, o, r), a = null;
      for (; !s.next().done; )
        a = s.value;
      if (a && (o == n || a.from > o + 10))
        return a;
      if (o == n)
        return null;
    }
  }
  prevMatch(e, n, r) {
    return this.prevMatchInRange(e, 0, n) || this.prevMatchInRange(e, r, e.doc.length);
  }
  getReplacement(e) {
    return this.spec.unquote(this.spec.replace).replace(/\$([$&]|\d+)/g, (n, r) => {
      if (r == "&")
        return e.match[0];
      if (r == "$")
        return "$";
      for (let i = r.length; i > 0; i--) {
        let o = +r.slice(0, i);
        if (o > 0 && o < e.match.length)
          return e.match[o] + r.slice(i);
      }
      return n;
    });
  }
  matchAll(e, n) {
    let r = Ac(this.spec, e, 0, e.doc.length), i = [];
    for (; !r.next().done; ) {
      if (i.length >= n)
        return null;
      i.push(r.value);
    }
    return i;
  }
  highlight(e, n, r, i) {
    let o = Ac(this.spec, e, Math.max(
      0,
      n - 250
      /* RegExp.HighlightMargin */
    ), Math.min(r + 250, e.doc.length));
    for (; !o.next().done; )
      i(o.value.from, o.value.to);
  }
}
const If = /* @__PURE__ */ vn.define(), K1 = /* @__PURE__ */ vn.define(), Ha = /* @__PURE__ */ wi.define({
  create(t) {
    return new Cv(cb(t).create(), null);
  },
  update(t, e) {
    for (let n of e.effects)
      n.is(If) ? t = new Cv(n.value.create(), t.panel) : n.is(K1) && (t = new Cv(t.query, n.value ? G1 : null));
    return t;
  },
  provide: (t) => Pf.from(t, (e) => e.panel)
});
class Cv {
  constructor(e, n) {
    this.query = e, this.panel = n;
  }
}
const yL = /* @__PURE__ */ Bt.mark({ class: "cm-searchMatch" }), xL = /* @__PURE__ */ Bt.mark({ class: "cm-searchMatch cm-searchMatch-selected" }), wL = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.decorations = this.highlight(t.state.field(Ha));
  }
  update(t) {
    let e = t.state.field(Ha);
    (e != t.startState.field(Ha) || t.docChanged || t.selectionSet || t.viewportChanged) && (this.decorations = this.highlight(e));
  }
  highlight({ query: t, panel: e }) {
    if (!e || !t.spec.valid)
      return Bt.none;
    let { view: n } = this, r = new rs();
    for (let i = 0, o = n.visibleRanges, s = o.length; i < s; i++) {
      let { from: a, to: l } = o[i];
      for (; i < s - 1 && l > o[i + 1].from - 500; )
        l = o[++i].to;
      t.highlight(n.state, a, l, (u, f) => {
        let d = n.state.selection.ranges.some((h) => h.from == u && h.to == f);
        r.add(u, f, d ? xL : yL);
      });
    }
    return r.finish();
  }
}, {
  decorations: (t) => t.decorations
});
function md(t) {
  return (e) => {
    let n = e.state.field(Ha, !1);
    return n && n.query.spec.valid ? t(e, n) : J1(e);
  };
}
const lm = /* @__PURE__ */ md((t, { query: e }) => {
  let { to: n } = t.state.selection.main, r = e.nextMatch(t.state, n, n);
  if (!r)
    return !1;
  let i = Me.single(r.from, r.to), o = t.state.facet(cc);
  return t.dispatch({
    selection: i,
    effects: [Q1(t, r), o.scrollToMatch(i.main, t)],
    userEvent: "select.search"
  }), JE(t), !0;
}), cm = /* @__PURE__ */ md((t, { query: e }) => {
  let { state: n } = t, { from: r } = n.selection.main, i = e.prevMatch(n, r, r);
  if (!i)
    return !1;
  let o = Me.single(i.from, i.to), s = t.state.facet(cc);
  return t.dispatch({
    selection: o,
    effects: [Q1(t, i), s.scrollToMatch(o.main, t)],
    userEvent: "select.search"
  }), JE(t), !0;
}), jL = /* @__PURE__ */ md((t, { query: e }) => {
  let n = e.matchAll(t.state, 1e3);
  return !n || !n.length ? !1 : (t.dispatch({
    selection: Me.create(n.map((r) => Me.range(r.from, r.to))),
    userEvent: "select.search.matches"
  }), !0);
}), kL = ({ state: t, dispatch: e }) => {
  let n = t.selection;
  if (n.ranges.length > 1 || n.main.empty)
    return !1;
  let { from: r, to: i } = n.main, o = [], s = 0;
  for (let a = new cu(t.doc, t.sliceDoc(r, i)); !a.next().done; ) {
    if (o.length > 1e3)
      return !1;
    a.value.from == r && (s = o.length), o.push(Me.range(a.value.from, a.value.to));
  }
  return e(t.update({
    selection: Me.create(o, s),
    userEvent: "select.search.matches"
  })), !0;
}, L2 = /* @__PURE__ */ md((t, { query: e }) => {
  let { state: n } = t, { from: r, to: i } = n.selection.main;
  if (n.readOnly)
    return !1;
  let o = e.nextMatch(n, r, r);
  if (!o)
    return !1;
  let s = o, a = [], l, u, f = [];
  s.from == r && s.to == i && (u = n.toText(e.getReplacement(s)), a.push({ from: s.from, to: s.to, insert: u }), s = e.nextMatch(n, s.from, s.to), f.push(nt.announce.of(n.phrase("replaced match on line $", n.doc.lineAt(r).number) + ".")));
  let d = t.state.changes(a);
  return s && (l = Me.single(s.from, s.to).map(d), f.push(Q1(t, s)), f.push(n.facet(cc).scrollToMatch(l.main, t))), t.dispatch({
    changes: d,
    selection: l,
    effects: f,
    userEvent: "input.replace"
  }), !0;
}), SL = /* @__PURE__ */ md((t, { query: e }) => {
  if (t.state.readOnly)
    return !1;
  let n = e.matchAll(t.state, 1e9).map((i) => {
    let { from: o, to: s } = i;
    return { from: o, to: s, insert: e.getReplacement(i) };
  });
  if (!n.length)
    return !1;
  let r = t.state.phrase("replaced $ matches", n.length) + ".";
  return t.dispatch({
    changes: n,
    effects: nt.announce.of(r),
    userEvent: "input.replace.all"
  }), !0;
});
function G1(t) {
  return t.state.facet(cc).createPanel(t);
}
function cb(t, e) {
  var n, r, i, o, s;
  let a = t.selection.main, l = a.empty || a.to > a.from + 100 ? "" : t.sliceDoc(a.from, a.to);
  if (e && !l)
    return e;
  let u = t.facet(cc);
  return new HE({
    search: ((n = e?.literal) !== null && n !== void 0 ? n : u.literal) ? l : l.replace(/\n/g, "\\n"),
    caseSensitive: (r = e?.caseSensitive) !== null && r !== void 0 ? r : u.caseSensitive,
    literal: (i = e?.literal) !== null && i !== void 0 ? i : u.literal,
    regexp: (o = e?.regexp) !== null && o !== void 0 ? o : u.regexp,
    wholeWord: (s = e?.wholeWord) !== null && s !== void 0 ? s : u.wholeWord
  });
}
function GE(t) {
  let e = $f(t, G1);
  return e && e.dom.querySelector("[main-field]");
}
function JE(t) {
  let e = GE(t);
  e && e == t.root.activeElement && e.select();
}
const J1 = (t) => {
  let e = t.state.field(Ha, !1);
  if (e && e.panel) {
    let n = GE(t);
    if (n && n != t.root.activeElement) {
      let r = cb(t.state, e.query.spec);
      r.valid && t.dispatch({ effects: If.of(r) }), n.focus(), n.select();
    }
  } else
    t.dispatch({ effects: [
      K1.of(!0),
      e ? If.of(cb(t.state, e.query.spec)) : vn.appendConfig.of(ub)
    ] });
  return !0;
}, Y1 = (t) => {
  let e = t.state.field(Ha, !1);
  if (!e || !e.panel)
    return !1;
  let n = $f(t, G1);
  return n && n.dom.contains(t.root.activeElement) && t.focus(), t.dispatch({ effects: K1.of(!1) }), !0;
}, CL = [
  { key: "Mod-f", run: J1, scope: "editor search-panel" },
  { key: "F3", run: lm, shift: cm, scope: "editor search-panel", preventDefault: !0 },
  { key: "Mod-g", run: lm, shift: cm, scope: "editor search-panel", preventDefault: !0 },
  { key: "Escape", run: Y1, scope: "editor search-panel" },
  { key: "Mod-Shift-l", run: kL },
  { key: "Mod-Alt-g", run: tL },
  { key: "Mod-d", run: hL, preventDefault: !0 }
];
class OL {
  constructor(e) {
    this.view = e;
    let n = this.query = e.state.field(Ha).query.spec;
    this.commit = this.commit.bind(this), this.searchField = vr("input", {
      value: n.search,
      placeholder: ho(e, "Find"),
      "aria-label": ho(e, "Find"),
      class: "cm-textfield",
      name: "search",
      form: "",
      "main-field": "true",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.replaceField = vr("input", {
      value: n.replace,
      placeholder: ho(e, "Replace"),
      "aria-label": ho(e, "Replace"),
      class: "cm-textfield",
      name: "replace",
      form: "",
      onchange: this.commit,
      onkeyup: this.commit
    }), this.caseField = vr("input", {
      type: "checkbox",
      name: "case",
      form: "",
      checked: n.caseSensitive,
      onchange: this.commit
    }), this.reField = vr("input", {
      type: "checkbox",
      name: "re",
      form: "",
      checked: n.regexp,
      onchange: this.commit
    }), this.wordField = vr("input", {
      type: "checkbox",
      name: "word",
      form: "",
      checked: n.wholeWord,
      onchange: this.commit
    });
    function r(i, o, s) {
      return vr("button", { class: "cm-button", name: i, onclick: o, type: "button" }, s);
    }
    this.dom = vr("div", { onkeydown: (i) => this.keydown(i), class: "cm-search" }, [
      this.searchField,
      r("next", () => lm(e), [ho(e, "next")]),
      r("prev", () => cm(e), [ho(e, "previous")]),
      r("select", () => jL(e), [ho(e, "all")]),
      vr("label", null, [this.caseField, ho(e, "match case")]),
      vr("label", null, [this.reField, ho(e, "regexp")]),
      vr("label", null, [this.wordField, ho(e, "by word")]),
      ...e.state.readOnly ? [] : [
        vr("br"),
        this.replaceField,
        r("replace", () => L2(e), [ho(e, "replace")]),
        r("replaceAll", () => SL(e), [ho(e, "replace all")])
      ],
      vr("button", {
        name: "close",
        onclick: () => Y1(e),
        "aria-label": ho(e, "close"),
        type: "button"
      }, ["×"])
    ]);
  }
  commit() {
    let e = new HE({
      search: this.searchField.value,
      caseSensitive: this.caseField.checked,
      regexp: this.reField.checked,
      wholeWord: this.wordField.checked,
      replace: this.replaceField.value
    });
    e.eq(this.query) || (this.query = e, this.view.dispatch({ effects: If.of(e) }));
  }
  keydown(e) {
    wD(this.view, e, "search-panel") ? e.preventDefault() : e.keyCode == 13 && e.target == this.searchField ? (e.preventDefault(), (e.shiftKey ? cm : lm)(this.view)) : e.keyCode == 13 && e.target == this.replaceField && (e.preventDefault(), L2(this.view));
  }
  update(e) {
    for (let n of e.transactions)
      for (let r of n.effects)
        r.is(If) && !r.value.eq(this.query) && this.setQuery(r.value);
  }
  setQuery(e) {
    this.query = e, this.searchField.value = e.search, this.replaceField.value = e.replace, this.caseField.checked = e.caseSensitive, this.reField.checked = e.regexp, this.wordField.checked = e.wholeWord;
  }
  mount() {
    this.searchField.select();
  }
  get pos() {
    return 80;
  }
  get top() {
    return this.view.state.facet(cc).top;
  }
}
function ho(t, e) {
  return t.state.phrase(e);
}
const qh = 30, Fh = /[\s\.,:;?!]/;
function Q1(t, { from: e, to: n }) {
  let r = t.state.doc.lineAt(e), i = t.state.doc.lineAt(n).to, o = Math.max(r.from, e - qh), s = Math.min(i, n + qh), a = t.state.sliceDoc(o, s);
  if (o != r.from) {
    for (let l = 0; l < qh; l++)
      if (!Fh.test(a[l + 1]) && Fh.test(a[l])) {
        a = a.slice(l);
        break;
      }
  }
  if (s != i) {
    for (let l = a.length - 1; l > a.length - qh; l--)
      if (!Fh.test(a[l - 1]) && Fh.test(a[l])) {
        a = a.slice(0, l);
        break;
      }
  }
  return nt.announce.of(`${t.state.phrase("current match")}. ${a} ${t.state.phrase("on line")} ${r.number}.`);
}
const EL = /* @__PURE__ */ nt.baseTheme({
  ".cm-panel.cm-search": {
    padding: "2px 6px 4px",
    position: "relative",
    "& [name=close]": {
      position: "absolute",
      top: "0",
      right: "4px",
      backgroundColor: "inherit",
      border: "none",
      font: "inherit",
      padding: 0,
      margin: 0
    },
    "& input, & button, & label": {
      margin: ".2em .6em .2em 0"
    },
    "& input[type=checkbox]": {
      marginRight: ".2em"
    },
    "& label": {
      fontSize: "80%",
      whiteSpace: "pre"
    }
  },
  "&light .cm-searchMatch": { backgroundColor: "#ffff0054" },
  "&dark .cm-searchMatch": { backgroundColor: "#00ffff8a" },
  "&light .cm-searchMatch-selected": { backgroundColor: "#ff6a0054" },
  "&dark .cm-searchMatch-selected": { backgroundColor: "#ff00ff8a" }
}), ub = [
  Ha,
  /* @__PURE__ */ lc.low(wL),
  EL
];
class YE {
  /**
  Create a new completion context. (Mostly useful for testing
  completion sources—in the editor, the extension will create
  these for you.)
  */
  constructor(e, n, r, i) {
    this.state = e, this.pos = n, this.explicit = r, this.view = i, this.abortListeners = [], this.abortOnDocChange = !1;
  }
  /**
  Get the extent, content, and (if there is a token) type of the
  token before `this.pos`.
  */
  tokenBefore(e) {
    let n = Bi(this.state).resolveInner(this.pos, -1);
    for (; n && e.indexOf(n.name) < 0; )
      n = n.parent;
    return n ? {
      from: n.from,
      to: this.pos,
      text: this.state.sliceDoc(n.from, this.pos),
      type: n.type
    } : null;
  }
  /**
  Get the match of the given expression directly before the
  cursor.
  */
  matchBefore(e) {
    let n = this.state.doc.lineAt(this.pos), r = Math.max(n.from, this.pos - 250), i = n.text.slice(r - n.from, this.pos - n.from), o = i.search(QE(e, !1));
    return o < 0 ? null : { from: r + o, to: this.pos, text: i.slice(o) };
  }
  /**
  Yields true when the query has been aborted. Can be useful in
  asynchronous queries to avoid doing work that will be ignored.
  */
  get aborted() {
    return this.abortListeners == null;
  }
  /**
  Allows you to register abort handlers, which will be called when
  the query is
  [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).
  
  By default, running queries will not be aborted for regular
  typing or backspacing, on the assumption that they are likely to
  return a result with a
  [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that
  allows the result to be used after all. Passing `onDocChange:
  true` will cause this query to be aborted for any document
  change.
  */
  addEventListener(e, n, r) {
    e == "abort" && this.abortListeners && (this.abortListeners.push(n), r && r.onDocChange && (this.abortOnDocChange = !0));
  }
}
function B2(t) {
  let e = Object.keys(t).join(""), n = /\w/.test(e);
  return n && (e = e.replace(/\w/g, "")), `[${n ? "\\w" : ""}${e.replace(/[^\w\s]/g, "\\$&")}]`;
}
function _L(t) {
  let e = /* @__PURE__ */ Object.create(null), n = /* @__PURE__ */ Object.create(null);
  for (let { label: i } of t) {
    e[i[0]] = !0;
    for (let o = 1; o < i.length; o++)
      n[i[o]] = !0;
  }
  let r = B2(e) + B2(n) + "*$";
  return [new RegExp("^" + r), new RegExp(r)];
}
function AL(t) {
  let e = t.map((i) => typeof i == "string" ? { label: i } : i), [n, r] = e.every((i) => /^\w+$/.test(i.label)) ? [/\w*$/, /\w+$/] : _L(e);
  return (i) => {
    let o = i.matchBefore(r);
    return o || i.explicit ? { from: o ? o.from : i.pos, options: e, validFor: n } : null;
  };
}
class q2 {
  constructor(e, n, r, i) {
    this.completion = e, this.source = n, this.match = r, this.score = i;
  }
}
function zl(t) {
  return t.selection.main.from;
}
function QE(t, e) {
  var n;
  let { source: r } = t, i = e && r[0] != "^", o = r[r.length - 1] != "$";
  return !i && !o ? t : new RegExp(`${i ? "^" : ""}(?:${r})${o ? "$" : ""}`, (n = t.flags) !== null && n !== void 0 ? n : t.ignoreCase ? "i" : "");
}
const XE = /* @__PURE__ */ hl.define();
function ML(t, e, n, r) {
  let { main: i } = t.selection, o = n - i.from, s = r - i.from;
  return Object.assign(Object.assign({}, t.changeByRange((a) => {
    if (a != i && n != r && t.sliceDoc(a.from + o, a.from + s) != t.sliceDoc(n, r))
      return { range: a };
    let l = t.toText(e);
    return {
      changes: { from: a.from + o, to: r == i.from ? a.to : a.from + s, insert: l },
      range: Me.cursor(a.from + o + l.length)
    };
  })), { scrollIntoView: !0, userEvent: "input.complete" });
}
const F2 = /* @__PURE__ */ new WeakMap();
function TL(t) {
  if (!Array.isArray(t))
    return t;
  let e = F2.get(t);
  return e || F2.set(t, e = AL(t)), e;
}
const um = /* @__PURE__ */ vn.define(), zf = /* @__PURE__ */ vn.define();
class $L {
  constructor(e) {
    this.pattern = e, this.chars = [], this.folded = [], this.any = [], this.precise = [], this.byWord = [], this.score = 0, this.matched = [];
    for (let n = 0; n < e.length; ) {
      let r = Yi(e, n), i = ws(r);
      this.chars.push(r);
      let o = e.slice(n, n + i), s = o.toUpperCase();
      this.folded.push(Yi(s == o ? o.toLowerCase() : s, 0)), n += i;
    }
    this.astral = e.length != this.chars.length;
  }
  ret(e, n) {
    return this.score = e, this.matched = n, this;
  }
  // Matches a given word (completion) against the pattern (input).
  // Will return a boolean indicating whether there was a match and,
  // on success, set `this.score` to the score, `this.matched` to an
  // array of `from, to` pairs indicating the matched parts of `word`.
  //
  // The score is a number that is more negative the worse the match
  // is. See `Penalty` above.
  match(e) {
    if (this.pattern.length == 0)
      return this.ret(-100, []);
    if (e.length < this.pattern.length)
      return null;
    let { chars: n, folded: r, any: i, precise: o, byWord: s } = this;
    if (n.length == 1) {
      let x = Yi(e, 0), w = ws(x), j = w == e.length ? 0 : -100;
      if (x != n[0]) if (x == r[0])
        j += -200;
      else
        return null;
      return this.ret(j, [0, w]);
    }
    let a = e.indexOf(this.pattern);
    if (a == 0)
      return this.ret(e.length == this.pattern.length ? 0 : -100, [0, this.pattern.length]);
    let l = n.length, u = 0;
    if (a < 0) {
      for (let x = 0, w = Math.min(e.length, 200); x < w && u < l; ) {
        let j = Yi(e, x);
        (j == n[u] || j == r[u]) && (i[u++] = x), x += ws(j);
      }
      if (u < l)
        return null;
    }
    let f = 0, d = 0, h = !1, p = 0, m = -1, v = -1, g = /[a-z]/.test(e), b = !0;
    for (let x = 0, w = Math.min(e.length, 200), j = 0; x < w && d < l; ) {
      let y = Yi(e, x);
      a < 0 && (f < l && y == n[f] && (o[f++] = x), p < l && (y == n[p] || y == r[p] ? (p == 0 && (m = x), v = x + 1, p++) : p = 0));
      let k, S = y < 255 ? y >= 48 && y <= 57 || y >= 97 && y <= 122 ? 2 : y >= 65 && y <= 90 ? 1 : 0 : (k = x1(y)) != k.toLowerCase() ? 1 : k != k.toUpperCase() ? 2 : 0;
      (!x || S == 1 && g || j == 0 && S != 0) && (n[d] == y || r[d] == y && (h = !0) ? s[d++] = x : s.length && (b = !1)), j = S, x += ws(y);
    }
    return d == l && s[0] == 0 && b ? this.result(-100 + (h ? -200 : 0), s, e) : p == l && m == 0 ? this.ret(-200 - e.length + (v == e.length ? 0 : -100), [0, v]) : a > -1 ? this.ret(-700 - e.length, [a, a + this.pattern.length]) : p == l ? this.ret(-900 - e.length, [m, v]) : d == l ? this.result(-100 + (h ? -200 : 0) + -700 + (b ? 0 : -1100), s, e) : n.length == 2 ? null : this.result((i[0] ? -700 : 0) + -200 + -1100, i, e);
  }
  result(e, n, r) {
    let i = [], o = 0;
    for (let s of n) {
      let a = s + (this.astral ? ws(Yi(r, s)) : 1);
      o && i[o - 1] == s ? i[o - 1] = a : (i[o++] = s, i[o++] = a);
    }
    return this.ret(e - r.length, i);
  }
}
class PL {
  constructor(e) {
    this.pattern = e, this.matched = [], this.score = 0, this.folded = e.toLowerCase();
  }
  match(e) {
    if (e.length < this.pattern.length)
      return null;
    let n = e.slice(0, this.pattern.length), r = n == this.pattern ? 0 : n.toLowerCase() == this.folded ? -200 : null;
    return r == null ? null : (this.matched = [0, n.length], this.score = r + (e.length == this.pattern.length ? 0 : -100), this);
  }
}
const bi = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      activateOnTyping: !0,
      activateOnCompletion: () => !1,
      activateOnTypingDelay: 100,
      selectOnOpen: !0,
      override: null,
      closeOnBlur: !0,
      maxRenderedOptions: 100,
      defaultKeymap: !0,
      tooltipClass: () => "",
      optionClass: () => "",
      aboveCursor: !1,
      icons: !0,
      addToOptions: [],
      positionInfo: RL,
      filterStrict: !1,
      compareCompletions: (e, n) => e.label.localeCompare(n.label),
      interactionDelay: 75,
      updateSyncTime: 100
    }, {
      defaultKeymap: (e, n) => e && n,
      closeOnBlur: (e, n) => e && n,
      icons: (e, n) => e && n,
      tooltipClass: (e, n) => (r) => U2(e(r), n(r)),
      optionClass: (e, n) => (r) => U2(e(r), n(r)),
      addToOptions: (e, n) => e.concat(n),
      filterStrict: (e, n) => e || n
    });
  }
});
function U2(t, e) {
  return t ? e ? t + " " + e : t : e;
}
function RL(t, e, n, r, i, o) {
  let s = t.textDirection == Nr.RTL, a = s, l = !1, u = "top", f, d, h = e.left - i.left, p = i.right - e.right, m = r.right - r.left, v = r.bottom - r.top;
  if (a && h < Math.min(m, p) ? a = !1 : !a && p < Math.min(m, h) && (a = !0), m <= (a ? h : p))
    f = Math.max(i.top, Math.min(n.top, i.bottom - v)) - e.top, d = Math.min(400, a ? h : p);
  else {
    l = !0, d = Math.min(
      400,
      (s ? e.right : i.right - e.left) - 30
      /* Info.Margin */
    );
    let x = i.bottom - e.bottom;
    x >= v || x > e.top ? f = n.bottom - e.top : (u = "bottom", f = e.bottom - n.top);
  }
  let g = (e.bottom - e.top) / o.offsetHeight, b = (e.right - e.left) / o.offsetWidth;
  return {
    style: `${u}: ${f / g}px; max-width: ${d / b}px`,
    class: "cm-completionInfo-" + (l ? s ? "left-narrow" : "right-narrow" : a ? "left" : "right")
  };
}
function NL(t) {
  let e = t.addToOptions.slice();
  return t.icons && e.push({
    render(n) {
      let r = document.createElement("div");
      return r.classList.add("cm-completionIcon"), n.type && r.classList.add(...n.type.split(/\s+/g).map((i) => "cm-completionIcon-" + i)), r.setAttribute("aria-hidden", "true"), r;
    },
    position: 20
  }), e.push({
    render(n, r, i, o) {
      let s = document.createElement("span");
      s.className = "cm-completionLabel";
      let a = n.displayLabel || n.label, l = 0;
      for (let u = 0; u < o.length; ) {
        let f = o[u++], d = o[u++];
        f > l && s.appendChild(document.createTextNode(a.slice(l, f)));
        let h = s.appendChild(document.createElement("span"));
        h.appendChild(document.createTextNode(a.slice(f, d))), h.className = "cm-completionMatchedText", l = d;
      }
      return l < a.length && s.appendChild(document.createTextNode(a.slice(l))), s;
    },
    position: 50
  }, {
    render(n) {
      if (!n.detail)
        return null;
      let r = document.createElement("span");
      return r.className = "cm-completionDetail", r.textContent = n.detail, r;
    },
    position: 80
  }), e.sort((n, r) => n.position - r.position).map((n) => n.render);
}
function Ov(t, e, n) {
  if (t <= n)
    return { from: 0, to: t };
  if (e < 0 && (e = 0), e <= t >> 1) {
    let i = Math.floor(e / n);
    return { from: i * n, to: (i + 1) * n };
  }
  let r = Math.floor((t - e) / n);
  return { from: t - (r + 1) * n, to: t - r * n };
}
class DL {
  constructor(e, n, r) {
    this.view = e, this.stateField = n, this.applyCompletion = r, this.info = null, this.infoDestroy = null, this.placeInfoReq = {
      read: () => this.measureInfo(),
      write: (l) => this.placeInfo(l),
      key: this
    }, this.space = null, this.currentClass = "";
    let i = e.state.field(n), { options: o, selected: s } = i.open, a = e.state.facet(bi);
    this.optionContent = NL(a), this.optionClass = a.optionClass, this.tooltipClass = a.tooltipClass, this.range = Ov(o.length, s, a.maxRenderedOptions), this.dom = document.createElement("div"), this.dom.className = "cm-tooltip-autocomplete", this.updateTooltipClass(e.state), this.dom.addEventListener("mousedown", (l) => {
      let { options: u } = e.state.field(n).open;
      for (let f = l.target, d; f && f != this.dom; f = f.parentNode)
        if (f.nodeName == "LI" && (d = /-(\d+)$/.exec(f.id)) && +d[1] < u.length) {
          this.applyCompletion(e, u[+d[1]]), l.preventDefault();
          return;
        }
    }), this.dom.addEventListener("focusout", (l) => {
      let u = e.state.field(this.stateField, !1);
      u && u.tooltip && e.state.facet(bi).closeOnBlur && l.relatedTarget != e.contentDOM && e.dispatch({ effects: zf.of(null) });
    }), this.showOptions(o, i.id);
  }
  mount() {
    this.updateSel();
  }
  showOptions(e, n) {
    this.list && this.list.remove(), this.list = this.dom.appendChild(this.createListBox(e, n, this.range)), this.list.addEventListener("scroll", () => {
      this.info && this.view.requestMeasure(this.placeInfoReq);
    });
  }
  update(e) {
    var n;
    let r = e.state.field(this.stateField), i = e.startState.field(this.stateField);
    if (this.updateTooltipClass(e.state), r != i) {
      let { options: o, selected: s, disabled: a } = r.open;
      (!i.open || i.open.options != o) && (this.range = Ov(o.length, s, e.state.facet(bi).maxRenderedOptions), this.showOptions(o, r.id)), this.updateSel(), a != ((n = i.open) === null || n === void 0 ? void 0 : n.disabled) && this.dom.classList.toggle("cm-tooltip-autocomplete-disabled", !!a);
    }
  }
  updateTooltipClass(e) {
    let n = this.tooltipClass(e);
    if (n != this.currentClass) {
      for (let r of this.currentClass.split(" "))
        r && this.dom.classList.remove(r);
      for (let r of n.split(" "))
        r && this.dom.classList.add(r);
      this.currentClass = n;
    }
  }
  positioned(e) {
    this.space = e, this.info && this.view.requestMeasure(this.placeInfoReq);
  }
  updateSel() {
    let e = this.view.state.field(this.stateField), n = e.open;
    if ((n.selected > -1 && n.selected < this.range.from || n.selected >= this.range.to) && (this.range = Ov(n.options.length, n.selected, this.view.state.facet(bi).maxRenderedOptions), this.showOptions(n.options, e.id)), this.updateSelectedOption(n.selected)) {
      this.destroyInfo();
      let { completion: r } = n.options[n.selected], { info: i } = r;
      if (!i)
        return;
      let o = typeof i == "string" ? document.createTextNode(i) : i(r);
      if (!o)
        return;
      "then" in o ? o.then((s) => {
        s && this.view.state.field(this.stateField, !1) == e && this.addInfoPane(s, r);
      }).catch((s) => Wi(this.view.state, s, "completion info")) : this.addInfoPane(o, r);
    }
  }
  addInfoPane(e, n) {
    this.destroyInfo();
    let r = this.info = document.createElement("div");
    if (r.className = "cm-tooltip cm-completionInfo", e.nodeType != null)
      r.appendChild(e), this.infoDestroy = null;
    else {
      let { dom: i, destroy: o } = e;
      r.appendChild(i), this.infoDestroy = o || null;
    }
    this.dom.appendChild(r), this.view.requestMeasure(this.placeInfoReq);
  }
  updateSelectedOption(e) {
    let n = null;
    for (let r = this.list.firstChild, i = this.range.from; r; r = r.nextSibling, i++)
      r.nodeName != "LI" || !r.id ? i-- : i == e ? r.hasAttribute("aria-selected") || (r.setAttribute("aria-selected", "true"), n = r) : r.hasAttribute("aria-selected") && r.removeAttribute("aria-selected");
    return n && zL(this.list, n), n;
  }
  measureInfo() {
    let e = this.dom.querySelector("[aria-selected]");
    if (!e || !this.info)
      return null;
    let n = this.dom.getBoundingClientRect(), r = this.info.getBoundingClientRect(), i = e.getBoundingClientRect(), o = this.space;
    if (!o) {
      let s = this.dom.ownerDocument.documentElement;
      o = { left: 0, top: 0, right: s.clientWidth, bottom: s.clientHeight };
    }
    return i.top > Math.min(o.bottom, n.bottom) - 10 || i.bottom < Math.max(o.top, n.top) + 10 ? null : this.view.state.facet(bi).positionInfo(this.view, n, i, r, o, this.dom);
  }
  placeInfo(e) {
    this.info && (e ? (e.style && (this.info.style.cssText = e.style), this.info.className = "cm-tooltip cm-completionInfo " + (e.class || "")) : this.info.style.cssText = "top: -1e6px");
  }
  createListBox(e, n, r) {
    const i = document.createElement("ul");
    i.id = n, i.setAttribute("role", "listbox"), i.setAttribute("aria-expanded", "true"), i.setAttribute("aria-label", this.view.state.phrase("Completions")), i.addEventListener("mousedown", (s) => {
      s.target == i && s.preventDefault();
    });
    let o = null;
    for (let s = r.from; s < r.to; s++) {
      let { completion: a, match: l } = e[s], { section: u } = a;
      if (u) {
        let h = typeof u == "string" ? u : u.name;
        if (h != o && (s > r.from || r.from == 0))
          if (o = h, typeof u != "string" && u.header)
            i.appendChild(u.header(u));
          else {
            let p = i.appendChild(document.createElement("completion-section"));
            p.textContent = h;
          }
      }
      const f = i.appendChild(document.createElement("li"));
      f.id = n + "-" + s, f.setAttribute("role", "option");
      let d = this.optionClass(a);
      d && (f.className = d);
      for (let h of this.optionContent) {
        let p = h(a, this.view.state, this.view, l);
        p && f.appendChild(p);
      }
    }
    return r.from && i.classList.add("cm-completionListIncompleteTop"), r.to < e.length && i.classList.add("cm-completionListIncompleteBottom"), i;
  }
  destroyInfo() {
    this.info && (this.infoDestroy && this.infoDestroy(), this.info.remove(), this.info = null);
  }
  destroy() {
    this.destroyInfo();
  }
}
function IL(t, e) {
  return (n) => new DL(n, t, e);
}
function zL(t, e) {
  let n = t.getBoundingClientRect(), r = e.getBoundingClientRect(), i = n.height / t.offsetHeight;
  r.top < n.top ? t.scrollTop -= (n.top - r.top) / i : r.bottom > n.bottom && (t.scrollTop += (r.bottom - n.bottom) / i);
}
function V2(t) {
  return (t.boost || 0) * 100 + (t.apply ? 10 : 0) + (t.info ? 5 : 0) + (t.type ? 1 : 0);
}
function LL(t, e) {
  let n = [], r = null, i = (u) => {
    n.push(u);
    let { section: f } = u.completion;
    if (f) {
      r || (r = []);
      let d = typeof f == "string" ? f : f.name;
      r.some((h) => h.name == d) || r.push(typeof f == "string" ? { name: d } : f);
    }
  }, o = e.facet(bi);
  for (let u of t)
    if (u.hasResult()) {
      let f = u.result.getMatch;
      if (u.result.filter === !1)
        for (let d of u.result.options)
          i(new q2(d, u.source, f ? f(d) : [], 1e9 - n.length));
      else {
        let d = e.sliceDoc(u.from, u.to), h, p = o.filterStrict ? new PL(d) : new $L(d);
        for (let m of u.result.options)
          if (h = p.match(m.label)) {
            let v = m.displayLabel ? f ? f(m, h.matched) : [] : h.matched;
            i(new q2(m, u.source, v, h.score + (m.boost || 0)));
          }
      }
    }
  if (r) {
    let u = /* @__PURE__ */ Object.create(null), f = 0, d = (h, p) => {
      var m, v;
      return ((m = h.rank) !== null && m !== void 0 ? m : 1e9) - ((v = p.rank) !== null && v !== void 0 ? v : 1e9) || (h.name < p.name ? -1 : 1);
    };
    for (let h of r.sort(d))
      f -= 1e5, u[h.name] = f;
    for (let h of n) {
      let { section: p } = h.completion;
      p && (h.score += u[typeof p == "string" ? p : p.name]);
    }
  }
  let s = [], a = null, l = o.compareCompletions;
  for (let u of n.sort((f, d) => d.score - f.score || l(f.completion, d.completion))) {
    let f = u.completion;
    !a || a.label != f.label || a.detail != f.detail || a.type != null && f.type != null && a.type != f.type || a.apply != f.apply || a.boost != f.boost ? s.push(u) : V2(u.completion) > V2(a) && (s[s.length - 1] = u), a = u.completion;
  }
  return s;
}
class Dc {
  constructor(e, n, r, i, o, s) {
    this.options = e, this.attrs = n, this.tooltip = r, this.timestamp = i, this.selected = o, this.disabled = s;
  }
  setSelected(e, n) {
    return e == this.selected || e >= this.options.length ? this : new Dc(this.options, W2(n, e), this.tooltip, this.timestamp, e, this.disabled);
  }
  static build(e, n, r, i, o, s) {
    if (i && !s && e.some((u) => u.isPending))
      return i.setDisabled();
    let a = LL(e, n);
    if (!a.length)
      return i && e.some((u) => u.isPending) ? i.setDisabled() : null;
    let l = n.facet(bi).selectOnOpen ? 0 : -1;
    if (i && i.selected != l && i.selected != -1) {
      let u = i.options[i.selected].completion;
      for (let f = 0; f < a.length; f++)
        if (a[f].completion == u) {
          l = f;
          break;
        }
    }
    return new Dc(a, W2(r, l), {
      pos: e.reduce((u, f) => f.hasResult() ? Math.min(u, f.from) : u, 1e8),
      create: WL,
      above: o.aboveCursor
    }, i ? i.timestamp : Date.now(), l, !1);
  }
  map(e) {
    return new Dc(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: e.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);
  }
  setDisabled() {
    return new Dc(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, !0);
  }
}
class fm {
  constructor(e, n, r) {
    this.active = e, this.id = n, this.open = r;
  }
  static start() {
    return new fm(UL, "cm-ac-" + Math.floor(Math.random() * 2e6).toString(36), null);
  }
  update(e) {
    let { state: n } = e, r = n.facet(bi), o = (r.override || n.languageDataAt("autocomplete", zl(n)).map(TL)).map((l) => (this.active.find((f) => f.source == l) || new To(
      l,
      this.active.some(
        (f) => f.state != 0
        /* State.Inactive */
      ) ? 1 : 0
      /* State.Inactive */
    )).update(e, r));
    o.length == this.active.length && o.every((l, u) => l == this.active[u]) && (o = this.active);
    let s = this.open, a = e.effects.some((l) => l.is(X1));
    s && e.docChanged && (s = s.map(e.changes)), e.selection || o.some((l) => l.hasResult() && e.changes.touchesRange(l.from, l.to)) || !BL(o, this.active) || a ? s = Dc.build(o, n, this.id, s, r, a) : s && s.disabled && !o.some((l) => l.isPending) && (s = null), !s && o.every((l) => !l.isPending) && o.some((l) => l.hasResult()) && (o = o.map((l) => l.hasResult() ? new To(
      l.source,
      0
      /* State.Inactive */
    ) : l));
    for (let l of e.effects)
      l.is(e_) && (s = s && s.setSelected(l.value, this.id));
    return o == this.active && s == this.open ? this : new fm(o, this.id, s);
  }
  get tooltip() {
    return this.open ? this.open.tooltip : null;
  }
  get attrs() {
    return this.open ? this.open.attrs : this.active.length ? qL : FL;
  }
}
function BL(t, e) {
  if (t == e)
    return !0;
  for (let n = 0, r = 0; ; ) {
    for (; n < t.length && !t[n].hasResult(); )
      n++;
    for (; r < e.length && !e[r].hasResult(); )
      r++;
    let i = n == t.length, o = r == e.length;
    if (i || o)
      return i == o;
    if (t[n++].result != e[r++].result)
      return !1;
  }
}
const qL = {
  "aria-autocomplete": "list"
}, FL = {};
function W2(t, e) {
  let n = {
    "aria-autocomplete": "list",
    "aria-haspopup": "listbox",
    "aria-controls": t
  };
  return e > -1 && (n["aria-activedescendant"] = t + "-" + e), n;
}
const UL = [];
function ZE(t, e) {
  if (t.isUserEvent("input.complete")) {
    let r = t.annotation(XE);
    if (r && e.activateOnCompletion(r))
      return 12;
  }
  let n = t.isUserEvent("input.type");
  return n && e.activateOnTyping ? 5 : n ? 1 : t.isUserEvent("delete.backward") ? 2 : t.selection ? 8 : t.docChanged ? 16 : 0;
}
class To {
  constructor(e, n, r = !1) {
    this.source = e, this.state = n, this.explicit = r;
  }
  hasResult() {
    return !1;
  }
  get isPending() {
    return this.state == 1;
  }
  update(e, n) {
    let r = ZE(e, n), i = this;
    (r & 8 || r & 16 && this.touches(e)) && (i = new To(
      i.source,
      0
      /* State.Inactive */
    )), r & 4 && i.state == 0 && (i = new To(
      this.source,
      1
      /* State.Pending */
    )), i = i.updateFor(e, r);
    for (let o of e.effects)
      if (o.is(um))
        i = new To(i.source, 1, o.value);
      else if (o.is(zf))
        i = new To(
          i.source,
          0
          /* State.Inactive */
        );
      else if (o.is(X1))
        for (let s of o.value)
          s.source == i.source && (i = s);
    return i;
  }
  updateFor(e, n) {
    return this.map(e.changes);
  }
  map(e) {
    return this;
  }
  touches(e) {
    return e.changes.touchesRange(zl(e.state));
  }
}
class Yc extends To {
  constructor(e, n, r, i, o, s) {
    super(e, 3, n), this.limit = r, this.result = i, this.from = o, this.to = s;
  }
  hasResult() {
    return !0;
  }
  updateFor(e, n) {
    var r;
    if (!(n & 3))
      return this.map(e.changes);
    let i = this.result;
    i.map && !e.changes.empty && (i = i.map(i, e.changes));
    let o = e.changes.mapPos(this.from), s = e.changes.mapPos(this.to, 1), a = zl(e.state);
    if (a > s || !i || n & 2 && (zl(e.startState) == this.from || a < this.limit))
      return new To(
        this.source,
        n & 4 ? 1 : 0
        /* State.Inactive */
      );
    let l = e.changes.mapPos(this.limit);
    return VL(i.validFor, e.state, o, s) ? new Yc(this.source, this.explicit, l, i, o, s) : i.update && (i = i.update(i, o, s, new YE(e.state, a, !1))) ? new Yc(this.source, this.explicit, l, i, i.from, (r = i.to) !== null && r !== void 0 ? r : zl(e.state)) : new To(this.source, 1, this.explicit);
  }
  map(e) {
    return e.empty ? this : (this.result.map ? this.result.map(this.result, e) : this.result) ? new Yc(this.source, this.explicit, e.mapPos(this.limit), this.result, e.mapPos(this.from), e.mapPos(this.to, 1)) : new To(
      this.source,
      0
      /* State.Inactive */
    );
  }
  touches(e) {
    return e.changes.touchesRange(this.from, this.to);
  }
}
function VL(t, e, n, r) {
  if (!t)
    return !1;
  let i = e.sliceDoc(n, r);
  return typeof t == "function" ? t(i, n, r, e) : QE(t, !0).test(i);
}
const X1 = /* @__PURE__ */ vn.define({
  map(t, e) {
    return t.map((n) => n.map(e));
  }
}), e_ = /* @__PURE__ */ vn.define(), Xi = /* @__PURE__ */ wi.define({
  create() {
    return fm.start();
  },
  update(t, e) {
    return t.update(e);
  },
  provide: (t) => [
    ng.from(t, (e) => e.tooltip),
    nt.contentAttributes.from(t, (e) => e.attrs)
  ]
});
function Z1(t, e) {
  const n = e.completion.apply || e.completion.label;
  let r = t.state.field(Xi).active.find((i) => i.source == e.source);
  return r instanceof Yc ? (typeof n == "string" ? t.dispatch(Object.assign(Object.assign({}, ML(t.state, n, r.from, r.to)), { annotations: XE.of(e.completion) })) : n(t, e.completion, r.from, r.to), !0) : !1;
}
const WL = /* @__PURE__ */ IL(Xi, Z1);
function Uh(t, e = "option") {
  return (n) => {
    let r = n.state.field(Xi, !1);
    if (!r || !r.open || r.open.disabled || Date.now() - r.open.timestamp < n.state.facet(bi).interactionDelay)
      return !1;
    let i = 1, o;
    e == "page" && (o = E4(n, r.open.tooltip)) && (i = Math.max(2, Math.floor(o.dom.offsetHeight / o.dom.querySelector("li").offsetHeight) - 1));
    let { length: s } = r.open.options, a = r.open.selected > -1 ? r.open.selected + i * (t ? 1 : -1) : t ? 0 : s - 1;
    return a < 0 ? a = e == "page" ? 0 : s - 1 : a >= s && (a = e == "page" ? s - 1 : 0), n.dispatch({ effects: e_.of(a) }), !0;
  };
}
const HL = (t) => {
  let e = t.state.field(Xi, !1);
  return t.state.readOnly || !e || !e.open || e.open.selected < 0 || e.open.disabled || Date.now() - e.open.timestamp < t.state.facet(bi).interactionDelay ? !1 : Z1(t, e.open.options[e.open.selected]);
}, H2 = (t) => t.state.field(Xi, !1) ? (t.dispatch({ effects: um.of(!0) }), !0) : !1, KL = (t) => {
  let e = t.state.field(Xi, !1);
  return !e || !e.active.some(
    (n) => n.state != 0
    /* State.Inactive */
  ) ? !1 : (t.dispatch({ effects: zf.of(null) }), !0);
};
class GL {
  constructor(e, n) {
    this.active = e, this.context = n, this.time = Date.now(), this.updates = [], this.done = void 0;
  }
}
const JL = 50, YL = 1e3, QL = /* @__PURE__ */ Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.debounceUpdate = -1, this.running = [], this.debounceAccept = -1, this.pendingStart = !1, this.composing = 0;
    for (let e of t.state.field(Xi).active)
      e.isPending && this.startQuery(e);
  }
  update(t) {
    let e = t.state.field(Xi), n = t.state.facet(bi);
    if (!t.selectionSet && !t.docChanged && t.startState.field(Xi) == e)
      return;
    let r = t.transactions.some((o) => {
      let s = ZE(o, n);
      return s & 8 || (o.selection || o.docChanged) && !(s & 3);
    });
    for (let o = 0; o < this.running.length; o++) {
      let s = this.running[o];
      if (r || s.context.abortOnDocChange && t.docChanged || s.updates.length + t.transactions.length > JL && Date.now() - s.time > YL) {
        for (let a of s.context.abortListeners)
          try {
            a();
          } catch (l) {
            Wi(this.view.state, l);
          }
        s.context.abortListeners = null, this.running.splice(o--, 1);
      } else
        s.updates.push(...t.transactions);
    }
    this.debounceUpdate > -1 && clearTimeout(this.debounceUpdate), t.transactions.some((o) => o.effects.some((s) => s.is(um))) && (this.pendingStart = !0);
    let i = this.pendingStart ? 50 : n.activateOnTypingDelay;
    if (this.debounceUpdate = e.active.some((o) => o.isPending && !this.running.some((s) => s.active.source == o.source)) ? setTimeout(() => this.startUpdate(), i) : -1, this.composing != 0)
      for (let o of t.transactions)
        o.isUserEvent("input.type") ? this.composing = 2 : this.composing == 2 && o.selection && (this.composing = 3);
  }
  startUpdate() {
    this.debounceUpdate = -1, this.pendingStart = !1;
    let { state: t } = this.view, e = t.field(Xi);
    for (let n of e.active)
      n.isPending && !this.running.some((r) => r.active.source == n.source) && this.startQuery(n);
    this.running.length && e.open && e.open.disabled && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(bi).updateSyncTime));
  }
  startQuery(t) {
    let { state: e } = this.view, n = zl(e), r = new YE(e, n, t.explicit, this.view), i = new GL(t, r);
    this.running.push(i), Promise.resolve(t.source(r)).then((o) => {
      i.context.aborted || (i.done = o || null, this.scheduleAccept());
    }, (o) => {
      this.view.dispatch({ effects: zf.of(null) }), Wi(this.view.state, o);
    });
  }
  scheduleAccept() {
    this.running.every((t) => t.done !== void 0) ? this.accept() : this.debounceAccept < 0 && (this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(bi).updateSyncTime));
  }
  // For each finished query in this.running, try to create a result
  // or, if appropriate, restart the query.
  accept() {
    var t;
    this.debounceAccept > -1 && clearTimeout(this.debounceAccept), this.debounceAccept = -1;
    let e = [], n = this.view.state.facet(bi), r = this.view.state.field(Xi);
    for (let i = 0; i < this.running.length; i++) {
      let o = this.running[i];
      if (o.done === void 0)
        continue;
      if (this.running.splice(i--, 1), o.done) {
        let a = zl(o.updates.length ? o.updates[0].startState : this.view.state), l = Math.min(a, o.done.from + (o.active.explicit ? 0 : 1)), u = new Yc(o.active.source, o.active.explicit, l, o.done, o.done.from, (t = o.done.to) !== null && t !== void 0 ? t : a);
        for (let f of o.updates)
          u = u.update(f, n);
        if (u.hasResult()) {
          e.push(u);
          continue;
        }
      }
      let s = r.active.find((a) => a.source == o.active.source);
      if (s && s.isPending)
        if (o.done == null) {
          let a = new To(
            o.active.source,
            0
            /* State.Inactive */
          );
          for (let l of o.updates)
            a = a.update(l, n);
          a.isPending || e.push(a);
        } else
          this.startQuery(s);
    }
    (e.length || r.open && r.open.disabled) && this.view.dispatch({ effects: X1.of(e) });
  }
}, {
  eventHandlers: {
    blur(t) {
      let e = this.view.state.field(Xi, !1);
      if (e && e.tooltip && this.view.state.facet(bi).closeOnBlur) {
        let n = e.open && E4(this.view, e.open.tooltip);
        (!n || !n.dom.contains(t.relatedTarget)) && setTimeout(() => this.view.dispatch({ effects: zf.of(null) }), 10);
      }
    },
    compositionstart() {
      this.composing = 1;
    },
    compositionend() {
      this.composing == 3 && setTimeout(() => this.view.dispatch({ effects: um.of(!1) }), 20), this.composing = 0;
    }
  }
}), XL = typeof navigator == "object" && /* @__PURE__ */ /Win/.test(navigator.platform), ZL = /* @__PURE__ */ lc.highest(/* @__PURE__ */ nt.domEventHandlers({
  keydown(t, e) {
    let n = e.state.field(Xi, !1);
    if (!n || !n.open || n.open.disabled || n.open.selected < 0 || t.key.length > 1 || t.ctrlKey && !(XL && t.altKey) || t.metaKey)
      return !1;
    let r = n.open.options[n.open.selected], i = n.active.find((s) => s.source == r.source), o = r.completion.commitCharacters || i.result.commitCharacters;
    return o && o.indexOf(t.key) > -1 && Z1(e, r), !1;
  }
})), eB = /* @__PURE__ */ nt.baseTheme({
  ".cm-tooltip.cm-tooltip-autocomplete": {
    "& > ul": {
      fontFamily: "monospace",
      whiteSpace: "nowrap",
      overflow: "hidden auto",
      maxWidth_fallback: "700px",
      maxWidth: "min(700px, 95vw)",
      minWidth: "250px",
      maxHeight: "10em",
      height: "100%",
      listStyle: "none",
      margin: 0,
      padding: 0,
      "& > li, & > completion-section": {
        padding: "1px 3px",
        lineHeight: 1.2
      },
      "& > li": {
        overflowX: "hidden",
        textOverflow: "ellipsis",
        cursor: "pointer"
      },
      "& > completion-section": {
        display: "list-item",
        borderBottom: "1px solid silver",
        paddingLeft: "0.5em",
        opacity: 0.7
      }
    }
  },
  "&light .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#17c",
    color: "white"
  },
  "&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#777"
  },
  "&dark .cm-tooltip-autocomplete ul li[aria-selected]": {
    background: "#347",
    color: "white"
  },
  "&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]": {
    background: "#444"
  },
  ".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after": {
    content: '"···"',
    opacity: 0.5,
    display: "block",
    textAlign: "center"
  },
  ".cm-tooltip.cm-completionInfo": {
    position: "absolute",
    padding: "3px 9px",
    width: "max-content",
    maxWidth: "400px",
    boxSizing: "border-box",
    whiteSpace: "pre-line"
  },
  ".cm-completionInfo.cm-completionInfo-left": { right: "100%" },
  ".cm-completionInfo.cm-completionInfo-right": { left: "100%" },
  ".cm-completionInfo.cm-completionInfo-left-narrow": { right: "30px" },
  ".cm-completionInfo.cm-completionInfo-right-narrow": { left: "30px" },
  "&light .cm-snippetField": { backgroundColor: "#00000022" },
  "&dark .cm-snippetField": { backgroundColor: "#ffffff22" },
  ".cm-snippetFieldPosition": {
    verticalAlign: "text-top",
    width: 0,
    height: "1.15em",
    display: "inline-block",
    margin: "0 -0.7px -.7em",
    borderLeft: "1.4px dotted #888"
  },
  ".cm-completionMatchedText": {
    textDecoration: "underline"
  },
  ".cm-completionDetail": {
    marginLeft: "0.5em",
    fontStyle: "italic"
  },
  ".cm-completionIcon": {
    fontSize: "90%",
    width: ".8em",
    display: "inline-block",
    textAlign: "center",
    paddingRight: ".6em",
    opacity: "0.6",
    boxSizing: "content-box"
  },
  ".cm-completionIcon-function, .cm-completionIcon-method": {
    "&:after": { content: "'ƒ'" }
  },
  ".cm-completionIcon-class": {
    "&:after": { content: "'○'" }
  },
  ".cm-completionIcon-interface": {
    "&:after": { content: "'◌'" }
  },
  ".cm-completionIcon-variable": {
    "&:after": { content: "'𝑥'" }
  },
  ".cm-completionIcon-constant": {
    "&:after": { content: "'𝐶'" }
  },
  ".cm-completionIcon-type": {
    "&:after": { content: "'𝑡'" }
  },
  ".cm-completionIcon-enum": {
    "&:after": { content: "'∪'" }
  },
  ".cm-completionIcon-property": {
    "&:after": { content: "'□'" }
  },
  ".cm-completionIcon-keyword": {
    "&:after": { content: "'🔑︎'" }
    // Disable emoji rendering
  },
  ".cm-completionIcon-namespace": {
    "&:after": { content: "'▢'" }
  },
  ".cm-completionIcon-text": {
    "&:after": { content: "'abc'", fontSize: "50%", verticalAlign: "middle" }
  }
}), Lf = {
  brackets: ["(", "[", "{", "'", '"'],
  before: ")]}:;>",
  stringPrefixes: []
}, Nl = /* @__PURE__ */ vn.define({
  map(t, e) {
    let n = e.mapPos(t, -1, Vi.TrackAfter);
    return n ?? void 0;
  }
}), ey = /* @__PURE__ */ new class extends Kl {
}();
ey.startSide = 1;
ey.endSide = -1;
const t_ = /* @__PURE__ */ wi.define({
  create() {
    return zn.empty;
  },
  update(t, e) {
    if (t = t.map(e.changes), e.selection) {
      let n = e.state.doc.lineAt(e.selection.main.head);
      t = t.update({ filter: (r) => r >= n.from && r <= n.to });
    }
    for (let n of e.effects)
      n.is(Nl) && (t = t.update({ add: [ey.range(n.value, n.value + 1)] }));
    return t;
  }
});
function tB() {
  return [rB, t_];
}
const Ev = "()[]{}<>«»»«［］｛｝";
function n_(t) {
  for (let e = 0; e < Ev.length; e += 2)
    if (Ev.charCodeAt(e) == t)
      return Ev.charAt(e + 1);
  return x1(t < 128 ? t : t + 1);
}
function r_(t, e) {
  return t.languageDataAt("closeBrackets", e)[0] || Lf;
}
const nB = typeof navigator == "object" && /* @__PURE__ */ /Android\b/.test(navigator.userAgent), rB = /* @__PURE__ */ nt.inputHandler.of((t, e, n, r) => {
  if ((nB ? t.composing : t.compositionStarted) || t.state.readOnly)
    return !1;
  let i = t.state.selection.main;
  if (r.length > 2 || r.length == 2 && ws(Yi(r, 0)) == 1 || e != i.from || n != i.to)
    return !1;
  let o = sB(t.state, r);
  return o ? (t.dispatch(o), !0) : !1;
}), iB = ({ state: t, dispatch: e }) => {
  if (t.readOnly)
    return !1;
  let r = r_(t, t.selection.main.head).brackets || Lf.brackets, i = null, o = t.changeByRange((s) => {
    if (s.empty) {
      let a = aB(t.doc, s.head);
      for (let l of r)
        if (l == a && dg(t.doc, s.head) == n_(Yi(l, 0)))
          return {
            changes: { from: s.head - l.length, to: s.head + l.length },
            range: Me.cursor(s.head - l.length)
          };
    }
    return { range: i = s };
  });
  return i || e(t.update(o, { scrollIntoView: !0, userEvent: "delete.backward" })), !i;
}, oB = [
  { key: "Backspace", run: iB }
];
function sB(t, e) {
  let n = r_(t, t.selection.main.head), r = n.brackets || Lf.brackets;
  for (let i of r) {
    let o = n_(Yi(i, 0));
    if (e == i)
      return o == i ? uB(t, i, r.indexOf(i + i + i) > -1, n) : lB(t, i, o, n.before || Lf.before);
    if (e == o && i_(t, t.selection.main.from))
      return cB(t, i, o);
  }
  return null;
}
function i_(t, e) {
  let n = !1;
  return t.field(t_).between(0, t.doc.length, (r) => {
    r == e && (n = !0);
  }), n;
}
function dg(t, e) {
  let n = t.sliceString(e, e + 2);
  return n.slice(0, ws(Yi(n, 0)));
}
function aB(t, e) {
  let n = t.sliceString(e - 2, e);
  return ws(Yi(n, 0)) == n.length ? n : n.slice(1);
}
function lB(t, e, n, r) {
  let i = null, o = t.changeByRange((s) => {
    if (!s.empty)
      return {
        changes: [{ insert: e, from: s.from }, { insert: n, from: s.to }],
        effects: Nl.of(s.to + e.length),
        range: Me.range(s.anchor + e.length, s.head + e.length)
      };
    let a = dg(t.doc, s.head);
    return !a || /\s/.test(a) || r.indexOf(a) > -1 ? {
      changes: { insert: e + n, from: s.head },
      effects: Nl.of(s.head + e.length),
      range: Me.cursor(s.head + e.length)
    } : { range: i = s };
  });
  return i ? null : t.update(o, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function cB(t, e, n) {
  let r = null, i = t.changeByRange((o) => o.empty && dg(t.doc, o.head) == n ? {
    changes: { from: o.head, to: o.head + n.length, insert: n },
    range: Me.cursor(o.head + n.length)
  } : r = { range: o });
  return r ? null : t.update(i, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function uB(t, e, n, r) {
  let i = r.stringPrefixes || Lf.stringPrefixes, o = null, s = t.changeByRange((a) => {
    if (!a.empty)
      return {
        changes: [{ insert: e, from: a.from }, { insert: e, from: a.to }],
        effects: Nl.of(a.to + e.length),
        range: Me.range(a.anchor + e.length, a.head + e.length)
      };
    let l = a.head, u = dg(t.doc, l), f;
    if (u == e) {
      if (K2(t, l))
        return {
          changes: { insert: e + e, from: l },
          effects: Nl.of(l + e.length),
          range: Me.cursor(l + e.length)
        };
      if (i_(t, l)) {
        let h = n && t.sliceDoc(l, l + e.length * 3) == e + e + e ? e + e + e : e;
        return {
          changes: { from: l, to: l + h.length, insert: h },
          range: Me.cursor(l + h.length)
        };
      }
    } else {
      if (n && t.sliceDoc(l - 2 * e.length, l) == e + e && (f = G2(t, l - 2 * e.length, i)) > -1 && K2(t, f))
        return {
          changes: { insert: e + e + e + e, from: l },
          effects: Nl.of(l + e.length),
          range: Me.cursor(l + e.length)
        };
      if (t.charCategorizer(l)(u) != Fr.Word && G2(t, l, i) > -1 && !fB(t, l, e, i))
        return {
          changes: { insert: e + e, from: l },
          effects: Nl.of(l + e.length),
          range: Me.cursor(l + e.length)
        };
    }
    return { range: o = a };
  });
  return o ? null : t.update(s, {
    scrollIntoView: !0,
    userEvent: "input.type"
  });
}
function K2(t, e) {
  let n = Bi(t).resolveInner(e + 1);
  return n.parent && n.from == e;
}
function fB(t, e, n, r) {
  let i = Bi(t).resolveInner(e, -1), o = r.reduce((s, a) => Math.max(s, a.length), 0);
  for (let s = 0; s < 5; s++) {
    let a = t.sliceDoc(i.from, Math.min(i.to, i.from + n.length + o)), l = a.indexOf(n);
    if (!l || l > -1 && r.indexOf(a.slice(0, l)) > -1) {
      let f = i.firstChild;
      for (; f && f.from == i.from && f.to - f.from > n.length + l; ) {
        if (t.sliceDoc(f.to - n.length, f.to) == n)
          return !1;
        f = f.firstChild;
      }
      return !0;
    }
    let u = i.to == e && i.parent;
    if (!u)
      break;
    i = u;
  }
  return !1;
}
function G2(t, e, n) {
  let r = t.charCategorizer(e);
  if (r(t.sliceDoc(e - 1, e)) != Fr.Word)
    return e;
  for (let i of n) {
    let o = e - i.length;
    if (t.sliceDoc(o, e) == i && r(t.sliceDoc(o - 1, o)) != Fr.Word)
      return o;
  }
  return -1;
}
function dB(t = {}) {
  return [
    ZL,
    Xi,
    bi.of(t),
    QL,
    hB,
    eB
  ];
}
const o_ = [
  { key: "Ctrl-Space", run: H2 },
  { mac: "Alt-`", run: H2 },
  { key: "Escape", run: KL },
  { key: "ArrowDown", run: /* @__PURE__ */ Uh(!0) },
  { key: "ArrowUp", run: /* @__PURE__ */ Uh(!1) },
  { key: "PageDown", run: /* @__PURE__ */ Uh(!0, "page") },
  { key: "PageUp", run: /* @__PURE__ */ Uh(!1, "page") },
  { key: "Enter", run: HL }
], hB = /* @__PURE__ */ lc.highest(/* @__PURE__ */ Kp.computeN([bi], (t) => t.facet(bi).defaultKeymap ? [o_] : []));
function pB(t, e = t.state) {
  const n = /* @__PURE__ */ new Set();
  for (const { from: r, to: i } of t.visibleRanges) {
    let o = r;
    for (; o <= i; ) {
      const s = e.doc.lineAt(o);
      n.has(s) || n.add(s), o = s.to + 1;
    }
  }
  return n;
}
function fb(t) {
  const e = t.selection.main.head;
  return t.doc.lineAt(e);
}
function J2(t, e) {
  let n = 0;
  e: for (let r = 0; r < t.length; r++)
    switch (t[r]) {
      case " ":
      case " ": {
        n += 1;
        continue e;
      }
      case "	": {
        n += e - n % e;
        continue e;
      }
      case "\r":
        continue e;
      default:
        break e;
    }
  return n;
}
const dm = /* @__PURE__ */ lt.define({
  combine(t) {
    return us(t, {
      highlightActiveBlock: !0,
      hideFirstIndent: !1,
      markerType: "fullScope",
      thickness: 1
    });
  }
});
class mB {
  /**
   * @param lines - The set of lines to get the indentation map for.
   * @param state - The {@link EditorState} to derive the indentation map from.
   * @param unitWidth - The width of the editor's indent unit.
   * @param markerType - The type of indentation to use (terminate at end of scope vs last line of code in scope)
   */
  constructor(e, n, r, i) {
    this.lines = e, this.state = n, this.map = /* @__PURE__ */ new Map(), this.unitWidth = r, this.markerType = i;
    for (const o of this.lines)
      this.add(o);
    this.state.facet(dm).highlightActiveBlock && this.findAndSetActiveLines();
  }
  /**
   * Checks if the indentation map has an entry for the given line.
   *
   * @param line - The {@link Line} or line number to check for.
   */
  has(e) {
    return this.map.has(typeof e == "number" ? e : e.number);
  }
  /**
   * Returns the {@link IndentEntry} for the given line.
   *
   * Note that this function will throw an error if the line does not exist in the map.
   *
   * @param line - The {@link Line} or line number to get the entry for.
   */
  get(e) {
    const n = this.map.get(typeof e == "number" ? e : e.number);
    if (!n)
      throw new Error("Line not found in indentation map");
    return n;
  }
  /**
   * Sets the {@link IndentEntry} for the given line.
   *
   * @param line - The {@link Line} to set the entry for.
   * @param col - The visual beginning whitespace width of the line.
   * @param level - The indentation level of the line.
   */
  set(e, n, r) {
    const i = !e.text.trim().length, o = { line: e, col: n, level: r, empty: i };
    return this.map.set(o.line.number, o), o;
  }
  /**
   * Adds a line to the indentation map.
   *
   * @param line - The {@link Line} to add to the map.
   */
  add(e) {
    if (this.has(e))
      return this.get(e);
    if (!e.length || !e.text.trim().length) {
      if (e.number === 1)
        return this.set(e, 0, 0);
      if (e.number === this.state.doc.lines) {
        const s = this.closestNonEmpty(e, -1);
        return this.set(e, 0, s.level);
      }
      const i = this.closestNonEmpty(e, -1), o = this.closestNonEmpty(e, 1);
      return i.level >= o.level && this.markerType !== "codeOnly" ? this.set(e, 0, i.level) : i.empty && i.level === 0 && o.level !== 0 ? this.set(e, 0, 0) : o.level > i.level ? this.set(e, 0, i.level + 1) : this.set(e, 0, o.level);
    }
    const n = J2(e.text, this.state.tabSize), r = Math.floor(n / this.unitWidth);
    return this.set(e, n, r);
  }
  /**
   * Finds the closest non-empty line, starting from the given line.
   *
   * @param from - The {@link Line} to start from.
   * @param dir - The direction to search in. Either `1` or `-1`.
   */
  closestNonEmpty(e, n) {
    let r = e.number + n;
    for (; n === -1 ? r >= 1 : r <= this.state.doc.lines; ) {
      if (this.has(r)) {
        const s = this.get(r);
        if (!s.empty)
          return s;
      }
      const o = this.state.doc.line(r);
      if (o.text.trim().length) {
        const s = J2(o.text, this.state.tabSize), a = Math.floor(s / this.unitWidth);
        return this.set(o, s, a);
      }
      r += n;
    }
    const i = this.state.doc.line(n === -1 ? 1 : this.state.doc.lines);
    return this.set(i, 0, 0);
  }
  /**
   * Finds the state's active block (via the current selection) and sets all
   * the active indent level for the lines in the block.
   */
  findAndSetActiveLines() {
    const e = fb(this.state);
    if (!this.has(e))
      return;
    let n = this.get(e);
    if (this.has(n.line.number + 1)) {
      const o = this.get(n.line.number + 1);
      o.level > n.level && (n = o);
    }
    if (this.has(n.line.number - 1)) {
      const o = this.get(n.line.number - 1);
      o.level > n.level && (n = o);
    }
    if (n.level === 0)
      return;
    n.active = n.level;
    let r, i;
    for (r = n.line.number; r > 1; r--) {
      if (!this.has(r - 1))
        continue;
      const o = this.get(r - 1);
      if (o.level < n.level)
        break;
      o.active = n.level;
    }
    for (i = n.line.number; i < this.state.doc.lines; i++) {
      if (!this.has(i + 1))
        continue;
      const o = this.get(i + 1);
      if (o.level < n.level)
        break;
      o.active = n.level;
    }
  }
}
function gB(t) {
  const e = {
    light: "#F0F1F2",
    dark: "#2B3245",
    activeLight: "#E4E5E6",
    activeDark: "#3C445C"
  };
  let n = e;
  return t && (n = Object.assign(Object.assign({}, e), t)), nt.baseTheme({
    "&light": {
      "--indent-marker-bg-color": n.light,
      "--indent-marker-active-bg-color": n.activeLight
    },
    "&dark": {
      "--indent-marker-bg-color": n.dark,
      "--indent-marker-active-bg-color": n.activeDark
    },
    ".cm-line": {
      position: "relative"
    },
    // this pseudo-element is used to draw the indent markers,
    // while still allowing the line to have its own background.
    ".cm-indent-markers::before": {
      content: '""',
      position: "absolute",
      top: 0,
      // .cm-line has a padding of 2px 
      // https://github.com/codemirror/view/blob/1c0a0880fc904714339f059658f3ba3a88bb8e6e/src/theme.ts#L85
      left: "2px",
      right: 0,
      bottom: 0,
      background: "var(--indent-markers)",
      pointerEvents: "none",
      zIndex: "-1"
    }
  });
}
function Vh(t, e, n, r, i) {
  return `${`repeating-linear-gradient(to right, var(${t}) 0 ${e}px, transparent ${e}px ${n}ch)`} ${r * n}.5ch/calc(${n * i}ch - 1px) no-repeat`;
}
function vB(t, e, n, r, i) {
  const { level: o, active: s } = t;
  if (i = i ?? r, n && o === 0)
    return [];
  const a = n ? 1 : 0, l = [];
  if (s !== void 0) {
    const u = s - a - 1;
    u > 0 && l.push(Vh("--indent-marker-bg-color", r, e, a, u)), l.push(Vh("--indent-marker-active-bg-color", i, e, s - 1, 1)), s !== o && l.push(Vh("--indent-marker-bg-color", r, e, s, o - s));
  } else
    l.push(Vh("--indent-marker-bg-color", r, e, a, o - a));
  return l.join(",");
}
class bB {
  constructor(e) {
    this.view = e, this.unitWidth = ol(e.state), this.currentLineNumber = fb(e.state).number, this.generate(e.state);
  }
  update(e) {
    const n = ol(e.state), r = n !== this.unitWidth;
    r && (this.unitWidth = n);
    const i = fb(e.state).number, o = i !== this.currentLineNumber;
    this.currentLineNumber = i;
    const s = e.state.facet(dm).highlightActiveBlock && o;
    (e.docChanged || e.viewportChanged || r || s) && this.generate(e.state);
  }
  generate(e) {
    const n = new rs(), r = pB(this.view, e), { hideFirstIndent: i, markerType: o, thickness: s, activeThickness: a } = e.facet(dm), l = new mB(r, e, this.unitWidth, o);
    for (const u of r) {
      const f = l.get(u.number);
      if (!f?.level)
        continue;
      const d = vB(f, this.unitWidth, i, s, a);
      n.add(u.from, u.from, Bt.line({
        class: "cm-indent-markers",
        attributes: {
          style: `--indent-markers: ${d}`
        }
      }));
    }
    this.decorations = n.finish();
  }
}
function yB(t = {}) {
  return [
    dm.of(t),
    gB(t.colors),
    Gr.fromClass(bB, {
      decorations: (e) => e.decorations
    })
  ];
}
var xB = ["mainAxis", "crossAxis", "fallbackPlacements", "fallbackStrategy", "fallbackAxisSideDirection", "flipAlignment"], wB = ["mainAxis", "crossAxis", "limiter"];
function s_(t, e) {
  if (t == null) return {};
  var n, r, i = (function(s, a) {
    if (s == null) return {};
    var l = {};
    for (var u in s) if ({}.hasOwnProperty.call(s, u)) {
      if (a.indexOf(u) !== -1) continue;
      l[u] = s[u];
    }
    return l;
  })(t, e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    for (r = 0; r < o.length; r++) n = o[r], e.indexOf(n) === -1 && {}.propertyIsEnumerable.call(t, n) && (i[n] = t[n]);
  }
  return i;
}
function Y2(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    e && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function De(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Y2(Object(n), !0).forEach(function(r) {
      db(t, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Y2(Object(n)).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return t;
}
function Q2(t, e, n, r, i, o, s) {
  try {
    var a = t[o](s), l = a.value;
  } catch (u) {
    return void n(u);
  }
  a.done ? e(l) : Promise.resolve(l).then(r, i);
}
function Mt(t) {
  return function() {
    var e = this, n = arguments;
    return new Promise(function(r, i) {
      var o = t.apply(e, n);
      function s(l) {
        Q2(o, r, i, s, a, "next", l);
      }
      function a(l) {
        Q2(o, r, i, s, a, "throw", l);
      }
      s(void 0);
    });
  };
}
function db(t, e, n) {
  return (e = (function(r) {
    var i = (function(o, s) {
      if (typeof o != "object" || !o) return o;
      var a = o[Symbol.toPrimitive];
      if (a !== void 0) {
        var l = a.call(o, s);
        if (typeof l != "object") return l;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (s === "string" ? String : Number)(o);
    })(r, "string");
    return typeof i == "symbol" ? i : i + "";
  })(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
var X2, _v, Z2, Av;
typeof window < "u" && ((_v = (X2 = (Av = (Z2 = window).__svelte) !== null && Av !== void 0 ? Av : Z2.__svelte = {}).v) !== null && _v !== void 0 ? _v : X2.v = /* @__PURE__ */ new Set()).add("5");
var ju = !1;
ju = !0;
var Ei = Symbol(), ku = Array.isArray, jB = Array.prototype.indexOf, hb = Array.from, kB = Object.defineProperty, la = Object.getOwnPropertyDescriptor, a_ = Object.getOwnPropertyDescriptors, SB = Object.prototype, CB = Array.prototype, ty = Object.getPrototypeOf, ek = Object.isExtensible;
function Hu(t) {
  return typeof t == "function";
}
var tk = () => {
};
function OB(t) {
  return t();
}
function hm(t) {
  for (var e = 0; e < t.length; e++) t[e]();
}
var hg = 32, l_ = 64, Yo = 256, pb = 512, ko = 1024, uu = 2048, uc = 4096, Ka = 8192, ny = 16384, gd = 65536, EB = 1 << 17, _B = 1 << 19, mb = 1 << 20, AB = 1 << 21, Ms = Symbol("$state"), c_ = Symbol("legacy props"), MB = Symbol(""), u_ = new class extends Error {
  constructor() {
    super(...arguments), db(this, "name", "StaleReactionError"), db(this, "message", "The reaction that called `getAbortSignal()` was re-run or destroyed");
  }
}();
function f_(t) {
  return t === this.v;
}
function ry(t, e) {
  return t != t ? e == e : t !== e || t !== null && typeof t == "object" || typeof t == "function";
}
function TB(t, e) {
  return t !== e;
}
function d_(t) {
  return !ry(t, this.v);
}
function vd(t) {
  throw new Error("https://svelte.dev/e/lifecycle_outside_component");
}
var sr = null;
function nk(t) {
  sr = t;
}
function gl(t) {
  return h_().get(t);
}
function mt(t) {
  sr = { p: sr, c: null, e: null, s: t, x: null, l: null }, ju && !(arguments.length > 1 && arguments[1] !== void 0 && arguments[1]) && (sr.l = { s: null, u: null, r1: [], r2: Xl(!1) });
}
function gt(t) {
  var e = sr, n = e.e;
  if (n !== null) for (var r of (e.e = null, n)) w_(r);
  return t !== void 0 && (e.x = t), sr = e.p, t ?? {};
}
function Su() {
  return !ju || sr !== null && sr.l === null;
}
function h_(t) {
  var e, n;
  return sr === null && vd(), (n = (e = sr).c) !== null && n !== void 0 ? n : e.c = new Map((function(r) {
    for (var i = r.p; i !== null; ) {
      var o = i.c;
      if (o !== null) return o;
      i = i.p;
    }
    return null;
  })(sr) || void 0);
}
function Ic(t) {
  if (typeof t != "object" || t === null || Ms in t) return t;
  var e = ty(t);
  if (e !== SB && e !== CB) return t;
  var n = /* @__PURE__ */ new Map(), r = ku(t), i = Gs(0), o = ql, s = (a) => {
    if (ql === o) return a();
    var l = _r, u = ql;
    al(null), sk(o);
    var f = a();
    return al(l), sk(u), f;
  };
  return r && n.set("length", Gs(t.length)), new Proxy(t, { defineProperty(a, l, u) {
    "value" in u && u.configurable !== !1 && u.enumerable !== !1 && u.writable !== !1 || (function() {
      throw new Error("https://svelte.dev/e/state_descriptors_fixed");
    })();
    var f = n.get(l);
    return f === void 0 ? f = s(() => {
      var d = Gs(u.value);
      return n.set(l, d), d;
    }) : C(f, u.value, !0), !0;
  }, deleteProperty(a, l) {
    var u = n.get(l);
    if (u === void 0) {
      if (l in a) {
        var f = s(() => Gs(Ei));
        n.set(l, f), Mv(i);
      }
    } else {
      if (r && typeof l == "string") {
        var d = n.get("length"), h = Number(l);
        Number.isInteger(h) && h < d.v && C(d, h);
      }
      C(u, Ei), Mv(i);
    }
    return !0;
  }, get(a, l, u) {
    var f;
    if (l === Ms) return t;
    var d = n.get(l), h = l in a;
    if (d === void 0 && (!h || (f = la(a, l)) !== null && f !== void 0 && f.writable) && (d = s(() => Gs(Ic(h ? a[l] : Ei))), n.set(l, d)), d !== void 0) {
      var p = c(d);
      return p === Ei ? void 0 : p;
    }
    return Reflect.get(a, l, u);
  }, getOwnPropertyDescriptor(a, l) {
    var u = Reflect.getOwnPropertyDescriptor(a, l);
    if (u && "value" in u) {
      var f = n.get(l);
      f && (u.value = c(f));
    } else if (u === void 0) {
      var d = n.get(l), h = d?.v;
      if (d !== void 0 && h !== Ei) return { enumerable: !0, configurable: !0, value: h, writable: !0 };
    }
    return u;
  }, has(a, l) {
    var u;
    if (l === Ms) return !0;
    var f = n.get(l), d = f !== void 0 && f.v !== Ei || Reflect.has(a, l);
    return (f !== void 0 || ar !== null && (!d || (u = la(a, l)) !== null && u !== void 0 && u.writable)) && (f === void 0 && (f = s(() => Gs(d ? Ic(a[l]) : Ei)), n.set(l, f)), c(f) === Ei) ? !1 : d;
  }, set(a, l, u, f) {
    var d, h = n.get(l), p = l in a;
    if (r && l === "length") for (var m = u; m < h.v; m += 1) {
      var v = n.get(m + "");
      v !== void 0 ? C(v, Ei) : m in a && (v = s(() => Gs(Ei)), n.set(m + "", v));
    }
    h === void 0 ? (!p || (d = la(a, l)) !== null && d !== void 0 && d.writable) && (C(h = s(() => Gs(void 0)), Ic(u)), n.set(l, h)) : (p = h.v !== Ei, C(h, s(() => Ic(u))));
    var g = Reflect.getOwnPropertyDescriptor(a, l);
    if (g != null && g.set && g.set.call(f, u), !p) {
      if (r && typeof l == "string") {
        var b = n.get("length"), x = Number(l);
        Number.isInteger(x) && x >= b.v && C(b, x + 1);
      }
      Mv(i);
    }
    return !0;
  }, ownKeys(a) {
    c(i);
    var l = Reflect.ownKeys(a).filter((d) => {
      var h = n.get(d);
      return h === void 0 || h.v !== Ei;
    });
    for (var [u, f] of n) f.v === Ei || u in a || l.push(u);
    return l;
  }, setPrototypeOf() {
    (function() {
      throw new Error("https://svelte.dev/e/state_prototype_fixed");
    })();
  } });
}
function rk(t) {
  try {
    if (t !== null && typeof t == "object" && Ms in t) return t[Ms];
  } catch {
  }
  return t;
}
function $B(t, e) {
  return Object.is(rk(t), rk(e));
}
function Cu(t) {
  var e = 2050, n = _r !== null && 2 & _r.f ? _r : null;
  return ar === null || n !== null && (n.f & Yo) !== 0 ? e |= Yo : ar.f |= _B, { ctx: sr, deps: null, effects: null, equals: f_, f: e, fn: t, reactions: null, rv: 0, v: Ei, wv: 0, parent: n ?? ar, ac: null };
}
function eo(t) {
  var e = Cu(t);
  return M_(e), e;
}
function Oe(t) {
  var e = Cu(t);
  return e.equals = d_, e;
}
function p_(t) {
  var e = t.effects;
  if (e !== null) {
    t.effects = null;
    for (var n = 0; n < e.length; n += 1) Do(e[n]);
  }
}
function iy(t) {
  var e, n = ar;
  ll((function(r) {
    for (var i = r.parent; i !== null; ) {
      if (!(2 & i.f)) return i;
      i = i.parent;
    }
    return null;
  })(t));
  try {
    p_(t), e = P_(t);
  } finally {
    ll(n);
  }
  return e;
}
function m_(t) {
  var e = iy(t);
  t.equals(e) || (t.v = e, t.wv = T_()), sl || ss(t, !Ba && (t.f & Yo) === 0 || t.deps === null ? ko : uc);
}
var Ll = /* @__PURE__ */ new Map();
function Xl(t, e) {
  return { f: 0, v: t, reactions: null, equals: f_, rv: 0, wv: 0 };
}
function Gs(t, e) {
  var n = Xl(t);
  return M_(n), n;
}
function Q(t) {
  var e, n, r = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], i = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], o = Xl(t);
  return r || (o.equals = d_), ju && i && sr !== null && sr.l !== null && ((n = (e = sr.l).s) !== null && n !== void 0 ? n : e.s = []).push(o), o;
}
function bo(t, e) {
  return C(t, ee(() => c(t))), e;
}
function C(t, e) {
  var n, r = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
  return _r === null || ks && (_r.f & EB) === 0 || !Su() || !(131090 & _r.f) || (n = ua) !== null && n !== void 0 && n.includes(t) || (function() {
    throw new Error("https://svelte.dev/e/state_unsafe_mutation");
  })(), gb(t, r ? Ic(e) : e);
}
function gb(t, e) {
  if (!t.equals(e)) {
    var n = t.v;
    sl ? Ll.set(t, e) : Ll.set(t, n), t.v = e, 2 & t.f && ((t.f & uu) !== 0 && iy(t), ss(t, (t.f & Yo) === 0 ? ko : uc)), t.wv = T_(), g_(t, uu), !Su() || ar === null || (ar.f & ko) === 0 || 96 & ar.f || (So === null ? (function(r) {
      So = r;
    })([t]) : So.push(t));
  }
  return e;
}
function ik(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, n = c(t), r = e === 1 ? n++ : n--;
  return C(t, n), r;
}
function Mv(t) {
  C(t, t.v + 1);
}
function g_(t, e) {
  var n = t.reactions;
  if (n !== null) for (var r = Su(), i = n.length, o = 0; o < i; o++) {
    var s = n[o], a = s.f;
    (a & uu) === 0 && (r || s !== ar) && (ss(s, e), 1280 & a && (2 & a ? g_(s, uc) : bg(s)));
  }
}
var ca, v_, b_, y_;
function pg() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  return document.createTextNode(t);
}
function yo(t) {
  return b_.call(t);
}
function mg(t) {
  return y_.call(t);
}
function Y(t, e) {
  return yo(t);
}
function wt(t, e) {
  var n = yo(t);
  return n instanceof Comment && n.data === "" ? mg(n) : n;
}
function le(t) {
  for (var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, n = t; e--; ) n = mg(n);
  return n;
}
function x_(t) {
  ar === null && _r === null && (function() {
    throw new Error("https://svelte.dev/e/effect_orphan");
  })(), _r !== null && (_r.f & Yo) !== 0 && ar === null && (function() {
    throw new Error("https://svelte.dev/e/effect_in_unowned_derived");
  })(), sl && (function() {
    throw new Error("https://svelte.dev/e/effect_in_teardown");
  })();
}
function vl(t, e, n) {
  var r = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], i = ar, o = { ctx: sr, deps: null, nodes_start: null, nodes_end: null, f: t | uu, first: null, fn: e, last: null, next: null, parent: i, b: i && i.b, prev: null, teardown: null, transitions: null, wv: 0, ac: null };
  if (n) try {
    vg(o), o.f |= 32768;
  } catch (l) {
    throw Do(o), l;
  }
  else e !== null && bg(o);
  if (!(n && o.deps === null && o.first === null && o.nodes_start === null && o.teardown === null && !(524416 & o.f)) && r && (i !== null && (function(l, u) {
    var f = u.last;
    f === null ? u.last = u.first = l : (f.next = l, l.prev = f, u.last = l);
  })(o, i), _r !== null && 2 & _r.f)) {
    var s, a = _r;
    ((s = a.effects) !== null && s !== void 0 ? s : a.effects = []).push(o);
  }
  return o;
}
function oy(t) {
  var e = vl(8, null, !1);
  return ss(e, ko), e.teardown = t, e;
}
function vb(t) {
  if (x_(), _r || !ar || (ar.f & hg) === 0) return w_(t);
  var e, n = sr;
  ((e = n.e) !== null && e !== void 0 ? e : n.e = []).push(t);
}
function w_(t) {
  return vl(2097156, t, !1);
}
function yi(t) {
  return vl(4, t, !1);
}
function de(t, e) {
  var n = sr, r = { effect: null, ran: !1 };
  n.l.r1.push(r), r.effect = bd(() => {
    t(), r.ran || (r.ran = !0, C(n.l.r2, !0), ee(e));
  });
}
function Bn() {
  var t = sr;
  bd(() => {
    if (c(t.l.r2)) {
      for (var e of t.l.r1) {
        var n = e.effect;
        (n.f & ko) !== 0 && ss(n, uc), yd(n) && vg(n), e.ran = !1;
      }
      t.l.r2.v = !1;
    }
  });
}
function bd(t) {
  return vl(8, t, !0);
}
function Ie(t) {
  var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Cu, n = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : []).map(e);
  return bl(() => t(...n.map(c)));
}
function bl(t) {
  return vl(24 | (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0), t, !0);
}
function Ds(t) {
  return vl(40, t, !0, !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1]);
}
function j_(t) {
  var e = t.teardown;
  if (e !== null) {
    var n = sl, r = _r;
    ok(!0), al(null);
    try {
      e.call(null);
    } finally {
      ok(n), al(r);
    }
  }
}
function k_(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], n = t.first;
  for (t.first = t.last = null; n !== null; ) {
    var r;
    (r = n.ac) === null || r === void 0 || r.abort(u_);
    var i = n.next;
    (n.f & l_) !== 0 ? n.parent = null : Do(n, e), n = i;
  }
}
function Do(t) {
  var e = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n = !1;
  (e || 262144 & t.f) && t.nodes_start !== null && t.nodes_end !== null && (S_(t.nodes_start, t.nodes_end), n = !0), k_(t, e && !n), gm(t, 0), ss(t, ny);
  var r = t.transitions;
  if (r !== null) for (var i of r) i.stop();
  j_(t);
  var o = t.parent;
  o !== null && o.first !== null && C_(t), t.next = t.prev = t.teardown = t.ctx = t.deps = t.fn = t.nodes_start = t.nodes_end = t.ac = null;
}
function S_(t, e) {
  for (; t !== null; ) {
    var n = t === e ? null : mg(t);
    t.remove(), t = n;
  }
}
function C_(t) {
  var e = t.parent, n = t.prev, r = t.next;
  n !== null && (n.next = r), r !== null && (r.prev = n), e !== null && (e.first === t && (e.first = r), e.last === t && (e.last = n));
}
function fu(t, e) {
  var n = [];
  sy(t, n, !0), O_(n, () => {
    Do(t), e && e();
  });
}
function O_(t, e) {
  var n = t.length;
  if (n > 0) {
    var r = () => --n || e();
    for (var i of t) i.out(r);
  } else e();
}
function sy(t, e, n) {
  if ((t.f & Ka) === 0) {
    if (t.f ^= Ka, t.transitions !== null) for (var r of t.transitions) (r.is_global || n) && e.push(r);
    for (var i = t.first; i !== null; ) {
      var o = i.next;
      sy(i, e, ((i.f & gd) !== 0 || (i.f & hg) !== 0) && n), i = o;
    }
  }
}
function pm(t) {
  E_(t, !0);
}
function E_(t, e) {
  if ((t.f & Ka) !== 0) {
    t.f ^= Ka;
    for (var n = t.first; n !== null; ) {
      var r = n.next;
      E_(n, ((n.f & gd) !== 0 || (n.f & hg) !== 0) && e), n = r;
    }
    if (t.transitions !== null) for (var i of t.transitions) (i.is_global || e) && i.in();
  }
}
var Bf = [], Tv = [];
function __() {
  var t = Bf;
  Bf = [], hm(t);
}
function gg(t) {
  Bf.length === 0 && queueMicrotask(__), Bf.push(t);
}
function PB() {
  var t;
  Bf.length > 0 && __(), Tv.length > 0 && (t = Tv, Tv = [], hm(t));
}
function A_(t, e) {
  for (; e !== null; ) {
    if (128 & e.f) try {
      return void e.b.error(t);
    } catch {
    }
    e = e.parent;
  }
  throw t;
}
var qf = !1, Ff = null, Bl = !1, sl = !1;
function ok(t) {
  sl = t;
}
var vf = [], _r = null, ks = !1;
function al(t) {
  _r = t;
}
var ar = null;
function ll(t) {
  ar = t;
}
var ua = null;
function M_(t) {
  _r !== null && _r.f & mb && (ua === null ? ua = [t] : ua.push(t));
}
var Ui = null, po = 0, So = null, mm = 1, Uf = 0, ql = Uf;
function sk(t) {
  ql = t;
}
var Ba = !1;
function T_() {
  return ++mm;
}
function yd(t) {
  var e = t.f;
  if ((e & uu) !== 0) return !0;
  if ((e & uc) !== 0) {
    var n = t.deps, r = (e & Yo) !== 0;
    if (n !== null) {
      var i, o, s = (e & pb) !== 0, a = r && ar !== null && !Ba, l = n.length;
      if (s || a) {
        var u = t, f = u.parent;
        for (i = 0; i < l; i++) {
          var d, h, p;
          o = n[i], (s || (d = o) === null || d === void 0 || (d = d.reactions) === null || d === void 0 || !d.includes(u)) && ((p = (h = o).reactions) !== null && p !== void 0 ? p : h.reactions = []).push(u);
        }
        s && (u.f ^= pb), a && f !== null && (f.f & Yo) === 0 && (u.f ^= Yo);
      }
      for (i = 0; i < l; i++) if (yd(o = n[i]) && m_(o), o.wv > t.wv) return !0;
    }
    r && (ar === null || Ba) || ss(t, ko);
  }
  return !1;
}
function $_(t, e) {
  var n, r = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], i = t.reactions;
  if (i !== null && ((n = ua) === null || n === void 0 || !n.includes(t))) for (var o = 0; o < i.length; o++) {
    var s = i[o];
    2 & s.f ? $_(s, e, !1) : e === s && (r ? ss(s, uu) : (s.f & ko) !== 0 && ss(s, uc), bg(s));
  }
}
function P_(t) {
  var e = Ui, n = po, r = So, i = _r, o = Ba, s = ua, a = sr, l = ks, u = ql, f = t.f;
  Ui = null, po = 0, So = null, Ba = (f & Yo) !== 0 && (ks || !Bl || _r === null), _r = 96 & f ? null : t, ua = null, nk(t.ctx), ks = !1, ql = ++Uf, t.f |= mb, t.ac !== null && (t.ac.abort(u_), t.ac = null);
  try {
    var d = (0, t.fn)(), h = t.deps;
    if (Ui !== null) {
      var p;
      if (gm(t, po), h !== null && po > 0) for (h.length = po + Ui.length, p = 0; p < Ui.length; p++) h[po + p] = Ui[p];
      else t.deps = h = Ui;
      if (!Ba || 2 & f && t.reactions !== null) for (p = po; p < h.length; p++) {
        var m, v;
        ((v = (m = h[p]).reactions) !== null && v !== void 0 ? v : m.reactions = []).push(t);
      }
    } else h !== null && po < h.length && (gm(t, po), h.length = po);
    if (Su() && So !== null && !ks && h !== null && !(6146 & t.f)) for (p = 0; p < So.length; p++) $_(So[p], t);
    return i !== null && i !== t && (Uf++, So !== null && (r === null ? r = So : r.push(...So))), d;
  } catch (g) {
    (function(b) {
      var x = ar;
      if (32768 & x.f) A_(b, x);
      else {
        if (!(128 & x.f)) throw b;
        x.fn(b);
      }
    })(g);
  } finally {
    Ui = e, po = n, So = r, _r = i, Ba = o, ua = s, nk(a), ks = l, ql = u, t.f ^= mb;
  }
}
function RB(t, e) {
  var n = e.reactions;
  if (n !== null) {
    var r = jB.call(n, t);
    if (r !== -1) {
      var i = n.length - 1;
      i === 0 ? n = e.reactions = null : (n[r] = n[i], n.pop());
    }
  }
  n === null && 2 & e.f && (Ui === null || !Ui.includes(e)) && (ss(e, uc), 768 & e.f || (e.f ^= pb), p_(e), gm(e, 0));
}
function gm(t, e) {
  var n = t.deps;
  if (n !== null) for (var r = e; r < n.length; r++) RB(t, n[r]);
}
function vg(t) {
  var e = t.f;
  if ((e & ny) === 0) {
    ss(t, ko);
    var n = ar, r = Bl;
    ar = t, Bl = !0;
    try {
      16 & e ? (function(o) {
        for (var s = o.first; s !== null; ) {
          var a = s.next;
          (s.f & hg) === 0 && Do(s), s = a;
        }
      })(t) : k_(t), j_(t);
      var i = P_(t);
      t.teardown = typeof i == "function" ? i : null, t.wv = mm;
    } finally {
      Bl = r, ar = n;
    }
  }
}
function NB() {
  try {
    (function() {
      throw new Error("https://svelte.dev/e/effect_update_depth_exceeded");
    })();
  } catch (t) {
    if (Ff === null) throw t;
    A_(t, Ff);
  }
}
function R_() {
  var t = Bl;
  try {
    var e = 0;
    for (Bl = !0; vf.length > 0; ) {
      e++ > 1e3 && NB();
      var n = vf, r = n.length;
      vf = [];
      for (var i = 0; i < r; i++)
        DB(IB(n[i]));
      Ll.clear();
    }
  } finally {
    qf = !1, Bl = t, Ff = null;
  }
}
function DB(t) {
  var e = t.length;
  if (e !== 0) {
    for (var n = 0; n < e; n++) {
      var r = t[n];
      if (!(24576 & r.f) && yd(r)) {
        var i = mm;
        if (vg(r), r.deps === null && r.first === null && r.nodes_start === null && (r.teardown === null ? C_(r) : r.fn = null), mm > i && (r.f & AB) !== 0) break;
      }
    }
    for (; n < e; n += 1) bg(t[n]);
  }
}
function bg(t) {
  qf || (qf = !0, queueMicrotask(R_));
  for (var e = Ff = t; e.parent !== null; ) {
    var n = (e = e.parent).f;
    if (96 & n) {
      if ((n & ko) === 0) return;
      e.f ^= ko;
    }
  }
  vf.push(e);
}
function IB(t) {
  for (var e = [], n = t; n !== null; ) {
    var r = n.f, i = !!(96 & r);
    if (!(i && (r & ko) !== 0) && (r & Ka) === 0) {
      4 & r ? e.push(n) : i ? n.f ^= ko : yd(n) && vg(n);
      var o = n.first;
      if (o !== null) {
        n = o;
        continue;
      }
    }
    var s = n.parent;
    for (n = n.next; n === null && s !== null; ) n = s.next, s = s.parent;
  }
  return e;
}
function fr(t) {
  for (; ; ) {
    if (PB(), vf.length === 0) return qf = !1, void (Ff = null);
    qf = !0, R_();
  }
}
function N_() {
  return (N_ = Mt(function* () {
    yield Promise.resolve(), fr();
  })).apply(this, arguments);
}
function c(t) {
  var e, n = !!(2 & t.f);
  if (_r === null || ks) {
    if (n && t.deps === null && t.effects === null) {
      var r = t, i = r.parent;
      i !== null && (i.f & Yo) === 0 && (r.f ^= Yo);
    }
  } else if ((e = ua) === null || e === void 0 || !e.includes(t)) {
    var o = _r.deps;
    t.rv < Uf && (t.rv = Uf, Ui === null && o !== null && o[po] === t ? po++ : Ui === null ? Ui = [t] : Ba && Ui.includes(t) || Ui.push(t));
  }
  if (n && !sl && yd(r = t) && m_(r), sl) {
    if (Ll.has(t)) return Ll.get(t);
    if (n) {
      var s = (r = t).v;
      return ((r.f & ko) !== 0 || D_(r)) && (s = iy(r)), Ll.set(r, s), s;
    }
  }
  return t.v;
}
function D_(t) {
  if (t.v === Ei) return !0;
  if (t.deps === null) return !1;
  for (var e of t.deps)
    if (Ll.has(e) || 2 & e.f && D_(e)) return !0;
  return !1;
}
function ee(t) {
  var e = ks;
  try {
    return ks = !0, t();
  } finally {
    ks = e;
  }
}
var zB = -7169;
function ss(t, e) {
  t.f = t.f & zB | e;
}
function _(t) {
  if (typeof t == "object" && t && !(t instanceof EventTarget)) {
    if (Ms in t) bb(t);
    else if (!Array.isArray(t)) for (var e in t) {
      var n = t[e];
      typeof n == "object" && n && Ms in n && bb(n);
    }
  }
}
function bb(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : /* @__PURE__ */ new Set();
  if (!(typeof t != "object" || t === null || t instanceof EventTarget || e.has(t))) {
    for (var n in e.add(t), t instanceof Date && t.getTime(), t) try {
      bb(t[n], e);
    } catch {
    }
    var r = ty(t);
    if (r !== Object.prototype && r !== Array.prototype && r !== Map.prototype && r !== Set.prototype && r !== Date.prototype) {
      var i = a_(r);
      for (var o in i) {
        var s = i[o].get;
        if (s) try {
          s.call(t);
        } catch {
        }
      }
    }
  }
}
var ak = !1;
function I_(t) {
  var e = _r, n = ar;
  al(null), ll(null);
  try {
    return t();
  } finally {
    al(e), ll(n);
  }
}
function LB(t, e, n) {
  var r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : n;
  t.addEventListener(e, () => I_(n));
  var i = t.__on_r;
  t.__on_r = i ? () => {
    i(), r(!0);
  } : () => r(!0), ak || (ak = !0, document.addEventListener("reset", (o) => {
    Promise.resolve().then(() => {
      if (!o.defaultPrevented) for (var s of o.target.elements) {
        var a;
        (a = s.__on_r) === null || a === void 0 || a.call(s);
      }
    });
  }, { capture: !0 }));
}
var z_ = /* @__PURE__ */ new Set(), yb = /* @__PURE__ */ new Set();
function L_(t, e, n) {
  var r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
  function i(o) {
    if (r.capture || nf.call(e, o), !o.cancelBubble) return I_(() => n?.call(this, o));
  }
  return t.startsWith("pointer") || t.startsWith("touch") || t === "wheel" ? gg(() => {
    e.addEventListener(t, i, r);
  }) : e.addEventListener(t, i, r), i;
}
function Pe(t, e, n, r, i) {
  var o = { capture: r, passive: i }, s = L_(t, e, n, o);
  (e === document.body || e === window || e === document || e instanceof HTMLMediaElement) && oy(() => {
    e.removeEventListener(t, s, o);
  });
}
function xd(t) {
  for (var e = 0; e < t.length; e++) z_.add(t[e]);
  for (var n of yb) n(t);
}
function nf(t) {
  var e, n = this, r = n.ownerDocument, i = t.type, o = ((e = t.composedPath) === null || e === void 0 ? void 0 : e.call(t)) || [], s = o[0] || t.target, a = 0, l = t.__root;
  if (l) {
    var u = o.indexOf(l);
    if (u !== -1 && (n === document || n === window)) return void (t.__root = n);
    var f = o.indexOf(n);
    if (f === -1) return;
    u <= f && (a = u);
  }
  if ((s = o[a] || t.target) !== n) {
    kB(t, "currentTarget", { configurable: !0, get: () => s || r });
    var d = _r, h = ar;
    al(null), ll(null);
    try {
      for (var p, m = []; s !== null; ) {
        var v = s.assignedSlot || s.parentNode || s.host || null;
        try {
          var g = s["__" + i];
          if (g != null && (!s.disabled || t.target === s)) if (ku(g)) {
            var [b, ...x] = g;
            b.apply(s, [t, ...x]);
          } else g.call(s, t);
        } catch (y) {
          p ? m.push(y) : p = y;
        }
        if (t.cancelBubble || v === n || v === null) break;
        s = v;
      }
      if (p) {
        var w = function(y) {
          queueMicrotask(() => {
            throw y;
          });
        };
        for (var j of m) w(j);
        throw p;
      }
    } finally {
      t.__root = n, delete t.currentTarget, al(d), ll(h);
    }
  }
}
function ay(t) {
  var e = document.createElement("template");
  return e.innerHTML = t.replaceAll("<!>", "<!---->"), e.content;
}
function Zl(t, e) {
  var n = ar;
  n.nodes_start === null && (n.nodes_start = t, n.nodes_end = e);
}
function pe(t, e) {
  var n, r = !!(1 & e), i = !!(2 & e), o = !t.startsWith("<!>");
  return () => {
    n === void 0 && (n = ay(o ? t : "<!>" + t), r || (n = yo(n)));
    var s = i || v_ ? document.importNode(n, !0) : n.cloneNode(!0);
    return r ? Zl(yo(s), s.lastChild) : Zl(s, s), s;
  };
}
function yl(t, e) {
  return (function(n, r) {
    var i, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "svg", s = !n.startsWith("<!>"), a = !!(1 & r), l = "<".concat(o, ">").concat(s ? n : "<!>" + n, "</").concat(o, ">");
    return () => {
      if (!i) {
        var u = yo(ay(l));
        if (a) for (i = document.createDocumentFragment(); yo(u); ) i.appendChild(yo(u));
        else i = yo(u);
      }
      var f = i.cloneNode(!0);
      return a ? Zl(yo(f), f.lastChild) : Zl(f, f), f;
    };
  })(t, e, "svg");
}
function hi() {
  var t = pg((arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "") + "");
  return Zl(t, t), t;
}
function Er() {
  var t = document.createDocumentFragment(), e = document.createComment(""), n = pg();
  return t.append(e, n), Zl(e, n), t;
}
function Z(t, e) {
  t !== null && t.before(e);
}
var BB = ["beforeinput", "click", "change", "dblclick", "contextmenu", "focusin", "focusout", "input", "keydown", "keyup", "mousedown", "mousemove", "mouseout", "mouseover", "mouseup", "pointerdown", "pointermove", "pointerout", "pointerover", "pointerup", "touchend", "touchmove", "touchstart"], qB = { formnovalidate: "formNoValidate", ismap: "isMap", nomodule: "noModule", playsinline: "playsInline", readonly: "readOnly", defaultvalue: "defaultValue", defaultchecked: "defaultChecked", srcobject: "srcObject", novalidate: "noValidate", allowfullscreen: "allowFullscreen", disablepictureinpicture: "disablePictureInPicture", disableremoteplayback: "disableRemotePlayback" }, FB = ["touchstart", "touchmove"];
function UB(t) {
  return FB.includes(t);
}
function vt(t, e) {
  var n, r = e == null ? "" : typeof e == "object" ? e + "" : e;
  r !== ((n = t.__t) !== null && n !== void 0 ? n : t.__t = t.nodeValue) && (t.__t = r, t.nodeValue = r + "");
}
function VB(t, e) {
  return (function(n, r) {
    var { target: i, anchor: o, props: s = {}, events: a, context: l } = r;
    (function() {
      if (ca === void 0) {
        ca = window, v_ = /Firefox/.test(navigator.userAgent);
        var p = Element.prototype, m = Node.prototype, v = Text.prototype;
        b_ = la(m, "firstChild").get, y_ = la(m, "nextSibling").get, ek(p) && (p.__click = void 0, p.__className = void 0, p.__attributes = null, p.__style = void 0, p.__e = void 0), ek(v) && (v.__t = void 0);
      }
    })();
    var u = /* @__PURE__ */ new Set(), f = (p) => {
      for (var m = 0; m < p.length; m++) {
        var v = p[m];
        if (!u.has(v)) {
          u.add(v);
          var g = UB(v);
          i.addEventListener(v, nf, { passive: g });
          var b = wc.get(v);
          b === void 0 ? (document.addEventListener(v, nf, { passive: g }), wc.set(v, 1)) : wc.set(v, b + 1);
        }
      }
    };
    f(hb(z_)), yb.add(f);
    var d = void 0, h = (function(p) {
      var m = vl(l_, p, !0);
      return function() {
        var v = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        return new Promise((g) => {
          v.outro ? fu(m, () => {
            Do(m), g(void 0);
          }) : (Do(m), g(void 0));
        });
      };
    })(() => {
      var p = o ?? i.appendChild(pg());
      return Ds(() => {
        l && (mt({}), sr.c = l), a && (s.$$events = a), d = n(p, s) || {}, l && gt();
      }), () => {
        for (var m of u) {
          i.removeEventListener(m, nf);
          var v = wc.get(m);
          --v === 0 ? (document.removeEventListener(m, nf), wc.delete(m)) : wc.set(m, v);
        }
        var g;
        yb.delete(f), p !== o && ((g = p.parentNode) === null || g === void 0 || g.removeChild(p));
      };
    });
    return xb.set(d, h), d;
  })(t, e);
}
var wc = /* @__PURE__ */ new Map(), xb = /* @__PURE__ */ new WeakMap();
function Ti(t) {
  sr === null && vd(), ju && sr.l !== null ? B_(sr).m.push(t) : vb(() => {
    var e = ee(t);
    if (typeof e == "function") return e;
  });
}
function Io(t) {
  sr === null && vd(), Ti(() => () => ee(t));
}
function WB() {
  var t = sr;
  return t === null && vd(), (e, n, r) => {
    var i, o = (i = t.s.$$events) === null || i === void 0 ? void 0 : i[e];
    if (o) {
      var s = ku(o) ? o.slice() : [o], a = (function(u, f) {
        var { bubbles: d = !1, cancelable: h = !1 } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        return new CustomEvent(u, { detail: f, bubbles: d, cancelable: h });
      })(e, n, r);
      for (var l of s) l.call(t.x, a);
      return !a.defaultPrevented;
    }
    return !0;
  };
}
function HB(t) {
  sr === null && vd(), sr.l === null && (function() {
    throw new Error("https://svelte.dev/e/lifecycle_legacy_only");
  })(), B_(sr).b.push(t);
}
function B_(t) {
  var e, n = t.l;
  return (e = n.u) !== null && e !== void 0 ? e : n.u = { a: [], b: [], m: [] };
}
function xe(t, e) {
  var [n, r] = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [0, 0], i = t, o = null, s = null, a = Ei, l = !1, u = function(d) {
    l = !0, f(!(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], d);
  }, f = (d, h) => {
    a !== (a = d) && (a ? (o ? pm(o) : h && (o = Ds(() => h(i))), s && fu(s, () => {
      s = null;
    })) : (s ? pm(s) : h && (s = Ds(() => h(i, [n + 1, r]))), o && fu(o, () => {
      o = null;
    })));
  };
  bl(() => {
    l = !1, e(u), l || f(null, null);
  }, n > 0 ? gd : 0);
}
function q_(t, e, n) {
  var r, i = t, o = Ei, s = Su() ? TB : ry;
  bl(() => {
    s(o, o = e()) && (r && fu(r), r = Ds(() => n(i)));
  });
}
function Kr(t, e) {
  return e;
}
function Ir(t, e, n, r, i) {
  var o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null, s = t, a = { flags: e, items: /* @__PURE__ */ new Map(), first: null };
  !(4 & e) || (s = t.appendChild(pg()));
  var l = null, u = !1, f = Oe(() => {
    var d = n();
    return ku(d) ? d : d == null ? [] : hb(d);
  });
  bl(() => {
    var d = c(f), h = d.length;
    u && h === 0 || (u = h === 0, (function(p, m, v, g, b, x, w) {
      var j, y, k, S, T, M, N = !!(8 & b), z = !!(3 & b), L = p.length, W = m.items, ce = m.first, te = ce, we = null, Ee = [], ae = [];
      if (N) for (M = 0; M < L; M += 1) {
        var re;
        S = x(k = p[M], M), (T = W.get(S)) !== void 0 && ((re = T.a) === null || re === void 0 || re.measure(), (y ?? (y = /* @__PURE__ */ new Set())).add(T));
      }
      for (M = 0; M < L; M += 1) if (S = x(k = p[M], M), (T = W.get(S)) !== void 0) {
        var G;
        if (z && KB(T, k, M, b), (T.e.f & Ka) !== 0 && (pm(T.e), N && ((G = T.a) === null || G === void 0 || G.unfix(), (y ?? (y = /* @__PURE__ */ new Set())).delete(T))), T !== te) {
          if (j !== void 0 && j.has(T)) {
            if (Ee.length < ae.length) {
              var B, ie = ae[0];
              we = ie.prev;
              var R = Ee[0], O = Ee[Ee.length - 1];
              for (B = 0; B < Ee.length; B += 1) lk(Ee[B], ie, v);
              for (B = 0; B < ae.length; B += 1) j.delete(ae[B]);
              Sa(m, R.prev, O.next), Sa(m, we, R), Sa(m, O, ie), te = ie, we = O, M -= 1, Ee = [], ae = [];
            } else j.delete(T), lk(T, te, v), Sa(m, T.prev, T.next), Sa(m, T, we === null ? m.first : we.next), Sa(m, we, T), we = T;
            continue;
          }
          for (Ee = [], ae = []; te !== null && te.k !== S; ) (te.e.f & Ka) === 0 && (j ?? (j = /* @__PURE__ */ new Set())).add(te), ae.push(te), te = te.next;
          if (te === null) continue;
          T = te;
        }
        Ee.push(T), we = T, te = T.next;
      } else
        we = GB(te ? te.e.nodes_start : v, m, we, we === null ? m.first : we.next, k, S, M, g, b, w), W.set(S, we), Ee = [], ae = [], te = we.next;
      if (te !== null || j !== void 0) {
        for (var $ = j === void 0 ? [] : hb(j); te !== null; ) (te.e.f & Ka) === 0 && $.push(te), te = te.next;
        var ne = $.length;
        if (ne > 0) {
          var je = 4 & b && L === 0 ? v : null;
          if (N) {
            for (M = 0; M < ne; M += 1) {
              var J;
              (J = $[M].a) === null || J === void 0 || J.measure();
            }
            for (M = 0; M < ne; M += 1) {
              var H;
              (H = $[M].a) === null || H === void 0 || H.fix();
            }
          }
          (function(ue, P, V, U) {
            for (var me = [], X = P.length, K = 0; K < X; K++) sy(P[K].e, me, !0);
            var rt = X > 0 && me.length === 0 && V !== null;
            if (rt) {
              var Qe = V.parentNode;
              Qe.textContent = "", Qe.append(V), U.clear(), Sa(ue, P[0].prev, P[X - 1].next);
            }
            O_(me, () => {
              for (var Ae = 0; Ae < X; Ae++) {
                var tt = P[Ae];
                rt || (U.delete(tt.k), Sa(ue, tt.prev, tt.next)), Do(tt.e, !rt);
              }
            });
          })(m, $, je, W);
        }
      }
      N && gg(() => {
        if (y !== void 0) for (T of y) {
          var ue;
          (ue = T.a) === null || ue === void 0 || ue.apply();
        }
      }), ar.first = m.first && m.first.e, ar.last = we && we.e;
    })(d, a, s, i, e, r, n), o !== null && (h === 0 ? l ? pm(l) : l = Ds(() => o(s)) : l !== null && fu(l, () => {
      l = null;
    })), c(f));
  });
}
function KB(t, e, n, r) {
  1 & r && gb(t.v, e), 2 & r ? gb(t.i, n) : t.i = n;
}
function GB(t, e, n, r, i, o, s, a, l, u) {
  var f = 1 & l ? 16 & l ? Xl(i) : Q(i, !1, !1) : i, d = 2 & l ? Xl(s) : s, h = { i: d, v: f, k: o, a: null, e: null, prev: n, next: r };
  try {
    return h.e = Ds(() => a(t, f, d, u), !1), h.e.prev = n && n.e, h.e.next = r && r.e, n === null ? e.first = h : (n.next = h, n.e.next = h.e), r !== null && (r.prev = h, r.e.prev = h.e), h;
  } finally {
  }
}
function lk(t, e, n) {
  for (var r = t.next ? t.next.e.nodes_start : n, i = e ? e.e.nodes_start : n, o = t.e.nodes_start; o !== r; ) {
    var s = mg(o);
    i.before(o), o = s;
  }
}
function Sa(t, e, n) {
  e === null ? t.first = n : (e.next = n, e.e.next = n && n.e), n !== null && (n.prev = e, n.e.prev = e && e.e);
}
function F_(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], r = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], i = t, o = "";
  Ie(() => {
    var s, a = ar;
    if (o !== (o = (s = e()) !== null && s !== void 0 ? s : "") && (a.nodes_start !== null && (S_(a.nodes_start, a.nodes_end), a.nodes_start = a.nodes_end = null), o !== "")) {
      var l = o + "";
      n ? l = "<svg>".concat(l, "</svg>") : r && (l = "<math>".concat(l, "</math>"));
      var u = ay(l);
      if ((n || r) && (u = yo(u)), Zl(yo(u), u.lastChild), n || r) for (; yo(u); ) i.before(yo(u));
      else i.before(u);
    }
  });
}
function Pr(t, e, n, r, i) {
  var o, s = (o = e.$$slots) === null || o === void 0 ? void 0 : o[n], a = !1;
  s === !0 && (s = e[n === "default" ? "children" : n], a = !0), s === void 0 ? i !== null && i(t) : s(t, a ? () => r : r);
}
function U_(t, e, n) {
  var r, i, o = t;
  bl(() => {
    r !== (r = e()) && (i && (fu(i), i = null), r && (i = Ds(() => n(o, r))));
  }, gd);
}
function zi(t, e, n) {
  yi(() => {
    var r = ee(() => e(t, n?.()) || {});
    if (n && r != null && r.update) {
      var i = !1, o = {};
      bd(() => {
        var s = n();
        _(s), i && ry(o, s) && (o = s, r.update(s));
      }), i = !0;
    }
    if (r != null && r.destroy) return () => r.destroy();
  });
}
function JB(t, e) {
  var n, r = void 0;
  bl(() => {
    r !== (r = e()) && (n && (Do(n), n = null), r && (n = Ds(() => {
      yi(() => r(t));
    })));
  });
}
function V_(t) {
  var e, n, r = "";
  if (typeof t == "string" || typeof t == "number") r += t;
  else if (typeof t == "object") if (Array.isArray(t)) {
    var i = t.length;
    for (e = 0; e < i; e++) t[e] && (n = V_(t[e])) && (r && (r += " "), r += n);
  } else for (n in t) t[n] && (r && (r += " "), r += n);
  return r;
}
function cl(t) {
  return typeof t == "object" ? (function() {
    for (var e, n, r = 0, i = "", o = arguments.length; r < o; r++) (e = arguments[r]) && (n = V_(e)) && (i && (i += " "), i += n);
    return i;
  })(t) : t ?? "";
}
var ck = [...` 	
\r\f \v\uFEFF`];
function uk(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 && arguments[1] ? " !important;" : ";", n = "";
  for (var r in t) {
    var i = t[r];
    i != null && i !== "" && (n += " " + r + ": " + i + e);
  }
  return n;
}
function $v(t) {
  return t[0] !== "-" || t[1] !== "-" ? t.toLowerCase() : t;
}
function It(t, e, n, r, i, o) {
  var s = t.__className;
  if (s !== n || s === void 0) {
    var a = (function(f, d, h) {
      var p = f == null ? "" : "" + f;
      if (d && (p = p ? p + " " + d : d), h) {
        for (var m in h) if (h[m]) p = p ? p + " " + m : m;
        else if (p.length) for (var v = m.length, g = 0; (g = p.indexOf(m, g)) >= 0; ) {
          var b = g + v;
          g !== 0 && !ck.includes(p[g - 1]) || b !== p.length && !ck.includes(p[b]) ? g = b : p = (g === 0 ? "" : p.substring(0, g)) + p.substring(b + 1);
        }
      }
      return p === "" ? null : p;
    })(n, r, o);
    a == null ? t.removeAttribute("class") : e ? t.className = a : t.setAttribute("class", a), t.__className = n;
  } else if (o && i !== o) for (var l in o) {
    var u = !!o[l];
    i != null && u === !!i[l] || t.classList.toggle(l, u);
  }
  return o;
}
function Pv(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = arguments.length > 2 ? arguments[2] : void 0, r = arguments.length > 3 ? arguments[3] : void 0;
  for (var i in n) {
    var o = n[i];
    e[i] !== o && (n[i] == null ? t.style.removeProperty(i) : t.style.setProperty(i, o, r));
  }
}
function Qo(t, e, n, r) {
  if (t.__style !== e) {
    var i = (function(o, s) {
      if (s) {
        var a, l, u = "";
        if (Array.isArray(s) ? (a = s[0], l = s[1]) : a = s, o) {
          o = String(o).replaceAll(/\s*\/\*.*?\*\/\s*/g, "").trim();
          var f = !1, d = 0, h = !1, p = [];
          a && p.push(...Object.keys(a).map($v)), l && p.push(...Object.keys(l).map($v));
          for (var m = 0, v = -1, g = o.length, b = 0; b < g; b++) {
            var x = o[b];
            if (h ? x === "/" && o[b - 1] === "*" && (h = !1) : f ? f === x && (f = !1) : x === "/" && o[b + 1] === "*" ? h = !0 : x === '"' || x === "'" ? f = x : x === "(" ? d++ : x === ")" && d--, !h && f === !1 && d === 0) {
              if (x === ":" && v === -1) v = b;
              else if (x === ";" || b === g - 1) {
                if (v !== -1) {
                  var w = $v(o.substring(m, v).trim());
                  p.includes(w) || (x !== ";" && b++, u += " " + o.substring(m, b).trim() + ";");
                }
                m = b + 1, v = -1;
              }
            }
          }
        }
        return a && (u += uk(a)), l && (u += uk(l, !0)), (u = u.trim()) === "" ? null : u;
      }
      return o == null ? null : String(o);
    })(e, r);
    i == null ? t.removeAttribute("style") : t.style.cssText = i, t.__style = e;
  } else r && (Array.isArray(r) ? (Pv(t, n?.[0], r[0]), Pv(t, n?.[1], r[1], "important")) : Pv(t, n, r));
  return r;
}
function wb(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
  if (t.multiple) {
    if (e == null) return;
    if (!ku(e)) return void console.warn("https://svelte.dev/e/select_multiple_invalid_value");
    for (var r of t.options) r.selected = e.includes(fk(r));
  } else {
    for (r of t.options)
      if ($B(fk(r), e)) return void (r.selected = !0);
    n && e === void 0 || (t.selectedIndex = -1);
  }
}
function YB(t) {
  var e = new MutationObserver(() => {
    wb(t, t.__value);
  });
  e.observe(t, { childList: !0, subtree: !0, attributes: !0, attributeFilter: ["value"] }), oy(() => {
    e.disconnect();
  });
}
function fk(t) {
  return "__value" in t ? t.__value : t.value;
}
var Mc = Symbol("class"), Ku = Symbol("style"), W_ = Symbol("is custom element"), H_ = Symbol("is html");
function ec(t, e) {
  var n = ly(t);
  n.value !== (n.value = e ?? void 0) && (t.value !== e || e === 0 && t.nodeName === "PROGRESS") && (t.value = e ?? "");
}
function Ln(t, e, n, r) {
  var i = ly(t);
  i[e] !== (i[e] = n) && (e === "loading" && (t[MB] = n), n == null ? t.removeAttribute(e) : typeof n != "string" && K_(t).includes(e) ? t[e] = n : t.setAttribute(e, n));
}
function QB(t, e, n, r) {
  var i, o = ly(t), s = o[W_], a = !o[H_], l = e || {}, u = t.tagName === "OPTION";
  for (var f in e) f in n || (n[f] = null);
  n.class ? n.class = cl(n.class) : (r || n[Mc]) && (n.class = null), n[Ku] && ((i = n.style) !== null && i !== void 0 || (n.style = null));
  var d, h, p, m, v, g, b = K_(t), x = function(j) {
    var y = n[j];
    if (u && j === "value" && y == null) return t.value = t.__value = "", l[j] = y, 0;
    if (j === "class") return d = t.namespaceURI === "http://www.w3.org/1999/xhtml", It(t, d, y, r, e?.[Mc], n[Mc]), l[j] = y, l[Mc] = n[Mc], 0;
    if (j === "style") return Qo(t, y, e?.[Ku], n[Ku]), l[j] = y, l[Ku] = n[Ku], 0;
    if (y === (h = l[j]) && (y !== void 0 || !t.hasAttribute(j)) || (l[j] = y, (p = j[0] + j[1]) === "$$")) return 0;
    if (p === "on") {
      var k = {}, S = "$$" + j, T = j.slice(2);
      if (m = (function(W) {
        return BB.includes(W);
      })(T), (function(W) {
        return W.endsWith("capture") && W !== "gotpointercapture" && W !== "lostpointercapture";
      })(T) && (T = T.slice(0, -7), k.capture = !0), !m && h) {
        if (y != null) return 0;
        t.removeEventListener(T, l[S], k), l[S] = null;
      }
      if (y != null) if (m) t["__".concat(T)] = y, xd([T]);
      else {
        let W = function(ce) {
          l[j].call(this, ce);
        };
        l[S] = L_(T, t, W, k);
      }
      else m && (t["__".concat(T)] = void 0);
    } else if (j === "style") Ln(t, j, y);
    else if (j === "autofocus") (function(W, ce) {
      if (ce) {
        var te = document.body;
        W.autofocus = !0, gg(() => {
          document.activeElement === te && W.focus();
        });
      }
    })(t, !!y);
    else if (s || j !== "__value" && (j !== "value" || y == null)) if (j === "selected" && u) (function(W, ce) {
      ce ? W.hasAttribute("selected") || W.setAttribute("selected", "") : W.removeAttribute("selected");
    })(t, y);
    else if (v = j, a || (v = (function(W) {
      var ce;
      return W = W.toLowerCase(), (ce = qB[W]) !== null && ce !== void 0 ? ce : W;
    })(v)), g = v === "defaultValue" || v === "defaultChecked", y != null || s || g) g || b.includes(v) && (s || typeof y != "string") ? t[v] = y : typeof y != "function" && Ln(t, v, y);
    else if (o[j] = null, v === "value" || v === "checked") {
      var M = t, N = e === void 0;
      if (v === "value") {
        var z = M.defaultValue;
        M.removeAttribute(v), M.defaultValue = z, M.value = M.__value = N ? z : null;
      } else {
        var L = M.defaultChecked;
        M.removeAttribute(v), M.defaultChecked = L, M.checked = !!N && L;
      }
    } else t.removeAttribute(j);
    else t.value = t.__value = y;
  };
  for (var w in n) x(w);
  return l;
}
function jp(t, e) {
  var n = arguments.length > 3 ? arguments[3] : void 0, r = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : Cu, i = (arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : []).map(r), o = void 0, s = {}, a = t.nodeName === "SELECT", l = !1;
  if (bl(() => {
    var f = e(...i.map(c)), d = QB(t, o, f, n);
    for (var h of (l && a && "value" in f && wb(t, f.value), Object.getOwnPropertySymbols(s))) f[h] || Do(s[h]);
    for (var p of Object.getOwnPropertySymbols(f)) {
      var m = f[p];
      p.description !== "@attach" || o && m === o[p] || (s[p] && Do(s[p]), s[p] = Ds(() => JB(t, () => m))), d[p] = m;
    }
    o = d;
  }), a) {
    var u = t;
    yi(() => {
      wb(u, o.value, !0), YB(u);
    });
  }
  l = !0;
}
function ly(t) {
  var e;
  return (e = t.__attributes) !== null && e !== void 0 ? e : t.__attributes = { [W_]: t.nodeName.includes("-"), [H_]: t.namespaceURI === "http://www.w3.org/1999/xhtml" };
}
var dk = /* @__PURE__ */ new Map();
function K_(t) {
  var e, n = dk.get(t.nodeName);
  if (n) return n;
  dk.set(t.nodeName, n = []);
  for (var r = t, i = Element.prototype; i !== r; ) {
    for (var o in e = a_(r)) e[o].set && n.push(o);
    r = ty(r);
  }
  return n;
}
function vm(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : e, r = Su();
  LB(t, "input", (i) => {
    var o = i ? t.defaultValue : t.value;
    if (o = Rv(t) ? Nv(o) : o, n(o), r && o !== (o = e())) {
      var s = t.selectionStart, a = t.selectionEnd;
      t.value = o ?? "", a !== null && (t.selectionStart = s, t.selectionEnd = Math.min(a, t.value.length));
    }
  }), ee(e) == null && t.value && n(Rv(t) ? Nv(t.value) : t.value), bd(() => {
    var i = e();
    Rv(t) && i === Nv(t.value) || (t.type !== "date" || i || t.value) && i !== t.value && (t.value = i ?? "");
  });
}
function Rv(t) {
  var e = t.type;
  return e === "number" || e === "range";
}
function Nv(t) {
  return t === "" ? null : +t;
}
function Ct(t, e, n) {
  var r = la(t, e);
  r && r.set && (t[e] = n, oy(() => {
    t[e] = null;
  }));
}
function hk(t, e) {
  return t === e || t?.[Ms] === e;
}
function pr() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length > 2 ? arguments[2] : void 0;
  return yi(() => {
    var r, i;
    return bd(() => {
      r = i, i = [], ee(() => {
        t !== n(...i) && (e(t, ...i), r && hk(n(...r), t) && e(null, ...r));
      });
    }), () => {
      gg(() => {
        i && hk(n(...i), t) && e(null, ...i);
      });
    };
  }), t;
}
function Ys(t) {
  return function() {
    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
    return n[0].stopPropagation(), t?.apply(this, n);
  };
}
function Oa(t) {
  return function() {
    for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
    return n[0].preventDefault(), t?.apply(this, n);
  };
}
function zt() {
  var t = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], e = sr, n = e.l.u;
  if (n) {
    var r, i = () => _(e.s);
    if (t) {
      var o = 0, s = {}, a = Cu(() => {
        var l = !1, u = e.s;
        for (var f in u) u[f] !== s[f] && (s[f] = u[f], l = !0);
        return l && o++, o;
      });
      i = () => c(a);
    }
    n.b.length && (r = () => {
      pk(e, i), hm(n.b);
    }, x_(), vl(2097160, r, !0)), vb(() => {
      var l = ee(() => n.m.map(OB));
      return () => {
        for (var u of l) typeof u == "function" && u();
      };
    }), n.a.length && vb(() => {
      pk(e, i), hm(n.a);
    });
  }
}
function pk(t, e) {
  if (t.l.s) for (var n of t.l.s) c(n);
  e();
}
function yg(t) {
  var e = Xl(0);
  return function() {
    return arguments.length === 1 ? (C(e, c(e) + 1), arguments[0]) : (c(e), t());
  };
}
function rf(t, e) {
  var n, r = (n = t.$$events) === null || n === void 0 ? void 0 : n[e.type], i = ku(r) ? r.slice() : r == null ? [] : [r];
  for (var o of i) o.call(this, e);
}
var Wh = !1, XB = { get(t, e) {
  if (!t.exclude.includes(e)) return c(t.version), e in t.special ? t.special[e]() : t.props[e];
}, set(t, e, n) {
  if (!(e in t.special)) {
    var r = ar;
    try {
      ll(t.parent_effect), t.special[e] = E({ get [e]() {
        return t.props[e];
      } }, e, 4);
    } finally {
      ll(r);
    }
  }
  return t.special[e](n), ik(t.version), !0;
}, getOwnPropertyDescriptor(t, e) {
  if (!t.exclude.includes(e)) return e in t.props ? { enumerable: !0, configurable: !0, value: t.props[e] } : void 0;
}, deleteProperty: (t, e) => (t.exclude.includes(e) || (t.exclude.push(e), ik(t.version)), !0), has: (t, e) => !t.exclude.includes(e) && e in t.props, ownKeys: (t) => Reflect.ownKeys(t.props).filter((e) => !t.exclude.includes(e)) };
function Hh(t, e) {
  return new Proxy({ props: t, exclude: e, special: {}, version: Xl(0), parent_effect: ar }, XB);
}
var ZB = { get(t, e) {
  for (var n = t.props.length; n--; ) {
    var r = t.props[n];
    if (Hu(r) && (r = r()), typeof r == "object" && r !== null && e in r) return r[e];
  }
}, set(t, e, n) {
  for (var r = t.props.length; r--; ) {
    var i = t.props[r];
    Hu(i) && (i = i());
    var o = la(i, e);
    if (o && o.set) return o.set(n), !0;
  }
  return !1;
}, getOwnPropertyDescriptor(t, e) {
  for (var n = t.props.length; n--; ) {
    var r = t.props[n];
    if (Hu(r) && (r = r()), typeof r == "object" && r !== null && e in r) {
      var i = la(r, e);
      return i && !i.configurable && (i.configurable = !0), i;
    }
  }
}, has(t, e) {
  if (e === Ms || e === c_) return !1;
  for (var n of t.props) if (Hu(n) && (n = n()), n != null && e in n) return !0;
  return !1;
}, ownKeys(t) {
  var e = [];
  for (var n of t.props) if (Hu(n) && (n = n()), n) {
    for (var r in n) e.includes(r) || e.push(r);
    for (var i of Object.getOwnPropertySymbols(n)) e.includes(i) || e.push(i);
  }
  return e;
} };
function Ga() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
  return new Proxy({ props: e }, ZB);
}
function E(t, e, n, r) {
  var i, o, s = !ju || !!(2 & n), a = !!(8 & n), l = !!(16 & n), u = r, f = !0, d = () => (f && (f = !1, u = l ? ee(r) : r), u);
  if (a) {
    var h, p, m = Ms in t || c_ in t;
    i = (h = (p = la(t, e)) === null || p === void 0 ? void 0 : p.set) !== null && h !== void 0 ? h : m && e in t ? (y) => t[e] = y : void 0;
  }
  var v, g = !1;
  if (a ? [o, g] = (function(y) {
    var k = Wh;
    try {
      return Wh = !1, [y(), Wh];
    } finally {
      Wh = k;
    }
  })(() => t[e]) : o = t[e], o === void 0 && r !== void 0 && (o = d(), i && (s && (function() {
    throw new Error("https://svelte.dev/e/props_invalid_value");
  })(), i(o))), v = s ? () => {
    var y = t[e];
    return y === void 0 ? d() : (f = !0, y);
  } : () => {
    var y = t[e];
    return y !== void 0 && (u = void 0), y === void 0 ? u : y;
  }, s && !(4 & n)) return v;
  if (i) {
    var b = t.$$legacy;
    return function(y, k) {
      return arguments.length > 0 ? (s && k && !b && !g || i(k ? v() : y), y) : v();
    };
  }
  var x = !1, w = (1 & n ? Cu : Oe)(() => (x = !1, v()));
  a && c(w);
  var j = ar;
  return function(y, k) {
    if (arguments.length > 0) {
      var S = k ? c(w) : s && a ? Ic(y) : y;
      return C(w, S), x = !0, u !== void 0 && (u = S), y;
    }
    return sl && x || (j.f & ny) !== 0 ? w.v : c(w);
  };
}
function ui(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : (function(r) {
    var i = (function(o) {
      try {
        if (typeof window < "u" && window.localStorage !== void 0) return window.localStorage[o];
      } catch {
      }
    })("debug");
    return i != null && i.endsWith("*") ? r.startsWith(i.slice(0, -1)) : r === i;
  })(t);
  if (!e) return eq;
  var n = (function(r) {
    for (var i = 0, o = 0; o < r.length; o++) i = (i << 5) - i + r.charCodeAt(o), i |= 0;
    return mk[Math.abs(i) % mk.length];
  })(t);
  return function() {
    for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++) i[o] = arguments[o];
    console.log("%c".concat(t), "color:".concat(n), ...i);
  };
}
function eq() {
}
var mk = ["#0000CC", "#0099FF", "#009400", "#8dd200", "#CCCC00", "#CC9933", "#ae04e7", "#ff35d7", "#FF3333", "#FF6600", "#FF9933", "#FFCC33"], tq = 0;
function zc() {
  return ++tq;
}
function xi(t) {
  return parseInt(t, 10);
}
function cy(t) {
  return nq.test(t);
}
var nq = /^-?(?:0|[1-9]\d*)(?:\.\d+)?(?:[eE][+-]?\d+)?$/;
function Pn(t) {
  return typeof t == "object" && t !== null && (t.constructor === void 0 || t.constructor.name === "Object");
}
function Or(t) {
  return typeof t == "object" && t !== null && (t.constructor === void 0 || t.constructor.name === "Object" || t.constructor.name === "Array");
}
function rq(t) {
  return t === !0 || t === !1;
}
function jb(t) {
  if (typeof t == "number") return t > 9466848e5 && isFinite(t) && Math.floor(t) === t && !isNaN(new Date(t).valueOf());
  if (typeof t == "bigint") return jb(Number(t));
  try {
    var e = t && t.valueOf();
    if (e !== t) return jb(e);
  } catch {
    return !1;
  }
  return !1;
}
function G_(t) {
  (Kh = Kh || window.document.createElement("div")).style.color = "", Kh.style.color = t;
  var e = Kh.style.color;
  return e !== "" ? e.replace(/\s+/g, "").toLowerCase() : void 0;
}
var Kh = void 0;
function iq(t) {
  return typeof t == "string" && t.length < 99 && !!G_(t);
}
function uy(t, e) {
  if (typeof t == "number" || typeof t == "string" || typeof t == "boolean" || t === void 0) return typeof t;
  if (typeof t == "bigint") return "number";
  if (t === null) return "null";
  if (Array.isArray(t)) return "array";
  if (Pn(t)) return "object";
  var n = e.stringify(t);
  return n && cy(n) ? "number" : n === "true" || n === "false" ? "boolean" : n === "null" ? "null" : "unknown";
}
var oq = /^https?:\/\/\S+$/;
function xg(t) {
  return typeof t == "string" && oq.test(t);
}
function Ou(t, e) {
  if (t === "") return "";
  var n = t.trim();
  return n === "null" ? null : n === "true" || n !== "false" && (cy(n) ? e.parse(n) : t);
}
var sq = [];
function gk(t, e) {
  if (t.length !== e.length) return !1;
  for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
function kb(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], n = {};
  if (!Array.isArray(t)) throw new TypeError("Array expected");
  function r(s, a) {
    (!Array.isArray(s) && !Pn(s) || e && a.length > 0) && (n[bt(a)] = !0), Pn(s) && Object.keys(s).forEach((l) => {
      r(s[l], a.concat(l));
    });
  }
  for (var i = Math.min(t.length, 1e4), o = 0; o < i; o++)
    r(t[o], sq);
  return Object.keys(n).sort().map(io);
}
function J_(t, e, n) {
  if (!(e <= t)) for (var r = t; r < e; r++) n(r);
}
function bm(t, e) {
  return t.length > e ? t.slice(0, e) : t;
}
function vk(t) {
  return De({}, t);
}
function bk(t) {
  return Object.values(t);
}
function yk(t, e, n, r) {
  var i = t.slice(0), o = i.splice(e, n);
  return i.splice.apply(i, [e + r, 0, ...o]), i;
}
function aq(t, e, n) {
  return t.slice(0, e).concat(n).concat(t.slice(e));
}
function wd(t, e) {
  try {
    return e.parse(t);
  } catch {
    return e.parse(_s(t));
  }
}
function Y_(t, e) {
  try {
    return wd(t, e);
  } catch {
    return;
  }
}
function jd(t, e) {
  t = t.replace(X_, "");
  try {
    return e(t);
  } catch {
  }
  try {
    return e("{" + t + "}");
  } catch {
  }
  try {
    return e("[" + t + "]");
  } catch {
  }
  throw new Error("Failed to parse partial JSON");
}
function Q_(t) {
  t = t.replace(X_, "");
  try {
    return _s(t);
  } catch {
  }
  try {
    var e = _s("[" + t + "]");
    return e.substring(1, e.length - 1);
  } catch {
  }
  try {
    var n = _s("{" + t + "}");
    return n.substring(1, n.length - 1);
  } catch {
  }
  throw new Error("Failed to repair partial JSON");
}
var X_ = /,\s*$/;
function du(t, e) {
  var n = wk.exec(e);
  if (n) {
    var r = xi(n[2]), i = (function(p, m) {
      for (var v = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, g = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : p.length, b = 0, x = v; x < g; x++) p.charAt(x) === m && b++;
      return b;
    })(t, `
`, 0, r), o = r - t.lastIndexOf(`
`, r) - 1;
    return { position: r, line: i, column: o, message: e.replace(wk, () => "line ".concat(i + 1, " column ").concat(o + 1)) };
  }
  var s = fq.exec(e), a = s ? xi(s[1]) : void 0, l = a !== void 0 ? a - 1 : void 0, u = dq.exec(e), f = u ? xi(u[1]) : void 0, d = f !== void 0 ? f - 1 : void 0, h = l !== void 0 && d !== void 0 ? (function(p, m, v) {
    for (var g = p.indexOf(`
`), b = 1; b < m && g !== -1; ) g = p.indexOf(`
`, g + 1), b++;
    return g !== -1 ? g + v + 1 : void 0;
  })(t, l, d) : void 0;
  return { position: h, line: l, column: d, message: e.replace(/^JSON.parse: /, "").replace(/ of the JSON data$/, "") };
}
function Dv(t, e) {
  try {
    var n = rC.parse(t), r = bt(e), i = n.pointers[r];
    if (i) return { path: e, line: i.key ? i.key.line : i.value ? i.value.line : 0, column: i.key ? i.key.column : i.value ? i.value.column : 0, from: i.key ? i.key.pos : i.value ? i.value.pos : 0, to: i.keyEnd ? i.keyEnd.pos : i.valueEnd ? i.valueEnd.pos : 0 };
  } catch (o) {
    console.error(o);
  }
  return { path: e, line: 0, column: 0, from: 0, to: 0 };
}
function Iv(t) {
  return Pn(t) ? t.json !== void 0 ? t.text !== void 0 ? 'Content must contain either a property "json" or a property "text" but not both' : void 0 : t.text === void 0 ? 'Content must contain either a property "json" or a property "text"' : typeof t.text != "string" ? 'Content "text" property must be a string containing a JSON document. Did you mean to use the "json" property instead?' : void 0 : "Content must be an object";
}
function Vf(t) {
  return Pn(t) && typeof t.text == "string";
}
function Wf(t) {
  return Pn(t) && t.json !== void 0;
}
function lq(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : JSON;
  return Vf(t) ? t : { text: n.stringify(t.json, null, e) };
}
function xk(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : JSON;
  return Wf(t) ? t : { json: e.parse(t.text) };
}
function Sb(t, e, n) {
  return lq(t, e, n).text;
}
function cq(t, e) {
  return uq(t, e) > e;
}
function uq(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1 / 0;
  if (Vf(t)) return t.text.length;
  var n = t.json, r = 0;
  return (function i(o) {
    if (Array.isArray(o)) {
      if ((r += o.length - 1 + 2) > e) return;
      for (var s = 0; s < o.length; s++)
        if (i(o[s]), r > e) return;
    } else if (Pn(o)) {
      var a = Object.keys(o);
      r += 2 + a.length + (a.length - 1);
      for (var l = 0; l < a.length; l++) {
        var u = a[l], f = o[u];
        r += u.length + 2, i(f);
      }
    } else r += typeof o == "string" ? o.length + 2 : String(o).length;
  })(n), r;
}
var wk = /(position|char) (\d+)/, fq = /line (\d+)/, dq = /column (\d+)/;
function Z_(t, e) {
  return t.parse === e.parse && t.stringify === e.stringify;
}
function jk(t) {
  var e = t.substring(0, 999).trim();
  return !e.includes(`
`) && hq.test(e);
}
var Hr, Qn, Ho, Xo, Zo, Eo, Ja, hq = /[,:]\S/;
function fy(t) {
  var { escapeControlCharacters: e, escapeUnicodeCharacters: n } = t;
  return e ? n ? pq : mq : n ? gq : vq;
}
(function(t) {
  t.text = "text", t.tree = "tree", t.table = "table";
})(Hr || (Hr = {})), (function(t) {
  t.after = "after", t.inside = "inside", t.key = "key", t.value = "value", t.multi = "multi", t.text = "text";
})(Qn || (Qn = {})), (function(t) {
  t.after = "after", t.key = "key", t.value = "value", t.inside = "inside";
})(Ho || (Ho = {})), (function(t) {
  t.info = "info", t.warning = "warning", t.error = "error";
})(Xo || (Xo = {})), (function(t) {
  t.key = "key", t.value = "value";
})(Zo || (Zo = {})), (function(t) {
  t.asc = "asc", t.desc = "desc";
})(Eo || (Eo = {})), (function(t) {
  t.no = "no", t.self = "self", t.nextInside = "nextInside";
})(Ja || (Ja = {}));
var pq = { escapeValue: (t) => eA(rA(String(t))), unescapeValue: (t) => iA(tA(t)) }, mq = { escapeValue: (t) => rA(String(t)), unescapeValue: (t) => iA(t) }, gq = { escapeValue: (t) => eA(String(t)), unescapeValue: (t) => tA(t) }, vq = { escapeValue: (t) => String(t), unescapeValue: (t) => t };
function eA(t) {
  return t.replace(/[^\x20-\x7F]/g, (e) => {
    var n;
    return e === "\b" || e === "\f" || e === `
` || e === "\r" || e === "	" ? e : "\\u" + ("000" + ((n = e.codePointAt(0)) === null || n === void 0 ? void 0 : n.toString(16))).slice(-4);
  });
}
function tA(t) {
  return t.replace(/\\u[a-fA-F0-9]{4}/g, (e) => {
    try {
      var n = JSON.parse('"' + e + '"');
      return nA[n] || n;
    } catch {
      return e;
    }
  });
}
var nA = { '"': '\\"', "\\": "\\\\", "\b": "\\b", "\f": "\\f", "\n": "\\n", "\r": "\\r", "	": "\\t" }, bq = { '\\"': '"', "\\\\": "\\", "\\/": "/", "\\b": "\b", "\\f": "\f", "\\n": `
`, "\\r": "\r", "\\t": "	" };
function rA(t) {
  return t.replace(/["\b\f\n\r\t\\]/g, (e) => nA[e] || e);
}
function iA(t) {
  return t.replace(/\\["bfnrt\\]/g, (e) => bq[e] || e);
}
function hu(t) {
  return typeof t != "string" ? String(t) : t.endsWith(`
`) ? t + `
` : t;
}
function oA(t, e) {
  return Eu(t, (n) => n.nodeName.toUpperCase() === e.toUpperCase());
}
function qa(t, e, n) {
  return Eu(t, (r) => (function(i, o, s) {
    return typeof i.getAttribute == "function" && i.getAttribute(o) === s;
  })(r, e, n));
}
function Eu(t, e) {
  return !!dy(t, e);
}
function dy(t, e) {
  for (var n = t; n && !e(n); ) n = n.parentNode;
  return n;
}
function kd(t) {
  var e, n;
  return (e = t == null || (n = t.ownerDocument) === null || n === void 0 ? void 0 : n.defaultView) !== null && e !== void 0 ? e : void 0;
}
function hy(t) {
  var e = kd(t), n = e?.document.activeElement;
  return !!n && Eu(n, (r) => r === t);
}
function sA(t, e) {
  return dy(t, (n) => n.nodeName === e);
}
function zv(t) {
  return qa(t, "data-type", "selectable-key") ? Qn.key : qa(t, "data-type", "selectable-value") ? Qn.value : qa(t, "data-type", "insert-selection-area-inside") ? Qn.inside : qa(t, "data-type", "insert-selection-area-after") ? Qn.after : Qn.multi;
}
function kp(t) {
  return encodeURIComponent(bt(t));
}
function aA(t) {
  var e, n = dy(t, (i) => !(i == null || !i.hasAttribute) && i.hasAttribute("data-path")), r = (e = n?.getAttribute("data-path")) !== null && e !== void 0 ? e : void 0;
  return r ? io(decodeURIComponent(r)) : void 0;
}
function yq(t) {
  var { allElements: e, currentElement: n, direction: r, hasPrio: i = () => !0, margin: o = 10 } = t, s = I5(e.filter(function(b) {
    var x = b.getBoundingClientRect();
    return x.width > 0 && x.height > 0;
  }), l), a = l(n);
  function l(b) {
    var x = b.getBoundingClientRect();
    return { x: x.left + x.width / 2, y: x.top + x.height / 2, rect: x, element: b };
  }
  function u(b, x) {
    var w = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, j = b.x - x.x, y = (b.y - x.y) * w;
    return Math.sqrt(j * j + y * y);
  }
  var f = (b) => u(b, a);
  if (r === "Left" || r === "Right") {
    var d = r === "Left" ? s.filter((b) => {
      return x = a, b.rect.left + o < x.rect.left;
      var x;
    }) : s.filter((b) => {
      return x = a, b.rect.right > x.rect.right + o;
      var x;
    }), h = d.filter((b) => {
      return x = b, w = a, Math.abs(x.y - w.y) < o;
      var x, w;
    }), p = Pd(h, f) || Pd(d, (b) => u(b, a, 10));
    return p?.element;
  }
  if (r === "Up" || r === "Down") {
    var m = r === "Up" ? s.filter((b) => {
      return x = a, b.y + o < x.y;
      var x;
    }) : s.filter((b) => {
      return x = a, b.y > x.y + o;
      var x;
    }), v = m.filter((b) => i(b.element)), g = Pd(v, f) || Pd(m, f);
    return g?.element;
  }
}
function py() {
  var t, e, n, r;
  return typeof navigator < "u" && (t = (e = (n = navigator) === null || n === void 0 || (n = n.platform) === null || n === void 0 ? void 0 : n.toUpperCase().includes("MAC")) !== null && e !== void 0 ? e : (r = navigator) === null || r === void 0 || (r = r.userAgentData) === null || r === void 0 || (r = r.platform) === null || r === void 0 ? void 0 : r.toUpperCase().includes("MAC")) !== null && t !== void 0 && t;
}
function ga(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "+", n = [];
  my(t, arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : py) && n.push("Ctrl"), t.altKey && n.push("Alt"), t.shiftKey && n.push("Shift");
  var r = t.key.length === 1 ? t.key.toUpperCase() : t.key;
  return r in xq || n.push(r), n.join(e);
}
function my(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : py;
  return t.ctrlKey || t.metaKey && e();
}
var xq = { Ctrl: !0, Command: !0, Control: !0, Alt: !0, Option: !0, Shift: !0 };
function Tt(t, e) {
  e === void 0 && (e = {});
  var n = e.insertAt;
  if (t && typeof document < "u") {
    var r = document.head || document.getElementsByTagName("head")[0], i = document.createElement("style");
    i.type = "text/css", n === "top" && r.firstChild ? r.insertBefore(i, r.firstChild) : r.appendChild(i), i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t));
  }
}
Tt(`.jse-absolute-popup.svelte-1r8q3m8 {
  position: relative;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
  z-index: 1001;
}
.jse-absolute-popup.svelte-1r8q3m8 .jse-hidden-input:where(.svelte-1r8q3m8) {
  position: fixed;
  left: 0;
  top: 0;
  width: 0;
  height: 0;
  padding: 0;
  margin: 0;
  border: none;
  outline: none;
  overflow: hidden;
}
.jse-absolute-popup.svelte-1r8q3m8 .jse-absolute-popup-content:where(.svelte-1r8q3m8) {
  position: absolute;
}`);
var wq = pe('<div class="jse-absolute-popup-content svelte-1r8q3m8"><input type="text" readonly="" tabindex="-1" class="jse-hidden-input svelte-1r8q3m8"/> <!></div>'), jq = pe('<div role="none" class="jse-absolute-popup svelte-1r8q3m8"><!></div>');
function kq(t, e) {
  mt(e, !1);
  var n = E(e, "popup", 8), r = E(e, "closeAbsolutePopup", 8), i = Q(), o = Q();
  function s(d) {
    n().options && n().options.closeOnOuterClick && !Eu(d.target, (h) => h === c(i)) && r()(n().id);
  }
  function a(d) {
    ga(d) === "Escape" && (d.preventDefault(), d.stopPropagation(), r()(n().id));
  }
  Ti(function() {
    c(o) && c(o).focus();
  }), zt();
  var l = jq();
  Pe("mousedown", ca, function(d) {
    s(d);
  }, !0), Pe("keydown", ca, a, !0), Pe("wheel", ca, function(d) {
    s(d);
  }, !0);
  var u = Y(l), f = (d) => {
    var h = wq(), p = Y(h);
    pr(p, (m) => C(o, m), () => c(o)), U_(le(p, 2), () => n().component, (m, v) => {
      v(m, Ga(() => n().props));
    }), Ie((m) => Qo(h, m), [() => (c(i), _(n()), ee(() => (function(m, v) {
      var g = m.getBoundingClientRect(), { left: b, top: x, positionAbove: w, positionLeft: j } = (function() {
        if (v.anchor) {
          var { anchor: y, width: k = 0, height: S = 0, offsetTop: T = 0, offsetLeft: M = 0, position: N } = v, { left: z, top: L, bottom: W, right: ce } = y.getBoundingClientRect(), te = N === "top" || L + S > window.innerHeight && L > S, we = N === "left" || z + k > window.innerWidth && z > k;
          return { left: we ? ce - M : z + M, top: te ? L - T : W + T, positionAbove: te, positionLeft: we };
        }
        if (typeof v.left == "number" && typeof v.top == "number") {
          var { left: Ee, top: ae, width: re = 0, height: G = 0 } = v;
          return { left: Ee, top: ae, positionAbove: ae + G > window.innerHeight && ae > G, positionLeft: Ee + re > window.innerWidth && Ee > re };
        }
        throw new Error('Invalid config: pass either "left" and "top", or pass "anchor"');
      })();
      return (w ? "bottom: ".concat(g.top - x, "px;") : "top: ".concat(x - g.top, "px;")) + (j ? "right: ".concat(g.left - b, "px;") : "left: ".concat(b - g.left, "px;"));
    })(c(i), n().options)))], Oe), Z(d, h);
  };
  xe(u, (d) => {
    c(i) && d(f);
  }), pr(l, (d) => C(i, d), () => c(i)), Pe("mousedown", l, function(d) {
    d.stopPropagation();
  }), Pe("keydown", l, a), Z(t, l), gt();
}
var Sq = pe("<!> <!>", 1);
function Cb(t, e) {
  mt(e, !1);
  var n, r, i = ui("jsoneditor:AbsolutePopup"), o = Q([], !0);
  function s(u) {
    var f = c(o).findIndex((h) => h.id === u);
    if (f !== -1) {
      var d = c(o)[f];
      d.options.onClose && d.options.onClose(), C(o, c(o).filter((h) => h.id !== u));
    }
  }
  n = "absolute-popup", r = { openAbsolutePopup: function(u, f, d) {
    i("open...", f, d);
    var h = { id: zc(), component: u, props: f || {}, options: d || {} };
    return C(o, [...c(o), h]), h.id;
  }, closeAbsolutePopup: s }, h_().set(n, r), de(() => c(o), () => {
    i("popups", c(o));
  }), Bn(), zt(!0);
  var a = Sq(), l = wt(a);
  Ir(l, 1, () => c(o), Kr, (u, f) => {
    kq(u, { get popup() {
      return c(f);
    }, closeAbsolutePopup: s });
  }), Pr(le(l, 2), e, "default", {}, null), Z(t, a), gt();
}
function Sd(t, e) {
  for (var n = new Set(e), r = t.replace(/ \(copy( \d+)?\)$/, ""), i = t, o = 1; n.has(i); ) {
    var s = "copy" + (o > 1 ? " " + o : "");
    i = "".concat(r, " (").concat(s, ")"), o++;
  }
  return i;
}
function ta(t, e) {
  var n = e - 3;
  return t.length > e ? t.substring(0, n) + "..." : t;
}
function Cq(t) {
  if (t === "") return "";
  var e = t.toLowerCase();
  if (e === "null") return null;
  if (e === "true") return !0;
  if (e === "false") return !1;
  if (e !== "undefined") {
    var n = Number(t), r = parseFloat(t);
    return isNaN(n) || isNaN(r) ? t : n;
  }
}
var Oq = { id: "jsonquery", name: "JSONQuery", description: `
<p>
  Enter a <a href="https://jsonquerylang.org" target="_blank" 
  rel="noopener noreferrer">JSON Query</a> function to filter, sort, or transform the data.
  You can use functions like <code>get</code>, <code>filter</code>,
  <code>sort</code>, <code>pick</code>, <code>groupBy</code>, <code>uniq</code>, etcetera. 
  Example query: <code>filter(.age >= 18)</code>
</p>
`, createQuery: function(t, e) {
  var { filter: n, sort: r, projection: i } = e, o = [];
  n && n.path && n.relation && n.value && o.push(["filter", [(s = n.relation, qC("1 ".concat(s, " 1"))[0]), Gh(n.path), Cq(n.value)]]);
  var s;
  return r && r.path && r.direction && o.push(["sort", Gh(r.path), r.direction === "desc" ? "desc" : "asc"]), i && i.paths && (i.paths.length > 1 ? o.push(["pick", ...i.paths.map(Gh)]) : o.push(["map", Gh(i.paths[0])])), S6(["pipe", ...o]);
}, executeQuery: function(t, e, n) {
  var r = Z_(n, JSON) ? t : (function(i) {
    var o = n.stringify(i);
    return o !== void 0 ? JSON.parse(o) : void 0;
  })(t);
  return e.trim() !== "" ? C6(r, e) : r;
} };
function Gh(t) {
  return ["get", ...t];
}
var Eq = yl("<g><!></g>");
function _q(t, e) {
  mt(e, !1);
  var n = 870711, r = Q(""), i = E(e, "data", 8);
  function o(a) {
    if (!a || !a.raw) return "";
    var l = a.raw, u = {};
    return l = l.replace(/\s(?:xml:)?id=["']?([^"')\s]+)/g, (f, d) => {
      var h = "fa-".concat((n += 1).toString(16));
      return u[d] = h, ' id="'.concat(h, '"');
    }), l = l.replace(/#(?:([^'")\s]+)|xpointer\(id\((['"]?)([^')]+)\2\)\))/g, (f, d, h, p) => {
      var m = d || p;
      return m && u[m] ? "#".concat(u[m]) : f;
    }), l;
  }
  de(() => _(i()), () => {
    C(r, o(i()));
  }), Bn();
  var s = Eq();
  F_(Y(s), () => c(r), !0), Z(t, s), gt();
}
Tt(`
  .fa-icon.svelte-1mc5hvj {
    display: inline-block;
    fill: currentColor;
  }
  .fa-flip-horizontal.svelte-1mc5hvj {
    transform: scale(-1, 1);
  }
  .fa-flip-vertical.svelte-1mc5hvj {
    transform: scale(1, -1);
  }
  .fa-spin.svelte-1mc5hvj {
    animation: svelte-1mc5hvj-fa-spin 1s 0s infinite linear;
  }
  .fa-inverse.svelte-1mc5hvj {
    color: #fff;
  }
  .fa-pulse.svelte-1mc5hvj {
    animation: svelte-1mc5hvj-fa-spin 1s infinite steps(8);
  }
  @keyframes svelte-1mc5hvj-fa-spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
`);
var Aq = yl("<svg><!></svg>"), Mq = yl("<path></path>"), Tq = yl("<polygon></polygon>"), $q = yl("<!><!><!>", 1);
function gn(t, e) {
  var n = Hh(e, ["children", "$$slots", "$$events", "$$legacy"]), r = Hh(n, ["class", "data", "scale", "spin", "inverse", "pulse", "flip", "label", "style"]);
  mt(e, !1);
  var i = E(e, "class", 8, ""), o = E(e, "data", 8), s = Q(), a = E(e, "scale", 8, 1), l = E(e, "spin", 8, !1), u = E(e, "inverse", 8, !1), f = E(e, "pulse", 8, !1), d = E(e, "flip", 8, void 0), h = E(e, "label", 8, ""), p = E(e, "style", 8, ""), m = Q(10), v = Q(10), g = Q(), b = Q();
  function x() {
    var j = 1;
    return a() !== void 0 && (j = Number(a())), isNaN(j) || j <= 0 ? (console.warn('Invalid prop: prop "scale" should be a number over 0.'), 1) : 1 * j;
  }
  function w() {
    return c(s) ? Math.max(c(s).width, c(s).height) / 16 : 1;
  }
  de(() => (_(o()), _(p()), _(a())), () => {
    C(s, (function(j) {
      var y;
      if (j) {
        if (!("definition" in j)) {
          if ("iconName" in j && "icon" in j) {
            j.iconName;
            var [k, S, , , T] = j.icon;
            y = { width: k, height: S, paths: (Array.isArray(T) ? T : [T]).map((M) => ({ d: M })) };
          } else y = j[Object.keys(j)[0]];
          return y;
        }
        console.error("`import faIconName from '@fortawesome/package-name/faIconName` not supported - Please use `import { faIconName } from '@fortawesome/package-name/faIconName'` instead");
      }
    })(o())), p(), a(), C(m, c(s) ? c(s).width / w() * x() : 0), C(v, c(s) ? c(s).height / w() * x() : 0), C(g, (function() {
      var j = "";
      p() !== null && (j += p());
      var y = x();
      return y === 1 ? j.length === 0 ? "" : j : (j === "" || j.endsWith(";") || (j += "; "), "".concat(j, "font-size: ").concat(y, "em"));
    })()), C(b, c(s) ? "0 0 ".concat(c(s).width, " ").concat(c(s).height) : "0 0 ".concat(c(m), " ").concat(c(v)));
  }), Bn(), zt(), (function(j, y) {
    var k = Hh(y, ["children", "$$slots", "$$events", "$$legacy"]), S = Hh(k, ["class", "width", "height", "box", "spin", "inverse", "pulse", "flip", "style", "label"]), T = E(y, "class", 8, ""), M = E(y, "width", 8), N = E(y, "height", 8), z = E(y, "box", 8, "0 0 0 0"), L = E(y, "spin", 8, !1), W = E(y, "inverse", 8, !1), ce = E(y, "pulse", 8, !1), te = E(y, "flip", 8, "none"), we = E(y, "style", 8, ""), Ee = E(y, "label", 8, ""), ae = Aq();
    jp(ae, (re) => {
      var G;
      return De(De({ version: "1.1", class: "fa-icon ".concat((G = T()) !== null && G !== void 0 ? G : ""), width: M(), height: N(), "aria-label": Ee(), role: Ee() ? "img" : "presentation", viewBox: z(), style: we() }, S), {}, { [Mc]: re });
    }, [() => ({ "fa-spin": L(), "fa-pulse": ce(), "fa-inverse": W(), "fa-flip-horizontal": te() === "horizontal", "fa-flip-vertical": te() === "vertical" })], "svelte-1mc5hvj"), Pr(Y(ae), y, "default", {}, null), Z(j, ae);
  })(t, Ga({ get label() {
    return h();
  }, get width() {
    return c(m);
  }, get height() {
    return c(v);
  }, get box() {
    return c(b);
  }, get style() {
    return c(g);
  }, get spin() {
    return l();
  }, get flip() {
    return d();
  }, get inverse() {
    return u();
  }, get pulse() {
    return f();
  }, get class() {
    return i();
  } }, () => r, { children: (j, y) => {
    var k = Er();
    Pr(wt(k), e, "default", {}, (S) => {
      var T = $q(), M = wt(T);
      Ir(M, 1, () => (c(s), ee(() => {
        var W;
        return ((W = c(s)) === null || W === void 0 ? void 0 : W.paths) || [];
      })), Kr, (W, ce) => {
        var te = Mq();
        jp(te, () => De({}, c(ce))), Z(W, te);
      });
      var N = le(M);
      Ir(N, 1, () => (c(s), ee(() => {
        var W;
        return ((W = c(s)) === null || W === void 0 ? void 0 : W.polygons) || [];
      })), Kr, (W, ce) => {
        var te = Tq();
        jp(te, () => De({}, c(ce))), Z(W, te);
      });
      var z = le(N), L = (W) => {
        _q(W, { get data() {
          return c(s);
        }, set data(ce) {
          C(s, ce);
        }, $$legacy: !0 });
      };
      xe(z, (W) => {
        c(s), ee(() => {
          var ce;
          return (ce = c(s)) === null || ce === void 0 ? void 0 : ce.raw;
        }) && W(L);
      }), Z(S, T);
    }), Z(j, k);
  }, $$slots: { default: !0 } })), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-boolean-toggle.svelte-1ryp01u {
  padding: 0;
  margin: 1px 0 0;
  vertical-align: top;
  display: inline-flex;
  color: var(--jse-value-color-boolean, #ff8c00);
}

.jse-boolean-toggle.svelte-1ryp01u:not(.jse-readonly) {
  cursor: pointer;
}`);
var Pq = pe('<div role="checkbox" tabindex="-1"><!></div>');
function Rq(t, e) {
  mt(e, !1);
  var n = E(e, "path", 9), r = E(e, "value", 9), i = E(e, "readOnly", 9), o = E(e, "onPatch", 9), s = E(e, "focus", 9);
  zt(!0);
  var a, l = Pq(), u = Y(l), f = Oe(() => r() === !0 ? FC : UC);
  gn(u, { get data() {
    return c(f);
  } }), Ie((d) => {
    Ln(l, "aria-checked", r() === !0), a = It(l, 1, "jse-boolean-toggle svelte-1ryp01u", null, a, d), Ln(l, "title", i() ? "Boolean value ".concat(r()) : "Click to toggle this boolean value");
  }, [() => ({ "jse-readonly": i() })], Oe), Pe("mousedown", l, function(d) {
    d.stopPropagation(), i() || (o()([{ op: "replace", path: bt(n()), value: !r() }]), s()());
  }), Z(t, l), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-color-picker-popup.svelte-s1wu8v .picker_wrapper.popup,
.jse-color-picker-popup.svelte-s1wu8v .picker_wrapper.popup .picker_arrow::before,
.jse-color-picker-popup.svelte-s1wu8v .picker_wrapper.popup .picker_arrow::after {
  background: var(--jse-color-picker-background, var(--jse-panel-background, #ebebeb));
  line-height: normal;
}
.jse-color-picker-popup.svelte-s1wu8v .picker_slider,
.jse-color-picker-popup.svelte-s1wu8v .picker_sl,
.jse-color-picker-popup.svelte-s1wu8v .picker_editor input,
.jse-color-picker-popup.svelte-s1wu8v .picker_sample,
.jse-color-picker-popup.svelte-s1wu8v .picker_done button {
  box-shadow: var(--jse-color-picker-border-box-shadow, #cbcbcb 0 0 0 1px);
}
.jse-color-picker-popup.svelte-s1wu8v .picker_editor input {
  background: var(--jse-background-color, #fff);
  color: var(--jse-text-color, #4d4d4d);
}
.jse-color-picker-popup.svelte-s1wu8v .picker_done button {
  background: var(--jse-button-background, #e0e0e0);
  color: var(--jse-button-color, var(--jse-text-color, #4d4d4d));
}
.jse-color-picker-popup.svelte-s1wu8v .picker_done button:hover {
  background: var(--jse-button-background-highlight, #e7e7e7);
}`);
var Nq = pe('<div class="jse-color-picker-popup svelte-s1wu8v"></div>');
function Dq(t, e) {
  mt(e, !1);
  var n = E(e, "color", 8), r = E(e, "onChange", 8), i = E(e, "showOnTop", 8), o = Q(), s = () => {
  };
  Ti(Mt(function* () {
    var l, u = new ((l = yield import("./vanilla-picker-BbMY5WGk.js")) === null || l === void 0 ? void 0 : l.default)({ parent: c(o), color: n(), popup: i() ? "top" : "bottom", onDone(f) {
      var d = f.rgba[3] === 1 ? f.hex.substring(0, 7) : f.hex;
      r()(d);
    } });
    u.show(), s = () => {
      u.destroy();
    };
  })), Io(() => {
    s();
  }), zt();
  var a = Nq();
  pr(a, (l) => C(o, l), () => c(o)), Z(t, a), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-color-picker-button.svelte-xeg9n6 {
  font-size: var(--jse-font-size-mono, 14px);
  width: var(--jse-color-picker-button-size, 1em);
  height: var(--jse-color-picker-button-size, 1em);
  box-sizing: border-box;
  padding: 0;
  margin: 2px 0 0 calc(0.5 * var(--jse-padding, 10px));
  display: inline-flex;
  vertical-align: top;
  border: 1px solid var(--jse-text-color, #4d4d4d);
  border-radius: 2px;
  background: inherit;
  outline: none;
}

.jse-color-picker-button.svelte-xeg9n6:not(.jse-readonly) {
  cursor: pointer;
}`);
var Iq = pe('<button type="button"></button>');
function zq(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), { openAbsolutePopup: i } = gl("absolute-popup"), o = E(e, "path", 9), s = E(e, "value", 9), a = E(e, "readOnly", 9), l = E(e, "onPatch", 9), u = E(e, "focus", 9);
  function f(m) {
    l()([{ op: "replace", path: bt(o()), value: m }]), d();
  }
  function d() {
    u()();
  }
  de(() => _(s()), () => {
    C(n, G_(s()));
  }), de(() => (_(a()), _(s())), () => {
    C(r, a() ? "Color ".concat(s()) : "Click to open a color picker");
  }), Bn(), zt(!0);
  var h, p = Iq();
  Ie((m) => {
    var v;
    h = It(p, 1, "jse-color-picker-button svelte-xeg9n6", null, h, m), Qo(p, "background: ".concat((v = c(n)) !== null && v !== void 0 ? v : "")), Ln(p, "title", c(r)), Ln(p, "aria-label", c(r));
  }, [() => ({ "jse-readonly": a() })], Oe), Pe("click", p, function(m) {
    var v, g;
    if (!a()) {
      var b = m.target, x = b.getBoundingClientRect().top, w = ((v = (g = kd(b)) === null || g === void 0 ? void 0 : g.innerHeight) !== null && v !== void 0 ? v : 0) - x < 300 && x > 300, j = { color: s(), onChange: f, showOnTop: w };
      i(Dq, j, { anchor: b, closeOnOuterClick: !0, onClose: d, offsetTop: 18, offsetLeft: -8, height: 300 });
    }
  }), Z(t, p), gt();
}
var Lv = 1e3, Hf = 100, Jh = 100, ym = 2e4, Qc = [{ start: 0, end: Hf }], Lq = 1048576, Bq = 1048576, Bv = 10485760, qv = "Insert or paste contents, enter [ insert a new array, enter { to insert a new object, or start typing to insert a new value", gy = "Open context menu (Click here, right click on the selection, or use the context menu button or Ctrl+Q)", El = "hover-insert-inside", Yh = "hover-insert-after", kk = "hover-collection", Fv = "valid", Sk = "repairable", na = 336, ra = 260, of = 100, Ck = { [Eo.asc]: "ascending", [Eo.desc]: "descending" };
function lA(t) {
  for (var e = r6(t, (a) => a.start), n = [e[0]], r = 0; r < e.length; r++) {
    var i = n.length - 1, o = n[i], s = e[r];
    s.start <= o.end ? n[i] = { start: Math.min(o.start, s.start), end: Math.max(o.end, s.end) } : n.push(s);
  }
  return n;
}
function Ob(t) {
  return xm(t) + Hf;
}
function xm(t) {
  return Math.floor(t / Hf) * Hf;
}
function Eb(t) {
  return !!t && (t.type === "space" || t.space === !0);
}
function $a(t) {
  return !!t && (t.type === "separator" || t.separator === !0);
}
function Ok(t) {
  return !!t && t.type === "label" && typeof t.text == "string";
}
function Qs(t) {
  return !!t && typeof t.onClick == "function";
}
function jc(t) {
  return !!t && t.type === "dropdown-button" && Qs(t.main) && Array.isArray(t.items);
}
function Ek(t) {
  return !!t && t.type === "row" && Array.isArray(t.items);
}
function _k(t) {
  return !!t && t.type === "column" && Array.isArray(t.items);
}
function Ak(t) {
  return Pn(t) && Pn(t.parseError);
}
function qq(t) {
  return Pn(t) && Array.isArray(t.validationErrors);
}
function Fq(t) {
  return Pn(t) && Array.isArray(t.path) && typeof t.message == "string" && "severity" in t;
}
function Uq(t) {
  return Pn(t) && Fq(t) && typeof t.isChildError == "boolean";
}
function Vq(t) {
  return Pn(t) && typeof t.action == "function" && Pn(t.props);
}
function Zi(t) {
  return t !== void 0 && t.type === "object";
}
function ai(t) {
  return t !== void 0 && t.type === "array";
}
function vy(t) {
  return t !== void 0 && t.type === "value";
}
function tc(t) {
  return Zi(t) || ai(t);
}
function cA(t) {
  return t !== void 0 && Array.isArray(t.searchResults);
}
function wm(t) {
  return !!t && t.type === "tree";
}
function Mk(t) {
  return !!t && t.type === "text";
}
function Tk(t) {
  return !!t && t.type === "mode";
}
function _b(t) {
  var { json: e, expand: n } = t, r = (function(i) {
    var { json: o, factory: s } = i;
    return Array.isArray(o) ? s.createArrayDocumentState() : Pn(o) ? s.createObjectDocumentState() : o !== void 0 ? s.createValueDocumentState() : void 0;
  })({ json: e, factory: xy });
  return n && r ? Vo(e, r, [], n) : r;
}
function by() {
  var { expanded: t } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { expanded: !1 };
  return { type: "array", expanded: t, visibleSections: Qc, items: [] };
}
function yy() {
  var { expanded: t } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { expanded: !1 };
  return { type: "object", expanded: t, properties: {} };
}
var xy = { createObjectDocumentState: yy, createArrayDocumentState: by, createValueDocumentState: function() {
  return { type: "value" };
} };
function uA(t, e, n, r) {
  var { createObjectDocumentState: i, createArrayDocumentState: o, createValueDocumentState: s } = r;
  return (function a(l, u, f) {
    if (Array.isArray(l)) {
      var d = ai(u) ? u : o();
      if (f.length === 0) return d;
      var h = xi(f[0]), p = a(l[h], d.items[h], f.slice(1));
      return Ji(d, ["items", f[0]], p);
    }
    if (Pn(l)) {
      var m = Zi(u) ? u : i();
      if (f.length === 0) return m;
      var v = f[0], g = a(l[v], m.properties[v], f.slice(1));
      return Ji(m, ["properties", v], g);
    }
    return vy(u) ? u : s();
  })(t, e, n);
}
function go(t, e) {
  return Kf(t, e, arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], (n, r) => {
    if (n !== void 0 && r !== void 0) return Array.isArray(n) ? ai(r) ? r : by({ expanded: !!tc(r) && r.expanded }) : Pn(n) ? Zi(r) ? r : yy({ expanded: !!tc(r) && r.expanded }) : vy(r) ? r : void 0;
  }, () => !0);
}
function Kf(t, e, n, r, i) {
  var o = r(t, e, n);
  if (Array.isArray(t) && ai(o) && i(o)) {
    var s = [];
    return wy(t, o.visibleSections, (l) => {
      var u = n.concat(String(l)), f = Kf(t[l], o.items[l], u, r, i);
      f !== void 0 && (s[l] = f);
    }), gk(s, o.items) ? o : De(De({}, o), {}, { items: s });
  }
  if (Pn(t) && Zi(o) && i(o)) {
    var a = {};
    return Object.keys(t).forEach((l) => {
      var u = n.concat(l), f = Kf(t[l], o.properties[l], u, r, i);
      f !== void 0 && (a[l] = f);
    }), gk(Object.values(a), Object.values(o.properties)) ? o : De(De({}, o), {}, { properties: a });
  }
  return o;
}
function wy(t, e, n) {
  e.forEach((r) => {
    var { start: i, end: o } = r;
    J_(i, Math.min(t.length, o), n);
  });
}
function Gf(t, e) {
  for (var n = t, r = [], i = 0; i < e.length; ) {
    if (Array.isArray(n)) {
      var o = e[i];
      r.push("items", o), n = n[xi(o)];
    } else {
      if (!Pn(n)) throw new Error("Cannot convert path: Object or Array expected at index ".concat(i));
      var s = e[i];
      r.push("properties", s), n = n[s];
    }
    i++;
  }
  return r;
}
function Vo(t, e, n, r) {
  for (var i = e, o = function(a) {
    var l = n.slice(0, a);
    i = pu(t, i, l, (u, f) => {
      var d = tc(f) && !f.expanded ? De(De({}, f), {}, { expanded: !0 }) : f;
      return ai(d) ? (function(h, p) {
        if ((function(g, b) {
          return g.some((x) => b >= x.start && b < x.end);
        })(h.visibleSections, p)) return h;
        var m = xm(p), v = { start: m, end: Ob(m) };
        return De(De({}, h), {}, { visibleSections: lA(h.visibleSections.concat(v)) });
      })(d, xi(n[a])) : d;
    });
  }, s = 0; s < n.length; s++) o(s);
  return pu(t, i, n, (a, l) => (function(u, f, d, h) {
    return Kf(u, f, d, (p, m, v) => Array.isArray(p) && h(v) ? ai(m) ? m.expanded ? m : De(De({}, m), {}, { expanded: !0 }) : by({ expanded: !0 }) : Pn(p) && h(v) ? Zi(m) ? m.expanded ? m : De(De({}, m), {}, { expanded: !0 }) : yy({ expanded: !0 }) : m, (p) => tc(p) && p.expanded);
  })(a, l, [], r));
}
function $k(t, e, n, r) {
  return pu(t, e, n, (i, o) => r ? (function(s, a, l) {
    return Kf(s, a, l, (u, f) => Pk(f), () => !0);
  })(i, o, n) : Pk(o));
}
function Pk(t) {
  return ai(t) && t.expanded ? De(De({}, t), {}, { expanded: !1, visibleSections: Qc }) : Zi(t) && t.expanded ? De(De({}, t), {}, { expanded: !1 }) : t;
}
function fA(t, e, n) {
  var r = { json: t, documentState: e }, i = n.reduce((o, s) => ({ json: Go(o.json, [s]), documentState: Wq(o.json, o.documentState, s) }), r);
  return { json: i.json, documentState: go(i.json, i.documentState) };
}
function Wq(t, e, n) {
  if (KS(n)) return Rk(t, e, n, void 0);
  if (GS(n)) return Nk(t, e, n);
  if (Zb(n)) {
    var r = Jo(t, n.path), i = Es(t, e, r);
    return i ? wg(t, e, r, { type: "value", enforceString: i }) : e;
  }
  return i0(n) || Dl(n) ? (function(o, s, a) {
    if (Dl(a) && a.from === a.path) return s;
    var l = s, u = Jo(o, a.from), f = ys(o, l, u);
    return Dl(a) && (l = Nk(o, l, { path: a.from })), l = Rk(o, l, { path: a.path }, f), l;
  })(t, e, n) : e;
}
function ys(t, e, n) {
  try {
    return Ze(e, Gf(t, n));
  } catch {
    return;
  }
}
function jy(t, e, n, r, i) {
  var o = uA(t, e, n, i);
  return n1(o, Gf(t, n), (s) => {
    var a = Ze(t, n);
    return r(a, s);
  });
}
function wg(t, e, n, r) {
  return (function(i, o, s, a, l) {
    var u = uA(i, o, s, l);
    return Ji(u, Gf(i, s), a);
  })(t, e, n, r, xy);
}
function pu(t, e, n, r) {
  return jy(t, e, n, r, xy);
}
function Rk(t, e, n, r) {
  var i = Jo(t, n.path), o = e;
  return o = pu(t, o, mn(i), (s, a) => {
    if (!ai(a)) return a;
    var l = xi(rn(i)), { items: u, visibleSections: f } = a;
    return De(De({}, a), {}, { items: l < u.length ? aq(u, l, r !== void 0 ? [r] : Array(1)) : u, visibleSections: dA(f, l, 1) });
  }), wg(t, o, i, r);
}
function Nk(t, e, n) {
  var r = Jo(t, n.path), i = mn(r), o = Ze(t, i);
  return Array.isArray(o) ? pu(t, e, i, (s, a) => {
    if (!ai(a)) return a;
    var l = xi(rn(r)), { items: u, visibleSections: f } = a;
    return De(De({}, a), {}, { items: u.slice(0, l).concat(u.slice(l + 1)), visibleSections: dA(f, l, -1) });
  }) : (function(s, a, l) {
    var u = Gf(s, l);
    return ro(a, u) ? zm(a, Gf(s, l)) : a;
  })(t, e, r);
}
function dA(t, e, n) {
  return (function(r) {
    for (var i = r.slice(0), o = 1; o < i.length; ) i[o - 1].end === i[o].start && (i[o - 1] = { start: i[o - 1].start, end: i[o].end }, i.splice(o)), o++;
    return i;
  })(t.map((r) => ({ start: r.start > e ? r.start + n : r.start, end: r.end > e ? r.end + n : r.end })));
}
function Es(t, e, n) {
  var r, i = Ze(t, n), o = ys(t, e, n), s = vy(o) ? o.enforceString : void 0;
  return typeof s == "boolean" ? s : typeof (r = i) == "string" && typeof Ou(r, JSON) != "string";
}
function Cd(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], r = t.indexOf(e);
  return r !== -1 ? n ? t.slice(r) : t.slice(r + 1) : [];
}
function ky(t, e) {
  var n = [];
  return (function r(i, o, s) {
    n.push(s), Dr(i) && ai(o) && o.expanded && wy(i, o.visibleSections, (a) => {
      r(i[a], o.items[a], s.concat(String(a)));
    }), Ur(i) && Zi(o) && o.expanded && Object.keys(i).forEach((a) => {
      r(i[a], o.properties[a], s.concat(a));
    });
  })(t, e, []), n;
}
function hA(t, e) {
  var n = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r = [];
  return (function i(o, s) {
    r.push({ path: s, type: Ho.value });
    var a = ys(t, e, s);
    if (o && tc(a) && a.expanded) {
      if (n && r.push({ path: s, type: Ho.inside }), Dr(o)) {
        var l = ai(a) ? a.visibleSections : Qc;
        wy(o, l, (u) => {
          var f = s.concat(String(u));
          i(o[u], f), n && r.push({ path: f, type: Ho.after });
        });
      }
      Ur(o) && Object.keys(o).forEach((u) => {
        var f = s.concat(u);
        r.push({ path: f, type: Ho.key }), i(o[u], f), n && r.push({ path: f, type: Ho.after });
      });
    }
  })(t, []), r;
}
function Uv(t, e, n) {
  var r = ky(t, e), i = r.map(bt).indexOf(bt(n));
  if (i !== -1 && i < r.length - 1) return r[i + 1];
}
function nc(t, e, n) {
  var r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 10240;
  return Vo(t, e, n, cq({ json: Ze(t, n) }, r) ? sf : Sy);
}
function Vv(t, e, n) {
  var r = ys(t, e, n);
  return tc(r) && r.expanded ? e : nc(t, e, n);
}
function sf(t) {
  return t.length === 0 || t.length === 1 && t[0] === "0";
}
function Ab(t) {
  return t.length === 0;
}
function Sy() {
  return !0;
}
function Sp() {
  return !1;
}
function to(t) {
  return t && t.type === Qn.after || !1;
}
function ti(t) {
  return t && t.type === Qn.inside || !1;
}
function li(t) {
  return t && t.type === Qn.key || !1;
}
function _n(t) {
  return t && t.type === Qn.value || !1;
}
function nr(t) {
  return t && t.type === Qn.multi || !1;
}
function jg(t) {
  return nr(t) && Zt(t.focusPath, t.anchorPath);
}
function Jf(t) {
  return nr(t) || to(t) || ti(t) || li(t) || _n(t);
}
function Wv(t) {
  return t && t.type === Qn.text || !1;
}
function ul(t, e) {
  var n = [];
  return (function(r, i, o) {
    if (i) {
      var s = Fl(i), a = at(i);
      if (Zt(s, a)) return o(s);
      if (r !== void 0) {
        var l = mA(s, a);
        if (s.length === l.length || a.length === l.length) return o(l);
        var u = Ri(s, a), f = ia(r, u), d = Ya(r, u), h = da(r, u, f), p = da(r, u, d);
        if (!(h === -1 || p === -1)) {
          var m = Ze(r, l);
          if (Ur(m)) {
            for (var v = Object.keys(m), g = h; g <= p; g++) {
              var b = o(l.concat(v[g]));
              if (b !== void 0) return b;
            }
            return;
          }
          if (Dr(m)) {
            for (var x = h; x <= p; x++) {
              var w = o(l.concat(String(x)));
              if (w !== void 0) return w;
            }
            return;
          }
          throw new Error("Failed to create selection");
        }
      }
    }
  })(t, e, (r) => {
    n.push(r);
  }), n;
}
function pA(t) {
  return ti(t) ? t.path : mn(at(t));
}
function ia(t, e) {
  if (!nr(e)) return e.path;
  var n = da(t, e, e.anchorPath);
  return da(t, e, e.focusPath) < n ? e.focusPath : e.anchorPath;
}
function Ya(t, e) {
  if (!nr(e)) return e.path;
  var n = da(t, e, e.anchorPath);
  return da(t, e, e.focusPath) > n ? e.focusPath : e.anchorPath;
}
function Dk(t, e, n) {
  var r = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
  if (n) {
    var i = r ? at(n) : ia(t, n), o = (function(l, u, f) {
      var d = ky(l, u), h = d.map(bt), p = bt(f), m = h.indexOf(p);
      if (m !== -1 && m > 0) return d[m - 1];
    })(t, e, i);
    if (r) return ti(n) || to(n) ? o !== void 0 ? Ri(i, i) : void 0 : o !== void 0 ? Ri(Fl(n), o) : void 0;
    if (to(n) || ti(n)) return sn(i);
    if (li(n)) {
      if (o === void 0 || o.length === 0) return;
      var s = mn(o), a = Ze(t, s);
      return Array.isArray(a) || Sn(o) ? sn(o) : va(o);
    }
    return _n(n), o !== void 0 ? sn(o) : void 0;
  }
}
function Ik(t, e, n, r) {
  if (!n) return { caret: void 0, previous: void 0, next: void 0 };
  var i = hA(t, e, r), o = i.findIndex((s) => Zt(s.path, at(n)) && String(s.type) === String(n.type));
  return { caret: o !== -1 ? i[o] : void 0, previous: o !== -1 && o > 0 ? i[o - 1] : void 0, next: o !== -1 && o < i.length - 1 ? i[o + 1] : void 0 };
}
function kc(t, e) {
  for (var n = ky(t, e), r = 0; r < n.length - 1 && n[r + 1].length > n[r].length; ) r++;
  var i = n[r];
  return i === void 0 || i.length === 0 || Array.isArray(Ze(t, mn(i))) ? sn(i) : va(i);
}
function mu(t, e) {
  if (e.length === 1) {
    var n = oa(e);
    if (n.op === "replace") return sn(Jo(t, n.path));
  }
  if (!Sn(e) && e.every((s) => s.op === "move")) {
    var r = oa(e), i = e.slice(1);
    if ((i0(r) || Dl(r)) && r.from !== r.path && i.every((s) => (i0(s) || Dl(s)) && s.from === s.path)) return va(Jo(t, r.path));
  }
  var o = e.filter((s) => s.op !== "test" && s.op !== "remove" && (s.op !== "move" || s.from !== s.path) && typeof s.path == "string").map((s) => Jo(t, s.path));
  if (!Sn(o)) return { type: Qn.multi, anchorPath: oa(o), focusPath: rn(o) };
}
function mA(t, e) {
  for (var n = 0; n < t.length && n < e.length && t[n] === e[n]; ) n++;
  return t.slice(0, n);
}
function jm(t) {
  return li(t) || _n(t) || jg(t);
}
function zk(t, e) {
  return jm(e) && Or(Ze(t, at(e))) ? at(e) : mn(at(e));
}
function Ts(t, e) {
  if (t.length < e.length) return !1;
  for (var n = 0; n < e.length; n++) if (t[n] !== e[n]) return !1;
  return !0;
}
function Ss(t) {
  if (oi(t)) {
    var { type: e, path: n } = t;
    return { type: e, path: n };
  }
  return t;
}
function va(t) {
  return { type: Qn.key, path: t };
}
function Cy(t, e) {
  return { type: Qn.key, path: t, edit: !0, initialValue: e };
}
function sn(t) {
  return { type: Qn.value, path: t };
}
function km(t, e) {
  return { type: Qn.value, path: t, edit: !0, initialValue: e };
}
function ba(t) {
  return { type: Qn.inside, path: t };
}
function fa(t) {
  return { type: Qn.after, path: t };
}
function Ri(t, e) {
  var n = mA(t, e), r = t.length > n.length && e.length > n.length;
  return { type: Qn.multi, anchorPath: r ? n.concat(t[n.length]) : n, focusPath: r ? n.concat(e[n.length]) : n };
}
function gA(t, e, n, r) {
  if (li(e)) return String(rn(e.path));
  if (_n(e)) {
    var i = Ze(t, e.path);
    return typeof i == "string" ? i : r.stringify(i, null, n);
  }
  if (nr(e)) {
    if (Sn(e.focusPath)) return r.stringify(t, null, n);
    var o = pA(e), s = Ze(t, o);
    if (Array.isArray(s)) {
      if (jg(e)) {
        var a = Ze(t, e.focusPath);
        return r.stringify(a, null, n);
      }
      return ul(t, e).map((l) => {
        var u = Ze(t, l);
        return "".concat(r.stringify(u, null, n), ",");
      }).join(`
`);
    }
    return ul(t, e).map((l) => {
      var u = rn(l), f = Ze(t, l);
      return "".concat(r.stringify(u), ": ").concat(r.stringify(f, null, n), ",");
    }).join(`
`);
  }
}
function oi(t) {
  return (li(t) || _n(t)) && t.edit === !0;
}
function Lc(t) {
  return li(t) || _n(t) || nr(t);
}
function Qh(t) {
  return li(t) || _n(t) || jg(t);
}
function Mb(t) {
  switch (t.type) {
    case Ho.key:
      return va(t.path);
    case Ho.value:
      return sn(t.path);
    case Ho.after:
      return fa(t.path);
    case Ho.inside:
      return ba(t.path);
  }
}
function Lk(t, e) {
  switch (t) {
    case Qn.key:
      return va(e);
    case Qn.value:
      return sn(e);
    case Qn.after:
      return fa(e);
    case Qn.inside:
      return ba(e);
    case Qn.multi:
    case Qn.text:
      return Ri(e, e);
  }
}
function Xh(t, e, n) {
  if (e) return Yf(t, e, n) || Ts(nr(e) ? mn(e.focusPath) : e.path, n) ? e : void 0;
}
function Yf(t, e, n) {
  if (t === void 0 || !e) return !1;
  if (li(e) || ti(e) || to(e)) return Zt(e.path, n);
  if (_n(e)) return Ts(n, e.path);
  if (nr(e)) {
    var r = ia(t, e), i = Ya(t, e), o = mn(e.focusPath);
    if (!Ts(n, o) || n.length <= o.length) return !1;
    var s = da(t, e, r), a = da(t, e, i), l = da(t, e, n);
    return l !== -1 && l >= s && l <= a;
  }
  return !1;
}
function da(t, e, n) {
  var r = mn(e.focusPath);
  if (!Ts(n, r) || n.length <= r.length) return -1;
  var i = n[r.length], o = Ze(t, r);
  if (Ur(o)) return Object.keys(o).indexOf(i);
  if (Dr(o)) {
    var s = xi(i);
    if (s < o.length) return s;
  }
  return -1;
}
function at(t) {
  return nr(t) ? t.focusPath : t.path;
}
function Fl(t) {
  return nr(t) ? t.anchorPath : t.path;
}
function as() {
  for (var t = [], e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
  for (var i of n) if (typeof i == "string" && t.push(i), i && typeof i == "object") for (var o in i) Object.hasOwnProperty.call(i, o) && i[o] && t.push(o);
  return t.join(" ");
}
function vA(t, e, n) {
  return as("jse-value", "jse-" + uy(t, n), { "jse-url": xg(t), "jse-empty": typeof t == "string" && t.length === 0, "jse-table-cell": e === Hr.table });
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-value.jse-string.svelte-f9kmxj {
  color: var(--jse-value-color-string, #008000);
}
.jse-value.jse-object.svelte-f9kmxj, .jse-value.jse-array.svelte-f9kmxj {
  min-width: 16px;
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
}
.jse-value.jse-number.svelte-f9kmxj {
  color: var(--jse-value-color-number, #ee422e);
}
.jse-value.jse-boolean.svelte-f9kmxj {
  color: var(--jse-value-color-boolean, #ff8c00);
}
.jse-value.jse-null.svelte-f9kmxj {
  color: var(--jse-value-color-null, #004ed0);
}
.jse-value.jse-invalid.svelte-f9kmxj {
  color: var(--jse-text-color, #4d4d4d);
}
.jse-value.jse-url.svelte-f9kmxj {
  color: var(--jse-value-color-url, #008000);
  text-decoration: underline;
}

div.jse-editable-div.svelte-f9kmxj {
  min-width: 2em;
  padding: 0 5px;
  box-sizing: border-box;
  outline: none;
  border-radius: 1px;
  vertical-align: top;
  cursor: text !important;
  word-break: normal;
  white-space: pre-wrap;
  overflow-wrap: anywhere;
}
div.jse-editable-div.jse-short-text.svelte-f9kmxj {
  overflow-wrap: normal;
}
div.jse-editable-div.jse-table-cell.svelte-f9kmxj {
  overflow-wrap: normal;
  white-space: nowrap;
}
div.jse-editable-div[contenteditable=true].svelte-f9kmxj {
  outline: var(--jse-edit-outline, 2px solid #656565);
  background: var(--jse-background-color, #fff);
  position: relative;
  display: inline-block;
  border-radius: 0;
  z-index: 3;
}
div.jse-editable-div.jse-empty.svelte-f9kmxj:not(:focus) {
  outline: 1px dotted var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  -moz-outline-radius: 2px;
}
div.jse-editable-div.jse-empty.svelte-f9kmxj::after {
  pointer-events: none;
  color: var(--jse-tag-background, rgba(0, 0, 0, 0.2));
}`);
var Hq = pe('<div role="textbox" tabindex="0" contenteditable="true" spellcheck="false"></div>');
function bA(t, e) {
  mt(e, !1);
  var n = ui("jsoneditor:EditableDiv"), r = E(e, "value", 9), i = E(e, "initialValue", 9), o = E(e, "shortText", 9, !1), s = E(e, "label", 9), a = E(e, "onChange", 9), l = E(e, "onCancel", 9), u = E(e, "onFind", 9), f = E(e, "onPaste", 9, Zr), d = E(e, "onValueClass", 9, () => ""), h = Q(void 0, !0), p = Q(void 0, !0), m = !1;
  function v() {
    return c(h) ? (function(x) {
      return x.replace(/\n$/, "");
    })(c(h).innerText) : "";
  }
  function g(x) {
    c(h) && bo(h, c(h).innerText = hu(x));
  }
  Ti(() => {
    n("onMount", { value: r(), initialValue: i() }), g(i() !== void 0 ? i() : r()), c(h) && (function(x) {
      if (x.firstChild != null) {
        var w = document.createRange(), j = window.getSelection();
        w.setStart(x, 1), w.collapse(!0), j?.removeAllRanges(), j?.addRange(w);
      } else x.focus();
    })(c(h));
  }), Io(() => {
    var x = v();
    n("onDestroy", { closed: m, value: r(), newValue: x }), m || x === r() || a()(x, Ja.no);
  }), de(() => (_(d()), _(r())), () => {
    C(p, d()(r()));
  }), Bn(), zt(!0);
  var b = Hq();
  pr(b, (x) => C(h, x), () => c(h)), Ie((x) => {
    Ln(b, "aria-label", s()), It(b, 1, x, "svelte-f9kmxj");
  }, [() => cl((_(as), c(p), _(o()), ee(() => as("jse-editable-div", c(p), { "jse-short-text": o() }))))], Oe), Pe("input", b, function() {
    var x = v();
    x === "" && g(""), C(p, d()(x));
  }), Pe("keydown", b, function(x) {
    x.stopPropagation();
    var w = ga(x);
    if (w === "Escape" && (x.preventDefault(), m = !0, l()()), w === "Enter" || w === "Tab") {
      x.preventDefault(), m = !0;
      var j = v();
      a()(j, Ja.nextInside);
    }
    w === "Ctrl+F" && (x.preventDefault(), u()(!1)), w === "Ctrl+H" && (x.preventDefault(), u()(!0));
  }), Pe("paste", b, function(x) {
    if (x.stopPropagation(), f() && x.clipboardData) {
      var w = x.clipboardData.getData("text/plain");
      f()(w);
    }
  }), Pe("blur", b, function() {
    var x = document.hasFocus(), w = v();
    n("handleBlur", { hasFocus: x, closed: m, value: r(), newValue: w }), document.hasFocus() && !m && (m = !0, w !== r() && a()(w, Ja.self));
  }), Z(t, b), gt();
}
function Kq(t, e) {
  mt(e, !1);
  var n = E(e, "path", 9), r = E(e, "value", 9), i = E(e, "selection", 9), o = E(e, "mode", 9), s = E(e, "parser", 9), a = E(e, "normalization", 9), l = E(e, "enforceString", 9), u = E(e, "onPatch", 9), f = E(e, "onPasteJson", 9), d = E(e, "onSelect", 9), h = E(e, "onFind", 9), p = E(e, "focus", 9), m = E(e, "findNextInside", 9);
  function v(w) {
    return l() ? w : Ou(w, s());
  }
  function g() {
    d()(sn(n())), p()();
  }
  zt(!0);
  var b = Oe(() => (_(a()), _(r()), ee(() => a().escapeValue(r())))), x = Oe(() => (_(oi), _(i()), ee(() => oi(i()) ? i().initialValue : void 0)));
  bA(t, { get value() {
    return c(b);
  }, get initialValue() {
    return c(x);
  }, label: "Edit value", onChange: function(w, j) {
    u()([{ op: "replace", path: bt(n()), value: v(a().unescapeValue(w)) }], (y, k, S) => {
      if (!S || Zt(n(), at(S))) return { state: k, selection: j === Ja.nextInside ? m()(n()) : sn(n()) };
    }), p()();
  }, onCancel: g, onPaste: function(w) {
    try {
      var j = s().parse(w);
      Or(j) && f()({ path: n(), contents: j, onPasteAsJson: () => {
        g();
        var y = [{ op: "replace", path: bt(n()), value: j }];
        u()(y, (k, S) => ({ state: nc(k, S, n()) }));
      } });
    } catch {
    }
  }, get onFind() {
    return h();
  }, onValueClass: function(w) {
    return vA(v(a().unescapeValue(w)), o(), s());
  } }), gt();
}
function Bc(t, e, n) {
  var r = mn(e), i = Ze(t, r);
  if (Dr(i)) {
    var o = xi(rn(e));
    return n.map((u, f) => ({ op: "add", path: bt(r.concat(String(o + f))), value: u.value }));
  }
  if (Ur(i)) {
    var s = rn(e), a = Object.keys(i), l = s !== void 0 ? Cd(a, s, !0) : [];
    return [...n.map((u) => {
      var f = Sd(u.key, a);
      return { op: "add", path: bt(r.concat(f)), value: u.value };
    }), ...l.map((u) => fl(r, u))];
  }
  throw new Error("Cannot create insert operations: parent must be an Object or Array");
}
function Tb(t, e, n) {
  var r = Ze(t, e);
  if (Array.isArray(r)) {
    var i = r.length;
    return n.map((o, s) => ({ op: "add", path: bt(e.concat(String(i + s))), value: o.value }));
  }
  return n.map((o) => {
    var s = Sd(o.key, Object.keys(r));
    return { op: "add", path: bt(e.concat(s)), value: o.value };
  });
}
function Od(t, e, n, r) {
  var i = Sd(r, e.filter((s) => s !== n)), o = Cd(e, n, !1);
  return [{ op: "move", from: bt(t.concat(n)), path: bt(t.concat(i)) }, ...o.map((s) => fl(t, s))];
}
function yA(t, e) {
  var n = rn(e);
  if (Sn(n)) throw new Error("Cannot duplicate root object");
  var r = mn(n), i = rn(n), o = Ze(t, r);
  if (Dr(o)) {
    var s = rn(e), a = s ? xi(rn(s)) + 1 : 0;
    return [...e.map((f, d) => ({ op: "copy", from: bt(f), path: bt(r.concat(String(d + a))) }))];
  }
  if (Ur(o)) {
    var l = Object.keys(o), u = i !== void 0 ? Cd(l, i, !1) : [];
    return [...e.map((f) => {
      var d = Sd(rn(f), l);
      return { op: "copy", from: bt(f), path: bt(r.concat(d)) };
    }), ...u.map((f) => fl(r, f))];
  }
  throw new Error("Cannot create duplicate operations: parent must be an Object or Array");
}
function xA(t, e) {
  if (_n(e)) return [{ op: "move", from: bt(e.path), path: "" }];
  if (!nr(e)) throw new Error("Cannot create extract operations: parent must be an Object or Array");
  var n = mn(e.focusPath), r = Ze(t, n);
  if (Dr(r)) {
    var i = ul(t, e).map((s) => {
      var a = xi(rn(s));
      return r[a];
    });
    return [{ op: "replace", path: "", value: i }];
  }
  if (Ur(r)) {
    var o = {};
    return ul(t, e).forEach((s) => {
      var a = String(rn(s));
      o[a] = r[a];
    }), [{ op: "replace", path: "", value: o }];
  }
  throw new Error("Cannot extract: unsupported type of selection " + JSON.stringify(e));
}
function wA(t, e, n, r) {
  if (li(e)) {
    var i = Y_(n, r), o = mn(e.path), s = Ze(t, o);
    return Od(o, Object.keys(s), rn(e.path), typeof i == "string" ? i : n);
  }
  if (_n(e) || nr(e) && Sn(e.focusPath)) try {
    return [{ op: "replace", path: bt(at(e)), value: jd(n, (k) => wd(k, r)) }];
  } catch {
    return [{ op: "replace", path: bt(at(e)), value: n }];
  }
  if (nr(e)) {
    var a = Hv(n, r);
    return (function(k, S, T) {
      var M = oa(S), N = mn(M), z = Ze(k, N);
      if (Dr(z)) {
        var L = oa(S), W = L ? xi(rn(L)) : 0;
        return [...Sm(S), ...T.map((B, ie) => ({ op: "add", path: bt(N.concat(String(ie + W))), value: B.value }))];
      }
      if (Ur(z)) {
        var ce = rn(S), te = mn(ce), we = rn(ce), Ee = Object.keys(z), ae = we !== void 0 ? Cd(Ee, we, !1) : [], re = new Set(S.map((B) => rn(B))), G = Ee.filter((B) => !re.has(B));
        return [...Sm(S), ...T.map((B) => {
          var ie = Sd(B.key, G);
          return { op: "add", path: bt(te.concat(ie)), value: B.value };
        }), ...ae.map((B) => fl(te, B))];
      }
      throw new Error("Cannot create replace operations: parent must be an Object or Array");
    })(t, ul(t, e), a);
  }
  if (to(e)) {
    var l = Hv(n, r), u = e.path, f = mn(u), d = Ze(t, f);
    if (Dr(d)) {
      var h = xi(rn(u));
      return Bc(t, f.concat(String(h + 1)), l);
    }
    if (Ur(d)) {
      var p = String(rn(u)), m = Object.keys(d);
      if (Sn(m) || rn(m) === p) return Tb(t, f, l);
      var v = m.indexOf(p), g = m[v + 1];
      return Bc(t, f.concat(g), l);
    }
    throw new Error("Cannot create insert operations: parent must be an Object or Array");
  }
  if (ti(e)) {
    var b = Hv(n, r), x = e.path, w = Ze(t, x);
    if (Dr(w)) return Bc(t, x.concat("0"), b);
    if (Ur(w)) {
      var j = Object.keys(w);
      if (Sn(j)) return Tb(t, x, b);
      var y = oa(j);
      return Bc(t, x.concat(y), b);
    }
    throw new Error("Cannot create insert operations: parent must be an Object or Array");
  }
  throw new Error("Cannot insert: unsupported type of selection " + JSON.stringify(e));
}
function Sm(t) {
  return t.map((e) => ({ op: "remove", path: bt(e) })).reverse();
}
function fl(t, e) {
  return { op: "move", from: bt(t.concat(e)), path: bt(t.concat(e)) };
}
function Hv(t, e) {
  var n = /^\s*{/.test(t), r = /^\s*\[/.test(t), i = Y_(t, e), o = i !== void 0 ? i : jd(t, (s) => wd(s, e));
  return n && Pn(o) || r && Array.isArray(o) ? [{ key: "New item", value: o }] : Array.isArray(o) ? o.map((s, a) => ({ key: "New item " + a, value: s })) : Pn(o) ? Object.keys(o).map((s) => ({ key: s, value: o[s] })) : [{ key: "New item", value: o }];
}
function jA(t, e) {
  if (li(e)) {
    var n = mn(e.path), r = Ze(t, n), i = Od(n, Object.keys(r), rn(e.path), "");
    return { operations: i, newSelection: mu(t, i) };
  }
  if (_n(e)) return { operations: [{ op: "replace", path: bt(e.path), value: "" }], newSelection: e };
  if (nr(e)) {
    var o = ul(t, e), s = Sm(o), a = rn(o);
    if (Sn(a))
      return { operations: [{ op: "replace", path: "", value: "" }], newSelection: sn([]) };
    var l = mn(a), u = Ze(t, l);
    if (Dr(u)) {
      var f = oa(o), d = xi(rn(f));
      return { operations: s, newSelection: d === 0 ? ba(l) : fa(l.concat(String(d - 1))) };
    }
    if (Ur(u)) {
      var h = Object.keys(u), p = oa(o), m = rn(p), v = h.indexOf(m), g = h[v - 1];
      return { operations: s, newSelection: v === 0 ? ba(l) : fa(l.concat(g)) };
    }
    throw new Error("Cannot create remove operations: parent must be an Object or Array");
  }
  throw new Error("Cannot remove: unsupported type of selection " + JSON.stringify(e));
}
function kA(t, e) {
  var n = (function(r, i) {
    if (Sn(i) || !i.every(Dl)) return i;
    var o = [];
    for (var s of i) {
      var a = Bk(io(s.from)), l = Bk(io(s.path));
      if (!a || !l) return i;
      o.push({ from: a, path: l, operation: s });
    }
    var u = o[0].path.parent, f = Ze(r, u);
    if (!Ur(f) || !o.every((m) => (function(v, g) {
      return Zt(v.from.parent, g) && Zt(v.path.parent, g);
    })(m, u))) return i;
    var d = (function(m, v) {
      var g = Object.keys(v), b = g.slice();
      for (var x of m) {
        var w = b.indexOf(x.from.key);
        w !== -1 && (b.splice(w, 1), b.push(x.path.key));
      }
      for (var j = 0; j < g.length && g[j] === b[j]; ) j++;
      return b[j];
    })(o, r), h = (m) => m.operation, p = o.filter((m) => m.operation.from !== m.operation.path);
    return p.some((m) => m.path.key === d) ? p.map(h) : [fl(u, d), ...p.map(h)];
  })(t, e);
  return XS(t, n, { before: (r, i, o) => {
    if (GS(i)) {
      var s = io(i.path);
      return { revertOperations: [...o, ...Kv(r, s)] };
    }
    if (Dl(i)) {
      var a = io(i.from);
      return { revertOperations: i.from === i.path ? [i, ...Kv(r, a)] : [...o, ...Kv(r, a)] };
    }
    return { document: r };
  } });
}
function Bk(t) {
  return t.length > 0 ? { parent: mn(t), key: rn(t) } : void 0;
}
function Kv(t, e) {
  var n = mn(e), r = rn(e), i = Ze(t, n);
  return Ur(i) ? Cd(Object.keys(i), r, !1).map((o) => fl(n, o)) : [];
}
function qk(t) {
  var e = t.activeIndex < t.items.length - 1 ? t.activeIndex + 1 : t.items.length > 0 ? 0 : -1, n = t.items[e], r = t.items.map((i, o) => De(De({}, i), {}, { active: o === e }));
  return De(De({}, t), {}, { items: r, activeItem: n, activeIndex: e });
}
function Fk(t, e) {
  var n, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = t.toLowerCase(), o = (n = r?.maxResults) !== null && n !== void 0 ? n : 1 / 0, s = r?.columns, a = [], l = [];
  function u(g) {
    a.length >= o || a.push(g);
  }
  function f(g, b) {
    if (Dr(b)) {
      var x = l.length;
      l.push("0");
      for (var w = 0; w < b.length; w++) if (l[x] = String(w), f(g, b[w]), a.length >= o) return;
      l.pop();
    } else if (Ur(b)) {
      var j = Object.keys(b), y = l.length;
      for (var k of (l.push(""), j)) if (l[y] = k, Uk(k, g, l, Zo.key, u), f(g, b[k]), a.length >= o) return;
      l.pop();
    } else Uk(String(b), g, l, Zo.value, u);
  }
  if (t === "") return [];
  if (s) {
    if (!Array.isArray(e)) throw new Error("json must be an Array when option columns is defined");
    for (var d = 0; d < e.length; d++) {
      l[0] = String(d);
      for (var h = e[d], p = 0; p < s.length; p++) {
        var m = s[p];
        if (m.length === 1) l[1] = m[0];
        else for (var v = 0; v < m.length; v++) l[v + 1] = m[v];
        for (; l.length > m.length + 1; ) l.pop();
        f(i, Ze(h, m));
      }
      if (a.length >= o) break;
    }
    return a;
  }
  return f(i, e), a;
}
function Uk(t, e, n, r, i) {
  var o = t.toLowerCase(), s = 0, a = -1, l = -1;
  do
    (l = o.indexOf(e, a)) !== -1 && (a = l + e.length, i({ path: n.slice(0), field: r, fieldIndex: s, start: l, end: a }), s++);
  while (l !== -1);
}
function $b(t, e, n, r) {
  return t.substring(0, n) + e + t.substring(r);
}
function Vk(t, e, n) {
  var r = t;
  return D5(n, (i) => {
    r = $b(r, e, i.start, i.end);
  }), r;
}
function Gq(t, e, n, r, i) {
  var { field: o, path: s, start: a, end: l } = r;
  if (o === Zo.key) {
    var u = mn(s), f = Ze(t, u), d = rn(s), h = Od(u, Object.keys(f), d, $b(d, n, a, l));
    return { newSelection: mu(t, h), operations: h };
  }
  if (o === Zo.value) {
    var p = Ze(t, s);
    if (p === void 0) throw new Error("Cannot replace: path not found ".concat(bt(s)));
    var m = typeof p == "string" ? p : String(p), v = Es(t, e, s), g = $b(m, n, a, l), b = [{ op: "replace", path: bt(s), value: v ? g : Ou(g, i) }];
    return { newSelection: mu(t, b), operations: b };
  }
  throw new Error("Cannot replace: unknown type of search result field ".concat(o));
}
function Wk(t) {
  return t.path.concat(t.field, String(t.fieldIndex));
}
function Hk(t) {
  var e = cA(t) ? t.searchResults.filter((n) => n.field === Zo.key) : void 0;
  return e && e.length > 0 ? e : void 0;
}
function Kk(t) {
  var e = cA(t) ? t.searchResults.filter((n) => n.field === Zo.value) : void 0;
  return e && e.length > 0 ? e : void 0;
}
var Jq = { createObjectDocumentState: () => ({ type: "object", properties: {} }), createArrayDocumentState: () => ({ type: "array", items: [] }), createValueDocumentState: () => ({ type: "value" }) };
function SA(t, e) {
  return e.reduce((n, r) => (function(i, o, s, a) {
    return jy(i, o, s, a, Jq);
  })(t, n, r.path, (i, o) => De(De({}, o), {}, { searchResults: o.searchResults ? o.searchResults.concat(r) : [r] })), void 0);
}
function Cm(t) {
  var e, n = (e = t?.searchResults) !== null && e !== void 0 ? e : [], r = Zi(t) ? Object.values(t.properties).flatMap(Cm) : ai(t) ? t.items.flatMap(Cm) : [];
  return n.concat(r);
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-highlight.svelte-5fb7bl {
  background-color: var(--jse-search-match-color, #ffe665);
  outline: var(--jse-search-match-outline, none);
}
.jse-highlight.jse-active.svelte-5fb7bl {
  background-color: var(--jse-search-match-active-color, var(--jse-search-match-color, #ffe665));
  outline: var(--jse-search-match-outline, 2px solid #e0be00);
}`);
var Yq = pe("<span> </span>");
function CA(t, e) {
  mt(e, !1);
  var n = Q(), r = E(e, "text", 8), i = E(e, "searchResultItems", 8);
  de(() => (_(r()), _(i())), () => {
    C(n, (function(s, a) {
      var l = [], u = 0;
      for (var f of a) {
        var d = s.slice(u, f.start);
        d !== "" && l.push({ resultIndex: void 0, type: "normal", text: d, active: !1 });
        var h = s.slice(f.start, f.end);
        l.push({ resultIndex: f.resultIndex, type: "highlight", text: h, active: f.active }), u = f.end;
      }
      var p = rn(a);
      return p && p.end < s.length && l.push({ type: "normal", text: s.slice(p.end), resultIndex: void 0, active: !1 }), l;
    })(String(r()), i()));
  }), Bn(), zt();
  var o = Er();
  Ir(wt(o), 1, () => c(n), Kr, (s, a) => {
    var l = Er(), u = wt(l), f = (h) => {
      var p = hi();
      Ie(() => vt(p, (c(a), ee(() => c(a).text)))), Z(h, p);
    }, d = (h) => {
      var p, m = Yq(), v = Y(m);
      Ie((g, b, x) => {
        p = It(m, 1, "jse-highlight svelte-5fb7bl", null, p, g), Ln(m, "data-search-result-index", b), vt(v, x);
      }, [() => ({ "jse-active": c(a).active }), () => (c(a), ee(() => String(c(a).resultIndex))), () => (_(hu), c(a), ee(() => hu(c(a).text)))], Oe), Z(h, m);
    };
    xe(u, (h) => {
      c(a), ee(() => c(a).type === "normal") ? h(f) : h(d, !1);
    }), Z(s, l);
  }), Z(t, o), gt();
}
function Cp(t) {
  var e = 1e3;
  if (t < 900) return t.toFixed() + " B";
  var n = t / e;
  if (n < 900) return n.toFixed(1) + " KB";
  var r = n / e;
  if (r < 900) return r.toFixed(1) + " MB";
  var i = r / e;
  return i < 900 ? i.toFixed(1) + " GB" : (i / e).toFixed(1) + " TB";
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-tag.svelte-jlw0fj {
  border: none;
  font-size: 80%;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  color: var(--jse-tag-color, var(--jse-text-color-inverse, #fff));
  background: var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  border-radius: 2px;
  cursor: pointer;
  display: inline-block;
  padding: 0 4px;
  line-height: normal;
  margin: 1px 0;
}
.jse-tag.svelte-jlw0fj:hover {
  opacity: 0.8;
}
.jse-tag.disabled.svelte-jlw0fj {
  opacity: 0.7;
  cursor: inherit;
}`);
var Qq = pe('<button type="button"><!></button>');
function Op(t, e) {
  mt(e, !0);
  var n, r = eo(() => e.onclick ? (o) => {
    o.preventDefault(), o.stopPropagation(), e.onclick();
  } : void 0), i = Qq();
  i.__click = function() {
    for (var o, s = arguments.length, a = new Array(s), l = 0; l < s; l++) a[l] = arguments[l];
    (o = c(r)) === null || o === void 0 || o.apply(this, a);
  }, (function(o, s) {
    for (var a = arguments.length, l = new Array(a > 2 ? a - 2 : 0), u = 2; u < a; u++) l[u - 2] = arguments[u];
    var f, d = o, h = tk;
    bl(() => {
      h !== (h = s()) && (f && (Do(f), f = null), f = Ds(() => h(d, ...l)));
    }, gd);
  })(Y(i), () => {
    var o;
    return (o = e.children) !== null && o !== void 0 ? o : tk;
  }), Ie((o) => n = It(i, 1, "jse-tag svelte-jlw0fj", null, n, o), [() => ({ disabled: !e.onclick })]), Z(t, i), gt();
}
xd(["click"]);
function Xq(t, e, n) {
  typeof e.value == "string" && c(n) && my(t) && (t.preventDefault(), t.stopPropagation(), window.open(e.value, "_blank"));
}
function Zq(t, e) {
  e.readOnly || (t.preventDefault(), e.onSelect(km(e.path)));
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-value.jse-string.svelte-c0g9qz {
  color: var(--jse-value-color-string, #008000);
}
.jse-value.jse-object.svelte-c0g9qz, .jse-value.jse-array.svelte-c0g9qz {
  min-width: 16px;
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
}
.jse-value.jse-number.svelte-c0g9qz {
  color: var(--jse-value-color-number, #ee422e);
}
.jse-value.jse-boolean.svelte-c0g9qz {
  color: var(--jse-value-color-boolean, #ff8c00);
}
.jse-value.jse-null.svelte-c0g9qz {
  color: var(--jse-value-color-null, #004ed0);
}
.jse-value.jse-invalid.svelte-c0g9qz {
  color: var(--jse-text-color, #4d4d4d);
}
.jse-value.jse-url.svelte-c0g9qz {
  color: var(--jse-value-color-url, #008000);
  text-decoration: underline;
}

.jse-value.svelte-c0g9qz {
  display: inline-block;
  min-width: 2em;
  padding: 0 5px;
  box-sizing: border-box;
  outline: none;
  border-radius: 1px;
  vertical-align: top;
  word-break: normal;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
}
.jse-value.jse-table-cell.svelte-c0g9qz {
  overflow-wrap: normal;
  white-space: nowrap;
}
.jse-value.jse-empty.svelte-c0g9qz {
  min-width: 4em;
  outline: 1px dotted var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  -moz-outline-radius: 2px;
}
.jse-value.jse-empty.svelte-c0g9qz::after {
  pointer-events: none;
  color: var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  content: "value";
}`);
var eF = pe('<div role="button" tabindex="-1" data-type="selectable-value"><!> <!></div>');
function tF(t, e) {
  mt(e, !0);
  var n = Gs(!0), r = eo(() => c(n) && typeof e.value == "string" && e.value.length > e.truncateTextSize && (!e.searchResultItems || !e.searchResultItems.some((p) => p.active && p.end > e.truncateTextSize))), i = eo(() => c(r) && typeof e.value == "string" ? e.value.substring(0, e.truncateTextSize).trim() : e.value), o = eo(() => xg(e.value));
  function s() {
    C(n, !1);
  }
  var a = eF();
  a.__click = [Xq, e, o], a.__dblclick = [Zq, e];
  var l = Y(a), u = (p) => {
    var m = eo(() => e.normalization.escapeValue(c(i)));
    CA(p, { get text() {
      return c(m);
    }, get searchResultItems() {
      return e.searchResultItems;
    } });
  }, f = (p) => {
    var m = hi();
    Ie((v) => vt(m, v), [() => hu(e.normalization.escapeValue(c(i)))]), Z(p, m);
  };
  xe(l, (p) => {
    e.searchResultItems ? p(u) : p(f, !1);
  });
  var d = le(l, 2), h = (p) => {
    Op(p, { onclick: s, children: (m, v) => {
      var g = hi();
      Ie((b) => vt(g, "Show more (".concat(b ?? "", ")")), [() => Cp(e.value.length)]), Z(m, g);
    }, $$slots: { default: !0 } });
  };
  xe(d, (p) => {
    c(r) && typeof e.value == "string" && p(h);
  }), Ie((p) => {
    It(a, 1, p, "svelte-c0g9qz"), Ln(a, "title", c(o) ? "Ctrl+Click or Ctrl+Enter to open url in new window" : void 0);
  }, [() => cl(vA(e.value, e.mode, e.parser))]), Z(t, a), gt();
}
xd(["click", "dblclick"]);
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-tooltip.svelte-14y3y8t {
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  line-height: normal;
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
  border-radius: 3px;
  background: var(--jse-context-menu-background, #656565);
  color: var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff));
  white-space: nowrap;
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
}`);
var nF = pe('<div class="jse-tooltip svelte-14y3y8t"> </div>');
function rF(t, e) {
  var n = E(e, "text", 8), r = nF(), i = Y(r);
  Ie(() => vt(i, n())), Z(t, r);
}
function gu(t, e) {
  var n, { text: r, openAbsolutePopup: i, closeAbsolutePopup: o } = e;
  function s() {
    n = i(rF, { text: r }, { position: "top", width: 10 * r.length, offsetTop: 3, anchor: t, closeOnOuterClick: !0 });
  }
  function a() {
    o(n);
  }
  return t.addEventListener("mouseenter", s), t.addEventListener("mouseleave", a), { destroy() {
    t.removeEventListener("mouseenter", s), t.removeEventListener("mouseleave", a);
  } };
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-timestamp.svelte-1jla5ec {
  padding: 0;
  margin: 0;
  vertical-align: middle;
  display: inline-flex;
  color: var(--jse-value-color-number, #ee422e);
}`);
var iF = pe('<div class="jse-timestamp svelte-1jla5ec"><!></div>');
function oF(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = gl("absolute-popup"), i = E(e, "value", 9);
  de(() => _(i()), () => {
    C(n, "Time: ".concat(new Date(i()).toString()));
  }), Bn(), zt(!0);
  var o = iF();
  gn(Y(o), { get data() {
    return _6;
  } }), zi(o, (s, a) => gu?.(s, a), () => De({ text: c(n) }, r)), Z(t, o), gt();
}
function sF(t) {
  var e = [];
  return !t.isEditing && rq(t.value) && e.push({ component: Rq, props: t }), !t.isEditing && iq(t.value) && e.push({ component: zq, props: t }), t.isEditing && e.push({ component: Kq, props: t }), t.isEditing || e.push({ component: tF, props: t }), !t.isEditing && jb(t.value) && e.push({ component: oF, props: t }), e;
}
function no(t) {
  return t.map((e, n) => lF.test(e) ? "[" + e + "]" : /[.[\]]/.test(e) || e === "" ? '["' + (function(r) {
    return r.replace(/"/g, '\\"');
  })(e) + '"]' : (n > 0 ? "." : "") + e).join("");
}
function aF(t) {
  for (var e = [], n = 0; n < t.length; ) t[n] === "." && n++, t[n] === "[" ? (n++, t[n] === '"' ? (n++, e.push(r((o) => o === '"', !0)), i('"')) : e.push(r((o) => o === "]")), i("]")) : e.push(r((o) => o === "." || o === "["));
  function r(o) {
    for (var s = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], a = ""; n < t.length && !o(t[n]); ) s && t[n] === "\\" && t[n + 1] === '"' ? (a += '"', n += 2) : (a += t[n], n++);
    return a;
  }
  function i(o) {
    if (t[n] !== o) throw new SyntaxError("Invalid JSON path: ".concat(o, " expected at position ").concat(n));
    n++;
  }
  return e;
}
function Pa(t) {
  return { value: t, label: Sn(t) ? "(item root)" : no(t) };
}
var lF = /^\d+$/, cF = {}, uF = { showWizard: !0, showOriginal: !0 }, Om = Math.min, Ul = Math.max, Em = Math.round, Zh = Math.floor, $s = (t) => ({ x: t, y: t }), fF = { left: "right", right: "left", bottom: "top", top: "bottom" }, dF = { start: "end", end: "start" };
function Gk(t, e, n) {
  return Ul(t, Om(e, n));
}
function kg(t, e) {
  return typeof t == "function" ? t(e) : t;
}
function rc(t) {
  return t.split("-")[0];
}
function Sg(t) {
  return t.split("-")[1];
}
function OA(t) {
  return t === "x" ? "y" : "x";
}
function EA(t) {
  return t === "y" ? "height" : "width";
}
var hF = /* @__PURE__ */ new Set(["top", "bottom"]);
function Fa(t) {
  return hF.has(rc(t)) ? "y" : "x";
}
function _A(t) {
  return OA(Fa(t));
}
function Pb(t) {
  return t.replace(/start|end/g, (e) => dF[e]);
}
var Jk = ["left", "right"], Yk = ["right", "left"], pF = ["top", "bottom"], mF = ["bottom", "top"];
function gF(t, e, n, r) {
  var i = Sg(t), o = (function(s, a, l) {
    switch (s) {
      case "top":
      case "bottom":
        return l ? a ? Yk : Jk : a ? Jk : Yk;
      case "left":
      case "right":
        return a ? pF : mF;
      default:
        return [];
    }
  })(rc(t), n === "start", r);
  return i && (o = o.map((s) => s + "-" + i), e && (o = o.concat(o.map(Pb)))), o;
}
function ep(t) {
  return t.replace(/left|right|bottom|top/g, (e) => fF[e]);
}
function vF(t) {
  return typeof t != "number" ? (function(e) {
    return De({ top: 0, right: 0, bottom: 0, left: 0 }, e);
  })(t) : { top: t, right: t, bottom: t, left: t };
}
function _m(t) {
  var { x: e, y: n, width: r, height: i } = t;
  return { width: r, height: i, top: n, left: e, right: e + r, bottom: n + i, x: e, y: n };
}
function Qk(t, e, n) {
  var r, { reference: i, floating: o } = t, s = Fa(e), a = _A(e), l = EA(a), u = rc(e), f = s === "y", d = i.x + i.width / 2 - o.width / 2, h = i.y + i.height / 2 - o.height / 2, p = i[l] / 2 - o[l] / 2;
  switch (u) {
    case "top":
      r = { x: d, y: i.y - o.height };
      break;
    case "bottom":
      r = { x: d, y: i.y + i.height };
      break;
    case "right":
      r = { x: i.x + i.width, y: h };
      break;
    case "left":
      r = { x: i.x - o.width, y: h };
      break;
    default:
      r = { x: i.x, y: i.y };
  }
  switch (Sg(e)) {
    case "start":
      r[a] -= p * (n && f ? -1 : 1);
      break;
    case "end":
      r[a] += p * (n && f ? -1 : 1);
  }
  return r;
}
var bF = (function() {
  var t = Mt(function* (e, n, r) {
    for (var { placement: i = "bottom", strategy: o = "absolute", middleware: s = [], platform: a } = r, l = s.filter(Boolean), u = yield a.isRTL == null ? void 0 : a.isRTL(n), f = yield a.getElementRects({ reference: e, floating: n, strategy: o }), { x: d, y: h } = Qk(f, i, u), p = i, m = {}, v = 0, g = 0; g < l.length; g++) {
      var { name: b, fn: x } = l[g], { x: w, y: j, data: y, reset: k } = yield x({ x: d, y: h, initialPlacement: i, placement: p, strategy: o, middlewareData: m, rects: f, platform: a, elements: { reference: e, floating: n } });
      d = w ?? d, h = j ?? h, m = De(De({}, m), {}, { [b]: De(De({}, m[b]), y) }), k && v <= 50 && (v++, typeof k == "object" && (k.placement && (p = k.placement), k.rects && (f = k.rects === !0 ? yield a.getElementRects({ reference: e, floating: n, strategy: o }) : k.rects), { x: d, y: h } = Qk(f, p, u)), g = -1);
    }
    return { x: d, y: h, placement: p, strategy: o, middlewareData: m };
  });
  return function(e, n, r) {
    return t.apply(this, arguments);
  };
})();
function AA(t, e) {
  return Rb.apply(this, arguments);
}
function Rb() {
  return Rb = Mt(function* (t, e) {
    var n;
    e === void 0 && (e = {});
    var { x: r, y: i, platform: o, rects: s, elements: a, strategy: l } = t, { boundary: u = "clippingAncestors", rootBoundary: f = "viewport", elementContext: d = "floating", altBoundary: h = !1, padding: p = 0 } = kg(e, t), m = vF(p), v = a[h ? d === "floating" ? "reference" : "floating" : d], g = _m(yield o.getClippingRect({ element: (n = yield o.isElement == null ? void 0 : o.isElement(v)) == null || n ? v : v.contextElement || (yield o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)), boundary: u, rootBoundary: f, strategy: l })), b = d === "floating" ? { x: r, y: i, width: s.floating.width, height: s.floating.height } : s.reference, x = yield o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating), w = (yield o.isElement == null ? void 0 : o.isElement(x)) && (yield o.getScale == null ? void 0 : o.getScale(x)) || { x: 1, y: 1 }, j = _m(o.convertOffsetParentRelativeRectToViewportRelativeRect ? yield o.convertOffsetParentRelativeRectToViewportRelativeRect({ elements: a, rect: b, offsetParent: x, strategy: l }) : b);
    return { top: (g.top - j.top + m.top) / w.y, bottom: (j.bottom - g.bottom + m.bottom) / w.y, left: (g.left - j.left + m.left) / w.x, right: (j.right - g.right + m.right) / w.x };
  }), Rb.apply(this, arguments);
}
var yF = /* @__PURE__ */ new Set(["left", "top"]);
function Nb() {
  return Nb = Mt(function* (t, e) {
    var { placement: n, platform: r, elements: i } = t, o = yield r.isRTL == null ? void 0 : r.isRTL(i.floating), s = rc(n), a = Sg(n), l = Fa(n) === "y", u = yF.has(s) ? -1 : 1, f = o && l ? -1 : 1, d = kg(e, t), { mainAxis: h, crossAxis: p, alignmentAxis: m } = typeof d == "number" ? { mainAxis: d, crossAxis: 0, alignmentAxis: null } : { mainAxis: d.mainAxis || 0, crossAxis: d.crossAxis || 0, alignmentAxis: d.alignmentAxis };
    return a && typeof m == "number" && (p = a === "end" ? -1 * m : m), l ? { x: p * f, y: h * u } : { x: h * u, y: p * f };
  }), Nb.apply(this, arguments);
}
function Cg() {
  return typeof window < "u";
}
function vu(t) {
  return MA(t) ? (t.nodeName || "").toLowerCase() : "#document";
}
function wo(t) {
  var e;
  return (t == null || (e = t.ownerDocument) == null ? void 0 : e.defaultView) || window;
}
function Ps(t) {
  var e;
  return (e = (MA(t) ? t.ownerDocument : t.document) || window.document) == null ? void 0 : e.documentElement;
}
function MA(t) {
  return !!Cg() && (t instanceof Node || t instanceof wo(t).Node);
}
function es(t) {
  return !!Cg() && (t instanceof Element || t instanceof wo(t).Element);
}
function Is(t) {
  return !!Cg() && (t instanceof HTMLElement || t instanceof wo(t).HTMLElement);
}
function Xk(t) {
  return !(!Cg() || typeof ShadowRoot > "u") && (t instanceof ShadowRoot || t instanceof wo(t).ShadowRoot);
}
var xF = /* @__PURE__ */ new Set(["inline", "contents"]);
function Qf(t) {
  var { overflow: e, overflowX: n, overflowY: r, display: i } = ts(t);
  return /auto|scroll|overlay|hidden|clip/.test(e + r + n) && !xF.has(i);
}
var wF = /* @__PURE__ */ new Set(["table", "td", "th"]);
function jF(t) {
  return wF.has(vu(t));
}
var kF = [":popover-open", ":modal"];
function Am(t) {
  return kF.some((e) => {
    try {
      return t.matches(e);
    } catch {
      return !1;
    }
  });
}
var SF = ["transform", "translate", "scale", "rotate", "perspective"], CF = ["transform", "translate", "scale", "rotate", "perspective", "filter"], OF = ["paint", "layout", "strict", "content"];
function Db(t) {
  var e = Oy(), n = es(t) ? ts(t) : t;
  return SF.some((r) => !!n[r] && n[r] !== "none") || !!n.containerType && n.containerType !== "normal" || !e && !!n.backdropFilter && n.backdropFilter !== "none" || !e && !!n.filter && n.filter !== "none" || CF.some((r) => (n.willChange || "").includes(r)) || OF.some((r) => (n.contain || "").includes(r));
}
function Oy() {
  return !(typeof CSS > "u" || !CSS.supports) && CSS.supports("-webkit-backdrop-filter", "none");
}
var EF = /* @__PURE__ */ new Set(["html", "body", "#document"]);
function Xc(t) {
  return EF.has(vu(t));
}
function ts(t) {
  return wo(t).getComputedStyle(t);
}
function Og(t) {
  return es(t) ? { scrollLeft: t.scrollLeft, scrollTop: t.scrollTop } : { scrollLeft: t.scrollX, scrollTop: t.scrollY };
}
function Ua(t) {
  if (vu(t) === "html") return t;
  var e = t.assignedSlot || t.parentNode || Xk(t) && t.host || Ps(t);
  return Xk(e) ? e.host : e;
}
function TA(t) {
  var e = Ua(t);
  return Xc(e) ? t.ownerDocument ? t.ownerDocument.body : t.body : Is(e) && Qf(e) ? e : TA(e);
}
function Xf(t, e, n) {
  var r;
  e === void 0 && (e = []), n === void 0 && (n = !0);
  var i = TA(t), o = i === ((r = t.ownerDocument) == null ? void 0 : r.body), s = wo(i);
  if (o) {
    var a = Ib(s);
    return e.concat(s, s.visualViewport || [], Qf(i) ? i : [], a && n ? Xf(a) : []);
  }
  return e.concat(i, Xf(i, [], n));
}
function Ib(t) {
  return t.parent && Object.getPrototypeOf(t.parent) ? t.frameElement : null;
}
function $A(t) {
  var e = ts(t), n = parseFloat(e.width) || 0, r = parseFloat(e.height) || 0, i = Is(t), o = i ? t.offsetWidth : n, s = i ? t.offsetHeight : r, a = Em(n) !== o || Em(r) !== s;
  return a && (n = o, r = s), { width: n, height: r, $: a };
}
function Ey(t) {
  return es(t) ? t : t.contextElement;
}
function Zc(t) {
  var e = Ey(t);
  if (!Is(e)) return $s(1);
  var n = e.getBoundingClientRect(), { width: r, height: i, $: o } = $A(e), s = (o ? Em(n.width) : n.width) / r, a = (o ? Em(n.height) : n.height) / i;
  return s && Number.isFinite(s) || (s = 1), a && Number.isFinite(a) || (a = 1), { x: s, y: a };
}
var _F = $s(0);
function PA(t) {
  var e = wo(t);
  return Oy() && e.visualViewport ? { x: e.visualViewport.offsetLeft, y: e.visualViewport.offsetTop } : _F;
}
function ic(t, e, n, r) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  var i = t.getBoundingClientRect(), o = Ey(t), s = $s(1);
  e && (r ? es(r) && (s = Zc(r)) : s = Zc(t));
  var a = (function(y, k, S) {
    return k === void 0 && (k = !1), !(!S || k && S !== wo(y)) && k;
  })(o, n, r) ? PA(o) : $s(0), l = (i.left + a.x) / s.x, u = (i.top + a.y) / s.y, f = i.width / s.x, d = i.height / s.y;
  if (o) for (var h = wo(o), p = r && es(r) ? wo(r) : r, m = h, v = Ib(m); v && r && p !== m; ) {
    var g = Zc(v), b = v.getBoundingClientRect(), x = ts(v), w = b.left + (v.clientLeft + parseFloat(x.paddingLeft)) * g.x, j = b.top + (v.clientTop + parseFloat(x.paddingTop)) * g.y;
    l *= g.x, u *= g.y, f *= g.x, d *= g.y, l += w, u += j, v = Ib(m = wo(v));
  }
  return _m({ width: f, height: d, x: l, y: u });
}
function _y(t, e) {
  var n = Og(t).scrollLeft;
  return e ? e.left + n : ic(Ps(t)).left + n;
}
function RA(t, e, n) {
  n === void 0 && (n = !1);
  var r = t.getBoundingClientRect();
  return { x: r.left + e.scrollLeft - (n ? 0 : _y(t, r)), y: r.top + e.scrollTop };
}
var AF = /* @__PURE__ */ new Set(["absolute", "fixed"]);
function Zk(t, e, n) {
  var r;
  if (e === "viewport") r = (function(o, s) {
    var a = wo(o), l = Ps(o), u = a.visualViewport, f = l.clientWidth, d = l.clientHeight, h = 0, p = 0;
    if (u) {
      f = u.width, d = u.height;
      var m = Oy();
      (!m || m && s === "fixed") && (h = u.offsetLeft, p = u.offsetTop);
    }
    return { width: f, height: d, x: h, y: p };
  })(t, n);
  else if (e === "document") r = (function(o) {
    var s = Ps(o), a = Og(o), l = o.ownerDocument.body, u = Ul(s.scrollWidth, s.clientWidth, l.scrollWidth, l.clientWidth), f = Ul(s.scrollHeight, s.clientHeight, l.scrollHeight, l.clientHeight), d = -a.scrollLeft + _y(o), h = -a.scrollTop;
    return ts(l).direction === "rtl" && (d += Ul(s.clientWidth, l.clientWidth) - u), { width: u, height: f, x: d, y: h };
  })(Ps(t));
  else if (es(e)) r = (function(o, s) {
    var a = ic(o, !0, s === "fixed"), l = a.top + o.clientTop, u = a.left + o.clientLeft, f = Is(o) ? Zc(o) : $s(1);
    return { width: o.clientWidth * f.x, height: o.clientHeight * f.y, x: u * f.x, y: l * f.y };
  })(e, n);
  else {
    var i = PA(t);
    r = { x: e.x - i.x, y: e.y - i.y, width: e.width, height: e.height };
  }
  return _m(r);
}
function NA(t, e) {
  var n = Ua(t);
  return !(n === e || !es(n) || Xc(n)) && (ts(n).position === "fixed" || NA(n, e));
}
function MF(t, e, n) {
  var r = Is(e), i = Ps(e), o = n === "fixed", s = ic(t, !0, o, e), a = { scrollLeft: 0, scrollTop: 0 }, l = $s(0);
  function u() {
    l.x = _y(i);
  }
  if (r || !r && !o) if ((vu(e) !== "body" || Qf(i)) && (a = Og(e)), r) {
    var f = ic(e, !0, o, e);
    l.x = f.x + e.clientLeft, l.y = f.y + e.clientTop;
  } else i && u();
  o && !r && i && u();
  var d = !i || r || o ? $s(0) : RA(i, a);
  return { x: s.left + a.scrollLeft - l.x - d.x, y: s.top + a.scrollTop - l.y - d.y, width: s.width, height: s.height };
}
function Gv(t) {
  return ts(t).position === "static";
}
function eS(t, e) {
  if (!Is(t) || ts(t).position === "fixed") return null;
  if (e) return e(t);
  var n = t.offsetParent;
  return Ps(t) === n && (n = n.ownerDocument.body), n;
}
function tS(t, e) {
  var n = wo(t);
  if (Am(t)) return n;
  if (!Is(t)) {
    for (var r = Ua(t); r && !Xc(r); ) {
      if (es(r) && !Gv(r)) return r;
      r = Ua(r);
    }
    return n;
  }
  for (var i = eS(t, e); i && jF(i) && Gv(i); ) i = eS(i, e);
  return i && Xc(i) && Gv(i) && !Db(i) ? n : i || (function(o) {
    for (var s = Ua(o); Is(s) && !Xc(s); ) {
      if (Db(s)) return s;
      if (Am(s)) return null;
      s = Ua(s);
    }
    return null;
  })(t) || n;
}
var TF = { convertOffsetParentRelativeRectToViewportRelativeRect: function(t) {
  var { elements: e, rect: n, offsetParent: r, strategy: i } = t, o = i === "fixed", s = Ps(r), a = !!e && Am(e.floating);
  if (r === s || a && o) return n;
  var l = { scrollLeft: 0, scrollTop: 0 }, u = $s(1), f = $s(0), d = Is(r);
  if ((d || !d && !o) && ((vu(r) !== "body" || Qf(s)) && (l = Og(r)), Is(r))) {
    var h = ic(r);
    u = Zc(r), f.x = h.x + r.clientLeft, f.y = h.y + r.clientTop;
  }
  var p = !s || d || o ? $s(0) : RA(s, l, !0);
  return { width: n.width * u.x, height: n.height * u.y, x: n.x * u.x - l.scrollLeft * u.x + f.x + p.x, y: n.y * u.y - l.scrollTop * u.y + f.y + p.y };
}, getDocumentElement: Ps, getClippingRect: function(t) {
  var { element: e, boundary: n, rootBoundary: r, strategy: i } = t, o = [...n === "clippingAncestors" ? Am(e) ? [] : (function(l, u) {
    var f = u.get(l);
    if (f) return f;
    for (var d = Xf(l, [], !1).filter((b) => es(b) && vu(b) !== "body"), h = null, p = ts(l).position === "fixed", m = p ? Ua(l) : l; es(m) && !Xc(m); ) {
      var v = ts(m), g = Db(m);
      g || v.position !== "fixed" || (h = null), (p ? !g && !h : !g && v.position === "static" && h && AF.has(h.position) || Qf(m) && !g && NA(l, m)) ? d = d.filter((b) => b !== m) : h = v, m = Ua(m);
    }
    return u.set(l, d), d;
  })(e, this._c) : [].concat(n), r], s = o[0], a = o.reduce((l, u) => {
    var f = Zk(e, u, i);
    return l.top = Ul(f.top, l.top), l.right = Om(f.right, l.right), l.bottom = Om(f.bottom, l.bottom), l.left = Ul(f.left, l.left), l;
  }, Zk(e, s, i));
  return { width: a.right - a.left, height: a.bottom - a.top, x: a.left, y: a.top };
}, getOffsetParent: tS, getElementRects: (function() {
  var t = Mt(function* (e) {
    var n = this.getOffsetParent || tS, r = this.getDimensions, i = yield r(e.floating);
    return { reference: MF(e.reference, yield n(e.floating), e.strategy), floating: { x: 0, y: 0, width: i.width, height: i.height } };
  });
  return function(e) {
    return t.apply(this, arguments);
  };
})(), getClientRects: function(t) {
  return Array.from(t.getClientRects());
}, getDimensions: function(t) {
  var { width: e, height: n } = $A(t);
  return { width: e, height: n };
}, getScale: Zc, isElement: es, isRTL: function(t) {
  return ts(t).direction === "rtl";
} };
function nS(t, e) {
  return t.x === e.x && t.y === e.y && t.width === e.width && t.height === e.height;
}
function $F(t, e, n, r) {
  r === void 0 && (r = {});
  var { ancestorScroll: i = !0, ancestorResize: o = !0, elementResize: s = typeof ResizeObserver == "function", layoutShift: a = typeof IntersectionObserver == "function", animationFrame: l = !1 } = r, u = Ey(t), f = i || o ? [...u ? Xf(u) : [], ...Xf(e)] : [];
  f.forEach((g) => {
    i && g.addEventListener("scroll", n, { passive: !0 }), o && g.addEventListener("resize", n);
  });
  var d, h = u && a ? (function(g, b) {
    var x, w = null, j = Ps(g);
    function y() {
      var k;
      clearTimeout(x), (k = w) == null || k.disconnect(), w = null;
    }
    return (function k(S, T) {
      S === void 0 && (S = !1), T === void 0 && (T = 1), y();
      var M = g.getBoundingClientRect(), { left: N, top: z, width: L, height: W } = M;
      if (S || b(), L && W) {
        var ce = { rootMargin: -Zh(z) + "px " + -Zh(j.clientWidth - (N + L)) + "px " + -Zh(j.clientHeight - (z + W)) + "px " + -Zh(N) + "px", threshold: Ul(0, Om(1, T)) || 1 }, te = !0;
        try {
          w = new IntersectionObserver(we, De(De({}, ce), {}, { root: j.ownerDocument }));
        } catch {
          w = new IntersectionObserver(we, ce);
        }
        w.observe(g);
      }
      function we(Ee) {
        var ae = Ee[0].intersectionRatio;
        if (ae !== T) {
          if (!te) return k();
          ae ? k(!1, ae) : x = setTimeout(() => {
            k(!1, 1e-7);
          }, 1e3);
        }
        ae !== 1 || nS(M, g.getBoundingClientRect()) || k(), te = !1;
      }
    })(!0), y;
  })(u, n) : null, p = -1, m = null;
  s && (m = new ResizeObserver((g) => {
    var [b] = g;
    b && b.target === u && m && (m.unobserve(e), cancelAnimationFrame(p), p = requestAnimationFrame(() => {
      var x;
      (x = m) == null || x.observe(e);
    })), n();
  }), u && !l && m.observe(u), m.observe(e));
  var v = l ? ic(t) : null;
  return l && (function g() {
    var b = ic(t);
    v && !nS(v, b) && n(), v = b, d = requestAnimationFrame(g);
  })(), n(), () => {
    var g;
    f.forEach((b) => {
      i && b.removeEventListener("scroll", n), o && b.removeEventListener("resize", n);
    }), h?.(), (g = m) == null || g.disconnect(), m = null, l && cancelAnimationFrame(d);
  };
}
var PF = function(t) {
  return t === void 0 && (t = 0), { name: "offset", options: t, fn: (e) => Mt(function* () {
    var n, r, { x: i, y: o, placement: s, middlewareData: a } = e, l = yield (function(u, f) {
      return Nb.apply(this, arguments);
    })(e, t);
    return s === ((n = a.offset) == null ? void 0 : n.placement) && (r = a.arrow) != null && r.alignmentOffset ? {} : { x: i + l.x, y: o + l.y, data: De(De({}, l), {}, { placement: s }) };
  })() };
}, RF = function(t) {
  return t === void 0 && (t = {}), { name: "shift", options: t, fn: (e) => Mt(function* () {
    var { x: n, y: r, placement: i } = e, o = kg(t, e), { mainAxis: s = !0, crossAxis: a = !1, limiter: l = { fn: (w) => {
      var { x: j, y } = w;
      return { x: j, y };
    } } } = o, u = s_(o, wB), f = { x: n, y: r }, d = yield AA(e, u), h = Fa(rc(i)), p = OA(h), m = f[p], v = f[h];
    if (s) {
      var g = p === "y" ? "bottom" : "right";
      m = Gk(m + d[p === "y" ? "top" : "left"], m, m - d[g]);
    }
    if (a) {
      var b = h === "y" ? "bottom" : "right";
      v = Gk(v + d[h === "y" ? "top" : "left"], v, v - d[b]);
    }
    var x = l.fn(De(De({}, e), {}, { [p]: m, [h]: v }));
    return De(De({}, x), {}, { data: { x: x.x - n, y: x.y - r, enabled: { [p]: s, [h]: a } } });
  })() };
}, NF = function(t) {
  return t === void 0 && (t = {}), { name: "flip", options: t, fn: (e) => Mt(function* () {
    var n, r, { placement: i, middlewareData: o, rects: s, initialPlacement: a, platform: l, elements: u } = e, f = kg(t, e), { mainAxis: d = !0, crossAxis: h = !0, fallbackPlacements: p, fallbackStrategy: m = "bestFit", fallbackAxisSideDirection: v = "none", flipAlignment: g = !0 } = f, b = s_(f, xB);
    if ((n = o.arrow) != null && n.alignmentOffset) return {};
    var x = rc(i), w = Fa(a), j = rc(a) === a, y = yield l.isRTL == null ? void 0 : l.isRTL(u.floating), k = p || (j || !g ? [ep(a)] : (function(G) {
      var B = ep(G);
      return [Pb(G), B, Pb(B)];
    })(a)), S = v !== "none";
    !p && S && k.push(...gF(a, g, v, y));
    var T = [a, ...k], M = yield AA(e, b), N = [], z = ((r = o.flip) == null ? void 0 : r.overflows) || [];
    if (d && N.push(M[x]), h) {
      var L = (function(G, B, ie) {
        ie === void 0 && (ie = !1);
        var R = Sg(G), O = _A(G), $ = EA(O), ne = O === "x" ? R === (ie ? "end" : "start") ? "right" : "left" : R === "start" ? "bottom" : "top";
        return B.reference[$] > B.floating[$] && (ne = ep(ne)), [ne, ep(ne)];
      })(i, s, y);
      N.push(M[L[0]], M[L[1]]);
    }
    if (z = [...z, { placement: i, overflows: N }], !N.every((G) => G <= 0)) {
      var W, ce, te = (((W = o.flip) == null ? void 0 : W.index) || 0) + 1, we = T[te];
      if (we && (!(h === "alignment" && w !== Fa(we)) || z.every((G) => G.overflows[0] > 0 && Fa(G.placement) === w))) return { data: { index: te, overflows: z }, reset: { placement: we } };
      var Ee = (ce = z.filter((G) => G.overflows[0] <= 0).sort((G, B) => G.overflows[1] - B.overflows[1])[0]) == null ? void 0 : ce.placement;
      if (!Ee) switch (m) {
        case "bestFit":
          var ae, re = (ae = z.filter((G) => {
            if (S) {
              var B = Fa(G.placement);
              return B === w || B === "y";
            }
            return !0;
          }).map((G) => [G.placement, G.overflows.filter((B) => B > 0).reduce((B, ie) => B + ie, 0)]).sort((G, B) => G[1] - B[1])[0]) == null ? void 0 : ae[0];
          re && (Ee = re);
          break;
        case "initialPlacement":
          Ee = a;
      }
      if (i !== Ee) return { reset: { placement: Ee } };
    }
    return {};
  })() };
};
function DF(t) {
  var e, n, r = { autoUpdate: !0 }, i = t, o = (l) => De(De(De({}, r), t || {}), l || {}), s = (l) => {
    e && n && (i = o(l), ((u, f, d) => {
      var h = /* @__PURE__ */ new Map(), p = De({ platform: TF }, d), m = De(De({}, p.platform), {}, { _c: h });
      return bF(u, f, De(De({}, p), {}, { platform: m }));
    })(e, n, i).then((u) => {
      var f;
      Object.assign(n.style, { position: u.strategy, left: "".concat(u.x, "px"), top: "".concat(u.y, "px") }), !((f = i) === null || f === void 0) && f.onComputed && i.onComputed(u);
    }));
  }, a = (l) => {
    Io(l.subscribe((u) => {
      e === void 0 ? (e = u, s()) : (Object.assign(e, u), s());
    }));
  };
  return [(l) => {
    if ("subscribe" in l) return a(l), {};
    e = l, s();
  }, (l, u) => {
    var f;
    n = l, i = o(u), setTimeout(() => s(u), 0), s(u);
    var d = () => {
      f && (f(), f = void 0);
    }, h = function() {
      var { autoUpdate: p } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : i || {};
      d(), p !== !1 && (function() {
        return N_.apply(this, arguments);
      })().then(() => $F(e, n, () => s(i), p === !0 ? {} : p));
    };
    return f = h(), { update(p) {
      s(p), f = h(p);
    }, destroy() {
      d();
    } };
  }, s];
}
function IF(t) {
  var { loadOptions: e, filterText: n, items: r, multiple: i, value: o, itemId: s, groupBy: a, filterSelectedItems: l, itemFilter: u, convertStringItemsToObjects: f, filterGroupedItems: d, label: h } = t;
  if (r && e) return r;
  if (!r) return [];
  r && r.length > 0 && typeof r[0] != "object" && (r = f(r));
  var p = r.filter((m) => {
    var v = u(m[h], n, m);
    return v && i && o != null && o.length && (v = !o.some((g) => !!l && g[s] === m[s])), v;
  });
  return a && (p = d(p)), p;
}
function zF(t) {
  return DA.apply(this, arguments);
}
function DA() {
  return (DA = Mt(function* (t) {
    var { dispatch: e, loadOptions: n, convertStringItemsToObjects: r, filterText: i } = t, o = yield n(i).catch((s) => {
      console.warn("svelte-select loadOptions error :>> ", s), e("error", { type: "loadOptions", details: s });
    });
    if (o && !o.cancelled) return o ? (o && o.length > 0 && typeof o[0] != "object" && (o = r(o)), e("loaded", { items: o })) : o = [], { filteredItems: o, loading: !1, focused: !0, listOpen: !0 };
  })).apply(this, arguments);
}
Tt(`
  svg.svelte-qbd276 {
      width: var(--chevron-icon-width, 20px);
      height: var(--chevron-icon-width, 20px);
      color: var(--chevron-icon-colour, currentColor);
  }
`);
var LF = yl(`<svg width="100%" height="100%" viewBox="0 0 20 20" focusable="false" aria-hidden="true" class="svelte-qbd276"><path fill="currentColor" d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747
          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0
          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502
          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0
          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"></path></svg>`);
Tt(`
    svg.svelte-whdbu1 {
        width: var(--clear-icon-width, 20px);
        height: var(--clear-icon-width, 20px);
        color: var(--clear-icon-color, currentColor);
    }
`);
var BF = yl(`<svg width="100%" height="100%" viewBox="-2 -2 50 50" focusable="false" aria-hidden="true" role="presentation" class="svelte-whdbu1"><path fill="currentColor" d="M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124
    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z"></path></svg>`);
function Jv(t) {
  Z(t, BF());
}
Tt(`
    .loading.svelte-1p3nqvd {
        width: var(--spinner-width, 20px);
        height: var(--spinner-height, 20px);
        color: var(--spinner-color, var(--icons-color));
        animation: svelte-1p3nqvd-rotate 0.75s linear infinite;
        transform-origin: center center;
        transform: none;
    }

    .circle_path.svelte-1p3nqvd {
        stroke-dasharray: 90;
        stroke-linecap: round;
    }

    @keyframes svelte-1p3nqvd-rotate {
        100% {
            transform: rotate(360deg);
        }
    }
`);
var qF = yl('<svg class="loading svelte-1p3nqvd" viewBox="25 25 50 50"><circle class="circle_path svelte-1p3nqvd" cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="5" stroke-miterlimit="10"></circle></svg>');
Tt(`
    .svelte-select.svelte-82qwg8 {
        /* deprecating camelCase custom props in favour of kebab-case for v5 */
        --borderRadius: var(--border-radius);
        --clearSelectColor: var(--clear-select-color);
        --clearSelectWidth: var(--clear-select-width);
        --disabledBackground: var(--disabled-background);
        --disabledBorderColor: var(--disabled-border-color);
        --disabledColor: var(--disabled-color);
        --disabledPlaceholderColor: var(--disabled-placeholder-color);
        --disabledPlaceholderOpacity: var(--disabled-placeholder-opacity);
        --errorBackground: var(--error-background);
        --errorBorder: var(--error-border);
        --groupItemPaddingLeft: var(--group-item-padding-left);
        --groupTitleColor: var(--group-title-color);
        --groupTitleFontSize: var(--group-title-font-size);
        --groupTitleFontWeight: var(--group-title-font-weight);
        --groupTitlePadding: var(--group-title-padding);
        --groupTitleTextTransform: var(--group-title-text-transform);
        --groupTitleBorderColor: var(--group-title-border-color);
        --groupTitleBorderWidth: var(--group-title-border-width);
        --groupTitleBorderStyle: var(--group-title-border-style);
        --indicatorColor: var(--chevron-color);
        --indicatorHeight: var(--chevron-height);
        --indicatorWidth: var(--chevron-width);
        --inputColor: var(--input-color);
        --inputLeft: var(--input-left);
        --inputLetterSpacing: var(--input-letter-spacing);
        --inputMargin: var(--input-margin);
        --inputPadding: var(--input-padding);
        --itemActiveBackground: var(--item-active-background);
        --itemColor: var(--item-color);
        --itemFirstBorderRadius: var(--item-first-border-radius);
        --itemHoverBG: var(--item-hover-bg);
        --itemHoverColor: var(--item-hover-color);
        --itemIsActiveBG: var(--item-is-active-bg);
        --itemIsActiveColor: var(--item-is-active-color);
        --itemIsNotSelectableColor: var(--item-is-not-selectable-color);
        --itemPadding: var(--item-padding);
        --listBackground: var(--list-background);
        --listBorder: var(--list-border);
        --listBorderRadius: var(--list-border-radius);
        --listEmptyColor: var(--list-empty-color);
        --listEmptyPadding: var(--list-empty-padding);
        --listEmptyTextAlign: var(--list-empty-text-align);
        --listMaxHeight: var(--list-max-height);
        --listPosition: var(--list-position);
        --listShadow: var(--list-shadow);
        --listZIndex: var(--list-z-index);
        --multiItemBG: var(--multi-item-bg);
        --multiItemBorderRadius: var(--multi-item-border-radius);
        --multiItemDisabledHoverBg: var(--multi-item-disabled-hover-bg);
        --multiItemDisabledHoverColor: var(--multi-item-disabled-hover-color);
        --multiItemHeight: var(--multi-item-height);
        --multiItemMargin: var(--multi-item-margin);
        --multiItemPadding: var(--multi-item-padding);
        --multiSelectInputMargin: var(--multi-select-input-margin);
        --multiSelectInputPadding: var(--multi-select-input-padding);
        --multiSelectPadding: var(--multi-select-padding);
        --placeholderColor: var(--placeholder-color);
        --placeholderOpacity: var(--placeholder-opacity);
        --selectedItemPadding: var(--selected-item-padding);
        --spinnerColor: var(--spinner-color);
        --spinnerHeight: var(--spinner-height);
        --spinnerWidth: var(--spinner-width);

        --internal-padding: 0 0 0 16px;

        border: var(--border, 1px solid #d8dbdf);
        border-radius: var(--border-radius, 6px);
        min-height: var(--height, 42px);
        position: relative;
        display: flex;
        align-items: stretch;
        padding: var(--padding, var(--internal-padding));
        background: var(--background, #fff);
        margin: var(--margin, 0);
        width: var(--width, 100%);
        font-size: var(--font-size, 16px);
        max-height: var(--max-height);
    }

    .svelte-82qwg8 {
        box-sizing: var(--box-sizing, border-box);
    }

    .svelte-select.svelte-82qwg8:hover {
        border: var(--border-hover, 1px solid #b2b8bf);
    }

    .value-container.svelte-82qwg8 {
        display: flex;
        flex: 1 1 0%;
        flex-wrap: wrap;
        align-items: center;
        gap: 5px 10px;
        padding: var(--value-container-padding, 5px 0);
        position: relative;
        overflow: var(--value-container-overflow, hidden);
        align-self: stretch;
    }

    .prepend.svelte-82qwg8,
    .indicators.svelte-82qwg8 {
        display: flex;
        flex-shrink: 0;
        align-items: center;
    }

    .indicators.svelte-82qwg8 {
        position: var(--indicators-position);
        top: var(--indicators-top);
        right: var(--indicators-right);
        bottom: var(--indicators-bottom);
    }

    input.svelte-82qwg8 {
        position: absolute;
        cursor: default;
        border: none;
        color: var(--input-color, var(--item-color));
        padding: var(--input-padding, 0);
        letter-spacing: var(--input-letter-spacing, inherit);
        margin: var(--input-margin, 0);
        min-width: 10px;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: transparent;
        font-size: var(--font-size, 16px);
    }

    .svelte-82qwg8:not(.multi) > .value-container:where(.svelte-82qwg8) > input:where(.svelte-82qwg8) {
        width: 100%;
        height: 100%;
    }

    input.svelte-82qwg8::placeholder {
        color: var(--placeholder-color, #78848f);
        opacity: var(--placeholder-opacity, 1);
    }

    input.svelte-82qwg8:focus {
        outline: none;
    }

    .svelte-select.focused.svelte-82qwg8 {
        border: var(--border-focused, 1px solid #006fe8);
        border-radius: var(--border-radius-focused, var(--border-radius, 6px));
    }

    .disabled.svelte-82qwg8 {
        background: var(--disabled-background, #ebedef);
        border-color: var(--disabled-border-color, #ebedef);
        color: var(--disabled-color, #c1c6cc);
    }

    .disabled.svelte-82qwg8 input:where(.svelte-82qwg8)::placeholder {
        color: var(--disabled-placeholder-color, #c1c6cc);
        opacity: var(--disabled-placeholder-opacity, 1);
    }

    .selected-item.svelte-82qwg8 {
        position: relative;
        overflow: var(--selected-item-overflow, hidden);
        padding: var(--selected-item-padding, 0 20px 0 0);
        text-overflow: ellipsis;
        white-space: nowrap;
        color: var(--selected-item-color, inherit);
        font-size: var(--font-size, 16px);
    }

    .multi.svelte-82qwg8 .selected-item:where(.svelte-82qwg8) {
        position: absolute;
        line-height: var(--height, 42px);
        height: var(--height, 42px);
    }

    .selected-item.svelte-82qwg8:focus {
        outline: none;
    }

    .hide-selected-item.svelte-82qwg8 {
        opacity: 0;
    }

    .icon.svelte-82qwg8 {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .clear-select.svelte-82qwg8 {
        all: unset;
        display: flex;
        align-items: center;
        justify-content: center;
        width: var(--clear-select-width, 40px);
        height: var(--clear-select-height, 100%);
        color: var(--clear-select-color, var(--icons-color));
        margin: var(--clear-select-margin, 0);
        pointer-events: all;
        flex-shrink: 0;
    }

    .clear-select.svelte-82qwg8:focus {
        outline: var(--clear-select-focus-outline, 1px solid #006fe8);
    }

    .loading.svelte-82qwg8 {
        width: var(--loading-width, 40px);
        height: var(--loading-height);
        color: var(--loading-color, var(--icons-color));
        margin: var(--loading--margin, 0);
        flex-shrink: 0;
    }

    .chevron.svelte-82qwg8 {
        width: var(--chevron-width, 40px);
        height: var(--chevron-height, 40px);
        background: var(--chevron-background, transparent);
        pointer-events: var(--chevron-pointer-events, none);
        color: var(--chevron-color, var(--icons-color));
        border: var(--chevron-border, 0 0 0 1px solid #d8dbdf);
        flex-shrink: 0;
    }

    .multi.svelte-82qwg8 {
        padding: var(--multi-select-padding, var(--internal-padding));
    }

    .multi.svelte-82qwg8 input:where(.svelte-82qwg8) {
        padding: var(--multi-select-input-padding, 0);
        position: relative;
        margin: var(--multi-select-input-margin, 5px 0);
        flex: 1 1 40px;
    }

    .svelte-select.error.svelte-82qwg8 {
        border: var(--error-border, 1px solid #ff2d55);
        background: var(--error-background, #fff);
    }

    .a11y-text.svelte-82qwg8 {
        z-index: 9999;
        border: 0px;
        clip: rect(1px, 1px, 1px, 1px);
        height: 1px;
        width: 1px;
        position: absolute;
        overflow: hidden;
        padding: 0px;
        white-space: nowrap;
    }

    .multi-item.svelte-82qwg8 {
        background: var(--multi-item-bg, #ebedef);
        margin: var(--multi-item-margin, 0);
        outline: var(--multi-item-outline, 1px solid #ddd);
        border-radius: var(--multi-item-border-radius, 4px);
        height: var(--multi-item-height, 25px);
        line-height: var(--multi-item-height, 25px);
        display: flex;
        cursor: default;
        padding: var(--multi-item-padding, 0 5px);
        overflow: hidden;
        gap: var(--multi-item-gap, 4px);
        outline-offset: -1px;
        max-width: var(--multi-max-width, none);
        color: var(--multi-item-color, var(--item-color));
    }

    .multi-item.disabled.svelte-82qwg8:hover {
        background: var(--multi-item-disabled-hover-bg, #ebedef);
        color: var(--multi-item-disabled-hover-color, #c1c6cc);
    }

    .multi-item-text.svelte-82qwg8 {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .multi-item-clear.svelte-82qwg8 {
        display: flex;
        align-items: center;
        justify-content: center;
        --clear-icon-color: var(--multi-item-clear-icon-color, #000);
    }

    .multi-item.active.svelte-82qwg8 {
        outline: var(--multi-item-active-outline, 1px solid #006fe8);
    }

    .svelte-select-list.svelte-82qwg8 {
        box-shadow: var(--list-shadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));
        border-radius: var(--list-border-radius, 4px);
        max-height: var(--list-max-height, 252px);
        overflow-y: auto;
        background: var(--list-background, #fff);
        position: var(--list-position, absolute);
        z-index: var(--list-z-index, 2);
        border: var(--list-border);
    }

    .prefloat.svelte-82qwg8 {
        opacity: 0;
        pointer-events: none;
    }

    .list-group-title.svelte-82qwg8 {
        color: var(--group-title-color, #8f8f8f);
        cursor: default;
        font-size: var(--group-title-font-size, 16px);
        font-weight: var(--group-title-font-weight, 600);
        height: var(--height, 42px);
        line-height: var(--height, 42px);
        padding: var(--group-title-padding, 0 20px);
        text-overflow: ellipsis;
        overflow-x: hidden;
        white-space: nowrap;
        text-transform: var(--group-title-text-transform, uppercase);
        border-width: var(--group-title-border-width, medium);
        border-style: var(--group-title-border-style, none);
        border-color: var(--group-title-border-color, color);
    }

    .empty.svelte-82qwg8 {
        text-align: var(--list-empty-text-align, center);
        padding: var(--list-empty-padding, 20px 0);
        color: var(--list-empty-color, #78848f);
    }

    .item.svelte-82qwg8 {
        cursor: default;
        height: var(--item-height, var(--height, 42px));
        line-height: var(--item-line-height, var(--height, 42px));
        padding: var(--item-padding, 0 20px);
        color: var(--item-color, inherit);
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        transition: var(--item-transition, all 0.2s);
        align-items: center;
        width: 100%;
    }

    .item.group-item.svelte-82qwg8 {
        padding-left: var(--group-item-padding-left, 40px);
    }

    .item.svelte-82qwg8:active {
        background: var(--item-active-background, #b9daff);
    }

    .item.active.svelte-82qwg8 {
        background: var(--item-is-active-bg, #007aff);
        color: var(--item-is-active-color, #fff);
    }

    .item.first.svelte-82qwg8 {
        border-radius: var(--item-first-border-radius, 4px 4px 0 0);
    }

    .item.hover.svelte-82qwg8:not(.active) {
        background: var(--item-hover-bg, #e7f2ff);
        color: var(--item-hover-color, inherit);
    }

    .item.not-selectable.svelte-82qwg8,
    .item.hover.item.not-selectable.svelte-82qwg8,
    .item.active.item.not-selectable.svelte-82qwg8,
    .item.not-selectable.svelte-82qwg8:active {
        color: var(--item-is-not-selectable-color, #999);
        background: transparent;
    }

    .required.svelte-82qwg8 {
        opacity: 0;
        z-index: -1;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
    }
`);
var FF = pe('<div class="list-item svelte-82qwg8" tabindex="-1" role="none"><div><!></div></div>'), UF = pe('<div class="empty svelte-82qwg8">No options</div>'), VF = pe('<div role="none"><!> <!> <!></div>'), WF = pe('<span id="aria-selection" class="svelte-82qwg8"> </span> <span id="aria-context" class="svelte-82qwg8"> </span>', 1), HF = pe('<div class="multi-item-clear svelte-82qwg8"><!></div>'), KF = pe('<div role="none"><span class="multi-item-text svelte-82qwg8"><!></span> <!></div>'), GF = pe("<div><!></div>"), JF = pe('<div class="icon loading svelte-82qwg8" aria-hidden="true"><!></div>'), YF = pe('<button type="button" class="icon clear-select svelte-82qwg8"><!></button>'), QF = pe('<div class="icon chevron svelte-82qwg8" aria-hidden="true"><!></div>'), XF = pe('<input type="hidden" class="svelte-82qwg8"/>'), ZF = pe('<select class="required svelte-82qwg8" required tabindex="-1" aria-hidden="true"></select>'), eU = pe('<div role="none"><!> <span aria-live="polite" aria-atomic="false" aria-relevant="additions text" class="a11y-text svelte-82qwg8"><!></span> <div class="prepend svelte-82qwg8"><!></div> <div class="value-container svelte-82qwg8"><!> <input/></div> <div class="indicators svelte-82qwg8"><!> <!> <!></div> <!> <!></div>');
function $l(t, e) {
  var n = (function(fe) {
    var ke = {};
    for (var Ue in fe.children && (ke.default = !0), fe.$$slots) ke[Ue] = !0;
    return ke;
  })(e);
  mt(e, !1);
  var r, i = Q(), o = Q(), s = Q(), a = Q(), l = Q(), u = Q(), f = Q(), d = Q(), h = Q(), p = WB(), m = E(e, "justValue", 12, null), v = E(e, "filter", 8, IF), g = E(e, "getItems", 8, zF), b = E(e, "id", 8, null), x = E(e, "name", 8, null), w = E(e, "container", 12, void 0), j = E(e, "input", 12, void 0), y = E(e, "multiple", 8, !1), k = E(e, "multiFullItemClearable", 8, !1), S = E(e, "disabled", 8, !1), T = E(e, "focused", 12, !1), M = E(e, "value", 12, null), N = E(e, "filterText", 12, ""), z = E(e, "placeholder", 8, "Please select"), L = E(e, "placeholderAlwaysShow", 8, !1), W = E(e, "items", 12, null), ce = E(e, "label", 8, "label"), te = E(e, "itemFilter", 8, (fe, ke, Ue) => "".concat(fe).toLowerCase().includes(ke.toLowerCase())), we = E(e, "groupBy", 8, void 0), Ee = E(e, "groupFilter", 8, (fe) => fe), ae = E(e, "groupHeaderSelectable", 8, !1), re = E(e, "itemId", 8, "value"), G = E(e, "loadOptions", 8, void 0), B = E(e, "containerStyles", 8, ""), ie = E(e, "hasError", 8, !1), R = E(e, "filterSelectedItems", 8, !0), O = E(e, "required", 8, !1), $ = E(e, "closeListOnChange", 8, !0), ne = E(e, "clearFilterTextOnBlur", 8, !0), je = E(e, "createGroupHeaderItem", 8, (fe, ke) => ({ value: fe, [ce()]: fe })), J = () => c(f), H = E(e, "searchable", 8, !0), ue = E(e, "inputStyles", 8, ""), P = E(e, "clearable", 8, !0), V = E(e, "loading", 12, !1), U = E(e, "listOpen", 12, !1), me = E(e, "debounce", 8, function(fe) {
    var ke = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
    clearTimeout(r), r = setTimeout(fe, ke);
  }), X = E(e, "debounceWait", 8, 300), K = E(e, "hideEmptyState", 8, !1), rt = E(e, "inputAttributes", 24, () => ({})), Qe = E(e, "listAutoWidth", 8, !0), Ae = E(e, "showChevron", 8, !1), tt = E(e, "listOffset", 8, 5), Re = E(e, "hoverItemIndex", 12, 0), qe = E(e, "floatingConfig", 24, () => ({})), pt = E(e, "class", 8, ""), Ge = Q(), $t = Q(), A = Q(), D = Q(), F = Q();
  function oe(fe) {
    return fe.map((ke, Ue) => ({ index: Ue, value: ke, label: "".concat(ke) }));
  }
  function ve(fe) {
    var ke = [], Ue = {};
    fe.forEach((dn) => {
      var Ut = we()(dn);
      ke.includes(Ut) || (ke.push(Ut), Ue[Ut] = [], Ut && Ue[Ut].push(Object.assign(je()(Ut, dn), { id: Ut, groupHeader: !0, selectable: ae() }))), Ue[Ut].push(Object.assign({ groupItem: !!Ut }, dn));
    });
    var Nt = [];
    return Ee()(ke).forEach((dn) => {
      Ue[dn] && Nt.push(...Ue[dn]);
    }), Nt;
  }
  function Ne() {
    var fe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, ke = arguments.length > 1 ? arguments[1] : void 0;
    Re(fe < 0 ? 0 : fe), !ke && we() && c(f)[Re()] && !c(f)[Re()].selectable && Qt(1);
  }
  function Fe() {
    var fe = !0;
    if (M()) {
      var ke = [], Ue = [];
      M().forEach((Nt) => {
        ke.includes(Nt[re()]) ? fe = !1 : (ke.push(Nt[re()]), Ue.push(Nt));
      }), fe || M(Ue);
    }
    return fe;
  }
  function ye(fe) {
    var ke = fe ? fe[re()] : M()[re()];
    return W().find((Ue) => Ue[re()] === ke);
  }
  function ge(fe) {
    return yt.apply(this, arguments);
  }
  function yt() {
    return (yt = Mt(function* (fe) {
      var ke = M()[fe];
      M().length === 1 ? M(void 0) : M(M().filter((Ue) => Ue !== ke)), p("clear", ke);
    })).apply(this, arguments);
  }
  function ot(fe) {
    if (T()) switch (fe.stopPropagation(), fe.key) {
      case "Escape":
        fe.preventDefault(), en();
        break;
      case "Enter":
        if (fe.preventDefault(), U()) {
          if (c(f).length === 0) break;
          var ke = c(f)[Re()];
          if (M() && !y() && M()[re()] === ke[re()]) {
            en();
            break;
          }
          Xe(c(f)[Re()]);
        }
        break;
      case "ArrowDown":
        fe.preventDefault(), U() ? Qt(1) : (U(!0), C(Ge, void 0));
        break;
      case "ArrowUp":
        fe.preventDefault(), U() ? Qt(-1) : (U(!0), C(Ge, void 0));
        break;
      case "Tab":
        if (U() && T()) {
          if (c(f).length === 0 || M() && M()[re()] === c(f)[Re()][re()]) return en();
          fe.preventDefault(), Xe(c(f)[Re()]), en();
        }
        break;
      case "Backspace":
        if (!y() || N().length > 0) return;
        if (y() && M() && M().length > 0) {
          if (ge(c(Ge) !== void 0 ? c(Ge) : M().length - 1), c(Ge) === 0 || c(Ge) === void 0) break;
          C(Ge, M().length > c(Ge) ? c(Ge) - 1 : void 0);
        }
        break;
      case "ArrowLeft":
        if (!M() || !y() || N().length > 0) return;
        c(Ge) === void 0 ? C(Ge, M().length - 1) : M().length > c(Ge) && c(Ge) !== 0 && C(Ge, c(Ge) - 1);
        break;
      case "ArrowRight":
        if (!M() || !y() || N().length > 0 || c(Ge) === void 0) return;
        c(Ge) === M().length - 1 ? C(Ge, void 0) : c(Ge) < M().length - 1 && C(Ge, c(Ge) + 1);
    }
  }
  function _e(fe) {
    var ke, Ue;
    T() && j() === ((ke = document) === null || ke === void 0 ? void 0 : ke.activeElement) || (fe && p("focus", fe), (Ue = j()) === null || Ue === void 0 || Ue.focus(), T(!0));
  }
  function xt(fe) {
    return bn.apply(this, arguments);
  }
  function bn() {
    return (bn = Mt(function* (fe) {
      var ke;
      Ot || (U() || T()) && (p("blur", fe), en(), T(!1), C(Ge, void 0), (ke = j()) === null || ke === void 0 || ke.blur());
    })).apply(this, arguments);
  }
  function qn() {
    if (!S()) return N().length > 0 ? U(!0) : void U(!U());
  }
  function un() {
    p("clear", M()), M(void 0), en(), _e();
  }
  function en() {
    ne() && N(""), U(!1);
  }
  HB(Mt(function* () {
    C($t, M()), C(A, N()), C(D, y());
  })), Ti(() => {
    U() && T(!0), T() && j() && j().focus();
  });
  var Rn = E(e, "ariaValues", 8, (fe) => "Option ".concat(fe, ", selected.")), on = E(e, "ariaListOpen", 8, (fe, ke) => "You are currently focused on option ".concat(fe, ". There are ").concat(ke, " results available.")), qt = E(e, "ariaFocused", 8, () => "Select is focused, type to refine list, press down to open the menu."), Pt, an = Q(null);
  function yn() {
    clearTimeout(Pt), Pt = setTimeout(() => {
      Ot = !1;
    }, 100);
  }
  Io(() => {
    var fe;
    (fe = c(an)) === null || fe === void 0 || fe.remove();
  });
  var Ot = !1;
  function Xe(fe) {
    fe && fe.selectable !== !1 && (function(ke) {
      if (ke) {
        N("");
        var Ue = Object.assign({}, ke);
        if (Ue.groupHeader && !Ue.selectable) return;
        M(y() ? M() ? M().concat([Ue]) : [Ue] : M(Ue)), setTimeout(() => {
          $() && en(), C(Ge, void 0), p("change", M()), p("select", ke);
        });
      }
    })(fe);
  }
  function tn(fe) {
    Ot || Re(fe);
  }
  function Qt(fe) {
    if (c(f).filter((Ue) => !Object.hasOwn(Ue, "selectable") || Ue.selectable === !0).length === 0) return Re(0);
    fe > 0 && Re() === c(f).length - 1 ? Re(0) : fe < 0 && Re() === 0 ? Re(c(f).length - 1) : Re(Re() + fe);
    var ke = c(f)[Re()];
    ke && ke.selectable === !1 && (fe !== 1 && fe !== -1 || Qt(fe));
  }
  function Hn(fe, ke, Ue) {
    if (!y()) return ke && ke[Ue] === fe[Ue];
  }
  var Kn = Vr, On = Vr;
  function Vr(fe) {
    return { update(ke) {
      ke.scroll && (yn(), fe.scrollIntoView({ behavior: "auto", block: "nearest" }));
    } };
  }
  var Gn = Q({ strategy: "absolute", placement: "bottom-start", middleware: [PF(tt()), NF(), RF()], autoUpdate: !1 }), [xr, Jr, Yr] = DF(c(Gn)), zr = Q(!0);
  de(() => (_(W()), _(M())), () => {
    W(), M() && (function() {
      if (typeof M() == "string") {
        var fe = (W() || []).find((ke) => ke[re()] === M());
        M(fe || { [re()]: M(), label: M() });
      } else y() && Array.isArray(M()) && M().length > 0 && M(M().map((ke) => typeof ke == "string" ? { value: ke, label: ke } : ke));
    })();
  }), de(() => (_(rt()), _(H())), () => {
    !rt() && H() || (C(F, Object.assign({ autocapitalize: "none", autocomplete: "off", autocorrect: "off", spellcheck: !1, tabindex: 0, type: "text", "aria-autocomplete": "list" }, rt())), b() && bo(F, c(F).id = b()), H() || bo(F, c(F).readonly = !0));
  }), de(() => _(y()), () => {
    y() && M() && (Array.isArray(M()) ? M([...M()]) : M([M()]));
  }), de(() => (c(D), _(y())), () => {
    c(D) && !y() && M() && M(null);
  }), de(() => (_(y()), _(M())), () => {
    y() && M() && M().length > 1 && Fe();
  }), de(() => _(M()), () => {
    M() && (y() ? JSON.stringify(M()) !== JSON.stringify(c($t)) && Fe() && p("input", M()) : c($t) && JSON.stringify(M()[re()]) === JSON.stringify(c($t)[re()]) || p("input", M()));
  }), de(() => (_(M()), _(y()), c($t)), () => {
    !M() && y() && c($t) && p("input", M());
  }), de(() => (_(T()), _(j())), () => {
    !T() && j() && en();
  }), de(() => (_(N()), c(A)), () => {
    N() !== c(A) && (G() || N().length !== 0) && (G() ? me()(Mt(function* () {
      V(!0);
      var fe = yield g()({ dispatch: p, loadOptions: G(), convertStringItemsToObjects: oe, filterText: N() });
      fe ? (V(fe.loading), U(U() ? fe.listOpen : N().length > 0), T(U() && fe.focused), W(we() ? ve(fe.filteredItems) : fe.filteredItems)) : (V(!1), T(!0), U(!0));
    }), X()) : (U(!0), y() && C(Ge, void 0)));
  }), de(() => (_(v()), _(G()), _(N()), _(W()), _(y()), _(M()), _(re()), _(we()), _(ce()), _(R()), _(te())), () => {
    C(f, v()({ loadOptions: G(), filterText: N(), items: W(), multiple: y(), value: M(), itemId: re(), groupBy: we(), label: ce(), filterSelectedItems: R(), itemFilter: te(), convertStringItemsToObjects: oe, filterGroupedItems: ve }));
  }), de(() => (_(y()), _(U()), _(M()), c(f)), () => {
    !y() && U() && M() && c(f) && Ne(c(f).findIndex((fe) => fe[re()] === M()[re()]), !0);
  }), de(() => (_(U()), _(y())), () => {
    U() && y() && Re(0);
  }), de(() => _(N()), () => {
    N() && Re(0);
  }), de(() => _(Re()), () => {
    var fe;
    fe = Re(), p("hoverItem", fe);
  }), de(() => (_(y()), _(M())), () => {
    C(i, y() ? M() && M().length > 0 : M());
  }), de(() => (c(i), _(N())), () => {
    C(o, c(i) && N().length > 0);
  }), de(() => (c(i), _(P()), _(S()), _(V())), () => {
    C(s, c(i) && P() && !S() && !V());
  }), de(() => (_(L()), _(y()), _(z()), _(M())), () => {
    var fe;
    C(a, L() && y() || y() && ((fe = M()) === null || fe === void 0 ? void 0 : fe.length) === 0 ? z() : M() ? "" : z());
  }), de(() => (_(M()), _(y())), () => {
    var fe, ke;
    C(l, M() ? (fe = y(), ke = void 0, ke = fe && M().length > 0 ? M().map((Ue) => Ue[ce()]).join(", ") : M()[ce()], Rn()(ke)) : "");
  }), de(() => (c(f), _(Re()), _(T()), _(U())), () => {
    C(u, (function() {
      if (!c(f) || c(f).length === 0) return "";
      var fe = c(f)[Re()];
      if (U() && fe) {
        var ke = c(f) ? c(f).length : 0;
        return on()(fe[ce()], ke);
      }
      return qt()();
    })((c(f), Re(), T(), U())));
  }), de(() => _(W()), () => {
    (function(fe) {
      fe && fe.length !== 0 && !fe.some((ke) => typeof ke != "object") && M() && (y() ? !M().some((ke) => !ke || !ke[re()]) : M()[re()]) && (Array.isArray(M()) ? M(M().map((ke) => ye(ke) || ke)) : M(ye() || M()));
    })(W());
  }), de(() => (_(y()), _(M()), _(re())), () => {
    m((y(), M(), re(), y() ? M() ? M().map((fe) => fe[re()]) : null : M() ? M()[re()] : M()));
  }), de(() => (_(y()), c($t), _(M())), () => {
    y() || !c($t) || M() || p("input", M());
  }), de(() => (_(U()), c(f), _(y()), _(M())), () => {
    U() && c(f) && !y() && !M() && Ne();
  }), de(() => c(f), () => {
    (function(fe) {
      U() && p("filter", fe);
    })(c(f));
  }), de(() => (_(w()), _(qe()), c(Gn)), () => {
    w() && qe() && Yr(Object.assign(c(Gn), qe()));
  }), de(() => c(an), () => {
    C(d, !!c(an));
  }), de(() => (c(an), _(U())), () => {
    (function(fe, ke) {
      if (!fe || !ke) return C(zr, !0);
      setTimeout(() => {
        C(zr, !1);
      }, 0);
    })(c(an), U());
  }), de(() => (_(U()), _(w()), c(an)), () => {
    U() && w() && c(an) && (function() {
      var { width: fe } = w().getBoundingClientRect();
      bo(an, c(an).style.width = Qe() ? fe + "px" : "auto");
    })();
  }), de(() => _(Re()), () => {
    C(h, Re());
  }), de(() => (_(j()), _(U()), _(T())), () => {
    j() && U() && !T() && _e();
  }), de(() => (_(w()), _(qe())), () => {
    var fe;
    w() && ((fe = qe()) === null || fe === void 0 ? void 0 : fe.autoUpdate) === void 0 && bo(Gn, c(Gn).autoUpdate = !0);
  }), Bn(), zt();
  var Zn, Ar = eU();
  Pe("click", ca, function(fe) {
    var ke;
    U() || T() || !w() || w().contains(fe.target) || (ke = c(an)) !== null && ke !== void 0 && ke.contains(fe.target) || xt();
  }), Pe("keydown", ca, ot);
  var Te = Y(Ar), ln = (fe) => {
    var ke, Ue = VF(), Nt = Y(Ue), dn = (Lt) => {
      var In = Er();
      Pr(wt(In), e, "list-prepend", {}, null), Z(Lt, In);
    };
    xe(Nt, (Lt) => {
      ee(() => n["list-prepend"]) && Lt(dn);
    });
    var Ut = le(Nt, 2), Dn = (Lt) => {
      var In = Er();
      Pr(wt(In), e, "list", { get filteredItems() {
        return c(f);
      } }, null), Z(Lt, In);
    }, wr = (Lt, In) => {
      var ji = (mr) => {
        var Tn = Er();
        Ir(wt(Tn), 1, () => c(f), Kr, (tr, ct, Vn) => {
          var Lr, Wt = FF(), so = Y(Wt);
          Pr(Y(so), e, "item", { get item() {
            return c(ct);
          }, index: Vn }, (Br) => {
            var Qr = hi();
            Ie(() => vt(Qr, (c(ct), _(ce()), ee(() => {
              var Wr;
              return (Wr = c(ct)) === null || Wr === void 0 ? void 0 : Wr[ce()];
            })))), Z(Br, Qr);
          }), zi(so, (Br, Qr) => Kn?.(Br), () => ({ scroll: Hn(c(ct), M(), re()), listDom: c(d) })), zi(so, (Br, Qr) => On?.(Br), () => ({ scroll: c(h) === Vn, listDom: c(d) })), Ie((Br) => Lr = It(so, 1, "item svelte-82qwg8", null, Lr, Br), [() => {
            var Br, Qr;
            return { "list-group-title": c(ct).groupHeader, active: Hn(c(ct), M(), re()), first: (Qr = Vn, Qr === 0), hover: Re() === Vn, "group-item": c(ct).groupItem, "not-selectable": ((Br = c(ct)) === null || Br === void 0 ? void 0 : Br.selectable) === !1 };
          }], Oe), Pe("mouseover", Wt, () => tn(Vn)), Pe("focus", Wt, () => tn(Vn)), Pe("click", Wt, Ys(() => (function(Br) {
            var { item: Qr, i: Wr } = Br;
            if (Qr?.selectable !== !1) return M() && !y() && M()[re()] === Qr[re()] ? en() : void ((function(ki) {
              return ki.groupHeader && ki.selectable || ki.selectable || !ki.hasOwnProperty("selectable");
            })(Qr) && (Re(Wr), Xe(Qr)));
          })({ item: c(ct), i: Vn }))), Pe("keydown", Wt, Oa(Ys(function(Br) {
            rf.call(this, e, Br);
          }))), Z(tr, Wt);
        }), Z(mr, Tn);
      }, Et = (mr, Tn) => {
        var tr = (ct) => {
          var Vn = Er();
          Pr(wt(Vn), e, "empty", {}, (Lr) => {
            Z(Lr, UF());
          }), Z(ct, Vn);
        };
        xe(mr, (ct) => {
          K() || ct(tr);
        }, Tn);
      };
      xe(Lt, (mr) => {
        c(f), ee(() => c(f).length > 0) ? mr(ji) : mr(Et, !1);
      }, In);
    };
    xe(Ut, (Lt) => {
      ee(() => n.list) ? Lt(Dn) : Lt(wr, !1);
    });
    var Jn = le(Ut, 2), cn = (Lt) => {
      var In = Er();
      Pr(wt(In), e, "list-append", {}, null), Z(Lt, In);
    };
    xe(Jn, (Lt) => {
      ee(() => n["list-append"]) && Lt(cn);
    }), zi(Ue, (Lt) => Jr?.(Lt)), pr(Ue, (Lt) => C(an, Lt), () => c(an)), yi(() => Pe("scroll", Ue, yn)), yi(() => Pe("pointerup", Ue, Oa(Ys(function(Lt) {
      rf.call(this, e, Lt);
    })))), yi(() => Pe("mousedown", Ue, Oa(Ys(function(Lt) {
      rf.call(this, e, Lt);
    })))), Ie((Lt) => ke = It(Ue, 1, "svelte-select-list svelte-82qwg8", null, ke, Lt), [() => ({ prefloat: c(zr) })], Oe), Z(fe, Ue);
  };
  xe(Te, (fe) => {
    U() && fe(ln);
  });
  var Nn = le(Te, 2), er = Y(Nn), be = (fe) => {
    var ke = WF(), Ue = wt(ke), Nt = Y(Ue), dn = Y(le(Ue, 2));
    Ie(() => {
      vt(Nt, c(l)), vt(dn, c(u));
    }), Z(fe, ke);
  };
  xe(er, (fe) => {
    T() && fe(be);
  });
  var Le = le(Nn, 2);
  Pr(Y(Le), e, "prepend", {}, null);
  var We = le(Le, 2), Rt = Y(We), Jt = (fe) => {
    var ke = Er(), Ue = wt(ke), Nt = (Ut) => {
      var Dn = Er();
      Ir(wt(Dn), 1, M, Kr, (wr, Jn, cn) => {
        var Lt, In = KF(), ji = Y(In);
        Pr(Y(ji), e, "selection", { get selection() {
          return c(Jn);
        }, index: cn }, (Tn) => {
          var tr = hi();
          Ie(() => vt(tr, (c(Jn), _(ce()), ee(() => c(Jn)[ce()])))), Z(Tn, tr);
        });
        var Et = le(ji, 2), mr = (Tn) => {
          var tr = HF();
          Pr(Y(tr), e, "multi-clear-icon", {}, (ct) => {
            Jv(ct);
          }), Pe("pointerup", tr, Oa(Ys(() => ge(cn)))), Z(Tn, tr);
        };
        xe(Et, (Tn) => {
          S() || k() || !Jv || Tn(mr);
        }), Ie((Tn) => Lt = It(In, 1, "multi-item svelte-82qwg8", null, Lt, Tn), [() => ({ active: c(Ge) === cn, disabled: S() })], Oe), Pe("click", In, Oa(() => k() ? ge(cn) : {})), Pe("keydown", In, Oa(Ys(function(Tn) {
          rf.call(this, e, Tn);
        }))), Z(wr, In);
      }), Z(Ut, Dn);
    }, dn = (Ut) => {
      var Dn, wr = GF();
      Pr(Y(wr), e, "selection", { get selection() {
        return M();
      } }, (Jn) => {
        var cn = hi();
        Ie(() => vt(cn, (_(M()), _(ce()), ee(() => M()[ce()])))), Z(Jn, cn);
      }), Ie((Jn) => Dn = It(wr, 1, "selected-item svelte-82qwg8", null, Dn, Jn), [() => ({ "hide-selected-item": c(o) })], Oe), Z(Ut, wr);
    };
    xe(Ue, (Ut) => {
      y() ? Ut(Nt) : Ut(dn, !1);
    }), Z(fe, ke);
  };
  xe(Rt, (fe) => {
    c(i) && fe(Jt);
  });
  var Yt = le(Rt, 2);
  jp(Yt, () => De(De({ readOnly: !H() }, c(F)), {}, { placeholder: c(a), style: ue(), disabled: S() }), void 0, "svelte-82qwg8"), pr(Yt, (fe) => j(fe), () => j());
  var fn = le(We, 2), ht = Y(fn), Gt = (fe) => {
    var ke = JF();
    Pr(Y(ke), e, "loading-icon", {}, (Ue) => {
      (function(Nt) {
        Z(Nt, qF());
      })(Ue);
    }), Z(fe, ke);
  };
  xe(ht, (fe) => {
    V() && fe(Gt);
  });
  var et = le(ht, 2), Mn = (fe) => {
    var ke = YF();
    Pr(Y(ke), e, "clear-icon", {}, (Ue) => {
      Jv(Ue);
    }), Pe("click", ke, un), Z(fe, ke);
  };
  xe(et, (fe) => {
    c(s) && fe(Mn);
  });
  var Fn = le(et, 2), lr = (fe) => {
    var ke = QF();
    Pr(Y(ke), e, "chevron-icon", { get listOpen() {
      return U();
    } }, (Ue) => {
      (function(Nt) {
        Z(Nt, LF());
      })(Ue);
    }), Z(fe, ke);
  };
  xe(Fn, (fe) => {
    Ae() && fe(lr);
  });
  var Vt = le(fn, 2);
  Pr(Vt, e, "input-hidden", { get value() {
    return M();
  } }, (fe) => {
    var ke = XF();
    Ie((Ue) => {
      Ln(ke, "name", x()), ec(ke, Ue);
    }, [() => (_(M()), ee(() => M() ? JSON.stringify(M()) : null))], Oe), Z(fe, ke);
  });
  var xn = le(Vt, 2), Ft = (fe) => {
    var ke = Er();
    Pr(wt(ke), e, "required", { get value() {
      return M();
    } }, (Ue) => {
      Z(Ue, ZF());
    }), Z(fe, ke);
  };
  return xe(xn, (fe) => {
    _(O()), _(M()), ee(() => O() && (!M() || M().length === 0)) && fe(Ft);
  }), yi(() => Pe("pointerup", Ar, Oa(qn))), pr(Ar, (fe) => w(fe), () => w()), zi(Ar, (fe) => xr?.(fe)), Ie((fe) => {
    var ke;
    Zn = It(Ar, 1, "svelte-select ".concat((ke = pt()) !== null && ke !== void 0 ? ke : ""), "svelte-82qwg8", Zn, fe), Qo(Ar, B());
  }, [() => ({ multi: y(), disabled: S(), focused: T(), "list-open": U(), "show-chevron": Ae(), error: ie() })], Oe), Pe("keydown", Yt, ot), Pe("blur", Yt, xt), Pe("focus", Yt, _e), vm(Yt, N), Z(t, Ar), Ct(e, "getFilteredItems", J), Ct(e, "handleClear", un), gt({ getFilteredItems: J, handleClear: un });
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
table.jse-transform-wizard.svelte-qbze6z {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
}
table.jse-transform-wizard.svelte-qbze6z input:where(.svelte-qbze6z) {
  font-family: inherit;
  font-size: inherit;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) th:where(.svelte-qbze6z) {
  font-weight: normal;
  text-align: left;
  width: 60px;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) {
  width: 100%;
  display: flex;
  flex-direction: row;
  margin-bottom: calc(0.5 * var(--jse-padding, 10px));
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select .multi-item {
  align-items: center;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select .value-container {
  gap: 0 !important;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select.jse-filter-path {
  flex: 4;
  margin-right: calc(0.5 * var(--jse-padding, 10px));
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select.jse-filter-relation {
  flex: 1.5;
  margin-right: calc(0.5 * var(--jse-padding, 10px));
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select.jse-sort-path {
  flex: 3;
  margin-right: calc(0.5 * var(--jse-padding, 10px));
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select.jse-sort-direction {
  flex: 1;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select.jse-projection-paths {
  flex: 1;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .svelte-select input {
  box-sizing: border-box;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .jse-filter-value:where(.svelte-qbze6z) {
  flex: 4;
  padding: 4px 8px;
  border: var(--jse-input-border, 1px solid #d8dbdf);
  border-radius: var(--jse-input-radius, 3px);
  outline: none;
  background: var(--jse-input-background, var(--jse-background-color, #fff));
  color: inherit;
}
table.jse-transform-wizard.svelte-qbze6z tr:where(.svelte-qbze6z) td:where(.svelte-qbze6z) .jse-horizontal:where(.svelte-qbze6z) .jse-filter-value:where(.svelte-qbze6z):focus {
  border: var(--jse-input-border-focus, 1px solid var(--jse-input-border-focus, var(--jse-theme-color, #3883fa)));
}`);
var tU = pe('<table class="jse-transform-wizard svelte-qbze6z"><tbody><tr class="svelte-qbze6z"><th class="svelte-qbze6z">Filter</th><td class="svelte-qbze6z"><div class="jse-horizontal svelte-qbze6z"><!> <!> <input class="jse-filter-value svelte-qbze6z"/></div></td></tr><tr class="svelte-qbze6z"><th class="svelte-qbze6z">Sort</th><td class="svelte-qbze6z"><div class="jse-horizontal svelte-qbze6z"><!> <!></div></td></tr><tr class="svelte-qbze6z"><th class="svelte-qbze6z">Pick</th><td class="svelte-qbze6z"><div class="jse-horizontal svelte-qbze6z"><!></div></td></tr></tbody></table>');
function nU(t, e) {
  var n, r, i, o, s;
  mt(e, !1);
  var a = Q(void 0, !0), l = Q(void 0, !0), u = Q(void 0, !0), f = Q(void 0, !0), d = Q(void 0, !0), h = Q(void 0, !0), p = ui("jsoneditor:TransformWizard"), m = E(e, "json", 9), v = E(e, "queryOptions", 29, () => ({})), g = E(e, "onChange", 9), b = ["==", "!=", "<", "<=", ">", ">="].map((R) => ({ value: R, label: R })), x = [{ value: "asc", label: "ascending" }, { value: "desc", label: "descending" }], w = Q((n = v()) !== null && n !== void 0 && (n = n.filter) !== null && n !== void 0 && n.path ? Pa(v().filter.path) : void 0, !0), j = Q((r = b.find((R) => {
    var O;
    return R.value === ((O = v().filter) === null || O === void 0 ? void 0 : O.relation);
  })) !== null && r !== void 0 ? r : b[0], !0), y = Q(((i = v()) === null || i === void 0 || (i = i.filter) === null || i === void 0 ? void 0 : i.value) || "", !0), k = Q((o = v()) !== null && o !== void 0 && (o = o.sort) !== null && o !== void 0 && o.path ? Pa(v().sort.path) : void 0, !0), S = Q((s = x.find((R) => {
    var O;
    return R.value === ((O = v().sort) === null || O === void 0 ? void 0 : O.direction);
  })) !== null && s !== void 0 ? s : x[0], !0);
  de(() => _(m()), () => {
    C(a, Array.isArray(m()));
  }), de(() => (c(a), _(m())), () => {
    C(l, c(a) ? kb(m()) : []);
  }), de(() => (c(a), _(m())), () => {
    C(u, c(a) ? kb(m(), !0) : []);
  }), de(() => (c(l), Pa), () => {
    C(f, c(l).map(Pa));
  }), de(() => (c(u), Pa), () => {
    C(d, c(u) ? c(u).map(Pa) : []);
  }), de(() => (_(v()), c(d), Zt), () => {
    var R;
    C(h, (R = v()) !== null && R !== void 0 && (R = R.projection) !== null && R !== void 0 && R.paths && c(d) ? v().projection.paths.map((O) => c(d).find(($) => Zt($.value, O))).filter((O) => !!O) : void 0);
  }), de(() => c(w), () => {
    var R, O, $;
    O = (R = c(w)) === null || R === void 0 ? void 0 : R.value, Zt(($ = v()) === null || $ === void 0 || ($ = $.filter) === null || $ === void 0 ? void 0 : $.path, O) || (p("changeFilterPath", O), v(Ji(v(), ["filter", "path"], O, !0)), g()(v()));
  }), de(() => c(j), () => {
    var R, O, $;
    O = (R = c(j)) === null || R === void 0 ? void 0 : R.value, Zt(($ = v()) === null || $ === void 0 || ($ = $.filter) === null || $ === void 0 ? void 0 : $.relation, O) || (p("changeFilterRelation", O), v(Ji(v(), ["filter", "relation"], O, !0)), g()(v()));
  }), de(() => c(y), () => {
    var R, O;
    R = c(y), Zt((O = v()) === null || O === void 0 || (O = O.filter) === null || O === void 0 ? void 0 : O.value, R) || (p("changeFilterValue", R), v(Ji(v(), ["filter", "value"], R, !0)), g()(v()));
  }), de(() => c(k), () => {
    var R, O, $;
    O = (R = c(k)) === null || R === void 0 ? void 0 : R.value, Zt(($ = v()) === null || $ === void 0 || ($ = $.sort) === null || $ === void 0 ? void 0 : $.path, O) || (p("changeSortPath", O), v(Ji(v(), ["sort", "path"], O, !0)), g()(v()));
  }), de(() => c(S), () => {
    var R, O, $;
    O = (R = c(S)) === null || R === void 0 ? void 0 : R.value, Zt(($ = v()) === null || $ === void 0 || ($ = $.sort) === null || $ === void 0 ? void 0 : $.direction, O) || (p("changeSortDirection", O), v(Ji(v(), ["sort", "direction"], O, !0)), g()(v()));
  }), de(() => c(h), () => {
    (function(R) {
      var O;
      Zt((O = v()) === null || O === void 0 || (O = O.projection) === null || O === void 0 ? void 0 : O.paths, R) || (p("changeProjectionPaths", R), v(Ji(v(), ["projection", "paths"], R, !0)), g()(v()));
    })(c(h) ? c(h).map((R) => R.value) : void 0);
  }), Bn(), zt(!0);
  var T = tU(), M = Y(T), N = Y(M), z = le(Y(N)), L = Y(z), W = Y(L);
  $l(W, { class: "jse-filter-path", showChevron: !0, get items() {
    return c(f);
  }, get value() {
    return c(w);
  }, set value(R) {
    C(w, R);
  }, $$legacy: !0 });
  var ce = le(W, 2);
  $l(ce, { class: "jse-filter-relation", showChevron: !0, clearable: !1, get items() {
    return b;
  }, get value() {
    return c(j);
  }, set value(R) {
    C(j, R);
  }, $$legacy: !0 });
  var te = le(ce, 2), we = le(N), Ee = le(Y(we)), ae = Y(Ee), re = Y(ae);
  $l(re, { class: "jse-sort-path", showChevron: !0, get items() {
    return c(f);
  }, get value() {
    return c(k);
  }, set value(R) {
    C(k, R);
  }, $$legacy: !0 }), $l(le(re, 2), { class: "jse-sort-direction", showChevron: !0, clearable: !1, get items() {
    return x;
  }, get value() {
    return c(S);
  }, set value(R) {
    C(S, R);
  }, $$legacy: !0 });
  var G = le(we), B = le(Y(G)), ie = Y(B);
  $l(Y(ie), { class: "jse-projection-paths", multiple: !0, showChevron: !0, get items() {
    return c(d);
  }, get value() {
    return c(h);
  }, set value(R) {
    C(h, R);
  }, $$legacy: !0 }), vm(te, () => c(y), (R) => C(y, R)), Z(t, T), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-select-query-language.svelte-atm4um {
  position: relative;
  width: 32px;
}
.jse-select-query-language.svelte-atm4um .jse-select-query-language-container:where(.svelte-atm4um) {
  position: absolute;
  top: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
}
.jse-select-query-language.svelte-atm4um .jse-select-query-language-container:where(.svelte-atm4um) .jse-query-language:where(.svelte-atm4um) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  text-align: left;
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  white-space: nowrap;
  color: var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff));
  background: var(--jse-context-menu-background, #656565);
}
.jse-select-query-language.svelte-atm4um .jse-select-query-language-container:where(.svelte-atm4um) .jse-query-language:where(.svelte-atm4um):hover {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
}`);
var rU = pe('<button type="button"><!> </button>'), iU = pe('<div class="jse-select-query-language svelte-atm4um"><div class="jse-select-query-language-container svelte-atm4um"></div></div>');
function oU(t, e) {
  mt(e, !1);
  var n = E(e, "queryLanguages", 8), r = E(e, "queryLanguageId", 12), i = E(e, "onChangeQueryLanguage", 8);
  zt();
  var o = iU();
  Ir(Y(o), 5, n, Kr, (s, a) => {
    var l, u = rU(), f = Y(u), d = (m) => {
      gn(m, { get data() {
        return FC;
      } });
    }, h = (m) => {
      gn(m, { get data() {
        return UC;
      } });
    };
    xe(f, (m) => {
      c(a), _(r()), ee(() => c(a).id === r()) ? m(d) : m(h, !1);
    });
    var p = le(f);
    Ie((m) => {
      var v;
      l = It(u, 1, "jse-query-language svelte-atm4um", null, l, m), Ln(u, "title", (c(a), ee(() => "Select ".concat(c(a).name, " as query language")))), vt(p, " ".concat((c(a), (v = ee(() => c(a).name)) !== null && v !== void 0 ? v : "")));
    }, [() => ({ selected: c(a).id === r() })], Oe), Pe("click", u, () => {
      return m = c(a).id, r(m), void i()(m);
      var m;
    }), Z(s, u);
  }), Z(t, o), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-header.svelte-1y24war {
  display: flex;
  background: var(--jse-theme-color, #3883fa);
  color: var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
}
.jse-header.svelte-1y24war .jse-title:where(.svelte-1y24war) {
  flex: 1;
  padding: 5px;
  vertical-align: middle;
}
.jse-header.svelte-1y24war button:where(.svelte-1y24war) {
  border: none;
  background: transparent;
  min-width: 32px;
  color: inherit;
  cursor: pointer;
}
.jse-header.svelte-1y24war button:where(.svelte-1y24war):hover {
  background: rgba(255, 255, 255, 0.1);
}`);
var sU = pe('<button type="button" class="jse-fullscreen svelte-1y24war" title="Toggle full screen"><!></button>'), aU = pe('<div class="jse-header svelte-1y24war"><div class="jse-title svelte-1y24war"> </div> <!> <!> <button type="button" class="jse-close svelte-1y24war"><!></button></div>');
function Mm(t, e) {
  mt(e, !1);
  var n = E(e, "title", 9, "Modal"), r = E(e, "fullScreenButton", 9, !1), i = E(e, "fullscreen", 13, !1), o = E(e, "onClose", 9, void 0);
  zt(!0);
  var s = aU(), a = Y(s), l = Y(a), u = le(a, 2);
  Pr(u, e, "actions", {}, null);
  var f = le(u, 2), d = (p) => {
    var m = sU(), v = Y(m), g = Oe(() => i() ? A6 : tR);
    gn(v, { get data() {
      return c(g);
    } }), Pe("click", m, () => i(!i())), Z(p, m);
  };
  xe(f, (p) => {
    r() && p(d);
  });
  var h = le(f, 2);
  gn(Y(h), { get data() {
    return Gm;
  } }), Ie(() => vt(l, n())), Pe("click", h, () => {
    var p;
    return (p = o()) === null || p === void 0 ? void 0 : p();
  }), Z(t, s), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-config.svelte-1kpylsp {
  border: none;
  background: transparent;
  min-width: 32px;
  color: inherit;
  cursor: pointer;
}
.jse-config.svelte-1kpylsp:hover {
  background: rgba(255, 255, 255, 0.1);
}
.jse-config.hide.svelte-1kpylsp {
  display: none;
}`);
var lU = pe('<button slot="actions" type="button" title="Select a query language"><!></button>'), Yv = ui("jsoneditor:AutoScrollHandler");
function rS(t) {
  var e, n;
  function r(a) {
    return a < 20 ? 200 : a < 50 ? 400 : 1200;
  }
  function i() {
    if (t) {
      var a = 0.05 * (e || 0);
      t.scrollTop += a;
    }
  }
  function o(a) {
    n && a === e || (s(), Yv("startAutoScroll", a), e = a, n = setInterval(i, 50));
  }
  function s() {
    n && (Yv("stopAutoScroll"), clearInterval(n), n = void 0, e = void 0);
  }
  return Yv("createAutoScrollHandler", t), { onDrag: function(a) {
    if (t) {
      var l = a.clientY, { top: u, bottom: f } = t.getBoundingClientRect();
      l < u ? o(-r(u - l)) : l > f ? o(r(l - f)) : s();
    }
  }, onDragEnd: function() {
    s();
  } };
}
var cU = (t, e, n, r) => (t /= r / 2) < 1 ? n / 2 * t * t + e : -n / 2 * (--t * (t - 2) - 1) + e, IA = () => {
  var t, e, n, r, i, o, s, a, l, u, f, d, h;
  function p(g) {
    return g.getBoundingClientRect().top - (t.getBoundingClientRect ? t.getBoundingClientRect().top : 0) + n;
  }
  function m(g) {
    t.scrollTo ? t.scrollTo(t.scrollLeft, g) : t.scrollTop = g;
  }
  function v(g) {
    u || (u = g), m(o(f = g - u, n, a, l)), h = !0, f < l ? requestAnimationFrame(v) : (function() {
      m(n + a), e && s && (e.setAttribute("tabindex", "-1"), e.focus()), typeof d == "function" && d(), u = 0, h = !1;
    })();
  }
  return function(g) {
    var b = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    switch (l = 1e3, i = b.offset || 0, d = b.callback, o = b.easing || cU, s = b.a11y || !1, typeof b.container) {
      case "object":
        t = b.container;
        break;
      case "string":
        t = document.querySelector(b.container);
        break;
      default:
        t = window.document.documentElement;
    }
    switch (n = t.scrollTop, typeof g) {
      case "number":
        e = void 0, s = !1, r = n + g;
        break;
      case "object":
        r = p(e = g);
        break;
      case "string":
        e = document.querySelector(g), r = p(e);
    }
    switch (a = r - n + i, typeof b.duration) {
      case "number":
        l = b.duration;
        break;
      case "function":
        l = b.duration(a);
    }
    h ? u = 0 : requestAnimationFrame(v);
  };
};
function qc(t, e) {
  var n = Date.now(), r = t();
  return e(Date.now() - n), r;
}
var Tc = ui("validation"), uU = { createObjectDocumentState: () => ({ type: "object", properties: {} }), createArrayDocumentState: () => ({ type: "array", items: [] }), createValueDocumentState: () => ({ type: "value" }) };
function iS(t, e, n, r) {
  return jy(t, e, n, r, uU);
}
function zA(t, e, n, r) {
  if (Tc("validateJSON"), !e) return [];
  if (n !== r) {
    var i = n.stringify(t);
    return e(i !== void 0 ? r.parse(i) : void 0);
  }
  return e(t);
}
function fU(t, e, n, r) {
  if (Tc("validateText"), t.length > 104857600) return { validationErrors: [{ path: [], message: "Validation turned off: the document is too large", severity: Xo.info }] };
  if (t.length !== 0) try {
    var i = qc(() => n.parse(t), (l) => Tc("validate: parsed json in ".concat(l, " ms")));
    if (!e) return;
    var o = n === r ? i : qc(() => r.parse(t), (l) => Tc("validate: parsed json with the validationParser in ".concat(l, " ms"))), s = qc(() => e(o), (l) => Tc("validate: validated json in ".concat(l, " ms")));
    return Sn(s) ? void 0 : { validationErrors: s };
  } catch (l) {
    var a = qc(() => (function(u, f) {
      if (u.length > Lq) return !1;
      try {
        return f.parse(_s(u)), !0;
      } catch {
        return !1;
      }
    })(t, n), (u) => Tc("validate: checked whether repairable in ".concat(u, " ms")));
    return { parseError: du(t, l.message || l.toString()), isRepairable: a };
  }
}
var tp = ui("jsoneditor:FocusTracker");
function Ay(t) {
  var e, { onMount: n, onDestroy: r, getWindow: i, hasFocus: o, onFocus: s, onBlur: a } = t, l = !1;
  function u() {
    var d = o();
    d && (clearTimeout(e), l || (tp("focus"), s(), l = d));
  }
  function f() {
    l && (clearTimeout(e), e = setTimeout(() => {
      o() || (tp("blur"), l = !1, a());
    }));
  }
  n(() => {
    tp("mount FocusTracker");
    var d = i();
    d && (d.addEventListener("focusin", u, !0), d.addEventListener("focusout", f, !0));
  }), r(() => {
    tp("destroy FocusTracker");
    var d = i();
    d && (d.removeEventListener("focusin", u, !0), d.removeEventListener("focusout", f, !0));
  });
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-message.svelte-czprfx {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  padding: var(--jse-padding, 10px);
  display: flex;
  gap: var(--jse-padding, 10px);
  flex-wrap: wrap;
  align-items: stretch;
}
.jse-message.jse-success.svelte-czprfx {
  background: var(--message-success-background, #9ac45d);
  color: var(--jse-message-success-color, #fff);
}
.jse-message.svelte-czprfx .jse-text:where(.svelte-czprfx) {
  display: flex;
  flex: 1;
  min-width: 60%;
  align-items: center;
}
.jse-message.svelte-czprfx .jse-text.jse-clickable:where(.svelte-czprfx) {
  cursor: pointer;
}
.jse-message.svelte-czprfx .jse-text.jse-clickable:where(.svelte-czprfx):hover {
  background-color: rgba(255, 255, 255, 0.1);
}
.jse-message.jse-error.svelte-czprfx {
  background: var(--jse-message-error-background, var(--jse-error-color, #ee5341));
  color: var(--jse-message-error-color, #fff);
}
.jse-message.jse-warning.svelte-czprfx {
  background: var(--jse-message-warning-background, #ffde5c);
  color: var(--jse-message-warning-color, #4d4d4d);
}
.jse-message.jse-info.svelte-czprfx {
  background: var(--jse-message-info-background, #4f91ff);
  color: var(--jse-message-info-color, #fff);
}
.jse-message.svelte-czprfx .jse-actions:where(.svelte-czprfx) {
  display: flex;
  gap: var(--jse-padding, 10px);
}
.jse-message.svelte-czprfx .jse-actions:where(.svelte-czprfx) button.jse-action:where(.svelte-czprfx) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-message-action-background, rgba(255, 255, 255, 0.2));
  color: inherit;
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
}
.jse-message.svelte-czprfx .jse-actions:where(.svelte-czprfx) button.jse-action:where(.svelte-czprfx):hover {
  background: var(--jse-message-action-background-highlight, rgba(255, 255, 255, 0.3));
}`);
var dU = pe('<button type="button" class="jse-button jse-action jse-primary svelte-czprfx"><!> </button>'), hU = pe('<div><div role="button" tabindex="-1"><div class="jse-text-centered"><!> </div></div> <div class="jse-actions svelte-czprfx"></div></div>');
function jo(t, e) {
  mt(e, !1);
  var n = E(e, "type", 9, "success"), r = E(e, "icon", 9, void 0), i = E(e, "message", 9, void 0), o = E(e, "actions", 25, () => []), s = E(e, "onClick", 9, void 0), a = E(e, "onClose", 9, void 0);
  a() && Io(a()), zt(!0);
  var l, u = hU(), f = Y(u), d = Y(f), h = Y(d), p = (v) => {
    gn(v, { get data() {
      return r();
    } });
  };
  xe(h, (v) => {
    r() && v(p);
  });
  var m = le(h);
  Ir(le(f, 2), 5, o, Kr, (v, g) => {
    var b = dU(), x = Y(b), w = (y) => {
      gn(y, { get data() {
        return c(g), ee(() => c(g).icon);
      } });
    };
    xe(x, (y) => {
      c(g), ee(() => c(g).icon) && y(w);
    });
    var j = le(x);
    Ie(() => {
      var y;
      Ln(b, "title", (c(g), ee(() => c(g).title))), b.disabled = (c(g), ee(() => c(g).disabled)), vt(j, " ".concat((c(g), (y = ee(() => c(g).text)) !== null && y !== void 0 ? y : "")));
    }), Pe("click", b, () => {
      c(g).onClick && c(g).onClick();
    }), Pe("mousedown", b, () => {
      c(g).onMouseDown && c(g).onMouseDown();
    }), Z(v, b);
  }), Ie((v) => {
    var g, b;
    It(u, 1, "jse-message jse-".concat((g = n()) !== null && g !== void 0 ? g : ""), "svelte-czprfx"), l = It(f, 1, "jse-text svelte-czprfx", null, l, v), vt(m, " ".concat((b = i()) !== null && b !== void 0 ? b : ""));
  }, [() => ({ "jse-clickable": !!s() })], Oe), Pe("click", f, function() {
    s() && s()();
  }), Z(t, u), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-validation-errors-overview.svelte-1uindol {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  overflow: auto;
  max-height: 25%;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) {
  border-collapse: collapse;
  width: 100%;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) {
  cursor: pointer;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr.jse-validation-error:where(.svelte-1uindol) {
  background: var(--jse-message-error-background, var(--jse-error-color, #ee5341));
  color: var(--jse-message-error-color, #fff);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr.jse-validation-warning:where(.svelte-1uindol) {
  background: var(--jse-message-warning-background, #ffde5c);
  color: var(--jse-message-warning-color, #4d4d4d);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr.jse-validation-warning:where(.svelte-1uindol):hover {
  filter: brightness(105%);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr.jse-validation-info:where(.svelte-1uindol) {
  background: var(--jse-message-info-background, #4f91ff);
  color: var(--jse-message-info-color, #fff);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol):hover {
  filter: brightness(110%);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td:where(.svelte-1uindol) {
  padding: 4px var(--jse-padding, 10px);
  vertical-align: middle;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td.jse-validation-error-icon:where(.svelte-1uindol) {
  width: 36px;
  box-sizing: border-box;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td.jse-validation-error-action:where(.svelte-1uindol) {
  width: 36px;
  box-sizing: border-box;
  padding: 0;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td.jse-validation-error-action:where(.svelte-1uindol) button.jse-validation-errors-collapse:where(.svelte-1uindol) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  width: 36px;
  height: 26px;
  cursor: pointer;
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td.jse-validation-error-action:where(.svelte-1uindol) button.jse-validation-errors-collapse:where(.svelte-1uindol):hover {
  background-color: rgba(255, 255, 255, 0.2);
}
.jse-validation-errors-overview.svelte-1uindol table:where(.svelte-1uindol) tr:where(.svelte-1uindol) td:where(.svelte-1uindol) div.jse-validation-errors-expand:where(.svelte-1uindol) {
  display: inline-block;
  position: relative;
  top: 3px;
}`);
var pU = pe('<button type="button" class="jse-validation-errors-collapse svelte-1uindol" title="Collapse validation errors"><!></button>'), mU = pe('<tr tabindex="0"><td class="jse-validation-error-icon svelte-1uindol"><!></td><td class="jse-validation-error-path svelte-1uindol"> </td><td class="jse-validation-error-message svelte-1uindol"> </td><td class="jse-validation-error-action svelte-1uindol"><!></td></tr>'), gU = pe('<tr class="jse-validation-error svelte-1uindol"><td class="svelte-1uindol"></td><td class="svelte-1uindol"></td><td class="svelte-1uindol"> </td><td class="svelte-1uindol"></td></tr>'), vU = pe('<table class="jse-validation-errors-overview-expanded svelte-1uindol"><tbody><!><!></tbody></table>'), bU = pe('<table class="jse-validation-errors-overview-collapsed svelte-1uindol"><tbody><tr><td class="jse-validation-error-icon svelte-1uindol"><!></td><td class="jse-validation-error-count svelte-1uindol"> <div class="jse-validation-errors-expand svelte-1uindol"><!></div></td></tr></tbody></table>'), yU = pe('<div class="jse-validation-errors-overview svelte-1uindol"><!></div>');
function My(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = E(e, "validationErrors", 9), i = E(e, "selectError", 9), o = Q(!0, !0);
  function s() {
    C(o, !1);
  }
  function a() {
    C(o, !0);
  }
  de(() => _(r()), () => {
    C(n, r().length);
  }), Bn(), zt(!0);
  var l = Er(), u = wt(l), f = (d) => {
    var h = yU(), p = Y(h), m = (g) => {
      var b = vU(), x = Y(b), w = Y(x);
      Ir(w, 1, () => (_(bm), _(r()), _(Jh), ee(() => bm(r(), Jh))), Kr, (k, S, T) => {
        var M = mU(), N = Y(M);
        gn(Y(N), { get data() {
          return Hl;
        } });
        var z = le(N), L = Y(z), W = le(z), ce = Y(W), te = Y(le(W)), we = (Ee) => {
          var ae = pU();
          gn(Y(ae), { get data() {
            return Y6;
          } }), Pe("click", ae, Ys(s)), Z(Ee, ae);
        };
        xe(te, (Ee) => {
          _(r()), ee(() => T === 0 && r().length > 1) && Ee(we);
        }), Ie((Ee) => {
          var ae;
          It(M, 1, "jse-validation-".concat((c(S), (ae = ee(() => c(S).severity)) !== null && ae !== void 0 ? ae : "")), "svelte-1uindol"), vt(L, Ee), vt(ce, (c(S), ee(() => c(S).message)));
        }, [() => (_(no), c(S), ee(() => no(c(S).path)))], Oe), Pe("click", M, () => {
          setTimeout(() => i()(c(S)));
        }), Z(k, M);
      });
      var j = le(w), y = (k) => {
        var S = gU(), T = le(Y(S), 2), M = Y(T);
        Ie(() => vt(M, "(and ".concat(c(n) - Jh, " more errors)"))), Z(k, S);
      };
      xe(j, (k) => {
        c(n) > Jh && k(y);
      }), Z(g, b);
    }, v = (g) => {
      var b = bU(), x = Y(b), w = Y(x), j = Y(w);
      gn(Y(j), { get data() {
        return Hl;
      } });
      var y = Y(le(j));
      gn(Y(le(y)), { get data() {
        return HC;
      } }), Ie((k) => {
        var S;
        It(w, 1, "jse-validation-".concat(k ?? ""), "svelte-1uindol"), vt(y, "".concat((S = c(n)) !== null && S !== void 0 ? S : "", " validation errors "));
      }, [() => (_(r()), ee(() => {
        return k = r(), [Xo.error, Xo.warning, Xo.info].find((S) => k.some((T) => T.severity === S));
        var k;
      }))], Oe), Pe("click", w, a), Z(g, b);
    };
    xe(p, (g) => {
      c(o) || c(n) === 1 ? g(m) : g(v, !1);
    }), Z(d, h);
  };
  xe(u, (d) => {
    _(Sn), _(r()), ee(() => !Sn(r())) && d(f);
  }), Z(t, l), gt();
}
function Tm(t, e) {
  if (t) return t.addEventListener("keydown", n), { destroy() {
    t.removeEventListener("keydown", n);
  } };
  function n(r) {
    r.key === "Escape" && (r.preventDefault(), r.stopPropagation(), e());
  }
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
dialog.jse-modal.svelte-1s9c2ql {
  border-radius: 3px;
  font-size: var(--jse-padding, 10px);
  border: none;
  padding: 0;
  display: flex;
  min-width: 0;
  margin: auto;
  overflow: visible;
  transition: width 0.1s ease-in-out, height 0.1s ease-in-out;
}
dialog.jse-modal.jse-sort-modal.svelte-1s9c2ql {
  width: 400px;
}
dialog.jse-modal.jse-repair-modal.svelte-1s9c2ql {
  width: 600px;
  height: 500px;
}
dialog.jse-modal.jse-jsoneditor-modal.svelte-1s9c2ql {
  width: 800px;
  height: 600px;
}
dialog.jse-modal.jse-transform-modal.svelte-1s9c2ql {
  width: 1200px;
  height: 800px;
}
dialog.jse-modal.jse-fullscreen.svelte-1s9c2ql {
  width: 100%;
  height: 100%;
}
dialog.jse-modal.svelte-1s9c2ql::backdrop {
  background: var(--jse-overlay-background, rgba(0, 0, 0, 0.3));
}
dialog.jse-modal[open].svelte-1s9c2ql {
  animation: svelte-1s9c2ql-zoom 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}
dialog.jse-modal[open].svelte-1s9c2ql::backdrop {
  animation: svelte-1s9c2ql-fade 0.2s ease-out;
}
dialog.jse-modal.svelte-1s9c2ql .jse-modal-inner:where(.svelte-1s9c2ql) {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
  padding: 0;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  line-height: normal;
  background: var(--jse-modal-background, #f5f5f5);
  color: var(--jse-text-color, #4d4d4d);
}
@keyframes svelte-1s9c2ql-zoom {
  from {
    transform: scale(0.95);
  }
  to {
    transform: scale(1);
  }
}
@keyframes svelte-1s9c2ql-fade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
dialog.jse-modal.svelte-1s9c2ql .svelte-select {
  --border: var(--jse-svelte-select-border, 1px solid #d8dbdf);
  --item-is-active-bg: var(--jse-item-is-active-bg, #3883fa);
  --border-radius: var(--jse-svelte-select-border-radius, 3px);
  --background: var(--jse-svelte-select-background, #fff);
  --padding: var(--jse-svelte-select-padding, 0 10px);
  --multi-select-padding: var(--jse-svelte-select-multi-select-padding, 0 10px);
  --font-size: var(--jse-svelte-select-font-size, var(--jse-font-size, 16px));
  --height: 36px;
  --multi-item-height: 28px;
  --multi-item-margin: 2px;
  --multi-item-padding: 2px 8px;
  --multi-item-border-radius: 6px;
  --indicator-top: 8px;
}`);
var xU = pe('<dialog><div class="jse-modal-inner svelte-1s9c2ql"><!></div></dialog>');
function Zf(t, e) {
  mt(e, !1);
  var n = E(e, "className", 8, void 0), r = E(e, "fullscreen", 8, !1), i = E(e, "onClose", 8), o = Q();
  function s() {
    i()();
  }
  Ti(() => c(o).showModal()), Io(() => c(o).close()), zt();
  var a, l = xU(), u = Y(l);
  Pr(Y(u), e, "default", {}, null), pr(l, (f) => C(o, f), () => c(o)), yi(() => Pe("close", l, s)), yi(() => {
    return Pe("pointerdown", l, (f = s, function() {
      for (var d = arguments.length, h = new Array(d), p = 0; p < d; p++) h[p] = arguments[p];
      h[0].target === this && f?.apply(this, h);
    }));
    var f;
  }), yi(() => Pe("cancel", l, Oa(function(f) {
    rf.call(this, e, f);
  }))), zi(l, (f, d) => Tm?.(f, d), () => s), Ie((f, d) => a = It(l, 1, f, "svelte-1s9c2ql", a, d), [() => cl((_(as), _(n()), ee(() => as("jse-modal", n())))), () => ({ "jse-fullscreen": r() })], Oe), Z(t, l), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-modal-contents.svelte-189qksl {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 20px;
  overflow: auto;
  min-width: 0;
  min-height: 0;
}
.jse-modal-contents.svelte-189qksl .jse-actions:where(.svelte-189qksl) {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-top: var(--jse-padding, 10px);
}
.jse-modal-contents.svelte-189qksl .jse-actions:where(.svelte-189qksl) button.jse-primary:where(.svelte-189qksl) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-modal-contents.svelte-189qksl .jse-actions:where(.svelte-189qksl) button.jse-primary:where(.svelte-189qksl):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-modal-contents.svelte-189qksl .jse-actions:where(.svelte-189qksl) button.jse-primary:where(.svelte-189qksl):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}

.jse-shortcuts.svelte-189qksl {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  margin: calc(2 * var(--jse-padding, 10px)) 0;
}
.jse-shortcuts.svelte-189qksl .jse-shortcut:where(.svelte-189qksl) .jse-key:where(.svelte-189qksl) {
  font-size: 200%;
  color: var(--jse-theme-color, #3883fa);
}`);
var wU = pe('<!> <div class="jse-modal-contents svelte-189qksl"><div>Clipboard permission is disabled by your browser. You can use:</div> <div class="jse-shortcuts svelte-189qksl"><div class="jse-shortcut svelte-189qksl"><div class="jse-key svelte-189qksl"> </div> for copy</div> <div class="jse-shortcut svelte-189qksl"><div class="jse-key svelte-189qksl"> </div> for cut</div> <div class="jse-shortcut svelte-189qksl"><div class="jse-key svelte-189qksl"> </div> for paste</div></div> <div class="jse-actions svelte-189qksl"><button type="button" class="jse-primary svelte-189qksl">Close</button></div></div>', 1);
function LA(t, e) {
  mt(e, !1);
  var n = E(e, "onClose", 9), r = py() ? "⌘" : "Ctrl";
  zt(!0), Zf(t, { get onClose() {
    return n();
  }, className: "jse-copy-paste", children: (i, o) => {
    var s = wU(), a = wt(s);
    Mm(a, { title: "Copying and pasting", get onClose() {
      return n();
    } });
    var l = le(a, 2), u = le(Y(l), 2), f = Y(u), d = Y(f), h = Y(d), p = le(f, 2), m = Y(p), v = Y(m), g = Y(le(p, 2)), b = Y(g), x = Y(le(u, 2));
    Ie(() => {
      vt(h, "".concat(r, "+C")), vt(v, "".concat(r, "+X")), vt(b, "".concat(r, "+V"));
    }), Pe("click", x, function() {
      for (var w, j = arguments.length, y = new Array(j), k = 0; k < j; k++) y[k] = arguments[k];
      (w = n()) === null || w === void 0 || w.apply(this, y);
    }), Z(i, s);
  }, $$slots: { default: !0 } }), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-menu.svelte-pf7s2l {
  background: var(--jse-theme-color, #3883fa);
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size-main-menu, 14px);
  color: var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
  display: flex;
  flex-wrap: wrap;
  align-items: stretch;
  position: relative;
}
.jse-menu.svelte-pf7s2l .jse-button:where(.svelte-pf7s2l) {
  font-family: inherit;
  font-size: inherit;
  line-height: 1.5em;
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  width: var(--jse-menu-button-size, 32px);
  height: var(--jse-menu-button-size, 32px);
  padding: calc(0.5 * var(--jse-padding, 10px));
  margin: 0;
  border-radius: 0;
  display: inline-flex;
  align-items: center;
  text-align: center;
  justify-content: center;
}
.jse-menu.svelte-pf7s2l .jse-button:where(.svelte-pf7s2l):hover, .jse-menu.svelte-pf7s2l .jse-button:where(.svelte-pf7s2l):focus {
  background: var(--jse-theme-color-highlight, #5f9dff);
}
.jse-menu.svelte-pf7s2l .jse-button:where(.svelte-pf7s2l):disabled {
  color: var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
  opacity: 0.5;
  background: transparent;
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button:where(.svelte-pf7s2l) {
  width: auto;
  height: calc(var(--jse-menu-button-size, 32px) - var(--jse-padding, 10px));
  margin: calc(0.5 * var(--jse-padding, 10px)) 0;
  padding: 0 calc(0.5 * var(--jse-padding, 10px)) 1px;
  border: 1px solid var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button:where(.svelte-pf7s2l):not(.jse-last) {
  border-right: none;
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button.jse-first:where(.svelte-pf7s2l) {
  margin-left: calc(0.5 * var(--jse-padding, 10px));
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button.jse-last:where(.svelte-pf7s2l) {
  margin-right: calc(0.5 * var(--jse-padding, 10px));
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button:where(.svelte-pf7s2l):hover, .jse-menu.svelte-pf7s2l .jse-button.jse-group-button:where(.svelte-pf7s2l):focus {
  background: var(--jse-theme-color-highlight, #5f9dff);
}
.jse-menu.svelte-pf7s2l .jse-button.jse-group-button.jse-selected:where(.svelte-pf7s2l) {
  background: var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
  color: var(--jse-theme-color, #3883fa);
}
.jse-menu.svelte-pf7s2l .jse-space:where(.svelte-pf7s2l) {
  flex: 1;
}
.jse-menu.svelte-pf7s2l .jse-separator:where(.svelte-pf7s2l) {
  background: var(--jse-menu-color, var(--jse-text-color-inverse, #fff));
  opacity: 0.3;
  width: 1px;
  margin: 3px;
}`);
var jU = pe('<div class="jse-separator svelte-pf7s2l"></div>'), kU = pe('<div class="jse-space svelte-pf7s2l"></div>'), SU = pe('<button type="button"><!> <!></button>'), CU = pe('<div class="jse-menu svelte-pf7s2l"><!> <!> <!></div>');
function Eg(t, e) {
  mt(e, !1);
  var n = E(e, "items", 25, () => []);
  zt(!0);
  var r = CU(), i = Y(r);
  Pr(i, e, "left", {}, null);
  var o = le(i, 2);
  Ir(o, 1, n, Kr, (s, a) => {
    var l = Er(), u = wt(l), f = (h) => {
      Z(h, jU());
    }, d = (h, p) => {
      var m = (g) => {
        Z(g, kU());
      }, v = (g, b) => {
        var x = (j) => {
          var y = SU(), k = Y(y), S = (N) => {
            gn(N, { get data() {
              return c(a), ee(() => c(a).icon);
            } });
          };
          xe(k, (N) => {
            c(a), ee(() => c(a).icon) && N(S);
          });
          var T = le(k, 2), M = (N) => {
            var z = hi();
            Ie(() => vt(z, (c(a), ee(() => c(a).text)))), Z(N, z);
          };
          xe(T, (N) => {
            c(a), ee(() => c(a).text) && N(M);
          }), Ie(() => {
            var N;
            It(y, 1, "jse-button ".concat((c(a), (N = ee(() => c(a).className)) !== null && N !== void 0 ? N : "")), "svelte-pf7s2l"), Ln(y, "title", (c(a), ee(() => c(a).title))), y.disabled = (c(a), ee(() => c(a).disabled || !1));
          }), Pe("click", y, function() {
            for (var N, z = arguments.length, L = new Array(z), W = 0; W < z; W++) L[W] = arguments[W];
            (N = c(a).onClick) === null || N === void 0 || N.apply(this, L);
          }), Z(j, y);
        }, w = (j) => {
          var y = hi();
          Ie((k) => vt(y, k), [() => (c(a), ee(() => (function(k) {
            return console.error("Unknown type of menu item", k), "???";
          })(c(a))))], Oe), Z(j, y);
        };
        xe(g, (j) => {
          _(Qs), c(a), ee(() => Qs(c(a))) ? j(x) : j(w, !1);
        }, b);
      };
      xe(h, (g) => {
        _(Eb), c(a), ee(() => Eb(c(a))) ? g(m) : g(v, !1);
      }, p);
    };
    xe(u, (h) => {
      _($a), c(a), ee(() => $a(c(a))) ? h(f) : h(d, !1);
    }), Z(s, l);
  }), Pr(le(o, 2), e, "right", {}, null), Z(t, r), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-json-repair-component.svelte-3golau {
  flex: 1;
  display: flex;
  flex-direction: column;
  background: var(--jse-background-color, #fff);
  color: var(--jse-text-color, #4d4d4d);
}
.jse-json-repair-component.svelte-3golau .jse-info:where(.svelte-3golau) {
  padding: calc(0.5 * var(--jse-padding, 10px));
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  vertical-align: center;
}
.jse-json-repair-component.svelte-3golau .jse-json-text:where(.svelte-3golau) {
  flex: 1;
  border: none;
  padding: 2px;
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  background: var(--jse-input-background, var(--jse-background-color, #fff));
  color: var(--jse-text-color, #4d4d4d);
  resize: none;
  outline: none;
}`);
var OU = pe('<div slot="left" class="jse-info svelte-3golau">Repair invalid JSON, then click apply</div>'), EU = pe('<div class="jse-json-repair-component svelte-3golau"><!> <!> <textarea class="jse-json-text svelte-3golau" autocomplete="off" autocapitalize="off" spellcheck="false"></textarea></div>');
function _U(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = Q(void 0, !0), o = Q(void 0, !0), s = Q(void 0, !0), a = Q(void 0, !0), l = E(e, "text", 13, ""), u = E(e, "readOnly", 9, !1), f = E(e, "onParse", 9), d = E(e, "onRepair", 9), h = E(e, "onChange", 9, void 0), p = E(e, "onApply", 9), m = E(e, "onCancel", 9), v = ui("jsoneditor:JSONRepair"), g = Q(void 0, !0);
  function b() {
    if (c(g) && c(n)) {
      var z = c(n).position !== void 0 ? c(n).position : 0;
      c(g).setSelectionRange(z, z), c(g).focus();
    }
  }
  function x() {
    p()(l());
  }
  function w() {
    try {
      l(d()(l())), h() && h()(l());
    } catch {
    }
  }
  var j = Q(void 0, !0);
  de(() => _(l()), () => {
    C(n, (function(z) {
      try {
        return void f()(z);
      } catch (L) {
        return du(z, L.message);
      }
    })(l()));
  }), de(() => _(l()), () => {
    C(r, (function(z) {
      try {
        return d()(z), !0;
      } catch {
        return !1;
      }
    })(l()));
  }), de(() => c(n), () => {
    v("error", c(n));
  }), de(() => _(m()), () => {
    C(j, [{ type: "space" }, { type: "button", icon: Gm, title: "Cancel repair", className: "jse-cancel", onClick: m() }]);
  }), de(() => Lx, () => {
    C(i, { icon: Lx, text: "Show me", title: "Scroll to the error location", onClick: b });
  }), de(() => Xa, () => {
    C(o, { icon: Xa, text: "Auto repair", title: "Automatically repair JSON", onClick: w });
  }), de(() => (c(r), c(i), c(o)), () => {
    C(s, c(r) ? [c(i), c(o)] : [c(i)]);
  }), de(() => _(u()), () => {
    C(a, [{ icon: g1, text: "Apply", title: "Apply fixed JSON", disabled: u(), onClick: x }]);
  }), Bn(), zt(!0);
  var y = EU(), k = Y(y);
  Eg(k, { get items() {
    return c(j);
  }, $$slots: { left: (z, L) => {
    Z(z, OU());
  } } });
  var S = le(k, 2), T = (z) => {
    var L = Oe(() => (c(n), ee(() => "Cannot parse JSON: ".concat(c(n).message))));
    jo(z, { type: "error", get icon() {
      return Hl;
    }, get message() {
      return c(L);
    }, get actions() {
      return c(s);
    } });
  }, M = (z) => {
    jo(z, { type: "success", message: "JSON is valid now and can be parsed.", get actions() {
      return c(a);
    } });
  };
  xe(S, (z) => {
    c(n) ? z(T) : z(M, !1);
  });
  var N = le(S, 2);
  pr(N, (z) => C(g, z), () => c(g)), Ie(() => {
    N.readOnly = u(), ec(N, l());
  }), Pe("input", N, function(z) {
    v("handleChange");
    var L = z.target.value;
    l() !== L && (l(L), h() && h()(l()));
  }), Z(t, y), gt();
}
function BA(t, e) {
  mt(e, !1);
  var n = E(e, "text", 13), r = E(e, "onParse", 9), i = E(e, "onRepair", 9), o = E(e, "onApply", 9), s = E(e, "onClose", 9);
  function a(u) {
    o()(u), s()();
  }
  function l() {
    s()();
  }
  zt(!0), Zf(t, { get onClose() {
    return s();
  }, className: "jse-repair-modal", children: (u, f) => {
    _U(u, { get onParse() {
      return r();
    }, get onRepair() {
      return i();
    }, onApply: a, onCancel: l, get text() {
      return n();
    }, set text(d) {
      n(d);
    }, $$legacy: !0 });
  }, $$slots: { default: !0 } }), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
div.jse-collapsed-items.svelte-1h6hzoq {
  margin-left: calc(var(--level) * var(--jse-indent-size, calc(1em + 4px)));
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  color: var(--jse-collapsed-items-link-color, rgba(0, 0, 0, 0.38));
  padding: calc(0.5 * var(--jse-padding, 10px));
  border: 8px solid transparent;
  border-width: 8px 0;
  background-color: var(--jse-contents-background-color, transparent);
  background-image: linear-gradient(var(--jse-collapsed-items-background-color, #f5f5f5), var(--jse-collapsed-items-background-color, #f5f5f5)), linear-gradient(to bottom right, transparent 50.5%, var(--jse-collapsed-items-background-color, #f5f5f5) 50.5%), linear-gradient(to bottom left, transparent 50.5%, var(--jse-collapsed-items-background-color, #f5f5f5) 50.5%), linear-gradient(to top right, transparent 50.5%, var(--jse-collapsed-items-background-color, #f5f5f5) 50.5%), linear-gradient(to top left, transparent 50.5%, var(--jse-collapsed-items-background-color, #f5f5f5) 50.5%);
  background-repeat: repeat, repeat-x, repeat-x, repeat-x, repeat-x;
  background-position: 0 0, 8px 0, 8px 0, 8px 100%, 8px 100%;
  background-size: auto auto, 16px 16px, 16px 16px, 16px 16px, 16px 16px;
  background-clip: padding-box, border-box, border-box, border-box, border-box;
  background-origin: padding-box, border-box, border-box, border-box, border-box;
  display: flex;
}
div.jse-collapsed-items.jse-selected.svelte-1h6hzoq {
  background-color: var(--jse-selection-background-color, #d3d3d3);
  --jse-collapsed-items-background-color: var(--jse-collapsed-items-selected-background-color, #c2c2c2);
}
div.jse-collapsed-items.svelte-1h6hzoq div.jse-text:where(.svelte-1h6hzoq),
div.jse-collapsed-items.svelte-1h6hzoq button.jse-expand-items:where(.svelte-1h6hzoq) {
  margin: 0 calc(0.5 * var(--jse-padding, 10px));
}
div.jse-collapsed-items.svelte-1h6hzoq div.jse-text:where(.svelte-1h6hzoq) {
  display: inline;
}
div.jse-collapsed-items.svelte-1h6hzoq button.jse-expand-items:where(.svelte-1h6hzoq) {
  font-family: inherit;
  font-size: inherit;
  color: var(--jse-collapsed-items-link-color, rgba(0, 0, 0, 0.38));
  background: none;
  border: none;
  padding: 0;
  text-decoration: underline;
  cursor: pointer;
}
div.jse-collapsed-items.svelte-1h6hzoq button.jse-expand-items:where(.svelte-1h6hzoq):hover, div.jse-collapsed-items.svelte-1h6hzoq button.jse-expand-items:where(.svelte-1h6hzoq):focus {
  color: var(--jse-collapsed-items-link-color-highlight, #ee5341);
}`);
var AU = pe('<button type="button" class="jse-expand-items svelte-1h6hzoq"> </button>'), MU = pe('<div role="none"><div><div class="jse-text svelte-1h6hzoq"> </div> <!></div></div>');
function TU(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = Q(void 0, !0), o = Q(void 0, !0), s = Q(void 0, !0), a = E(e, "visibleSections", 9), l = E(e, "sectionIndex", 9), u = E(e, "total", 9), f = E(e, "path", 9), d = E(e, "selection", 9), h = E(e, "onExpandSection", 9), p = E(e, "context", 9);
  de(() => (_(a()), _(l())), () => {
    C(n, a()[l()]);
  }), de(() => c(n), () => {
    C(r, c(n).end);
  }), de(() => (_(a()), _(l()), _(u())), () => {
    C(i, a()[l() + 1] ? a()[l() + 1].start : u());
  }), de(() => (_(p()), _(d()), _(f()), c(r)), () => {
    C(o, Yf(p().getJson(), d(), f().concat(String(c(r)))));
  }), de(() => (c(r), c(i)), () => {
    C(s, (function(j, y) {
      var k = { start: j, end: Math.min(Ob(j), y) }, S = Math.max(xm((j + y) / 2), j), T = { start: S, end: Math.min(Ob(S), y) }, M = xm(y), N = M === y ? M - Hf : M, z = { start: Math.max(N, j), end: y }, L = [k], W = T.start >= k.end && T.end <= z.start;
      return W && L.push(T), z.start >= (W ? T.end : k.end) && L.push(z), L;
    })(c(r), c(i)));
  }), Bn(), zt(!0);
  var m, v, g = MU(), b = Y(g), x = Y(b), w = Y(x);
  Ir(le(x, 2), 1, () => c(s), Kr, (j, y) => {
    var k = AU(), S = Y(k);
    Ie(() => {
      var T, M;
      return vt(S, "show ".concat((c(y), (T = ee(() => c(y).start)) !== null && T !== void 0 ? T : ""), "-").concat((c(y), (M = ee(() => c(y).end)) !== null && M !== void 0 ? M : "")));
    }), Pe("click", k, () => h()(f(), c(y))), Z(j, k);
  }), Ie((j, y) => {
    var k, S;
    m = It(g, 1, "jse-collapsed-items svelte-1h6hzoq", null, m, j), v = Qo(g, "", v, y), vt(w, "Items ".concat((k = c(r)) !== null && k !== void 0 ? k : "", "-").concat((S = c(i)) !== null && S !== void 0 ? S : ""));
  }, [() => ({ "jse-selected": c(o) }), () => ({ "--level": (_(f()), ee(() => f().length + 2)) })], Oe), Pe("mousemove", g, function(j) {
    j.stopPropagation();
  }), Z(t, g), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-context-menu-pointer.svelte-137iwnw {
  position: absolute;
  top: calc(-0.5 * var(--jse-context-menu-pointer-size, calc(1em + 4px)));
  right: calc(-0.5 * var(--jse-context-menu-pointer-size, calc(1em + 4px)));
  width: var(--jse-context-menu-pointer-size, calc(1em + 4px));
  height: var(--jse-context-menu-pointer-size, calc(1em + 4px));
  padding: 0;
  margin: 0;
  cursor: pointer;
  background: transparent;
  border-radius: 2px;
  background: var(--jse-context-menu-pointer-hover-background, #b2b2b2);
  color: var(--jse-context-menu-pointer-color, var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff)));
  border: none;
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
}
.jse-context-menu-pointer.jse-root.svelte-137iwnw {
  top: 0;
  right: calc(-2px - var(--jse-context-menu-pointer-size, calc(1em + 4px)));
}
.jse-context-menu-pointer.jse-insert.svelte-137iwnw {
  right: -1px;
}
.jse-context-menu-pointer.svelte-137iwnw:hover {
  background: var(--jse-context-menu-pointer-background-highlight, var(--jse-context-menu-background-highlight, #7a7a7a));
}
.jse-context-menu-pointer.jse-selected.svelte-137iwnw {
  background: var(--jse-context-menu-pointer-background, var(--jse-context-menu-background, #656565));
}
.jse-context-menu-pointer.jse-selected.svelte-137iwnw:hover {
  background: var(--jse-context-menu-pointer-background-highlight, var(--jse-context-menu-background-highlight, #7a7a7a));
}`);
var $U = pe('<button type="button"><!></button>');
function Ea(t, e) {
  mt(e, !1);
  var n = E(e, "root", 9, !1), r = E(e, "insert", 9, !1), i = E(e, "selected", 9), o = E(e, "onContextMenu", 9);
  zt(!0);
  var s, a = $U();
  gn(Y(a), { get data() {
    return pa;
  } }), Ie((l) => {
    s = It(a, 1, "jse-context-menu-pointer svelte-137iwnw", null, s, l), Ln(a, "title", gy);
  }, [() => ({ "jse-root": n(), "jse-insert": r(), "jse-selected": i() })], Oe), Pe("click", a, function(l) {
    for (var u = l.target; u && u.nodeName !== "BUTTON"; ) u = u.parentNode;
    u && o()({ anchor: u, left: 0, top: 0, width: ra, height: na, offsetTop: 2, offsetLeft: 0, showTip: !0 });
  }), Z(t, a), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-key.svelte-2iqnqn {
  display: inline-block;
  min-width: 2em;
  padding: 0 5px;
  box-sizing: border-box;
  outline: none;
  border-radius: 1px;
  vertical-align: top;
  color: var(--jse-key-color, #1a1a1a);
  word-break: normal;
  overflow-wrap: normal;
  white-space: pre-wrap;
}
.jse-key.jse-empty.svelte-2iqnqn {
  min-width: 3em;
  outline: 1px dotted var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  -moz-outline-radius: 2px;
}
.jse-key.jse-empty.svelte-2iqnqn::after {
  pointer-events: none;
  color: var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  content: "key";
}`);
var PU = pe('<div role="none" data-type="selectable-key"><!></div>'), RU = pe("<!> <!>", 1), NU = pe('<div role="button" tabindex="-1" class="jse-value" data-type="selectable-value"></div>');
function qA(t, e) {
  mt(e, !0);
  var n = eo(() => _n(e.selection) && oi(e.selection)), r = eo(() => e.context.onRenderValue({ path: e.path, value: e.value, mode: e.context.mode, truncateTextSize: e.context.truncateTextSize, readOnly: e.context.readOnly, enforceString: e.enforceString, isEditing: c(n), parser: e.context.parser, normalization: e.context.normalization, selection: e.selection, searchResultItems: e.searchResultItems, onPatch: e.context.onPatch, onPasteJson: e.context.onPasteJson, onSelect: e.context.onSelect, onFind: e.context.onFind, findNextInside: e.context.findNextInside, focus: e.context.focus })), i = Er();
  Ir(wt(i), 17, () => c(r), Kr, (o, s) => {
    var a = Er(), l = wt(a), u = (d) => {
      var h = NU(), p = eo(() => c(s).action);
      zi(h, (m, v) => {
        var g;
        return (g = c(p)) === null || g === void 0 ? void 0 : g(m, v);
      }, () => c(s).props), Z(d, h);
    }, f = (d) => {
      var h = Er(), p = eo(() => c(s).component);
      U_(wt(h), () => c(p), (m, v) => {
        v(m, Ga(() => c(s).props));
      }), Z(d, h);
    };
    xe(l, (d) => {
      Vq(c(s)) ? d(u) : d(f, !1);
    }), Z(o, a);
  }), Z(t, i), gt();
}
var DU = { selecting: !1, selectionAnchor: void 0, selectionAnchorType: void 0, selectionFocus: void 0, dragging: !1 };
function Qv(t) {
  var { json: e, selection: n, deltaY: r, items: i } = t;
  if (!n) return { operations: void 0, updatedSelection: void 0, offset: 0 };
  var o = r < 0 ? (function(f) {
    for (var { json: d, items: h, selection: p, deltaY: m } = f, v = ia(d, p), g = h.findIndex((k) => Zt(k.path, v)), b = () => {
      var k;
      return (k = h[x - 1]) === null || k === void 0 ? void 0 : k.height;
    }, x = g, w = 0; b() !== void 0 && Math.abs(m) > w + b() / 2; ) w += b(), x -= 1;
    var j = h[x].path, y = x - g;
    return x !== g && h[x] !== void 0 ? { beforePath: j, offset: y } : void 0;
  })({ json: e, selection: n, deltaY: r, items: i }) : (function(f) {
    for (var d, { json: h, items: p, selection: m, deltaY: v } = f, g = Ya(h, m), b = p.findIndex((N) => Zt(N.path, g)), x = 0, w = b, j = () => {
      var N;
      return (N = p[w + 1]) === null || N === void 0 ? void 0 : N.height;
    }; j() !== void 0 && Math.abs(v) > x + j() / 2; ) x += j(), w += 1;
    var y = mn(g), k = Ze(h, y), S = Array.isArray(k) ? w : w + 1, T = (d = p[S]) === null || d === void 0 ? void 0 : d.path, M = w - b;
    return T ? { beforePath: T, offset: M } : { append: !0, offset: M };
  })({ json: e, selection: n, deltaY: r, items: i });
  if (!o || o.offset === 0) return { operations: void 0, updatedSelection: void 0, offset: 0 };
  var s = (function(f, d, h) {
    if (!d) return [];
    var p = "beforePath" in h ? h.beforePath : void 0, m = "append" in h ? h.append : void 0, v = mn(at(d)), g = Ze(f, v);
    if (!(m || p && Ts(p, v) && p.length > v.length)) return [];
    var b = ia(f, d), x = Ya(f, d), w = rn(b), j = rn(x), y = p ? p[v.length] : void 0;
    if (!Ur(g)) {
      if (Dr(g)) {
        var k = xi(w), S = xi(j), T = y !== void 0 ? xi(y) : g.length;
        return s6(S - k + 1, T < k ? (W) => ({ op: "move", from: bt(v.concat(String(k + W))), path: bt(v.concat(String(T + W))) }) : () => ({ op: "move", from: bt(v.concat(String(k))), path: bt(v.concat(String(T))) }));
      }
      throw new Error("Cannot create move operations: parent must be an Object or Array");
    }
    var M = Object.keys(g), N = M.indexOf(w), z = M.indexOf(j), L = m ? M.length : y !== void 0 ? M.indexOf(y) : -1;
    return N !== -1 && z !== -1 && L !== -1 ? L > N ? [...M.slice(N, z + 1), ...M.slice(L, M.length)].map((W) => fl(v, W)) : [...M.slice(L, N), ...M.slice(z + 1, M.length)].map((W) => fl(v, W)) : [];
  })(e, n, o), a = mn(ia(e, n)), l = Ze(e, a);
  if (Array.isArray(l)) {
    var u = (function(f) {
      var d, h, { items: p, json: m, selection: v, offset: g } = f, b = ia(m, v), x = Ya(m, v), w = p.findIndex((S) => Zt(S.path, b)), j = p.findIndex((S) => Zt(S.path, x)), y = (d = p[w + g]) === null || d === void 0 ? void 0 : d.path, k = (h = p[j + g]) === null || h === void 0 ? void 0 : h.path;
      return Ri(y, k);
    })({ items: i, json: e, selection: n, offset: o.offset });
    return { operations: s, updatedSelection: u, offset: o.offset };
  }
  return { operations: s, updatedSelection: void 0, offset: o.offset };
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
button.jse-validation-error.svelte-1a8aobl {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  padding: 0;
  margin: 0;
  vertical-align: top;
  display: inline-flex;
  color: var(--jse-error-color, #ee5341);
}

button.jse-validation-info.svelte-1a8aobl {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  padding: 0;
  margin: 0;
  vertical-align: top;
  display: inline-flex;
  color: var(--jse-info-color, #4f91ff);
}

button.jse-validation-warning.svelte-1a8aobl {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  padding: 0;
  margin: 0;
  vertical-align: top;
  display: inline-flex;
  color: var(--jse-warning-color, #fdc539);
}`);
var IU = pe('<button type="button"><!></button>');
function eu(t, e) {
  mt(e, !1);
  var n = Q(), r = gl("absolute-popup"), i = E(e, "validationError", 8), o = E(e, "onExpand", 8);
  de(() => _(i()), () => {
    C(n, Uq(i()) && i().isChildError ? "Contains invalid data" : i().message);
  }), Bn(), zt();
  var s = IU();
  gn(Y(s), { get data() {
    return Hl;
  } }), yi(() => Pe("click", s, function() {
    for (var a, l = arguments.length, u = new Array(l), f = 0; f < l; f++) u[f] = arguments[f];
    (a = o()) === null || a === void 0 || a.apply(this, u);
  })), zi(s, (a, l) => gu?.(a, l), () => De({ text: c(n) }, r)), Ie(() => {
    var a;
    return It(s, 1, "jse-validation-".concat((_(i()), (a = ee(() => i().severity)) !== null && a !== void 0 ? a : "")), "svelte-1a8aobl");
  }), Z(t, s), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-expand.svelte-oawf7x {
  width: var(--jse-indent-size, calc(1em + 4px));
  padding: 0;
  margin: 0;
  border: none;
  cursor: pointer;
  background: transparent;
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
  font-size: var(--jse-font-size-mono, 14px);
  height: var(--jse-line-height, calc(1em + 4px));
}
.jse-expand.svelte-oawf7x:hover {
  opacity: 0.8;
}

.jse-meta.svelte-oawf7x,
.jse-separator.svelte-oawf7x,
.jse-index.svelte-oawf7x,
.jse-bracket.svelte-oawf7x {
  vertical-align: top;
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
}

.jse-index.svelte-oawf7x {
  padding: 0 calc(0.5 * var(--jse-padding, 10px));
}

.jse-bracket.svelte-oawf7x {
  padding: 0 2px;
}
.jse-bracket.jse-expanded.svelte-oawf7x {
  padding-right: var(--jse-padding, 10px);
}

.jse-identifier.svelte-oawf7x {
  vertical-align: top;
  position: relative;
}

.jse-json-node.svelte-oawf7x {
  position: relative;
  color: var(--jse-text-color, #4d4d4d);
}
.jse-json-node.jse-root.svelte-oawf7x {
  min-height: 100%;
  padding-bottom: 2px;
  box-sizing: border-box;
}
.jse-json-node.jse-root.svelte-oawf7x > .jse-contents-outer:where(.svelte-oawf7x) > .jse-contents:where(.svelte-oawf7x) {
  padding-left: 0;
}
.jse-json-node.svelte-oawf7x .jse-props:where(.svelte-oawf7x),
.jse-json-node.svelte-oawf7x .jse-items:where(.svelte-oawf7x) {
  position: relative;
}
.jse-json-node.svelte-oawf7x .jse-header-outer:where(.svelte-oawf7x),
.jse-json-node.svelte-oawf7x .jse-footer-outer:where(.svelte-oawf7x) {
  display: flex;
  margin-left: calc(var(--level) * var(--jse-indent-size, calc(1em + 4px)));
}
.jse-json-node.svelte-oawf7x .jse-header:where(.svelte-oawf7x) {
  position: relative;
}
.jse-json-node.svelte-oawf7x .jse-header:where(.svelte-oawf7x) .jse-meta:where(.svelte-oawf7x) > .jse-meta-inner:where(.svelte-oawf7x) {
  display: flex;
  justify-content: center;
}
.jse-json-node.svelte-oawf7x .jse-contents-outer:where(.svelte-oawf7x) {
  display: flex;
  margin-left: calc(var(--level) * var(--jse-indent-size, calc(1em + 4px)));
}
.jse-json-node.svelte-oawf7x .jse-header:where(.svelte-oawf7x),
.jse-json-node.svelte-oawf7x .jse-contents:where(.svelte-oawf7x) {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
}
.jse-json-node.svelte-oawf7x .jse-contents:where(.svelte-oawf7x) {
  padding-left: var(--jse-indent-size, calc(1em + 4px));
  cursor: var(--jse-contents-cursor, pointer);
}
.jse-json-node.svelte-oawf7x .jse-contents:where(.svelte-oawf7x) .jse-value-outer:where(.svelte-oawf7x) {
  display: inline-flex;
}
.jse-json-node.svelte-oawf7x .jse-footer:where(.svelte-oawf7x) {
  display: inline-flex;
  padding-left: calc(var(--jse-indent-size, calc(1em + 4px)) + 5px);
}
.jse-json-node.svelte-oawf7x .jse-header:where(.svelte-oawf7x),
.jse-json-node.svelte-oawf7x .jse-contents:where(.svelte-oawf7x),
.jse-json-node.svelte-oawf7x .jse-footer:where(.svelte-oawf7x) {
  background: var(--jse-contents-background-color, transparent);
}
.jse-json-node.svelte-oawf7x .jse-insert-selection-area:where(.svelte-oawf7x) {
  padding: 0 calc(0.5 * var(--jse-padding, 10px));
  flex: 1;
}
.jse-json-node.svelte-oawf7x .jse-insert-selection-area.jse-inside:where(.svelte-oawf7x) {
  display: inline-flex;
  align-items: center;
}
.jse-json-node.svelte-oawf7x .jse-insert-selection-area.jse-after:where(.svelte-oawf7x) {
  display: flex;
  align-items: flex-end;
}
.jse-json-node.svelte-oawf7x .jse-context-menu-pointer-anchor:where(.svelte-oawf7x) {
  position: relative;
}
.jse-json-node.svelte-oawf7x .jse-insert-area:where(.svelte-oawf7x) {
  display: flex;
  position: relative;
  z-index: 1;
  margin-left: calc(var(--level) * var(--jse-indent-size, calc(1em + 4px)));
  max-width: 250px;
  min-width: 100px;
  height: 0;
  margin-right: calc(0.5 * var(--jse-padding, 10px));
  outline: 1px solid;
}
.jse-json-node.svelte-oawf7x .jse-insert-area.jse-hovered:where(.svelte-oawf7x) {
  outline-color: var(--jse-context-menu-pointer-hover-background, #b2b2b2);
}
.jse-json-node.svelte-oawf7x .jse-key-outer:where(.svelte-oawf7x) {
  position: relative;
}
.jse-json-node.svelte-oawf7x .jse-key-outer:where(.svelte-oawf7x):hover,
.jse-json-node.svelte-oawf7x .jse-value-outer:where(.svelte-oawf7x):hover,
.jse-json-node.svelte-oawf7x .jse-meta:where(.svelte-oawf7x):hover,
.jse-json-node.svelte-oawf7x .jse-footer:where(.svelte-oawf7x):hover {
  background: var(--jse-hover-background-color, rgba(0, 0, 0, 0.06));
  cursor: var(--jse-contents-cursor, pointer);
}
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-header,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-contents,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-header,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-contents,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-footer {
  background: var(--jse-hover-background-color, rgba(0, 0, 0, 0.06));
  cursor: var(--jse-contents-cursor, pointer);
}
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-value-outer .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-value-outer .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-meta .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-meta .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-header .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-header .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-contents .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-items .jse-contents .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-header .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-header .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-contents .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-props .jse-contents .jse-meta,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-footer .jse-value-outer,
.jse-json-node.jse-hovered.svelte-oawf7x:not(.jse-selected):not(.jse-selected-value) .jse-footer .jse-meta {
  background: none;
}
.jse-json-node.jse-selected.svelte-oawf7x .jse-header:where(.svelte-oawf7x),
.jse-json-node.jse-selected.svelte-oawf7x .jse-contents:where(.svelte-oawf7x),
.jse-json-node.jse-selected.svelte-oawf7x .jse-footer:where(.svelte-oawf7x) {
  background: var(--jse-selection-background-color, #d3d3d3);
  cursor: var(--jse-contents-selected-cursor, grab);
}
.jse-json-node.jse-selected.svelte-oawf7x .jse-key-outer:where(.svelte-oawf7x):hover,
.jse-json-node.jse-selected.svelte-oawf7x .jse-value-outer:where(.svelte-oawf7x):hover,
.jse-json-node.jse-selected.svelte-oawf7x .jse-meta:where(.svelte-oawf7x):hover,
.jse-json-node.jse-selected.svelte-oawf7x .jse-footer:where(.svelte-oawf7x):hover {
  background: inherit;
  cursor: inherit;
}
.jse-json-node.svelte-oawf7x .jse-key-outer.jse-selected-key:where(.svelte-oawf7x) {
  background: var(--jse-selection-background-color, #d3d3d3);
  cursor: var(--jse-contents-selected-cursor, grab);
}
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-value-outer,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-meta,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-items .jse-header,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-items .jse-contents,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-props .jse-header,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-props .jse-contents,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-footer {
  background: var(--jse-selection-background-color, #d3d3d3);
  cursor: var(--jse-contents-selected-cursor, grab);
}
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-value-outer .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-meta .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-items .jse-header .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-items .jse-contents .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-props .jse-header .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-props .jse-contents .jse-key-outer:hover,
.jse-json-node.jse-selected-value.svelte-oawf7x .jse-footer .jse-key-outer:hover {
  background: inherit;
  cursor: inherit;
}
.jse-json-node.jse-readonly.svelte-oawf7x {
  --jse-contents-selected-cursor: pointer;
}
.jse-json-node.svelte-oawf7x .jse-insert-area.jse-selected:where(.svelte-oawf7x) {
  outline-color: var(--jse-context-menu-pointer-background, var(--jse-context-menu-background, #656565));
}`);
var hr = yg(() => DU), zU = pe('<div class="jse-separator svelte-oawf7x">:</div>'), LU = pe('<div class="jse-bracket svelte-oawf7x">[</div> <!> &nbsp;', 1), BU = pe('<div class="jse-bracket svelte-oawf7x">[</div> <!> <div class="jse-bracket svelte-oawf7x">]</div>', 1), qU = pe('<div class="jse-context-menu-pointer-anchor svelte-oawf7x"><!></div>'), FU = pe('<div role="none" class="jse-insert-selection-area jse-inside svelte-oawf7x" data-type="insert-selection-area-inside"></div>'), UU = pe('<div role="none" class="jse-insert-selection-area jse-after svelte-oawf7x" data-type="insert-selection-area-after"></div>'), VU = pe('<div data-type="insert-selection-area-inside"><!></div>'), WU = pe('<div slot="identifier" class="jse-identifier svelte-oawf7x"><div class="jse-index svelte-oawf7x"> </div></div>'), HU = pe("<!> <!>", 1), KU = pe('<div role="none" class="jse-insert-selection-area jse-after svelte-oawf7x" data-type="insert-selection-area-after"></div>'), GU = pe('<div class="jse-items svelte-oawf7x"><!> <!></div> <div class="jse-footer-outer svelte-oawf7x"><div data-type="selectable-value" class="jse-footer svelte-oawf7x"><span class="jse-bracket svelte-oawf7x">]</span></div> <!></div>', 1), JU = pe('<div class="jse-header-outer svelte-oawf7x"><div class="jse-header svelte-oawf7x"><button type="button" class="jse-expand svelte-oawf7x" title="Expand or collapse this array (Ctrl+Click to expand/collapse recursively)"><!></button> <!> <!> <div class="jse-meta svelte-oawf7x"><div class="jse-meta-inner svelte-oawf7x" data-type="selectable-value"><!></div></div> <!></div> <!> <!></div> <!>', 1), YU = pe('<div class="jse-separator svelte-oawf7x">:</div>'), QU = pe('<div class="jse-bracket jse-expanded svelte-oawf7x">&lbrace;</div>'), XU = pe('<div class="jse-bracket svelte-oawf7x">&lbrace;</div> <!> <div class="jse-bracket svelte-oawf7x">&rbrace;</div>', 1), ZU = pe('<div class="jse-context-menu-pointer-anchor svelte-oawf7x"><!></div>'), eV = pe('<div role="none" class="jse-insert-selection-area jse-inside svelte-oawf7x" data-type="insert-selection-area-inside"></div>'), tV = pe('<div role="none" class="jse-insert-selection-area jse-after svelte-oawf7x" data-type="insert-selection-area-after"></div>'), nV = pe('<div data-type="insert-selection-area-inside"><!></div>'), rV = pe('<div slot="identifier"><!></div>'), iV = pe('<div role="none" class="jse-insert-selection-area jse-after svelte-oawf7x" data-type="insert-selection-area-after"></div>'), oV = pe('<div class="jse-props svelte-oawf7x"><!> <!></div> <div class="jse-footer-outer svelte-oawf7x"><div data-type="selectable-value" class="jse-footer svelte-oawf7x"><div class="jse-bracket svelte-oawf7x">&rbrace;</div></div> <!></div>', 1), sV = pe('<div class="jse-header-outer svelte-oawf7x"><div class="jse-header svelte-oawf7x"><button type="button" class="jse-expand svelte-oawf7x" title="Expand or collapse this object (Ctrl+Click to expand/collapse recursively)"><!></button> <!> <!> <div class="jse-meta svelte-oawf7x" data-type="selectable-value"><div class="jse-meta-inner svelte-oawf7x"><!></div></div> <!></div> <!> <!></div> <!>', 1), aV = pe('<div class="jse-separator svelte-oawf7x">:</div>'), lV = pe('<div class="jse-context-menu-pointer-anchor svelte-oawf7x"><!></div>'), cV = pe('<div role="none" class="jse-insert-selection-area jse-after svelte-oawf7x" data-type="insert-selection-area-after"></div>'), uV = pe('<div class="jse-contents-outer svelte-oawf7x"><div class="jse-contents svelte-oawf7x"><!> <!> <div class="jse-value-outer svelte-oawf7x"><!></div> <!></div> <!> <!></div>'), fV = pe('<div data-type="insert-selection-area-after"><!></div>'), dV = pe('<div role="treeitem" tabindex="-1"><!> <!></div>');
function zb(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = E(e, "pointer", 9), o = E(e, "value", 9), s = E(e, "state", 9), a = E(e, "validationErrors", 9), l = E(e, "searchResults", 9), u = E(e, "selection", 9), f = E(e, "context", 9), d = E(e, "onDragSelectionStart", 9), h = ui("jsoneditor:JSONNode"), p = Q(void 0, !0), m = void 0, v = Q(void 0, !0), g = Q(void 0, !0), b = Q(void 0, !0), x = Q(void 0, !0), w = Q(void 0, !0), j = Q(void 0, !0), y = Q(void 0, !0);
  function k(J) {
    J.stopPropagation();
    var H = my(J);
    f().onExpand(c(g), !c(b), H);
  }
  function S() {
    f().onExpand(c(g), !0);
  }
  function T(J, H) {
    var ue = Od(c(g), Object.keys(o()), J, H);
    return f().onPatch(ue), rn(io(ue[0].path));
  }
  function M(J) {
    f().onDrag(J);
  }
  function N(J) {
    hr().selecting && (hr(hr().selecting = !1), J.stopPropagation()), f().onDragEnd(), document.removeEventListener("mousemove", M, !0), document.removeEventListener("mouseup", N);
  }
  function z() {
    var J;
    return ((J = f().findElement([])) === null || J === void 0 || (J = J.getBoundingClientRect()) === null || J === void 0 ? void 0 : J.top) || 0;
  }
  function L(J, H) {
    var ue = z() - J.initialContentTop;
    return H.clientY - J.initialClientY - ue;
  }
  function W(J) {
    if (!f().readOnly && u()) {
      var H = mn(at(u()));
      if (Zt(c(g), H)) {
        var ue = (function(X, K) {
          var rt = [];
          function Qe(D) {
            var F = c(g).concat(D), oe = f().findElement(F);
            oe !== void 0 && rt.push({ path: F, height: oe.clientHeight });
          }
          if (Array.isArray(o())) {
            var Ae = f().getJson();
            if (Ae === void 0) return;
            var tt = ia(Ae, X), Re = Ya(Ae, X), qe = parseInt(rn(tt), 10), pt = parseInt(rn(Re), 10), Ge = K.find((D) => qe >= D.start && pt <= D.end);
            if (!Ge) return;
            var { start: $t, end: A } = Ge;
            J_($t, Math.min(o().length, A), (D) => Qe(String(D)));
          } else Object.keys(o()).forEach(Qe);
          return rt;
        })(u(), c(w) || Qc);
        if (h("dragSelectionStart", { selection: u(), items: ue }), ue) {
          var P = f().getJson();
          if (P !== void 0) {
            var V = ia(P, u()), U = ue.findIndex((X) => Zt(X.path, V)), { offset: me } = Qv({ json: P, selection: f().getSelection(), deltaY: 0, items: ue });
            C(v, { initialTarget: J.target, initialClientY: J.clientY, initialContentTop: z(), selectionStartIndex: U, selectionItemsCount: ul(P, u()).length, items: ue, offset: me, didMoveItems: !1 }), hr(hr().dragging = !0), document.addEventListener("mousemove", ce, !0), document.addEventListener("mouseup", te);
          }
        } else h("Cannot drag the current selection (probably spread over multiple sections)");
      } else d()(J);
    }
  }
  function ce(J) {
    if (c(v)) {
      var H = f().getJson();
      if (H === void 0) return;
      var ue = L(c(v), J), { offset: P } = Qv({ json: H, selection: f().getSelection(), deltaY: ue, items: c(v).items });
      P !== c(v).offset && (h("drag selection", P, ue), C(v, De(De({}, c(v)), {}, { offset: P, didMoveItems: !0 })));
    }
  }
  function te(J) {
    if (c(v)) {
      var H = f().getJson();
      if (H === void 0) return;
      var ue = L(c(v), J), { operations: P, updatedSelection: V } = Qv({ json: H, selection: f().getSelection(), deltaY: ue, items: c(v).items });
      if (P) f().onPatch(P, (X, K) => ({ state: K, selection: V ?? u() }));
      else if (J.target === c(v).initialTarget && !c(v).didMoveItems) {
        var U = zv(J.target), me = aA(J.target);
        me && f().onSelect(Lk(U, me));
      }
      C(v, void 0), hr(hr().dragging = !1), document.removeEventListener("mousemove", ce, !0), document.removeEventListener("mouseup", te);
    }
  }
  function we(J) {
    J.shiftKey || (J.stopPropagation(), J.preventDefault(), f().onSelect(ba(c(g))));
  }
  function Ee(J) {
    J.shiftKey || (J.stopPropagation(), J.preventDefault(), f().onSelect(fa(c(g))));
  }
  function ae(J) {
    f().onSelect(ba(c(g))), fr(), f().onContextMenu(J);
  }
  function re(J) {
    f().onSelect(fa(c(g))), fr(), f().onContextMenu(J);
  }
  de(() => _(i()), () => {
    C(g, io(i()));
  }), de(() => _(i()), () => {
    C(n, encodeURIComponent(i()));
  }), de(() => _(s()), () => {
    C(b, !!tc(s()) && s().expanded);
  }), de(() => (_(o()), _(s())), () => {
    C(x, Es(o(), s(), []));
  }), de(() => _(s()), () => {
    C(w, ai(s()) ? s().visibleSections : void 0);
  }), de(() => _(a()), () => {
    var J;
    C(j, (J = a()) === null || J === void 0 ? void 0 : J.validationError);
  }), de(() => (_(f()), _(u()), c(g)), () => {
    C(y, Yf(f().getJson(), u(), c(g)));
  }), de(() => c(g), () => {
    C(r, c(g).length === 0);
  }), Bn(), zt(!0);
  var G, B, ie = dV(), R = Y(ie), O = (J) => {
    var H = JU(), ue = wt(H), P = Y(ue), V = Y(P), U = Y(V), me = (ye) => {
      gn(ye, { get data() {
        return pa;
      } });
    }, X = (ye) => {
      gn(ye, { get data() {
        return kf;
      } });
    };
    xe(U, (ye) => {
      c(b) ? ye(me) : ye(X, !1);
    });
    var K = le(V, 2);
    Pr(K, e, "identifier", {}, null);
    var rt = le(K, 2), Qe = (ye) => {
      Z(ye, zU());
    };
    xe(rt, (ye) => {
      c(r) || ye(Qe);
    });
    var Ae = le(rt, 2), tt = Y(Ae), Re = Y(tt), qe = (ye) => {
      var ge = LU();
      Op(le(wt(ge), 2), { children: (yt, ot) => {
        var _e = hi();
        Ie(() => {
          var xt, bn;
          return vt(_e, "".concat((_(o()), (xt = ee(() => o().length)) !== null && xt !== void 0 ? xt : ""), `
                `).concat((_(o()), (bn = ee(() => o().length === 1 ? "item" : "items")) !== null && bn !== void 0 ? bn : "")));
        }), Z(yt, _e);
      }, $$slots: { default: !0 } }), Z(ye, ge);
    }, pt = (ye) => {
      var ge = BU();
      Op(le(wt(ge), 2), { onclick: S, children: (yt, ot) => {
        var _e = hi();
        Ie(() => {
          var xt, bn;
          return vt(_e, "".concat((_(o()), (xt = ee(() => o().length)) !== null && xt !== void 0 ? xt : ""), `
                `).concat((_(o()), (bn = ee(() => o().length === 1 ? "item" : "items")) !== null && bn !== void 0 ? bn : "")));
        }), Z(yt, _e);
      }, $$slots: { default: !0 } }), Z(ye, ge);
    };
    xe(Re, (ye) => {
      c(b) ? ye(qe) : ye(pt, !1);
    });
    var Ge = le(Ae, 2), $t = (ye) => {
      var ge = qU();
      Ea(Y(ge), { get root() {
        return c(r);
      }, selected: !0, get onContextMenu() {
        return _(f()), ee(() => f().onContextMenu);
      } }), Z(ye, ge);
    };
    xe(Ge, (ye) => {
      _(f()), c(y), _(u()), _(_n), _(nr), _(oi), _(Zt), _(at), c(g), ee(() => !f().readOnly && c(y) && u() && (_n(u()) || nr(u())) && !oi(u()) && Zt(at(u()), c(g))) && ye($t);
    });
    var A = le(P, 2), D = (ye) => {
      eu(ye, { get validationError() {
        return c(j);
      }, onExpand: S });
    };
    xe(A, (ye) => {
      c(j), c(b), ee(() => c(j) && (!c(b) || !c(j).isChildError)) && ye(D);
    });
    var F = le(A, 2), oe = (ye) => {
      var ge = FU();
      Pe("click", ge, we), Z(ye, ge);
    }, ve = (ye) => {
      var ge = UU();
      Pe("click", ge, Ee), Z(ye, ge);
    };
    xe(F, (ye) => {
      c(b) ? ye(oe) : ye(ve, !1);
    });
    var Ne = le(ue, 2), Fe = (ye) => {
      var ge = GU(), yt = wt(ge), ot = Y(yt), _e = (un) => {
        var en, Rn, on = VU(), qt = Y(on), Pt = Oe(() => (c(y), _(ti), _(u()), ee(() => c(y) && ti(u()))));
        Ea(qt, { insert: !0, get selected() {
          return c(Pt);
        }, onContextMenu: ae }), Ie((an, yn) => {
          en = It(on, 1, "jse-insert-area jse-inside svelte-oawf7x", null, en, an), Ln(on, "title", qv), Rn = Qo(on, "", Rn, yn);
        }, [() => ({ "jse-hovered": c(p) === El, "jse-selected": c(y) && ti(u()) }), () => ({ "--level": (c(g), ee(() => c(g).length + 1)) })], Oe), Z(un, on);
      };
      xe(ot, (un) => {
        _(f()), c(p), _(El), c(y), _(ti), _(u()), ee(() => !f().readOnly && (c(p) === El || c(y) && ti(u()))) && un(_e);
      }), Ir(le(ot, 2), 1, () => c(w) || Qc, Kr, (un, en, Rn) => {
        var on = HU(), qt = wt(on);
        Ir(qt, 1, () => (_(o()), c(en), c(v), ee(() => (function(yn, Ot, Xe) {
          var tn = Ot.start, Qt = Math.min(Ot.end, yn.length), Hn = NC(tn, Qt);
          return Xe && Xe.offset !== 0 ? yk(Hn, Xe.selectionStartIndex, Xe.selectionItemsCount, Xe.offset).map((Kn, On) => ({ index: Kn, gutterIndex: On })) : Hn.map((Kn) => ({ index: Kn, gutterIndex: Kn }));
        })(o(), c(en), c(v)))), (yn) => yn.index, (yn, Ot) => {
          var Xe = Er(), tn = Oe(() => (_(ai), _(a()), c(Ot), ee(() => ai(a()) ? a().items[c(Ot).index] : void 0))), Qt = Oe(() => (_(Xh), _(f()), _(u()), c(g), c(Ot), ee(() => Xh(f().getJson(), u(), c(g).concat(String(c(Ot).index)))))), Hn = wt(Xe), Kn = Oe(() => (_(Ad), _(i()), c(Ot), ee(() => Ad(i(), c(Ot).index)))), On = Oe(() => (_(ai), _(s()), c(Ot), ee(() => ai(s()) ? s().items[c(Ot).index] : void 0))), Vr = Oe(() => (_(ai), _(l()), c(Ot), ee(() => ai(l()) ? l().items[c(Ot).index] : void 0)));
          zb(Hn, { get value() {
            return _(o()), c(Ot), ee(() => o()[c(Ot).index]);
          }, get pointer() {
            return c(Kn);
          }, get state() {
            return c(On);
          }, get validationErrors() {
            return c(tn);
          }, get searchResults() {
            return c(Vr);
          }, get selection() {
            return c(Qt);
          }, get context() {
            return f();
          }, onDragSelectionStart: W, $$slots: { identifier: (Gn, xr) => {
            var Jr = WU(), Yr = Y(Jr), zr = Y(Yr);
            Ie(() => vt(zr, (c(Ot), ee(() => c(Ot).gutterIndex)))), Z(Gn, Jr);
          } } }), Z(yn, Xe);
        });
        var Pt = le(qt, 2), an = (yn) => {
          var Ot = Oe(() => c(w) || Qc);
          TU(yn, { get visibleSections() {
            return c(Ot);
          }, sectionIndex: Rn, get total() {
            return _(o()), ee(() => o().length);
          }, get path() {
            return c(g);
          }, get onExpandSection() {
            return _(f()), ee(() => f().onExpandSection);
          }, get selection() {
            return u();
          }, get context() {
            return f();
          } });
        };
        xe(Pt, (yn) => {
          c(en), _(o()), ee(() => c(en).end < o().length) && yn(an);
        }), Z(un, on);
      });
      var xt = le(yt, 2), bn = le(Y(xt), 2), qn = (un) => {
        var en = KU();
        Pe("click", en, Ee), Z(un, en);
      };
      xe(bn, (un) => {
        c(r) || un(qn);
      }), Z(ye, ge);
    };
    xe(Ne, (ye) => {
      c(b) && ye(Fe);
    }), Pe("click", V, k), Z(J, H);
  }, $ = (J, H) => {
    var ue = (V) => {
      var U = sV(), me = wt(U), X = Y(me), K = Y(X), rt = Y(K), Qe = (_e) => {
        gn(_e, { get data() {
          return pa;
        } });
      }, Ae = (_e) => {
        gn(_e, { get data() {
          return kf;
        } });
      };
      xe(rt, (_e) => {
        c(b) ? _e(Qe) : _e(Ae, !1);
      });
      var tt = le(K, 2);
      Pr(tt, e, "identifier", {}, null);
      var Re = le(tt, 2), qe = (_e) => {
        Z(_e, YU());
      };
      xe(Re, (_e) => {
        c(r) || _e(qe);
      });
      var pt = le(Re, 2), Ge = Y(pt), $t = Y(Ge), A = (_e) => {
        Z(_e, QU());
      }, D = (_e) => {
        var xt = XU();
        Op(le(wt(xt), 2), { onclick: S, children: (bn, qn) => {
          var un = hi();
          Ie((en, Rn) => vt(un, "".concat(en ?? "", `
                `).concat(Rn ?? "")), [() => (_(o()), ee(() => Object.keys(o()).length)), () => (_(o()), ee(() => Object.keys(o()).length === 1 ? "prop" : "props"))], Oe), Z(bn, un);
        }, $$slots: { default: !0 } }), Z(_e, xt);
      };
      xe($t, (_e) => {
        c(b) ? _e(A) : _e(D, !1);
      });
      var F = le(pt, 2), oe = (_e) => {
        var xt = ZU();
        Ea(Y(xt), { get root() {
          return c(r);
        }, selected: !0, get onContextMenu() {
          return _(f()), ee(() => f().onContextMenu);
        } }), Z(_e, xt);
      };
      xe(F, (_e) => {
        _(f()), c(y), _(u()), _(_n), _(nr), _(oi), _(Zt), _(at), c(g), ee(() => !f().readOnly && c(y) && u() && (_n(u()) || nr(u())) && !oi(u()) && Zt(at(u()), c(g))) && _e(oe);
      });
      var ve = le(X, 2), Ne = (_e) => {
        eu(_e, { get validationError() {
          return c(j);
        }, onExpand: S });
      };
      xe(ve, (_e) => {
        c(j), c(b), ee(() => c(j) && (!c(b) || !c(j).isChildError)) && _e(Ne);
      });
      var Fe = le(ve, 2), ye = (_e) => {
        var xt = eV();
        Pe("click", xt, we), Z(_e, xt);
      }, ge = (_e, xt) => {
        var bn = (qn) => {
          var un = tV();
          Pe("click", un, Ee), Z(qn, un);
        };
        xe(_e, (qn) => {
          c(r) || qn(bn);
        }, xt);
      };
      xe(Fe, (_e) => {
        c(b) ? _e(ye) : _e(ge, !1);
      });
      var yt = le(me, 2), ot = (_e) => {
        var xt = oV(), bn = wt(xt), qn = Y(bn), un = (qt) => {
          var Pt, an, yn = nV(), Ot = Y(yn), Xe = Oe(() => (c(y), _(ti), _(u()), ee(() => c(y) && ti(u()))));
          Ea(Ot, { insert: !0, get selected() {
            return c(Xe);
          }, onContextMenu: ae }), Ie((tn, Qt) => {
            Pt = It(yn, 1, "jse-insert-area jse-inside svelte-oawf7x", null, Pt, tn), Ln(yn, "title", qv), an = Qo(yn, "", an, Qt);
          }, [() => ({ "jse-hovered": c(p) === El, "jse-selected": c(y) && ti(u()) }), () => ({ "--level": (c(g), ee(() => c(g).length + 1)) })], Oe), Z(qt, yn);
        };
        xe(qn, (qt) => {
          _(f()), c(p), _(El), c(y), _(ti), _(u()), ee(() => !f().readOnly && (c(p) === El || c(y) && ti(u()))) && qt(un);
        }), Ir(le(qn, 2), 1, () => (_(o()), c(v), ee(() => (function(qt, Pt) {
          var an = Object.keys(qt);
          return Pt && Pt.offset !== 0 ? yk(an, Pt.selectionStartIndex, Pt.selectionItemsCount, Pt.offset) : an;
        })(o(), c(v)))), Kr, (qt, Pt) => {
          var an = Er(), yn = Oe(() => (_(Ad), _(i()), c(Pt), ee(() => Ad(i(), c(Pt))))), Ot = Oe(() => (_(Zi), _(l()), c(Pt), ee(() => Zi(l()) ? l().properties[c(Pt)] : void 0))), Xe = Oe(() => (_(Zi), _(a()), c(Pt), ee(() => Zi(a()) ? a().properties[c(Pt)] : void 0))), tn = Oe(() => (c(g), c(Pt), ee(() => c(g).concat(c(Pt))))), Qt = Oe(() => (_(Xh), _(f()), _(u()), _(c(tn)), ee(() => Xh(f().getJson(), u(), c(tn))))), Hn = wt(an), Kn = Oe(() => (_(Zi), _(s()), c(Pt), ee(() => Zi(s()) ? s().properties[c(Pt)] : void 0)));
          zb(Hn, { get value() {
            return _(o()), c(Pt), ee(() => o()[c(Pt)]);
          }, get pointer() {
            return c(yn);
          }, get state() {
            return c(Kn);
          }, get validationErrors() {
            return c(Xe);
          }, get searchResults() {
            return c(Ot);
          }, get selection() {
            return c(Qt);
          }, get context() {
            return f();
          }, onDragSelectionStart: W, $$slots: { identifier: (On, Vr) => {
            var Gn, xr = rV(), Jr = Y(xr), Yr = Oe(() => (_(Hk), _(c(Ot)), ee(() => Hk(c(Ot)))));
            (function(zr, Zn) {
              mt(Zn, !1);
              var Ar = Q(void 0, !0), Te = Q(void 0, !0), ln = E(Zn, "pointer", 9), Nn = E(Zn, "key", 9), er = E(Zn, "selection", 9), be = E(Zn, "searchResultItems", 9), Le = E(Zn, "onUpdateKey", 9), We = E(Zn, "context", 9), Rt = Q(void 0, !0);
              function Jt(Vt) {
                c(Te) || We().readOnly || (Vt.preventDefault(), We().onSelect(Cy(c(Rt))));
              }
              function Yt(Vt, xn) {
                var Ft = Le()(Nn(), We().normalization.unescapeValue(Vt)), fe = mn(c(Rt)).concat(Ft);
                We().onSelect(xn === Ja.nextInside ? sn(fe) : va(fe)), xn !== Ja.self && We().focus();
              }
              function fn() {
                We().onSelect(va(c(Rt))), We().focus();
              }
              de(() => _(ln()), () => {
                C(Rt, io(ln()));
              }), de(() => (_(er()), c(Rt)), () => {
                C(Ar, li(er()) && Zt(er().path, c(Rt)));
              }), de(() => (c(Ar), _(er())), () => {
                C(Te, c(Ar) && oi(er()));
              }), Bn(), zt(!0);
              var ht = RU(), Gt = wt(ht), et = (Vt) => {
                var xn = Oe(() => (_(We()), _(Nn()), ee(() => We().normalization.escapeValue(Nn())))), Ft = Oe(() => (_(oi), _(er()), ee(() => oi(er()) ? er().initialValue : void 0)));
                bA(Vt, { get value() {
                  return c(xn);
                }, get initialValue() {
                  return c(Ft);
                }, label: "Edit key", shortText: !0, onChange: Yt, onCancel: fn, get onFind() {
                  return _(We()), ee(() => We().onFind);
                } });
              }, Mn = (Vt) => {
                var xn, Ft = PU(), fe = Y(Ft), ke = (Nt) => {
                  var dn = Oe(() => (_(We()), _(Nn()), ee(() => We().normalization.escapeValue(Nn()))));
                  CA(Nt, { get text() {
                    return c(dn);
                  }, get searchResultItems() {
                    return be();
                  } });
                }, Ue = (Nt) => {
                  var dn = hi();
                  Ie((Ut) => vt(dn, Ut), [() => (_(hu), _(We()), _(Nn()), ee(() => hu(We().normalization.escapeValue(Nn()))))], Oe), Z(Nt, dn);
                };
                xe(fe, (Nt) => {
                  be() ? Nt(ke) : Nt(Ue, !1);
                }), Ie((Nt) => xn = It(Ft, 1, "jse-key svelte-2iqnqn", null, xn, Nt), [() => ({ "jse-empty": Nn() === "" })], Oe), Pe("dblclick", Ft, Jt), Z(Vt, Ft);
              };
              xe(Gt, (Vt) => {
                _(We()), c(Te), ee(() => !We().readOnly && c(Te)) ? Vt(et) : Vt(Mn, !1);
              });
              var Fn = le(Gt, 2), lr = (Vt) => {
                Ea(Vt, { selected: !0, get onContextMenu() {
                  return _(We()), ee(() => We().onContextMenu);
                } });
              };
              xe(Fn, (Vt) => {
                _(We()), c(Ar), c(Te), ee(() => !We().readOnly && c(Ar) && !c(Te)) && Vt(lr);
              }), Z(zr, ht), gt();
            })(Jr, { get pointer() {
              return c(yn);
            }, get key() {
              return c(Pt);
            }, get selection() {
              return c(Qt);
            }, get searchResultItems() {
              return c(Yr);
            }, get context() {
              return f();
            }, onUpdateKey: T }), Ie((zr) => Gn = It(xr, 1, "jse-key-outer svelte-oawf7x", null, Gn, zr), [() => ({ "jse-selected-key": li(c(Qt)) && Zt(c(Qt).path, c(tn)) })], Oe), Z(On, xr);
          } } }), Z(qt, an);
        });
        var en = le(bn, 2), Rn = le(Y(en), 2), on = (qt) => {
          var Pt = iV();
          Pe("click", Pt, Ee), Z(qt, Pt);
        };
        xe(Rn, (qt) => {
          c(r) || qt(on);
        }), Z(_e, xt);
      };
      xe(yt, (_e) => {
        c(b) && _e(ot);
      }), Pe("click", K, k), Z(V, U);
    }, P = (V) => {
      var U = uV(), me = Y(U), X = Y(me);
      Pr(X, e, "identifier", {}, null);
      var K = le(X, 2), rt = (F) => {
        Z(F, aV());
      };
      xe(K, (F) => {
        c(r) || F(rt);
      });
      var Qe = le(K, 2), Ae = Y(Qe), tt = Oe(() => c(y) ? u() : void 0), Re = Oe(() => (_(Kk), _(l()), ee(() => Kk(l()))));
      qA(Ae, { get path() {
        return c(g);
      }, get value() {
        return o();
      }, get enforceString() {
        return c(x);
      }, get selection() {
        return c(tt);
      }, get searchResultItems() {
        return c(Re);
      }, get context() {
        return f();
      } });
      var qe = le(Qe, 2), pt = (F) => {
        var oe = lV();
        Ea(Y(oe), { get root() {
          return c(r);
        }, selected: !0, get onContextMenu() {
          return _(f()), ee(() => f().onContextMenu);
        } }), Z(F, oe);
      };
      xe(qe, (F) => {
        _(f()), c(y), _(u()), _(_n), _(nr), _(oi), _(Zt), _(at), c(g), ee(() => !f().readOnly && c(y) && u() && (_n(u()) || nr(u())) && !oi(u()) && Zt(at(u()), c(g))) && F(pt);
      });
      var Ge = le(me, 2), $t = (F) => {
        eu(F, { get validationError() {
          return c(j);
        }, onExpand: S });
      };
      xe(Ge, (F) => {
        c(j) && F($t);
      });
      var A = le(Ge, 2), D = (F) => {
        var oe = cV();
        Pe("click", oe, Ee), Z(F, oe);
      };
      xe(A, (F) => {
        c(r) || F(D);
      }), Z(V, U);
    };
    xe(J, (V) => {
      _(Pn), _(o()), ee(() => Pn(o())) ? V(ue) : V(P, !1);
    }, H);
  };
  xe(R, (J) => {
    _(o()), ee(() => Array.isArray(o())) ? J(O) : J($, !1);
  });
  var ne = le(R, 2), je = (J) => {
    var H, ue = fV(), P = Y(ue), V = Oe(() => (c(y), _(to), _(u()), ee(() => c(y) && to(u()))));
    Ea(P, { insert: !0, get selected() {
      return c(V);
    }, onContextMenu: re }), Ie((U) => {
      H = It(ue, 1, "jse-insert-area jse-after svelte-oawf7x", null, H, U), Ln(ue, "title", qv);
    }, [() => ({ "jse-hovered": c(p) === Yh, "jse-selected": c(y) && to(u()) })], Oe), Z(J, ue);
  };
  xe(ne, (J) => {
    _(f()), c(p), _(Yh), c(y), _(to), _(u()), ee(() => !f().readOnly && (c(p) === Yh || c(y) && to(u()))) && J(je);
  }), Ie((J, H, ue) => {
    G = It(ie, 1, J, "svelte-oawf7x", G, H), Ln(ie, "data-path", c(n)), Ln(ie, "aria-selected", c(y)), B = Qo(ie, "", B, ue);
  }, [() => cl((_(as), c(b), _(f()), c(g), _(o()), ee(() => as("jse-json-node", { "jse-expanded": c(b) }, f().onClassName(c(g), o()))))), () => ({ "jse-root": c(r), "jse-selected": c(y) && nr(u()), "jse-selected-value": c(y) && _n(u()), "jse-readonly": f().readOnly, "jse-hovered": c(p) === kk }), () => ({ "--level": (c(g), ee(() => c(g).length)) })], Oe), Pe("mousedown", ie, function(J) {
    if ((J.buttons === 1 || J.buttons === 2) && !((H = J.target).nodeName === "DIV" && H.contentEditable === "true" || J.buttons === 1 && oA(J.target, "BUTTON"))) {
      var H;
      J.stopPropagation(), J.preventDefault(), f().focus(), document.addEventListener("mousemove", M, !0), document.addEventListener("mouseup", N);
      var ue = zv(J.target), P = f().getJson(), V = f().getDocumentState();
      if (!u() || ue === Qn.after || ue === Qn.inside || u().type !== ue && u().type !== Qn.multi || !Yf(P, u(), c(g))) if (hr(hr().selecting = !0), hr(hr().selectionAnchor = c(g)), hr(hr().selectionAnchorType = ue), hr(hr().selectionFocus = c(g)), J.shiftKey) {
        var U = f().getSelection();
        U && f().onSelect(Ri(Fl(U), c(g)));
      } else if (ue === Qn.multi) if (c(r) && J.target.hasAttribute("data-path")) {
        var me = rn(hA(o(), V));
        f().onSelect(Mb(me));
      } else f().onSelect(Ri(c(g), c(g)));
      else P !== void 0 && f().onSelect(Lk(ue, c(g)));
      else J.button === 0 && d()(J);
    }
  }), Pe("mousemove", ie, function(J) {
    if (hr().selecting) {
      J.preventDefault(), J.stopPropagation(), hr().selectionFocus === void 0 && window.getSelection && window.getSelection().empty();
      var H = zv(J.target);
      Zt(c(g), hr().selectionFocus) && H === hr().selectionAnchorType || (hr(hr().selectionFocus = c(g)), hr(hr().selectionAnchorType = H), f().onSelect(Ri(hr().selectionAnchor || hr().selectionFocus, hr().selectionFocus)));
    }
  }), Pe("mouseover", ie, function(J) {
    hr().selecting || hr().dragging || (J.stopPropagation(), qa(J.target, "data-type", "selectable-value") ? C(p, kk) : qa(J.target, "data-type", "selectable-key") ? C(p, void 0) : qa(J.target, "data-type", "insert-selection-area-inside") ? C(p, El) : qa(J.target, "data-type", "insert-selection-area-after") && C(p, Yh), clearTimeout(m));
  }), Pe("mouseout", ie, function(J) {
    J.stopPropagation(), m = window.setTimeout(() => C(p, void 0));
  }), Z(t, ie), gt();
}
var hV = { prefix: "fas", iconName: "jsoneditor-expand", icon: [512, 512, [], "", "M 0,448 V 512 h 512 v -64 z M 0,0 V 64 H 512 V 0 Z M 256,96 128,224 h 256 z M 256,416 384,288 H 128 Z"] }, pV = { prefix: "fas", iconName: "jsoneditor-collapse", icon: [512, 512, [], "", "m 0,224 v 64 h 512 v -64 z M 256,192 384,64 H 128 Z M 256,320 128,448 h 256 z"] }, oS = { prefix: "fas", iconName: "jsoneditor-format", icon: [512, 512, [], "", "M 0,32 v 64 h 416 v -64 z M 160,160 v 64 h 352 v -64 z M 160,288 v 64 h 288 v -64 z M 0,416 v 64 h 320 v -64 z"] }, mV = { prefix: "fas", iconName: "jsoneditor-compact", icon: [512, 512, [], "", "M 0,32 v 64 h 512 v -64 z M 0,160 v 64 h 512 v -64 z M 0,288 v 64 h 352 v -64 z"] };
function gV(t, e) {
  t.stopPropagation(), e.onCreateObject();
}
function vV(t, e) {
  t.stopPropagation(), e.onCreateArray();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-welcome.svelte-1eamlhk {
  flex: 1;
  overflow: auto;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  display: flex;
  flex-direction: column;
  align-items: center;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-welcome.svelte-1eamlhk:last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-welcome.svelte-1eamlhk .jse-space.jse-before:where(.svelte-1eamlhk) {
  flex: 1;
}
.jse-welcome.svelte-1eamlhk .jse-space.jse-after:where(.svelte-1eamlhk) {
  flex: 2;
}
.jse-welcome.svelte-1eamlhk .jse-contents:where(.svelte-1eamlhk) {
  display: flex;
  flex-direction: column;
  max-width: 300px;
  margin: 2em var(--jse-padding, 10px);
  gap: var(--jse-padding, 10px);
}
.jse-welcome.svelte-1eamlhk .jse-contents:where(.svelte-1eamlhk) .jse-welcome-info:where(.svelte-1eamlhk) {
  color: var(--jse-panel-color-readonly, #b2b2b2);
}
.jse-welcome.svelte-1eamlhk .jse-contents:where(.svelte-1eamlhk) button:where(.svelte-1eamlhk) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-welcome.svelte-1eamlhk .jse-contents:where(.svelte-1eamlhk) button:where(.svelte-1eamlhk):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-welcome.svelte-1eamlhk .jse-contents:where(.svelte-1eamlhk) button:where(.svelte-1eamlhk):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}`);
var bV = (t, e) => e.onClick(), yV = pe('<div class="jse-welcome-info svelte-1eamlhk">You can paste clipboard data using <b>Ctrl+V</b>, or use the following options:</div> <button class="svelte-1eamlhk">Create object</button> <button class="svelte-1eamlhk">Create array</button>', 1), xV = pe('<div class="jse-welcome svelte-1eamlhk" role="none"><div class="jse-space jse-before svelte-1eamlhk"></div> <div class="jse-contents svelte-1eamlhk"><div class="jse-welcome-title">Empty document</div> <!></div> <div class="jse-space jse-after svelte-1eamlhk"></div></div>');
function Lb(t, e) {
  var n = typeof t == "string" ? t.toLowerCase() : t, r = typeof e == "string" ? e.toLowerCase() : e;
  return oR(n, r);
}
function FA(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1, i = Ze(t, e);
  if (Dr(i)) {
    if (n === void 0) throw new Error("Cannot sort: no property selected by which to sort the array");
    return (function(o) {
      var s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], l = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 1, u = /* @__PURE__ */ (function(d, h) {
        var p = { boolean: 0, number: 1, string: 2, undefined: 4 }, m = 3;
        return function(v, g) {
          var b = Ze(v, d), x = Ze(g, d);
          if (typeof b != typeof x) {
            var w, j, y = (w = p[typeof b]) !== null && w !== void 0 ? w : m, k = (j = p[typeof x]) !== null && j !== void 0 ? j : m;
            return y > k ? h : y < k ? -h : 0;
          }
          return typeof b == "number" || typeof b == "boolean" ? b > x ? h : b < x ? -h : 0 : Or(b) ? 0 : h * Lb(b, x);
        };
      })(a, l), f = Ze(o, s);
      return [{ op: "replace", path: bt(s), value: f.slice(0).sort(u) }];
    })(t, e, n, r);
  }
  if (Pn(i)) return (function(o) {
    var s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, l = Ze(o, s), u = Object.keys(l).slice();
    u.sort((d, h) => a * Lb(d, h));
    var f = {};
    return u.forEach((d) => f[d] = l[d]), [{ op: "replace", path: bt(s), value: f }];
  })(t, e, r);
  throw new Error("Cannot sort: no array or object");
}
xd(["click"]);
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-navigation-bar-dropdown.svelte-2nnd2m {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 3;
  background: var(--jse-navigation-bar-background, var(--jse-background-color, #fff));
  color: var(--jse-navigation-bar-dropdown-color, #656565);
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
  display: flex;
  flex-direction: column;
  max-height: 300px;
  overflow: auto;
  min-width: 80px;
}
.jse-navigation-bar-dropdown.svelte-2nnd2m button.jse-navigation-bar-dropdown-item:where(.svelte-2nnd2m) {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  outline: none;
  text-align: left;
  white-space: nowrap;
  box-sizing: border-box;
  padding: calc(0.5 * var(--jse-padding, 10px)) 36px;
}
.jse-navigation-bar-dropdown.svelte-2nnd2m button.jse-navigation-bar-dropdown-item:where(.svelte-2nnd2m):focus, .jse-navigation-bar-dropdown.svelte-2nnd2m button.jse-navigation-bar-dropdown-item:where(.svelte-2nnd2m):hover {
  background: var(--jse-navigation-bar-background-highlight, #e5e5e5);
}
.jse-navigation-bar-dropdown.svelte-2nnd2m button.jse-navigation-bar-dropdown-item.jse-selected:where(.svelte-2nnd2m) {
  background: var(--jse-navigation-bar-dropdown-color, #656565);
  color: var(--jse-navigation-bar-background, var(--jse-background-color, #fff));
}`);
var wV = pe('<button type="button"> </button>'), jV = pe('<button type="button" class="jse-navigation-bar-dropdown-item svelte-2nnd2m">...</button>'), kV = pe('<div class="jse-navigation-bar-dropdown svelte-2nnd2m"><!> <!></div>');
function SV(t, e) {
  mt(e, !1);
  var n = E(e, "items", 9), r = E(e, "selectedItem", 9), i = E(e, "onSelect", 9);
  zt(!0);
  var o = kV(), s = Y(o);
  Ir(s, 1, () => (_(bm), _(n()), ee(() => bm(n(), 100))), (u) => u, (u, f) => {
    var d, h = wV(), p = Y(h);
    Ie((m, v, g) => {
      d = It(h, 1, "jse-navigation-bar-dropdown-item svelte-2nnd2m", null, d, m), Ln(h, "title", v), vt(p, g);
    }, [() => ({ "jse-selected": c(f) === r() }), () => (c(f), ee(() => c(f).toString())), () => (_(ta), c(f), ee(() => ta(c(f).toString(), 30)))], Oe), Pe("click", h, Ys(() => i()(c(f)))), Z(u, h);
  });
  var a = le(s, 2), l = (u) => {
    var f = jV();
    Ln(f, "title", "Limited to 100 items"), Z(u, f);
  };
  xe(a, (u) => {
    _(n()), ee(() => n().length > 100) && u(l);
  }), Z(t, o), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-navigation-bar-item.svelte-752ro1 {
  position: relative;
  display: flex;
}
.jse-navigation-bar-item.svelte-752ro1 button.jse-navigation-bar-button:where(.svelte-752ro1) {
  font-family: inherit;
  font-size: inherit;
  padding: calc(0.5 * var(--jse-padding, 10px)) 2px;
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  outline: none;
  min-width: 2em;
  white-space: nowrap;
}
.jse-navigation-bar-item.svelte-752ro1 button.jse-navigation-bar-button:where(.svelte-752ro1):focus, .jse-navigation-bar-item.svelte-752ro1 button.jse-navigation-bar-button:where(.svelte-752ro1):hover {
  background: var(--jse-panel-button-background-highlight, #e0e0e0);
  color: var(--panel-button-color-highlight, var(--jse-text-color, #4d4d4d));
}
.jse-navigation-bar-item.svelte-752ro1 button.jse-navigation-bar-button.jse-navigation-bar-arrow:where(.svelte-752ro1) {
  padding: 2px var(--jse-padding, 10px) 0;
}
.jse-navigation-bar-item.svelte-752ro1 button.jse-navigation-bar-button.jse-navigation-bar-arrow.jse-open:where(.svelte-752ro1) {
  background: var(--jse-navigation-bar-background, var(--jse-background-color, #fff));
  color: var(--jse-navigation-bar-dropdown-color, #656565);
}
.jse-navigation-bar-item.svelte-752ro1:last-child {
  padding-right: var(--jse-padding, 10px);
}`);
var CV = pe('<button type="button" class="jse-navigation-bar-button svelte-752ro1"> </button>'), OV = pe('<div class="jse-navigation-bar-item svelte-752ro1"><button type="button"><!></button> <!></div>');
function sS(t, e) {
  mt(e, !1);
  var n, r = Q(void 0, !0), i = Q(void 0, !0), { openAbsolutePopup: o, closeAbsolutePopup: s } = gl("absolute-popup"), a = E(e, "path", 9), l = E(e, "index", 9), u = E(e, "onSelect", 9), f = E(e, "getItems", 9), d = Q(void 0, !0), h = Q(!1, !0);
  function p(w) {
    s(n), u()(c(r).concat(w));
  }
  de(() => (_(a()), _(l())), () => {
    C(r, a().slice(0, l()));
  }), de(() => (_(a()), _(l())), () => {
    C(i, a()[l()]);
  }), Bn(), zt(!0);
  var m, v = OV(), g = Y(v);
  gn(Y(g), { get data() {
    return HC;
  } });
  var b = le(g, 2), x = (w) => {
    var j = CV(), y = Y(j);
    Ie(() => vt(y, c(i))), Pe("click", j, () => p(c(i))), Z(w, j);
  };
  xe(b, (w) => {
    c(i) !== void 0 && w(x);
  }), pr(v, (w) => C(d, w), () => c(d)), Ie((w) => m = It(g, 1, "jse-navigation-bar-button jse-navigation-bar-arrow svelte-752ro1", null, m, w), [() => ({ "jse-open": c(h) })], Oe), Pe("click", g, function() {
    if (c(d)) {
      C(h, !0);
      var w = { items: f()(c(r)), selectedItem: c(i), onSelect: p };
      n = o(SV, w, { anchor: c(d), closeOnOuterClick: !0, onClose: () => {
        C(h, !1);
      } });
    }
  }), Z(t, v), gt();
}
function Ty(t) {
  var e, n;
  if (navigator.clipboard) return navigator.clipboard.writeText(t);
  if ((e = (n = document).queryCommandSupported) !== null && e !== void 0 && e.call(n, "copy")) {
    var r = document.createElement("textarea");
    r.value = t, r.style.position = "fixed", r.style.opacity = "0", document.body.appendChild(r), r.select();
    try {
      document.execCommand("copy");
    } catch (i) {
      console.error(i);
    } finally {
      document.body.removeChild(r);
    }
    return Promise.resolve();
  }
  return console.error("Copy failed."), Promise.resolve();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-navigation-bar-path-editor.svelte-zc2wx7 {
  flex: 1;
  display: flex;
  border: var(--jse-edit-outline, 2px solid #656565);
  background: var(--jse-background-color, #fff);
}
.jse-navigation-bar-path-editor.svelte-zc2wx7 input.jse-navigation-bar-text:where(.svelte-zc2wx7) {
  flex: 1;
  font-family: inherit;
  font-size: inherit;
  padding: 0 5px 1px;
  background: var(--jse-background-color, #fff);
  color: var(--jse-text-color, #4d4d4d);
  border: none;
  outline: none;
}
.jse-navigation-bar-path-editor.svelte-zc2wx7 button:where(.svelte-zc2wx7) {
  border: none;
  background: var(--jse-background-color, #fff);
  cursor: pointer;
  font-family: inherit;
  font-size: 80%;
  color: inherit;
}
.jse-navigation-bar-path-editor.svelte-zc2wx7 button.jse-navigation-bar-copy.copied:where(.svelte-zc2wx7) {
  color: var(--message-success-background, #9ac45d);
}
.jse-navigation-bar-path-editor.svelte-zc2wx7 button.jse-navigation-bar-validation-error:where(.svelte-zc2wx7) {
  color: var(--jse-error-color, #ee5341);
}
.jse-navigation-bar-path-editor.error.svelte-zc2wx7 {
  border-color: var(--jse-error-color, #ee5341);
}
.jse-navigation-bar-path-editor.error.svelte-zc2wx7 input.jse-navigation-bar-text:where(.svelte-zc2wx7) {
  color: var(--jse-error-color, #ee5341);
}
.jse-navigation-bar-path-editor.svelte-zc2wx7 .jse-copied-text:where(.svelte-zc2wx7) {
  background: var(--message-success-background, #9ac45d);
  color: var(--jse-message-success-color, #fff);
  position: relative;
  margin: 2px;
  padding: 0 5px;
  border-radius: 3px;
}`);
var EV = pe('<button type="button" class="jse-navigation-bar-validation-error svelte-zc2wx7"><!></button>'), _V = pe('<div class="jse-copied-text svelte-zc2wx7">Copied!</div>'), AV = pe('<div><input type="text" class="jse-navigation-bar-text svelte-zc2wx7"/> <!> <!> <button type="button" title="Copy selected path to the clipboard"><!></button></div>');
function MV(t, e) {
  mt(e, !1);
  var n = Q(), r = gl("absolute-popup"), i = E(e, "path", 8), o = E(e, "pathParser", 8), s = E(e, "onChange", 8), a = E(e, "onClose", 8), l = E(e, "onError", 8), u = E(e, "pathExists", 8), f = Q(), d = Q(), h = Q(!1), p = void 0, m = Q(!1);
  function v() {
    c(f).focus();
  }
  function g(N) {
    try {
      var z = o().parse(N);
      return (function(L) {
        if (!u()(L)) throw new Error("Path does not exist in current document");
      })(z), { path: z, error: void 0 };
    } catch (L) {
      return { path: void 0, error: L };
    }
  }
  Ti(() => {
    v();
  }), Io(() => {
    clearTimeout(p);
  }), de(() => (_(o()), _(i())), () => {
    C(d, o().stringify(i()));
  }), de(() => (c(h), c(d)), () => {
    C(n, c(h) ? g(c(d)).error : void 0);
  }), Bn(), zt();
  var b, x = AV(), w = Y(x);
  pr(w, (N) => C(f, N), () => c(f));
  var j = le(w, 2), y = (N) => {
    var z = EV();
    gn(Y(z), { get data() {
      return Hl;
    } }), zi(z, (L, W) => gu?.(L, W), () => De({ text: String(c(n) || "") }, r)), Z(N, z);
  };
  xe(j, (N) => {
    c(n) && N(y);
  });
  var k = le(j, 2), S = (N) => {
    Z(N, _V());
  };
  xe(k, (N) => {
    c(m) && N(S);
  });
  var T, M = le(k, 2);
  gn(Y(M), { get data() {
    return Na;
  } }), Ie((N, z) => {
    b = It(x, 1, "jse-navigation-bar-path-editor svelte-zc2wx7", null, b, N), ec(w, c(d)), T = It(M, 1, "jse-navigation-bar-copy svelte-zc2wx7", null, T, z);
  }, [() => ({ error: c(n) }), () => ({ copied: c(m) })], Oe), Pe("keydown", w, Ys(function(N) {
    var z = ga(N);
    if (z === "Escape" && (N.preventDefault(), a()()), z === "Enter") {
      N.preventDefault(), C(h, !0);
      var L = g(c(d));
      L.path !== void 0 ? s()(L.path) : l()(L.error);
    }
  })), Pe("input", w, function(N) {
    C(d, N.currentTarget.value);
  }), Pe("click", M, function() {
    Ty(c(d)), C(m, !0), p = window.setTimeout(() => C(m, !1), 1e3), v();
  }), Z(t, x), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-navigation-bar.svelte-xs03gj {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  background: var(--jse-panel-background, #ebebeb);
  color: var(--jse-panel-button-color, inherit);
  padding: 0;
  margin: 0;
  display: flex;
  overflow: auto;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit:where(.svelte-xs03gj) {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  background: transparent;
  border: none;
  display: flex;
  cursor: pointer;
  outline: none;
  align-items: center;
}
.jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit.flex:where(.svelte-xs03gj) {
  flex: 1;
}
.jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit:where(.svelte-xs03gj):focus, .jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit:where(.svelte-xs03gj):hover, .jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit.editing:where(.svelte-xs03gj) {
  background: var(--jse-panel-button-background-highlight, #e0e0e0);
  color: var(--panel-button-color-highlight, var(--jse-text-color, #4d4d4d));
  transition: color 0.2s ease-in, background 0.2s ease-in;
}
.jse-navigation-bar.svelte-xs03gj .jse-navigation-bar-edit:where(.svelte-xs03gj) .jse-navigation-bar-space:where(.svelte-xs03gj) {
  flex: 1;
  text-align: left;
}`);
var TV = pe("<!> <!>", 1), $V = pe('<div class="jse-navigation-bar svelte-xs03gj"><!> <button type="button"><span class="jse-navigation-bar-space svelte-xs03gj"> </span> <!></button></div>');
function PV(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = ui("jsoneditor:NavigationBar"), o = E(e, "json", 9), s = E(e, "selection", 9), a = E(e, "onSelect", 9), l = E(e, "onError", 9), u = E(e, "pathParser", 9), f = Q(void 0, !0), d = Q(!1, !0);
  function h(z) {
    i("get items for path", z);
    var L = Ze(o(), z);
    if (Array.isArray(L)) return NC(0, L.length).map(String);
    if (Pn(L)) {
      var W = Object.keys(L).slice(0);
      return W.sort(Lb), W;
    }
    return [];
  }
  function p(z) {
    return ro(o(), z);
  }
  function m(z) {
    i("select path", JSON.stringify(z)), a()(Ri(z, z));
  }
  function v() {
    C(d, !1);
  }
  function g(z) {
    v(), m(z);
  }
  de(() => (_(s()), at), () => {
    C(n, s() ? at(s()) : []);
  }), de(() => (_(o()), c(n)), () => {
    C(r, Or(Ze(o(), c(n))));
  }), de(() => c(n), () => {
    c(n), setTimeout(() => {
      if (c(f) && c(f).scrollTo) {
        var z = c(f).scrollWidth - c(f).clientWidth;
        z > 0 && (i("scrollTo ", z), c(f).scrollTo({ left: z, behavior: "smooth" }));
      }
    });
  }), Bn(), zt(!0);
  var b = $V(), x = Y(b), w = (z) => {
    var L = TV(), W = wt(L);
    Ir(W, 1, () => c(n), Kr, (we, Ee, ae) => {
      sS(we, { getItems: h, get path() {
        return c(n);
      }, index: ae, onSelect: m });
    });
    var ce = le(W, 2), te = (we) => {
      sS(we, { getItems: h, get path() {
        return c(n);
      }, get index() {
        return c(n), ee(() => c(n).length);
      }, onSelect: m });
    };
    xe(ce, (we) => {
      c(r) && we(te);
    }), Z(z, L);
  }, j = (z) => {
    MV(z, { get path() {
      return c(n);
    }, onClose: v, onChange: g, get onError() {
      return l();
    }, pathExists: p, get pathParser() {
      return u();
    } });
  };
  xe(x, (z) => {
    c(d) ? z(j, !1) : z(w);
  });
  var y, k = le(x, 2), S = Y(k), T = Y(S), M = le(S, 2), N = Oe(() => c(d) ? Z6 : I6);
  gn(M, { get data() {
    return c(N);
  } }), pr(b, (z) => C(f, z), () => c(f)), Ie((z, L) => {
    y = It(k, 1, "jse-navigation-bar-edit svelte-xs03gj", null, y, z), Ln(k, "title", c(d) ? "Cancel editing the selected path" : "Edit the selected path"), vt(T, L);
  }, [() => ({ flex: !c(d), editing: c(d) }), () => (_(Or), _(o()), c(d), ee(() => Or(o()) || c(d) ? " " : "Navigation bar"))], Oe), Pe("click", k, function() {
    C(d, !c(d));
  }), Z(t, b), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-search-box.svelte-1mxl2uo {
  border: var(--jse-panel-border, var(--jse-main-border, 1px solid #d7d7d7));
  border-radius: 3px;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  background: var(--jse-panel-background, #ebebeb);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
  display: inline-block;
  width: 400px;
  max-width: 100%;
  overflow: auto;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) {
  display: flex;
  align-items: stretch;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) button:where(.svelte-1mxl2uo),
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) input:where(.svelte-1mxl2uo) {
  font-family: inherit;
  font-size: inherit;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) button:where(.svelte-1mxl2uo) {
  display: block;
  text-align: center;
  border: none;
  padding: 0 5px;
  margin: 0;
  cursor: pointer;
  color: var(--jse-panel-button-color, inherit);
  background: var(--jse-panel-button-background, transparent);
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) button:where(.svelte-1mxl2uo):hover {
  color: var(--panel-button-color-highlight, var(--jse-text-color, #4d4d4d));
  background: var(--jse-panel-button-background-highlight, #e0e0e0);
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) input:where(.svelte-1mxl2uo) {
  color: var(--jse-panel-color, var(--jse-text-color, #4d4d4d));
  border: var(--jse-input-border, 1px solid #d8dbdf);
  border-radius: 3px;
  background: var(--jse-input-background, var(--jse-background-color, #fff));
  height: 28px;
  padding: 0 5px;
  margin: 0;
  flex: 1;
  width: 0;
  min-width: 50px;
  outline: none;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-replace-toggle:where(.svelte-1mxl2uo) {
  padding: var(--jse-padding, 10px) calc(0.5 * var(--jse-padding, 10px));
  min-width: 20px;
  background: var(--jse-panel-button-background-highlight, #e0e0e0);
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: calc(0.5 * var(--jse-padding, 10px));
  gap: calc(0.5 * var(--jse-padding, 10px));
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-search-section:where(.svelte-1mxl2uo) {
  flex: 1;
  display: flex;
  align-items: center;
  position: relative;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-search-section:where(.svelte-1mxl2uo) .jse-search-icon:where(.svelte-1mxl2uo) {
  color: inherit;
  cursor: inherit;
  background: inherit;
  width: 32px;
  text-align: center;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-search-section:where(.svelte-1mxl2uo) label.jse-search-input-label:where(.svelte-1mxl2uo) {
  flex: 1;
  display: flex;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-search-section:where(.svelte-1mxl2uo) .jse-search-count:where(.svelte-1mxl2uo) {
  color: inherit;
  font-size: 80%;
  visibility: hidden;
  padding: 0 5px;
  min-width: 36px;
  text-align: center;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-search-section:where(.svelte-1mxl2uo) .jse-search-count.jse-visible:where(.svelte-1mxl2uo) {
  visibility: visible;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-replace-section:where(.svelte-1mxl2uo) {
  flex: 1;
  display: flex;
  padding-left: 32px;
}
.jse-search-box.svelte-1mxl2uo .jse-search-form:where(.svelte-1mxl2uo) .jse-search-contents:where(.svelte-1mxl2uo) .jse-replace-section:where(.svelte-1mxl2uo) button:where(.svelte-1mxl2uo) {
  width: auto;
}`);
var RV = pe('<button type="button" class="jse-replace-toggle svelte-1mxl2uo" title="Toggle visibility of replace options (Ctrl+H)"><!></button>'), NV = pe('<div class="jse-replace-section svelte-1mxl2uo"><input class="jse-replace-input svelte-1mxl2uo" title="Enter replacement text" type="text" placeholder="Replace"/> <button type="button" title="Replace current occurrence (Ctrl+Enter)" class="svelte-1mxl2uo">Replace</button> <button type="button" title="Replace all occurrences" class="svelte-1mxl2uo">All</button></div>'), DV = pe('<div class="jse-search-box svelte-1mxl2uo"><form class="jse-search-form svelte-1mxl2uo"><!> <div class="jse-search-contents svelte-1mxl2uo"><div class="jse-search-section svelte-1mxl2uo"><div class="jse-search-icon svelte-1mxl2uo"><!></div> <label class="jse-search-input-label svelte-1mxl2uo" about="jse-search input"><input class="jse-search-input svelte-1mxl2uo" title="Enter text to search" type="text" placeholder="Find"/></label> <div> </div> <button type="button" class="jse-search-next svelte-1mxl2uo" title="Go to next search result (Enter)"><!></button> <button type="button" class="jse-search-previous svelte-1mxl2uo" title="Go to previous search result (Shift+Enter)"><!></button> <button type="button" class="jse-search-clear svelte-1mxl2uo" title="Close search box (Esc)"><!></button></div> <!></div></form></div>');
function UA(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = Q(void 0, !0), o = ui("jsoneditor:SearchBox"), s = E(e, "json", 9), a = E(e, "documentState", 9), l = E(e, "parser", 9), u = E(e, "showSearch", 9), f = E(e, "showReplace", 13), d = E(e, "readOnly", 9), h = E(e, "columns", 9), p = E(e, "onSearch", 9), m = E(e, "onFocus", 9), v = E(e, "onPatch", 9), g = E(e, "onClose", 9), b = Q("", !0), x = "", w = Q("", !0), j = Q(!1, !0), y = Q(void 0, !0), k = Rp(function(U) {
    return $.apply(this, arguments);
  }, 300), S = Rp(function(U) {
    return ne.apply(this, arguments);
  }, 300);
  function T() {
    f(!f() && !d());
  }
  function M(U) {
    U.stopPropagation();
    var me = ga(U);
    me === "Enter" && (U.preventDefault(), c(b) !== x ? k.flush() : ae()), me === "Shift+Enter" && (U.preventDefault(), G()), me === "Ctrl+Enter" && (U.preventDefault(), f() ? W() : ae()), me === "Ctrl+H" && (U.preventDefault(), T()), me === "Escape" && (U.preventDefault(), H());
  }
  function N(U) {
    ga(U) === "Enter" && (U.preventDefault(), U.stopPropagation(), W());
  }
  function z() {
    return L.apply(this, arguments);
  }
  function L() {
    return (L = Mt(function* () {
      fr(), yield k.flush();
    })).apply(this, arguments);
  }
  function W() {
    return ce.apply(this, arguments);
  }
  function ce() {
    return (ce = Mt(function* () {
      var U;
      if (!d()) {
        var me = (U = c(y)) === null || U === void 0 ? void 0 : U.activeItem;
        if (o("handleReplace", { replaceText: c(w), activeItem: me }), c(y) && me && s() !== void 0) {
          C(y, De(De({}, qk(c(y))), {}, { activeIndex: c(r) }));
          var { operations: X, newSelection: K } = Gq(s(), a(), c(w), me, l());
          v()(X, (rt, Qe) => ({ state: Qe, selection: K })), fr(), yield S.flush(), yield ie();
        }
      }
    })).apply(this, arguments);
  }
  function te() {
    return we.apply(this, arguments);
  }
  function we() {
    return (we = Mt(function* () {
      if (!d()) {
        o("handleReplaceAll", { text: c(b), replaceText: c(w) });
        var { operations: U, newSelection: me } = (function(X, K, rt, Qe, Ae) {
          for (var tt = Fk(rt, X, { maxResults: 1 / 0 }), Re = [], qe = 0; qe < tt.length; qe++) {
            var pt = tt[qe - 1], Ge = tt[qe];
            qe !== 0 && Ge.field === pt.field && Zt(Ge.path, pt.path) ? rn(Re).items.push(Ge) : Re.push({ path: Ge.path, field: Ge.field, items: [Ge] });
          }
          Re.sort((D, F) => D.field !== F.field ? D.field === Zo.key ? 1 : -1 : F.path.length - D.path.length);
          var $t, A = [];
          return Re.forEach((D) => {
            var { field: F, path: oe, items: ve } = D;
            if (F === Zo.key) {
              var Ne = mn(oe), Fe = Ze(X, Ne), ye = rn(oe), ge = Od(Ne, Object.keys(Fe), ye, Vk(ye, Qe, ve));
              A = A.concat(ge), $t = mu(X, ge);
            } else {
              if (F !== Zo.value) throw new Error("Cannot replace: unknown type of search result field ".concat(F));
              var yt = Ze(X, oe);
              if (yt === void 0) throw new Error("Cannot replace: path not found ".concat(bt(oe)));
              var ot = typeof yt == "string" ? yt : String(yt), _e = Es(X, K, oe), xt = Vk(ot, Qe, ve), bn = [{ op: "replace", path: bt(oe), value: _e ? xt : Ou(xt, Ae) }];
              A = A.concat(bn), $t = mu(X, bn);
            }
          }), { operations: A, newSelection: $t };
        })(s(), a(), c(b), c(w), l());
        v()(U, (X, K) => ({ state: K, selection: me })), yield ie();
      }
    })).apply(this, arguments);
  }
  function Ee(U) {
    U.select();
  }
  function ae() {
    return re.apply(this, arguments);
  }
  function re() {
    return (re = Mt(function* () {
      C(y, c(y) ? qk(c(y)) : void 0), yield ie();
    })).apply(this, arguments);
  }
  function G() {
    return B.apply(this, arguments);
  }
  function B() {
    return B = Mt(function* () {
      C(y, c(y) ? (function(U) {
        var me = U.activeIndex > 0 ? U.activeIndex - 1 : U.items.length - 1, X = U.items[me], K = U.items.map((rt, Qe) => De(De({}, rt), {}, { active: Qe === me }));
        return De(De({}, U), {}, { items: K, activeItem: X, activeIndex: me });
      })(c(y)) : void 0), yield ie();
    }), B.apply(this, arguments);
  }
  function ie() {
    return R.apply(this, arguments);
  }
  function R() {
    return (R = Mt(function* () {
      var U;
      o("handleFocus", c(y));
      var me = (U = c(y)) === null || U === void 0 ? void 0 : U.activeItem;
      me && s() !== void 0 && (yield m()(me.path, me.resultIndex));
    })).apply(this, arguments);
  }
  function O() {
    return O = Mt(function* (U) {
      yield je(U, c(b), s());
    }), O.apply(this, arguments);
  }
  function $() {
    return $ = Mt(function* (U) {
      yield je(u(), U, s()), yield ie();
    }), $.apply(this, arguments);
  }
  function ne() {
    return ne = Mt(function* (U) {
      yield je(u(), c(b), U);
    }), ne.apply(this, arguments);
  }
  function je(U, me, X) {
    return J.apply(this, arguments);
  }
  function J() {
    return J = Mt(function* (U, me, X) {
      return U ? (o("applySearch", { showSearch: U, text: me }), me === "" ? (o("clearing search result"), c(y) !== void 0 && C(y, void 0), Promise.resolve()) : (x = me, C(j, !0), new Promise((K) => {
        setTimeout(() => {
          var rt = Fk(me, X, { maxResults: Lv, columns: h() });
          C(y, (function(Qe, Ae) {
            var tt = Ae != null && Ae.activeItem ? Wk(Ae.activeItem) : void 0, Re = Qe.findIndex((Ge) => Zt(tt, Wk(Ge))), qe = Re !== -1 ? Re : Ae?.activeIndex !== void 0 && Ae?.activeIndex < Qe.length ? Ae?.activeIndex : Qe.length > 0 ? 0 : -1, pt = Qe.map((Ge, $t) => De(De({ resultIndex: $t }, Ge), {}, { active: $t === qe }));
            return { items: pt, activeItem: pt[qe], activeIndex: qe };
          })(rt, c(y))), C(j, !1), K();
        });
      }))) : (c(y) && C(y, void 0), Promise.resolve());
    }), J.apply(this, arguments);
  }
  function H() {
    o("handleClose"), k.cancel(), S.cancel(), je(!1, c(b), s()), g()();
  }
  de(() => c(y), () => {
    var U;
    C(n, ((U = c(y)) === null || U === void 0 || (U = U.items) === null || U === void 0 ? void 0 : U.length) || 0);
  }), de(() => c(y), () => {
    var U;
    C(r, ((U = c(y)) === null || U === void 0 ? void 0 : U.activeIndex) || 0);
  }), de(() => (c(n), Lv), () => {
    C(i, c(n) >= Lv ? "".concat(999, "+") : String(c(n)));
  }), de(() => (_(p()), c(y)), () => {
    p()(c(y));
  }), de(() => _(u()), () => {
    (function(U) {
      O.apply(this, arguments);
    })(u());
  }), de(() => c(b), () => {
    k(c(b));
  }), de(() => _(s()), () => {
    S(s());
  }), Bn(), zt(!0);
  var ue = Er(), P = wt(ue), V = (U) => {
    var me = DV(), X = Y(me), K = Y(X), rt = (ye) => {
      var ge = RV(), yt = Y(ge), ot = Oe(() => f() ? pa : kf);
      gn(yt, { get data() {
        return c(ot);
      } }), Pe("click", ge, T), Z(ye, ge);
    };
    xe(K, (ye) => {
      d() || ye(rt);
    });
    var Qe = Y(le(K, 2)), Ae = Y(Qe), tt = Y(Ae), Re = (ye) => {
      gn(ye, { get data() {
        return M6;
      }, spin: !0 });
    }, qe = (ye) => {
      gn(ye, { get data() {
        return Km;
      } });
    };
    xe(tt, (ye) => {
      c(j) ? ye(Re) : ye(qe, !1);
    });
    var pt = le(Ae, 2), Ge = Y(pt);
    yi(() => vm(Ge, () => c(b), (ye) => C(b, ye))), zi(Ge, (ye) => Ee?.(ye)), yi(() => Pe("paste", Ge, z));
    var $t, A = le(pt, 2), D = Y(A), F = le(A, 2);
    gn(Y(F), { get data() {
      return X6;
    } });
    var oe = le(F, 2);
    gn(Y(oe), { get data() {
      return z6;
    } });
    var ve = le(oe, 2);
    gn(Y(ve), { get data() {
      return Gm;
    } });
    var Ne = le(Qe, 2), Fe = (ye) => {
      var ge = NV(), yt = Y(ge), ot = le(yt, 2), _e = le(ot, 2);
      vm(yt, () => c(w), (xt) => C(w, xt)), Pe("keydown", yt, N), Pe("click", ot, W), Pe("click", _e, te), Z(ye, ge);
    };
    xe(Ne, (ye) => {
      f() && !d() && ye(Fe);
    }), Ie((ye) => {
      var ge;
      $t = It(A, 1, "jse-search-count svelte-1mxl2uo", null, $t, ye), vt(D, "".concat(c(r) !== -1 && c(r) < c(n) ? "".concat(c(r) + 1, "/") : "").concat((ge = c(i)) !== null && ge !== void 0 ? ge : ""));
    }, [() => ({ "jse-visible": c(b) !== "" })], Oe), Pe("click", F, ae), Pe("click", oe, G), Pe("click", ve, H), Pe("keydown", X, M), Z(U, me);
  };
  xe(P, (U) => {
    u() && U(V);
  }), Z(t, ue), gt();
}
var ed = Symbol("path");
function IV(t, e) {
  var n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1 / 0, r = {};
  Array.isArray(t) && (function(o, s, a) {
    if (o.length < s) o.forEach(a);
    else for (var l = s > 1 ? (o.length - 1) / (s - 1) : o.length, u = 0; u < s; u++) {
      var f = Math.floor(u * l);
      a(o[f], f, o);
    }
  })(t, n, (o) => {
    Pn(o) ? VA(o, r, e) : r[ed] = !0;
  });
  var i = [];
  return ed in r && i.push([]), WA(r, [], i, e), i;
}
function VA(t, e, n) {
  for (var r in t) {
    var i = t[r], o = e[r] || (e[r] = {});
    Pn(i) && n ? VA(i, o, n) : o[ed] === void 0 && (o[ed] = !0);
  }
}
function WA(t, e, n, r) {
  for (var i in t) {
    var o = e.concat(i), s = t[i];
    s && s[ed] === !0 && n.push(o), Ur(s) && r && WA(s, o, n, r);
  }
}
function zV(t, e, n, r, i, o) {
  for (var s = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 80, a = Dr(n) ? n.length : 0, l = (function(x, w) {
    var j = Object.values(x);
    if (Sn(j)) return w;
    var y = (k, S) => k + S;
    return j.reduce(y) / j.length;
  })(r, i), u = t - s, f = e + 2 * s, d = (x) => r[x] || i, h = 0, p = o; p < u && h < a; ) p += d(h), h++;
  h > 0 && (p -= d(--h));
  for (var m = h, v = 0; v < f && m < a; ) v += d(m), m++;
  for (var g = 0, b = m; b < a; b++) g += d(b);
  return { startIndex: h, endIndex: m, startHeight: p, endHeight: g, averageItemHeight: l, visibleHeight: v, visibleItems: Dr(n) ? n.slice(h, m) : [] };
}
function aS(t, e, n, r) {
  for (var { rowIndex: i } = Co(t, e), o = 0, s = 0; s < i; s++) o += n[s] || r;
  return o;
}
function Co(t, e) {
  var [n, ...r] = t, i = parseInt(n, 10);
  return { rowIndex: isNaN(i) ? -1 : i, columnIndex: e.findIndex((o) => Ts(r, o)) };
}
function _l(t, e) {
  var { rowIndex: n, columnIndex: r } = t;
  return [String(n), ...e[r]];
}
function LV(t, e) {
  var [n, r] = X5(t, (s) => cy(s.path[0])), i = B5(n, BV), o = H5(i, (s) => {
    var a = { row: [], columns: {} };
    return s.forEach((l) => {
      var u = (function(f, d) {
        var h = Co(f.path, d);
        return h.columnIndex !== -1 ? h.columnIndex : -1;
      })(l, e);
      u !== -1 ? (a.columns[u] === void 0 && (a.columns[u] = []), a.columns[u].push(l)) : a.row.push(l);
    }), a;
  });
  return { root: r, rows: o };
}
function Sc(t, e) {
  if (e && e.length !== 0) return e.length === 1 ? e[0] : { path: t, message: "Multiple validation issues: " + e.map((n) => no(n.path) + " " + n.message).join(", "), severity: Xo.warning };
}
function BV(t) {
  return parseInt(t.path[0], 10);
}
function qV(t, e, n) {
  var r = e.some((i) => (function(o, s, a) {
    if (!o) return !1;
    if (s.op === "replace") {
      var l = io(s.path), { rowIndex: u, columnIndex: f } = Co(l, a), d = a.findIndex((h) => Zt(h, o.path));
      if (u !== -1 && f !== -1 && f !== d) return !1;
    }
    return !0;
  })(t, i, n));
  return r ? void 0 : t;
}
var Di = ui("jsoneditor:actions");
function HA(t) {
  return Bb.apply(this, arguments);
}
function Bb() {
  return Bb = Mt(function* (t) {
    var { json: e, selection: n, indentation: r, readOnly: i, parser: o, onPatch: s } = t;
    if (!i && e !== void 0 && n && Lc(n)) {
      var a = gA(e, n, r, o);
      if (a !== void 0) {
        Di("cut", { selection: n, clipboard: a, indentation: r }), yield Ty(a);
        var { operations: l, newSelection: u } = jA(e, n);
        s(l, (f, d) => ({ state: d, selection: u }));
      }
    }
  }), Bb.apply(this, arguments);
}
function KA(t) {
  return qb.apply(this, arguments);
}
function qb() {
  return qb = Mt(function* (t) {
    var { json: e, selection: n, indentation: r, parser: i } = t, o = gA(e, n, r, i);
    o !== void 0 && (Di("copy", { clipboard: o, indentation: r }), yield Ty(o));
  }), qb.apply(this, arguments);
}
function GA(t) {
  var { clipboardText: e, json: n, selection: r, readOnly: i, parser: o, onPatch: s, onChangeText: a, onPasteMultilineText: l, openRepairModal: u } = t;
  if (!i) try {
    f(e);
  } catch {
    u(e, (h) => {
      Di("repaired pasted text: ", h), f(h);
    });
  }
  function f(d) {
    if (n !== void 0) {
      var h = r || sn([]), p = wA(n, h, d, o), m = (function(v, g, b) {
        var x = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : Bq;
        if (v.length > x) return !1;
        var w = /\n/.test(v);
        if (!w) return !1;
        var j = g.some((k) => k.op === "replace" && Array.isArray(k.value)), y = g.filter((k) => k.op === "add").length > 1;
        if (!j && !y) return !1;
        try {
          return jd(v, b.parse), !1;
        } catch {
          return !0;
        }
      })(e, p, o);
      Di("paste", { pastedText: d, operations: p, ensureSelection: h, pasteMultilineText: m }), s(p, (v, g) => {
        var b = g;
        return p.filter((x) => (KS(x) || Zb(x)) && Or(x.value)).forEach((x) => {
          var w = Jo(n, x.path);
          b = nc(v, b, w);
        }), { state: b };
      }), m && l(d);
    } else Di("paste text", { pastedText: d }), a(e, (v, g) => {
      if (v)
        return { state: nc(v, g, []) };
    });
  }
}
function JA(t) {
  var { json: e, text: n, selection: r, keepSelection: i, readOnly: o, onChange: s, onPatch: a } = t;
  if (!o && r) {
    var l = e !== void 0 && (li(r) || _n(r)) ? Ri(r.path, r.path) : r;
    if (Sn(at(r))) Di("remove root", { selection: r }), s && s({ text: "", json: void 0 }, e !== void 0 ? { text: void 0, json: e } : { text: n || "", json: e }, { contentErrors: void 0, patchResult: void 0 });
    else if (e !== void 0) {
      var { operations: u, newSelection: f } = jA(e, l);
      Di("remove", { operations: u, selection: r, newSelection: f }), a(u, (d, h) => ({ state: h, selection: i ? r : f }));
    }
  }
}
function $m(t) {
  var { insertType: e, selectInside: n, initialValue: r, json: i, selection: o, readOnly: s, parser: a, onPatch: l, onReplaceJson: u } = t;
  if (!s) {
    var f = (function(v, g, b) {
      if (b === "object") return {};
      if (b === "array") return [];
      if (b === "structure" && v !== void 0) {
        var x = g ? pA(g) : [], w = Ze(v, x);
        if (Array.isArray(w) && !Sn(w)) {
          var j = oa(w);
          return Or(j) ? N8(j, (y) => Array.isArray(y) ? [] : Pn(y) ? void 0 : "") : "";
        }
      }
      return "";
    })(i, o, e);
    if (i !== void 0) {
      var d = a.stringify(f), h = wA(i, o, d, a);
      Di("onInsert", { insertType: e, operations: h, newValue: f, data: d });
      var p = rn(h.filter((v) => v.op === "add" || v.op === "replace"));
      l(h, (v, g, b) => {
        if (p) {
          var x = Jo(v, p.path);
          if (Or(f)) return { state: Vo(v, g, x, Sy), selection: n ? ba(x) : b };
          if (f === "") {
            var w = Sn(x) ? void 0 : Ze(v, mn(x));
            return { state: Vo(v, g, x, Sp), selection: Pn(w) ? Cy(x, r) : km(x, r) };
          }
        }
      }), Di("after patch");
    } else {
      Di("onInsert", { insertType: e, newValue: f });
      var m = [];
      u(f, (v, g) => ({ state: nc(v, g, m), selection: Or(f) ? ba(m) : km(m) }));
    }
  }
}
function YA(t) {
  return Fb.apply(this, arguments);
}
function Fb() {
  return Fb = Mt(function* (t) {
    var { char: e, selectInside: n, json: r, selection: i, readOnly: o, parser: s, onPatch: a, onReplaceJson: l, onSelect: u } = t;
    o || (li(i) ? u(De(De({}, i), {}, { edit: !0, initialValue: e })) : e === "{" ? $m({ insertType: "object", selectInside: n, initialValue: void 0, json: r, selection: i, readOnly: o, parser: s, onPatch: a, onReplaceJson: l }) : e === "[" ? $m({ insertType: "array", selectInside: n, initialValue: void 0, json: r, selection: i, readOnly: o, parser: s, onPatch: a, onReplaceJson: l }) : _n(i) && r !== void 0 ? Or(Ze(r, i.path)) || u(De(De({}, i), {}, { edit: !0, initialValue: e })) : (Di("onInsertValueWithCharacter", { char: e }), yield (function(f) {
      return Ub.apply(this, arguments);
    })({ char: e, json: r, selection: i, readOnly: o, parser: s, onPatch: a, onReplaceJson: l })));
  }), Fb.apply(this, arguments);
}
function Ub() {
  return Ub = Mt(function* (t) {
    var { char: e, json: n, selection: r, readOnly: i, parser: o, onPatch: s, onReplaceJson: a } = t;
    i || $m({ insertType: "value", selectInside: !1, initialValue: e, json: n, selection: r, readOnly: i, parser: o, onPatch: s, onReplaceJson: a });
  }), Ub.apply(this, arguments);
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-json-preview.svelte-1vjn89h {
  flex: 1;
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  overflow: auto;
  white-space: pre-wrap;
  padding: 2px;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}`);
var FV = pe('<div class="jse-json-preview svelte-1vjn89h"> </div>');
function QA(t, e) {
  mt(e, !1);
  var n = Q(), r = Q(), i = E(e, "text", 8), o = E(e, "json", 8), s = E(e, "indentation", 8), a = E(e, "parser", 8);
  de(() => (_(o()), _(i())), () => {
    C(n, o() !== void 0 ? { json: o() } : { text: i() || "" });
  }), de(() => (c(n), _(s()), _(a()), ym), () => {
    C(r, ta(Sb(c(n), s(), a()), ym));
  }), Bn(), zt();
  var l = FV(), u = Y(l);
  Ie(() => vt(u, c(r))), Z(t, l), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
button.jse-context-menu-button.svelte-1idfykj {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  flex: 1;
  white-space: nowrap;
  padding: var(--jse-padding, 10px);
  color: inherit;
}
button.jse-context-menu-button.svelte-1idfykj:hover {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
}
button.jse-context-menu-button.svelte-1idfykj:focus {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
  z-index: 1;
}
button.jse-context-menu-button.svelte-1idfykj:disabled {
  color: var(--jse-context-menu-color-disabled, #9d9d9d);
  background: unset;
}
button.jse-context-menu-button.left.svelte-1idfykj {
  text-align: left;
}
button.jse-context-menu-button.svelte-1idfykj svg {
  width: 16px;
}`);
var UV = pe('<button type="button"><!> <!></button>');
function Xv(t, e) {
  mt(e, !1);
  var n = E(e, "item", 8), r = E(e, "className", 8, void 0), i = E(e, "onRequestClose", 8);
  zt();
  var o = UV(), s = Y(o), a = (f) => {
    gn(f, { get data() {
      return _(n()), ee(() => n().icon);
    } });
  };
  xe(s, (f) => {
    _(n()), ee(() => n().icon) && f(a);
  });
  var l = le(s, 2), u = (f) => {
    var d = hi();
    Ie(() => vt(d, (_(n()), ee(() => n().text)))), Z(f, d);
  };
  xe(l, (f) => {
    _(n()), ee(() => n().text) && f(u);
  }), Ie((f) => {
    It(o, 1, f, "svelte-1idfykj"), Ln(o, "title", (_(n()), ee(() => n().title))), o.disabled = (_(n()), ee(() => n().disabled || !1));
  }, [() => cl((_(as), _(r()), _(n()), ee(() => as("jse-context-menu-button", r(), n().className))))], Oe), Pe("click", o, (f) => {
    i()(), n().onClick(f);
  }), Z(t, o), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-dropdown-button.svelte-11rxb2m {
  flex: 1;
  line-height: normal;
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  position: relative;
  padding: 0;
  display: flex;
}
.jse-dropdown-button.svelte-11rxb2m ul:where(.svelte-11rxb2m) {
  margin: 0;
  padding: 0;
}
.jse-dropdown-button.svelte-11rxb2m ul:where(.svelte-11rxb2m) li:where(.svelte-11rxb2m) {
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.jse-dropdown-button.svelte-11rxb2m button.jse-open-dropdown:where(.svelte-11rxb2m) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  width: 2em;
  background: var(--jse-context-menu-background, #656565);
  color: var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff));
  border-radius: 0;
}
.jse-dropdown-button.svelte-11rxb2m button.jse-open-dropdown.jse-visible:where(.svelte-11rxb2m) {
  background: var(--jse-context-menu-background, #656565);
}
.jse-dropdown-button.svelte-11rxb2m button.jse-open-dropdown:where(.svelte-11rxb2m):hover {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
}
.jse-dropdown-button.svelte-11rxb2m button.jse-open-dropdown:where(.svelte-11rxb2m):focus {
  z-index: 1;
}
.jse-dropdown-button.svelte-11rxb2m button.jse-open-dropdown:where(.svelte-11rxb2m):disabled {
  color: var(--jse-context-menu-color-disabled, #9d9d9d);
  background: unset;
}
.jse-dropdown-button.svelte-11rxb2m .jse-dropdown-items:where(.svelte-11rxb2m) {
  display: none;
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1;
  background: var(--jse-context-menu-background, #656565);
  color: var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff));
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
}
.jse-dropdown-button.svelte-11rxb2m .jse-dropdown-items.jse-visible:where(.svelte-11rxb2m) {
  display: block;
}
.jse-dropdown-button.svelte-11rxb2m .jse-dropdown-items:where(.svelte-11rxb2m) button:where(.svelte-11rxb2m) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  width: 100%;
  text-align: left;
  padding: var(--jse-padding, 10px);
  margin: 0;
}
.jse-dropdown-button.svelte-11rxb2m .jse-dropdown-items:where(.svelte-11rxb2m) button:where(.svelte-11rxb2m):hover {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
}
.jse-dropdown-button.svelte-11rxb2m .jse-dropdown-items:where(.svelte-11rxb2m) button:where(.svelte-11rxb2m):disabled {
  color: var(--jse-context-menu-color-disabled, #9d9d9d);
  background: unset;
}`);
var VV = pe('<li class="svelte-11rxb2m"><button type="button"><!> </button></li>'), WV = pe('<div role="button" tabindex="0" class="jse-dropdown-button svelte-11rxb2m"><!> <button type="button" data-type="jse-open-dropdown"><!></button> <div><ul class="svelte-11rxb2m"></ul></div></div>');
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
button.jse-context-menu-button.svelte-1idfykj {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  flex: 1;
  white-space: nowrap;
  padding: var(--jse-padding, 10px);
  color: inherit;
}
button.jse-context-menu-button.svelte-1idfykj:hover {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
}
button.jse-context-menu-button.svelte-1idfykj:focus {
  background: var(--jse-context-menu-background-highlight, #7a7a7a);
  z-index: 1;
}
button.jse-context-menu-button.svelte-1idfykj:disabled {
  color: var(--jse-context-menu-color-disabled, #9d9d9d);
  background: unset;
}
button.jse-context-menu-button.left.svelte-1idfykj {
  text-align: left;
}
button.jse-context-menu-button.svelte-1idfykj svg {
  width: 16px;
}`);
var HV = pe('<button type="button" slot="defaultItem"><!> </button>');
function Zv(t, e) {
  mt(e, !1);
  var n = Q(), r = E(e, "item", 8), i = E(e, "className", 8, void 0), o = E(e, "onRequestClose", 8);
  de(() => (_(r()), _(o())), () => {
    C(n, r().items.map((s) => De(De({}, s), {}, { onClick: (a) => {
      o()(), s.onClick(a);
    } })));
  }), Bn(), zt(), (function(s, a) {
    mt(a, !1);
    var l = Q(void 0, !0), u = E(a, "items", 25, () => []), f = E(a, "title", 9, void 0), d = E(a, "width", 9, "120px"), h = Q(!1, !0);
    function p() {
      C(h, !1);
    }
    function m(y) {
      ga(y) === "Escape" && (y.preventDefault(), C(h, !1));
    }
    Ti(() => {
      document.addEventListener("click", p), document.addEventListener("keydown", m);
    }), Io(() => {
      document.removeEventListener("click", p), document.removeEventListener("keydown", m);
    }), de(() => _(u()), () => {
      C(l, u().every((y) => y.disabled === !0));
    }), Bn(), zt(!0);
    var v = WV(), g = Y(v);
    Pr(g, a, "defaultItem", {}, null);
    var b, x = le(g, 2);
    gn(Y(x), { get data() {
      return pa;
    } });
    var w, j = le(x, 2);
    Ir(Y(j), 5, u, Kr, (y, k) => {
      var S = VV(), T = Y(S), M = Y(T), N = (L) => {
        gn(L, { get data() {
          return c(k), ee(() => c(k).icon);
        } });
      };
      xe(M, (L) => {
        c(k), ee(() => c(k).icon) && L(N);
      });
      var z = le(M);
      Ie(() => {
        var L;
        Ln(T, "title", (c(k), ee(() => c(k).title))), T.disabled = (c(k), ee(() => c(k).disabled)), It(T, 1, cl((c(k), ee(() => c(k).className))), "svelte-11rxb2m"), vt(z, " ".concat((c(k), (L = ee(() => c(k).text)) !== null && L !== void 0 ? L : "")));
      }), Pe("click", T, (L) => c(k).onClick(L)), Z(y, S);
    }), Ie((y, k) => {
      var S;
      Ln(v, "title", f()), b = It(x, 1, "jse-open-dropdown svelte-11rxb2m", null, b, y), x.disabled = c(l), w = It(j, 1, "jse-dropdown-items svelte-11rxb2m", null, w, k), Qo(j, "width: ".concat((S = d()) !== null && S !== void 0 ? S : "", ";"));
    }, [() => ({ "jse-visible": c(h) }), () => ({ "jse-visible": c(h) })], Oe), Pe("click", x, function() {
      var y = c(h);
      setTimeout(() => C(h, !y));
    }), Pe("click", v, p), Z(s, v), gt();
  })(t, { get width() {
    return _(r()), ee(() => r().width);
  }, get items() {
    return c(n);
  }, $$slots: { defaultItem: (s, a) => {
    var l = HV(), u = Y(l), f = (h) => {
      gn(h, { get data() {
        return _(r()), ee(() => r().main.icon);
      } });
    };
    xe(u, (h) => {
      _(r()), ee(() => r().main.icon) && h(f);
    });
    var d = le(u);
    Ie((h) => {
      var p;
      It(l, 1, h, "svelte-1idfykj"), Ln(l, "title", (_(r()), ee(() => r().main.title))), l.disabled = (_(r()), ee(() => r().main.disabled || !1)), vt(d, " ".concat((_(r()), (p = ee(() => r().main.text)) !== null && p !== void 0 ? p : "")));
    }, [() => cl((_(as), _(i()), _(r()), ee(() => as("jse-context-menu-button", i(), r().main.className))))], Oe), Pe("click", l, (h) => {
      o()(), r().main.onClick(h);
    }), Z(s, l);
  } } }), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-contextmenu.svelte-12z7bz1 {
  box-shadow: var(--jse-controls-box-shadow, 0 2px 6px 0 rgba(0, 0, 0, 0.24));
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  background: var(--jse-context-menu-background, #656565);
  color: var(--jse-context-menu-color, var(--jse-text-color-inverse, #fff));
}
.jse-contextmenu.svelte-12z7bz1 .jse-row:where(.svelte-12z7bz1) {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: stretch;
}
.jse-contextmenu.svelte-12z7bz1 .jse-row:where(.svelte-12z7bz1) div.jse-label:where(.svelte-12z7bz1) {
  flex: 1;
  white-space: nowrap;
  padding: var(--jse-padding, 10px);
  color: var(--jse-context-menu-color-disabled, #9d9d9d);
  line-height: normal;
}
.jse-contextmenu.svelte-12z7bz1 .jse-row:where(.svelte-12z7bz1) div.jse-tip:where(.svelte-12z7bz1) {
  flex: 1;
  background: var(--jse-context-menu-tip-background, rgba(255, 255, 255, 0.2));
  color: var(--context-menu-tip-color, inherit);
  margin: calc(0.5 * var(--jse-padding, 10px));
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
  font-size: 80%;
  line-height: 1.3em;
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: var(--jse-padding, 10px);
  border-radius: 3px;
}
.jse-contextmenu.svelte-12z7bz1 .jse-row:where(.svelte-12z7bz1) div.jse-tip:where(.svelte-12z7bz1) div.jse-tip-icon:where(.svelte-12z7bz1) {
  padding-top: calc(0.5 * var(--jse-padding, 10px));
}
.jse-contextmenu.svelte-12z7bz1 .jse-column:where(.svelte-12z7bz1) {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.jse-contextmenu.svelte-12z7bz1 .jse-column:where(.svelte-12z7bz1):not(:last-child) {
  border-right: 1px solid var(--jse-context-menu-separator-color, #7a7a7a);
}
.jse-contextmenu.svelte-12z7bz1 .jse-separator:where(.svelte-12z7bz1) {
  width: 100%;
  height: 1px;
  background: var(--jse-context-menu-separator-color, #7a7a7a);
}`);
var KV = pe('<div class="jse-separator svelte-12z7bz1"></div>'), GV = pe('<div class="jse-label svelte-12z7bz1"> </div>'), JV = pe('<div class="jse-column svelte-12z7bz1"></div>'), YV = pe('<div class="jse-separator svelte-12z7bz1"></div>'), QV = pe('<div class="jse-row svelte-12z7bz1"></div>'), XV = pe('<div class="jse-separator svelte-12z7bz1"></div>'), ZV = pe('<div class="jse-row svelte-12z7bz1"><div class="jse-tip svelte-12z7bz1"><div class="jse-tip-icon svelte-12z7bz1"><!></div> <div class="jse-tip-text"> </div></div></div>'), eW = pe('<div role="menu" tabindex="-1" class="jse-contextmenu svelte-12z7bz1"><!> <!></div>');
function XA(t, e) {
  mt(e, !1);
  var n = E(e, "items", 9), r = E(e, "onRequestClose", 9), i = E(e, "tip", 9), o = Q(void 0, !0);
  Ti(() => {
    var h = Array.from(c(o).querySelectorAll("button")).find((p) => !p.disabled);
    h && h.focus();
  });
  var s = { ArrowUp: "Up", ArrowDown: "Down", ArrowLeft: "Left", ArrowRight: "Right" };
  function a(h) {
    return console.error("Unknown type of context menu item", h), "???";
  }
  zt(!0);
  var l = eW(), u = Y(l);
  Ir(u, 1, n, Kr, (h, p) => {
    var m = Er(), v = wt(m), g = (x) => {
      Xv(x, { get item() {
        return c(p);
      }, get onRequestClose() {
        return r();
      } });
    }, b = (x, w) => {
      var j = (k) => {
        Zv(k, { get item() {
          return c(p);
        }, get onRequestClose() {
          return r();
        } });
      }, y = (k, S) => {
        var T = (N) => {
          var z = QV();
          Ir(z, 5, () => (c(p), ee(() => c(p).items)), Kr, (L, W) => {
            var ce = Er(), te = wt(ce), we = (ae) => {
              Xv(ae, { get item() {
                return c(W);
              }, get onRequestClose() {
                return r();
              } });
            }, Ee = (ae, re) => {
              var G = (ie) => {
                Zv(ie, { get item() {
                  return c(W);
                }, get onRequestClose() {
                  return r();
                } });
              }, B = (ie, R) => {
                var O = (ne) => {
                  var je = JV();
                  Ir(je, 5, () => (c(W), ee(() => c(W).items)), Kr, (J, H) => {
                    var ue = Er(), P = wt(ue), V = (me) => {
                      Xv(me, { className: "left", get item() {
                        return c(H);
                      }, get onRequestClose() {
                        return r();
                      } });
                    }, U = (me, X) => {
                      var K = (Qe) => {
                        Zv(Qe, { className: "left", get item() {
                          return c(H);
                        }, get onRequestClose() {
                          return r();
                        } });
                      }, rt = (Qe, Ae) => {
                        var tt = (qe) => {
                          Z(qe, KV());
                        }, Re = (qe, pt) => {
                          var Ge = (A) => {
                            var D = GV(), F = Y(D);
                            Ie(() => vt(F, (c(H), ee(() => c(H).text)))), Z(A, D);
                          }, $t = (A) => {
                            var D = hi();
                            Ie((F) => vt(D, F), [() => (c(H), ee(() => a(c(H))))], Oe), Z(A, D);
                          };
                          xe(qe, (A) => {
                            _(Ok), c(H), ee(() => Ok(c(H))) ? A(Ge) : A($t, !1);
                          }, pt);
                        };
                        xe(Qe, (qe) => {
                          _($a), c(H), ee(() => $a(c(H))) ? qe(tt) : qe(Re, !1);
                        }, Ae);
                      };
                      xe(me, (Qe) => {
                        _(jc), c(H), ee(() => jc(c(H))) ? Qe(K) : Qe(rt, !1);
                      }, X);
                    };
                    xe(P, (me) => {
                      _(Qs), c(H), ee(() => Qs(c(H))) ? me(V) : me(U, !1);
                    }), Z(J, ue);
                  }), Z(ne, je);
                }, $ = (ne, je) => {
                  var J = (ue) => {
                    Z(ue, YV());
                  }, H = (ue) => {
                    var P = hi();
                    Ie((V) => vt(P, V), [() => (c(W), ee(() => a(c(W))))], Oe), Z(ue, P);
                  };
                  xe(ne, (ue) => {
                    _($a), c(W), ee(() => $a(c(W))) ? ue(J) : ue(H, !1);
                  }, je);
                };
                xe(ie, (ne) => {
                  _(_k), c(W), ee(() => _k(c(W))) ? ne(O) : ne($, !1);
                }, R);
              };
              xe(ae, (ie) => {
                _(jc), c(W), ee(() => jc(c(W))) ? ie(G) : ie(B, !1);
              }, re);
            };
            xe(te, (ae) => {
              _(Qs), c(W), ee(() => Qs(c(W))) ? ae(we) : ae(Ee, !1);
            }), Z(L, ce);
          }), Z(N, z);
        }, M = (N, z) => {
          var L = (ce) => {
            Z(ce, XV());
          }, W = (ce) => {
            var te = hi();
            Ie((we) => vt(te, we), [() => (c(p), ee(() => a(c(p))))], Oe), Z(ce, te);
          };
          xe(N, (ce) => {
            _($a), c(p), ee(() => $a(c(p))) ? ce(L) : ce(W, !1);
          }, z);
        };
        xe(k, (N) => {
          _(Ek), c(p), ee(() => Ek(c(p))) ? N(T) : N(M, !1);
        }, S);
      };
      xe(x, (k) => {
        _(jc), c(p), ee(() => jc(c(p))) ? k(j) : k(y, !1);
      }, w);
    };
    xe(v, (x) => {
      _(Qs), c(p), ee(() => Qs(c(p))) ? x(g) : x(b, !1);
    }), Z(h, m);
  });
  var f = le(u, 2), d = (h) => {
    var p = ZV(), m = Y(p), v = Y(m);
    gn(Y(v), { get data() {
      return O6;
    } });
    var g = Y(le(v, 2));
    Ie(() => vt(g, i())), Z(h, p);
  };
  xe(f, (h) => {
    i() && h(d);
  }), pr(l, (h) => C(o, h), () => c(o)), Pe("keydown", l, function(h) {
    var p = ga(h), m = s[p];
    if (m && h.target) {
      h.preventDefault();
      var v = yq({ allElements: Array.from(c(o).querySelectorAll("button:not([disabled])")), currentElement: h.target, direction: m, hasPrio: (g) => g.getAttribute("data-type") !== "jse-open-dropdown" });
      v && v.focus();
    }
  }), Z(t, l), gt();
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-value.jse-string.svelte-6ttr41 {
  color: var(--jse-value-color-string, #008000);
}
.jse-value.jse-object.svelte-6ttr41, .jse-value.jse-array.svelte-6ttr41 {
  min-width: 16px;
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
}
.jse-value.jse-number.svelte-6ttr41 {
  color: var(--jse-value-color-number, #ee422e);
}
.jse-value.jse-boolean.svelte-6ttr41 {
  color: var(--jse-value-color-boolean, #ff8c00);
}
.jse-value.jse-null.svelte-6ttr41 {
  color: var(--jse-value-color-null, #004ed0);
}
.jse-value.jse-invalid.svelte-6ttr41 {
  color: var(--jse-text-color, #4d4d4d);
}
.jse-value.jse-url.svelte-6ttr41 {
  color: var(--jse-value-color-url, #008000);
  text-decoration: underline;
}

.jse-enum-value.svelte-6ttr41 {
  background: var(--jse-hover-background-color, rgba(0, 0, 0, 0.06));
  border: none;
  padding: 0;
  font-family: inherit;
  font-size: inherit;
  cursor: pointer;
  outline: none;
}
.jse-enum-value.jse-selected.svelte-6ttr41 {
  background: var(--jse-selection-background-color, #d3d3d3);
  color: inherit;
}
.jse-enum-value.jse-value.svelte-6ttr41:focus {
  color: var(--jse-text-color, #4d4d4d);
}`);
pe("<option> </option>");
pe("<select></select>");
var np, rp;
function ip(t, e) {
  return np || (rp = /* @__PURE__ */ new WeakMap(), np = new ResizeObserver((n) => {
    for (var r of n) {
      var i = rp.get(r.target);
      i && i(r.target);
    }
  })), rp.set(t, e), np.observe(t), { destroy: () => {
    rp.delete(t), np.unobserve(t);
  } };
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-tree-mode.svelte-vrx1dr {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  background: var(--jse-background-color, #fff);
  min-width: 0;
  min-height: 0;
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: var(--jse-text-color, #4d4d4d);
  line-height: var(--jse-line-height, calc(1em + 4px));
}
.jse-tree-mode.svelte-vrx1dr .jse-hidden-input-label:where(.svelte-vrx1dr) .jse-hidden-input:where(.svelte-vrx1dr) {
  position: fixed;
  top: -10px;
  left: -10px;
  width: 1px;
  height: 1px;
  padding: 0;
  border: 0;
  outline: none;
}
.jse-tree-mode.no-main-menu.svelte-vrx1dr {
  border-top: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-tree-mode.svelte-vrx1dr .jse-search-box-container:where(.svelte-vrx1dr) {
  position: relative;
  height: 0;
  top: var(--jse-padding, 10px);
  margin-right: calc(var(--jse-padding, 10px) + 20px);
  margin-left: var(--jse-padding, 10px);
  text-align: right;
  z-index: 3;
}
.jse-tree-mode.svelte-vrx1dr .jse-contents:where(.svelte-vrx1dr) {
  flex: 1;
  overflow: auto;
  position: relative;
  padding: 2px;
  display: flex;
  flex-direction: column;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-tree-mode.svelte-vrx1dr .jse-contents:where(.svelte-vrx1dr):last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-tree-mode.svelte-vrx1dr .jse-contents:where(.svelte-vrx1dr) .jse-loading-space:where(.svelte-vrx1dr) {
  flex: 1;
}
.jse-tree-mode.svelte-vrx1dr .jse-contents:where(.svelte-vrx1dr) .jse-loading:where(.svelte-vrx1dr) {
  flex: 2;
  text-align: center;
  color: var(--jse-panel-color-readonly, #b2b2b2);
  box-sizing: border-box;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
}
.jse-tree-mode.svelte-vrx1dr .jse-contents:where(.svelte-vrx1dr) .jse-search-box-background:where(.svelte-vrx1dr) {
  border: 50px solid var(--jse-modal-background, #f5f5f5);
  margin: -2px;
  margin-bottom: 2px;
  display: inline-block;
}`);
var tW = pe("<!> <!>", 1), nW = pe('<div class="jse-search-box-background svelte-vrx1dr"></div>'), rW = pe('<div class="jse-search-box-container svelte-vrx1dr"><!></div> <div class="jse-contents svelte-vrx1dr"><!> <!></div> <!> <!> <!> <!>', 1), iW = pe('<label class="jse-hidden-input-label svelte-vrx1dr"><input type="text" tabindex="-1" class="jse-hidden-input svelte-vrx1dr"/></label> <!>', 1), oW = pe('<div class="jse-contents svelte-vrx1dr"><div class="jse-loading-space svelte-vrx1dr"></div> <div class="jse-loading svelte-vrx1dr">loading...</div></div>'), sW = pe('<div role="tree" tabindex="-1"><!> <!> <!></div> <!> <!>', 1);
function Vb(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = ui("jsoneditor:TreeMode"), i = typeof window > "u";
  r("isSSR:", i);
  var o = nu(), s = nu(), { openAbsolutePopup: a, closeAbsolutePopup: l } = gl("absolute-popup"), u = Q(void 0, !0), f = Q(void 0, !0), d = Q(void 0, !0), h = !1, p = IA(), m = E(e, "readOnly", 9), v = E(e, "externalContent", 9), g = E(e, "externalSelection", 9), b = E(e, "history", 9), x = E(e, "truncateTextSize", 9), w = E(e, "mainMenuBar", 9), j = E(e, "navigationBar", 9), y = E(e, "escapeControlCharacters", 9), k = E(e, "escapeUnicodeCharacters", 9), S = E(e, "parser", 9), T = E(e, "parseMemoizeOne", 9), M = E(e, "validator", 9), N = E(e, "validationParser", 9), z = E(e, "pathParser", 9), L = E(e, "indentation", 9), W = E(e, "onError", 9), ce = E(e, "onChange", 9), te = E(e, "onChangeMode", 9), we = E(e, "onSelect", 9), Ee = E(e, "onUndo", 9), ae = E(e, "onRedo", 9), re = E(e, "onRenderValue", 9), G = E(e, "onRenderMenu", 9), B = E(e, "onRenderContextMenu", 9), ie = E(e, "onClassName", 9), R = E(e, "onFocus", 9), O = E(e, "onBlur", 9), $ = E(e, "onSortModal", 9), ne = E(e, "onTransformModal", 9), je = E(e, "onJSONEditorModal", 9), J = !1, H = Q(!1, !0), ue = Q(void 0, !0);
  Ay({ onMount: Ti, onDestroy: Io, getWindow: () => kd(c(d)), hasFocus: () => J && document.hasFocus() || hy(c(d)), onFocus: () => {
    h = !0, R() && R()();
  }, onBlur: () => {
    h = !1, O() && O()();
  } });
  var P = Q(void 0, !0), V = Q(void 0, !0), U = void 0, me = !1, X = Q(_b({ json: c(P) }), !0), K = Q(Jf(g()) ? g() : void 0, !0);
  function rt(I) {
    C(K, I);
  }
  Ti(() => {
    if (c(K)) {
      var I = at(c(K));
      C(X, Vo(c(P), c(X), I, Sp)), setTimeout(() => Vt(I));
    }
  });
  var Qe, Ae = Q(void 0, !0), tt = Q(void 0, !0), Re = Q(void 0, !0), qe = Q(void 0, !0), pt = Q(!1, !0), Ge = Q(!1, !0);
  function $t(I) {
    C(qe, (Qe = I) ? SA(c(P), Qe.items) : void 0);
  }
  function A(I, se) {
    return D.apply(this, arguments);
  }
  function D() {
    return (D = Mt(function* (I, se) {
      C(X, Vo(c(P), c(X), I, Sp));
      var Ce = lr(se);
      yield et(I, { element: Ce });
    })).apply(this, arguments);
  }
  function F() {
    C(pt, !1), C(Ge, !1), Wt();
  }
  function oe(I) {
    r("select validation error", I), C(K, sn(I.path)), et(I.path);
  }
  function ve(I) {
    var se = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ab;
    r("expand"), C(X, Vo(c(P), c(X), I, se));
  }
  function Ne(I, se) {
    C(X, $k(c(P), c(X), I, se)), c(K) && (function(Ce, Je) {
      return Ts(at(Ce), Je) && (at(Ce).length > Je.length || ti(Ce));
    })(c(K), I) && C(K, void 0);
  }
  var Fe = Q(!1, !0), ye = Q([], !0), ge = Q(void 0, !0), yt = Sf(zA);
  function ot(I, se, Ce, Je) {
    qc(() => {
      var Be;
      try {
        Be = yt(I, se, Ce, Je);
      } catch (ze) {
        Be = [{ path: [], message: "Failed to validate: " + ze.message, severity: Xo.warning }];
      }
      Zt(Be, c(ye)) || (r("validationErrors changed:", Be), C(ye, Be), C(ge, (function(ze, _t) {
        var At;
        return _t.forEach((nn) => {
          At = iS(ze, At, nn.path, (Un, pn) => De(De({}, pn), {}, { validationError: nn }));
        }), _t.forEach((nn) => {
          for (var Un = nn.path; Un.length > 0; ) Un = mn(Un), At = iS(ze, At, Un, (pn, ir) => ir.validationError ? ir : De(De({}, ir), {}, { validationError: { isChildError: !0, path: Un, message: "Contains invalid data", severity: Xo.warning } }));
        }), At;
      })(I, c(ye))));
    }, (Be) => r("validationErrors updated in ".concat(Be, " ms")));
  }
  function _e() {
    return r("validate"), U ? { parseError: U, isRepairable: !1 } : (ot(c(P), M(), S(), N()), Sn(c(ye)) ? void 0 : { validationErrors: c(ye) });
  }
  function xt() {
    return c(P);
  }
  function bn() {
    return c(X);
  }
  function qn() {
    return c(K);
  }
  function un(I) {
    r("applyExternalContent", { updatedContent: I }), Wf(I) ? (function(se) {
      if (se !== void 0) {
        var Ce = !Zt(c(P), se);
        if (r("update external json", { isChanged: Ce, currentlyText: c(P) === void 0 }), !!Ce) {
          var Je = { documentState: c(X), selection: c(K), json: c(P), text: c(V), textIsRepaired: c(Fe) };
          C(P, se), C(X, go(se, c(X))), en(c(P)), C(V, void 0), C(Fe, !1), U = void 0, Rn(c(P)), on(Je);
        }
      }
    })(I.json) : Vf(I) && (function(se) {
      if (!(se === void 0 || Wf(v()))) {
        var Ce = se !== c(V);
        if (r("update external text", { isChanged: Ce }), !!Ce) {
          var Je = { documentState: c(X), selection: c(K), json: c(P), text: c(V), textIsRepaired: c(Fe) };
          try {
            C(P, T()(se)), C(X, go(c(P), c(X))), en(c(P)), C(V, se), C(Fe, !1), U = void 0;
          } catch (Be) {
            try {
              C(P, T()(_s(se))), C(X, go(c(P), c(X))), en(c(P)), C(V, se), C(Fe, !0), U = void 0, Rn(c(P));
            } catch {
              C(P, void 0), C(X, void 0), C(V, v().text), C(Fe, !1), U = c(V) !== void 0 && c(V) !== "" ? du(c(V), Be.message || String(Be)) : void 0;
            }
          }
          Rn(c(P)), on(Je);
        }
      }
    })(I.text);
  }
  function en(I) {
    me || (me = !0, C(X, nc(I, c(X), [])));
  }
  function Rn(I) {
    c(K) && (ro(I, Fl(c(K))) && ro(I, at(c(K))) || (r("clearing selection: path does not exist anymore", c(K)), C(K, kc(I, c(X)))));
  }
  function on(I) {
    if (I.json !== void 0 || I.text !== void 0) {
      var se = c(P) !== void 0 && I.json !== void 0;
      b().add({ type: "tree", undo: { patch: se ? [{ op: "replace", path: "", value: I.json }] : void 0, json: I.json, text: I.text, documentState: I.documentState, textIsRepaired: I.textIsRepaired, selection: Ss(I.selection), sortedColumn: void 0 }, redo: { patch: se ? [{ op: "replace", path: "", value: c(P) }] : void 0, json: c(P), text: c(V), documentState: c(X), textIsRepaired: c(Fe), selection: Ss(c(K)), sortedColumn: void 0 } });
    }
  }
  function qt(I, se) {
    var Ce;
    if (r("patch", I, se), c(P) === void 0) throw new Error("Cannot apply patch: no JSON");
    var Je = c(P), Be = { json: void 0, text: c(V), documentState: c(X), selection: Ss(c(K)), textIsRepaired: c(Fe), sortedColumn: void 0 }, ze = kA(c(P), I), _t = fA(c(P), c(X), I), At = (Ce = mu(c(P), I)) !== null && Ce !== void 0 ? Ce : c(K), nn = typeof se == "function" ? se(_t.json, _t.documentState, At) : void 0;
    return C(P, nn?.json !== void 0 ? nn.json : _t.json), C(X, nn?.state !== void 0 ? nn.state : _t.documentState), C(K, nn?.selection !== void 0 ? nn.selection : At), C(V, void 0), C(Fe, !1), C(tt, void 0), C(Re, void 0), U = void 0, Rn(c(P)), b().add({ type: "tree", undo: De({ patch: ze }, Be), redo: { patch: I, json: void 0, text: c(V), documentState: c(X), selection: Ss(c(K)), sortedColumn: void 0, textIsRepaired: c(Fe) } }), { json: c(P), previousJson: Je, undo: ze, redo: I };
  }
  function Pt() {
    !m() && c(K) && C(K, Cy(at(c(K))));
  }
  function an() {
    if (!m() && c(K)) {
      var I = at(c(K)), se = Ze(c(P), I);
      Or(se) ? (function(Ce, Je) {
        r("openJSONEditorModal", { path: Ce, value: Je }), J = !0, je()({ content: { json: Je }, path: Ce, onPatch: c(Wr).onPatch, onClose: () => {
          J = !1, setTimeout(Wt);
        } });
      })(I, se) : C(K, km(I));
    }
  }
  function yn() {
    if (!m() && _n(c(K))) {
      var I = at(c(K)), se = bt(I), Ce = Ze(c(P), I), Je = !Es(c(P), c(X), I), Be = Je ? String(Ce) : Ou(String(Ce), S());
      r("handleToggleEnforceString", { enforceString: Je, value: Ce, updatedValue: Be }), Ft([{ op: "replace", path: se, value: Be }], (ze, _t) => ({ state: wg(c(P), _t, I, { type: "value", enforceString: Je }) }));
    }
  }
  function Ot() {
    return c(Fe) && c(P) !== void 0 && fe(c(P)), c(P) !== void 0 ? { json: c(P) } : { text: c(V) || "" };
  }
  function Xe() {
    return tn.apply(this, arguments);
  }
  function tn() {
    return tn = Mt(function* () {
      var I = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
      yield HA({ json: c(P), selection: c(K), indentation: I ? L() : void 0, readOnly: m(), parser: S(), onPatch: Ft });
    }), tn.apply(this, arguments);
  }
  function Qt() {
    return Hn.apply(this, arguments);
  }
  function Hn() {
    return Hn = Mt(function* () {
      var I = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
      c(P) !== void 0 && (yield KA({ json: c(P), selection: c(K), indentation: I ? L() : void 0, parser: S() }));
    }), Hn.apply(this, arguments);
  }
  function Kn(I) {
    var se;
    I.preventDefault(), Gn((se = I.clipboardData) === null || se === void 0 ? void 0 : se.getData("text/plain"));
  }
  function On() {
    return Vr.apply(this, arguments);
  }
  function Vr() {
    return (Vr = Mt(function* () {
      try {
        Gn(yield navigator.clipboard.readText());
      } catch (I) {
        console.error(I), C(H, !0);
      }
    })).apply(this, arguments);
  }
  function Gn(I) {
    I !== void 0 && GA({ clipboardText: I, json: c(P), selection: c(K), readOnly: m(), parser: S(), onPatch: Ft, onChangeText: ke, onPasteMultilineText: Jn, openRepairModal: xr });
  }
  function xr(I, se) {
    C(ue, { text: I, onParse: (Ce) => jd(Ce, (Je) => wd(Je, S())), onRepair: Q_, onApply: se, onClose: Wt });
  }
  function Jr() {
    JA({ json: c(P), text: c(V), selection: c(K), keepSelection: !1, readOnly: m(), onChange: ce(), onPatch: Ft });
  }
  function Yr() {
    !m() && c(P) !== void 0 && c(K) && Lc && !Sn(at(c(K))) && (r("duplicate", { selection: c(K) }), Ft(yA(c(P), ul(c(P), c(K)))));
  }
  function zr() {
    m() || !c(K) || !nr(c(K)) && !_n(c(K)) || Sn(at(c(K))) || (r("extract", { selection: c(K) }), Ft(xA(c(P), c(K)), (I, se) => {
      if (Or(I))
        return { state: Vv(I, se, []) };
    }));
  }
  function Zn(I) {
    $m({ insertType: I, selectInside: !0, initialValue: void 0, json: c(P), selection: c(K), readOnly: m(), parser: S(), onPatch: Ft, onReplaceJson: fe });
  }
  function Ar(I) {
    li(c(K)) && C(K, sn(c(K).path)), c(K) || C(K, kc(c(P), c(X))), Zn(I);
  }
  function Te(I) {
    if (!m() && c(K)) if (Qh(c(K))) try {
      var se = Fl(c(K)), Ce = Ze(c(P), se), Je = (function(ze, _t, At) {
        if (_t === "array") {
          if (Array.isArray(ze)) return ze;
          if (Pn(ze)) return bk(ze);
          if (typeof ze == "string") try {
            var nn = At.parse(ze);
            if (Array.isArray(nn)) return nn;
            if (Pn(nn)) return bk(nn);
          } catch {
            return [ze];
          }
          return [ze];
        }
        if (_t === "object") {
          if (Array.isArray(ze)) return vk(ze);
          if (Pn(ze)) return ze;
          if (typeof ze == "string") try {
            var Un = At.parse(ze);
            if (Pn(Un)) return Un;
            if (Array.isArray(Un)) return vk(Un);
          } catch {
            return { value: ze };
          }
          return { value: ze };
        }
        if (_t === "value") return Or(ze) ? At.stringify(ze) : ze;
        throw new Error("Cannot convert ".concat(uy(ze, At), " to ").concat(_t));
      })(Ce, I, S());
      if (Je === Ce) return;
      var Be = [{ op: "replace", path: bt(se), value: Je }];
      r("handleConvert", { selection: c(K), path: se, type: I, operations: Be }), Ft(Be, (ze, _t) => ({ state: c(K) ? nc(ze, _t, at(c(K))) : c(X) }));
    } catch (ze) {
      W()(ze);
    }
    else W()(new Error("Cannot convert current selection to ".concat(I)));
  }
  function ln() {
    if (c(K)) {
      var I = Dk(c(P), c(X), c(K), !1), se = mn(at(c(K)));
      I && !Sn(at(I)) && Zt(se, mn(at(I))) ? C(K, fa(at(I))) : C(K, ba(se)), r("insert before", { selection: c(K), selectionBefore: I, parentPath: se }), fr(), Lt();
    }
  }
  function Nn() {
    if (c(K)) {
      var I = Ya(c(P), c(K));
      r("insert after", I), C(K, fa(I)), fr(), Lt();
    }
  }
  function er(I) {
    return be.apply(this, arguments);
  }
  function be() {
    return (be = Mt(function* (I) {
      yield YA({ char: I, selectInside: !0, json: c(P), selection: c(K), readOnly: m(), parser: S(), onPatch: Ft, onReplaceJson: fe, onSelect: rt });
    })).apply(this, arguments);
  }
  function Le() {
    if (!m() && b().canUndo) {
      var I = b().undo();
      if (wm(I)) {
        var se = { json: c(P), text: c(V) };
        C(P, I.undo.patch ? Go(c(P), I.undo.patch) : I.undo.json), C(X, I.undo.documentState), C(K, I.undo.selection), C(V, I.undo.text), C(Fe, I.undo.textIsRepaired), U = void 0, r("undo", { item: I, json: c(P), documentState: c(X), selection: c(K) }), xn(se, I.undo.patch && I.redo.patch ? { json: c(P), previousJson: se.json, redo: I.undo.patch, undo: I.redo.patch } : void 0), Wt(), c(K) && et(at(c(K)), { scrollToWhenVisible: !1 });
      } else Ee()(I);
    }
  }
  function We() {
    if (!m() && b().canRedo) {
      var I = b().redo();
      if (wm(I)) {
        var se = { json: c(P), text: c(V) };
        C(P, I.redo.patch ? Go(c(P), I.redo.patch) : I.redo.json), C(X, I.redo.documentState), C(K, I.redo.selection), C(V, I.redo.text), C(Fe, I.redo.textIsRepaired), U = void 0, r("redo", { item: I, json: c(P), documentState: c(X), selection: c(K) }), xn(se, I.undo.patch && I.redo.patch ? { json: c(P), previousJson: se.json, redo: I.redo.patch, undo: I.undo.patch } : void 0), Wt(), c(K) && et(at(c(K)), { scrollToWhenVisible: !1 });
      } else ae()(I);
    }
  }
  function Rt(I) {
    var se;
    m() || c(P) === void 0 || (J = !0, $()({ id: o, json: c(P), rootPath: I, onSort: (se = Mt(function* (Ce) {
      var { operations: Je } = Ce;
      r("onSort", I, Je), Ft(Je, (Be, ze) => ({ state: Vv(Be, ze, I), selection: sn(I) }));
    }), function(Ce) {
      return se.apply(this, arguments);
    }), onClose: () => {
      J = !1, setTimeout(Wt);
    } }));
  }
  function Jt() {
    c(K) && Rt(zk(c(P), c(K)));
  }
  function Yt() {
    Rt([]);
  }
  function fn(I) {
    if (c(P) !== void 0) {
      var { id: se, onTransform: Ce, onClose: Je } = I, Be = I.rootPath || [];
      J = !0, ne()({ id: se || s, json: c(P), rootPath: Be, onTransform: (ze) => {
        Ce ? Ce({ operations: ze, json: c(P), transformedJson: Go(c(P), ze) }) : (r("onTransform", Be, ze), Ft(ze, (_t, At) => ({ state: Vv(_t, At, Be), selection: sn(Be) })));
      }, onClose: () => {
        J = !1, setTimeout(Wt), Je && Je();
      } });
    }
  }
  function ht() {
    c(K) && fn({ rootPath: zk(c(P), c(K)) });
  }
  function Gt() {
    fn({ rootPath: [] });
  }
  function et(I) {
    return Mn.apply(this, arguments);
  }
  function Mn() {
    return Mn = Mt(function* (I) {
      var { scrollToWhenVisible: se = !0, element: Ce } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      C(X, Vo(c(P), c(X), I, Sp));
      var Je = Ce ?? Fn(I);
      if (r("scrollTo", { path: I, elem: Je, refContents: c(u) }), !Je || !c(u)) return Promise.resolve();
      var Be = c(u).getBoundingClientRect(), ze = Je.getBoundingClientRect();
      if (!se && ze.bottom > Be.top && ze.top < Be.bottom) return Promise.resolve();
      var _t = -Be.height / 4;
      return new Promise((At) => {
        p(Je, { container: c(u), offset: _t, duration: 300, callback: () => At() });
      });
    }), Mn.apply(this, arguments);
  }
  function Fn(I) {
    var se, Ce;
    return fr(), (se = (Ce = c(u)) === null || Ce === void 0 ? void 0 : Ce.querySelector('div[data-path="'.concat(kp(I), '"]'))) !== null && se !== void 0 ? se : void 0;
  }
  function lr(I) {
    var se, Ce;
    return fr(), (se = (Ce = c(u)) === null || Ce === void 0 ? void 0 : Ce.querySelector('span[data-search-result-index="'.concat(I, '"]'))) !== null && se !== void 0 ? se : void 0;
  }
  function Vt(I) {
    var se = Fn(I);
    if (se && c(u)) {
      var Ce = c(u).getBoundingClientRect(), Je = se.getBoundingClientRect(), Be = Or(Ze(c(P), I)) ? 20 : Je.height;
      Je.top < Ce.top + 20 ? p(se, { container: c(u), offset: -20, duration: 0 }) : Je.top + Be > Ce.bottom - 20 && p(se, { container: c(u), offset: -(Ce.height - Be - 20), duration: 0 });
    }
  }
  function xn(I, se) {
    if (I.json !== void 0 || I?.text !== void 0) {
      if (c(V) !== void 0) {
        var Ce, Je = { text: c(V), json: void 0 };
        (Ce = ce()) === null || Ce === void 0 || Ce(Je, I, { contentErrors: _e(), patchResult: se });
      } else if (c(P) !== void 0) {
        var Be, ze = { text: void 0, json: c(P) };
        (Be = ce()) === null || Be === void 0 || Be(ze, I, { contentErrors: _e(), patchResult: se });
      }
    }
  }
  function Ft(I, se) {
    r("handlePatch", I, se);
    var Ce = { json: c(P), text: c(V) }, Je = qt(I, se);
    return xn(Ce, Je), Je;
  }
  function fe(I, se) {
    var Ce = { json: c(P), text: c(V) }, Je = { documentState: c(X), selection: c(K), json: c(P), text: c(V), textIsRepaired: c(Fe) }, Be = Vo(c(P), go(I, c(X)), [], sf), ze = typeof se == "function" ? se(I, Be, c(K)) : void 0;
    C(P, ze?.json !== void 0 ? ze.json : I), C(X, ze?.state !== void 0 ? ze.state : Be), C(K, ze?.selection !== void 0 ? ze.selection : c(K)), C(V, void 0), C(Fe, !1), U = void 0, Rn(c(P)), on(Je), xn(Ce, void 0);
  }
  function ke(I, se) {
    r("handleChangeText");
    var Ce = { json: c(P), text: c(V) }, Je = { documentState: c(X), selection: c(K), json: c(P), text: c(V), textIsRepaired: c(Fe) };
    try {
      C(P, T()(I)), C(X, Vo(c(P), go(c(P), c(X)), [], sf)), C(V, void 0), C(Fe, !1), U = void 0;
    } catch (ze) {
      try {
        C(P, T()(_s(I))), C(X, Vo(c(P), go(c(P), c(X)), [], sf)), C(V, I), C(Fe, !0), U = void 0;
      } catch {
        C(P, void 0), C(X, _b({ json: c(P), expand: sf })), C(V, I), C(Fe, !1), U = c(V) !== "" ? du(c(V), ze.message || String(ze)) : void 0;
      }
    }
    if (typeof se == "function") {
      var Be = se(c(P), c(X), c(K));
      C(P, Be?.json !== void 0 ? Be.json : c(P)), C(X, Be?.state !== void 0 ? Be.state : c(X)), C(K, Be?.selection !== void 0 ? Be.selection : c(K));
    }
    Rn(c(P)), on(Je), xn(Ce, void 0);
  }
  function Ue(I, se) {
    var Ce = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
    r("handleExpand", { path: I, expanded: se, recursive: Ce }), se ? ve(I, Ce ? Sy : Ab) : Ne(I, Ce), Wt();
  }
  function Nt() {
    Ue([], !0, !0);
  }
  function dn() {
    Ue([], !1, !0);
  }
  function Ut(I) {
    r("openFind", { findAndReplace: I }), C(pt, !1), C(Ge, !1), fr(), C(pt, !0), C(Ge, I);
  }
  function Dn(I, se) {
    r("handleExpandSection", I, se), C(X, (function(Ce, Je, Be, ze) {
      return pu(Ce, Je, Be, (_t, At) => {
        if (!ai(At)) return At;
        var nn = lA(At.visibleSections.concat(ze));
        return De(De({}, At), {}, { visibleSections: nn });
      });
    })(c(P), c(X), I, se));
  }
  function wr(I) {
    r("pasted json as text", I), C(tt, I);
  }
  function Jn(I) {
    r("pasted multiline text", { pastedText: I }), C(Re, I);
  }
  function cn(I) {
    var se, { anchor: Ce, left: Je, top: Be, width: ze, height: _t, offsetTop: At, offsetLeft: nn, showTip: Un } = I, pn = (function(Yn) {
      var { json: dr, documentState: $n, selection: jt, readOnly: jn, onEditKey: kt, onEditValue: dt, onToggleEnforceString: Ht, onCut: gr, onCopy: fi, onPaste: or, onRemove: kr, onDuplicate: pi, onExtract: Us, onInsertBefore: ao, onInsert: Bo, onConvert: ds, onInsertAfter: qo, onSort: mi, onTransform: gi } = Yn, lo = dr !== void 0, Vs = !!jt, co = !!jt && Sn(at(jt)), Mr = jt ? Ze(dr, at(jt)) : void 0, cr = Array.isArray(Mr) ? "Edit array" : Pn(Mr) ? "Edit object" : "Edit value", qr = lo && (nr(jt) || li(jt) || _n(jt)), hs = jt && !co ? Ze(dr, mn(at(jt))) : void 0, pc = !jn && lo && jm(jt) && !co && !Array.isArray(hs), mc = !jn && lo && jt !== void 0 && jm(jt), _u = mc && !Or(Mr), gc = !jn && qr, Au = qr, Pg = !jn && Vs, Rg = !jn && lo && qr && !co, Ng = !jn && lo && jt !== void 0 && (nr(jt) || _n(jt)) && !co, ps = qr, xl = ps ? "Convert to:" : "Insert:", Xr = !jn && (ti(jt) && Array.isArray(Mr) || to(jt) && Array.isArray(hs)), Gi = !jn && (ps ? Qh(jt) && !Pn(Mr) : Vs), Mu = !jn && (ps ? Qh(jt) && !Array.isArray(Mr) : Vs), Tu = !jn && (ps ? Qh(jt) && Or(Mr) : Vs), wl = jt !== void 0 && Es(dr, $n, at(jt));
      function Ci($u) {
        qr ? $u !== "structure" && ds($u) : Bo($u);
      }
      return [{ type: "row", items: [{ type: "button", onClick: () => kt(), icon: Vc, text: "Edit key", title: "Edit the key (Double-click on the key)", disabled: !pc }, { type: "dropdown-button", main: { type: "button", onClick: () => dt(), icon: Vc, text: cr, title: "Edit the value (Double-click on the value)", disabled: !mc }, width: "11em", items: [{ type: "button", icon: Vc, text: cr, title: "Edit the value (Double-click on the value)", onClick: () => dt(), disabled: !mc }, { type: "button", icon: wl ? WC : KC, text: "Enforce string", title: "Enforce keeping the value as string when it contains a numeric value", onClick: () => Ht(), disabled: !_u }] }] }, { type: "separator" }, { type: "row", items: [{ type: "dropdown-button", main: { type: "button", onClick: () => gr(!0), icon: Uc, text: "Cut", title: "Cut selected contents, formatted with indentation (Ctrl+X)", disabled: !gc }, width: "10em", items: [{ type: "button", icon: Uc, text: "Cut formatted", title: "Cut selected contents, formatted with indentation (Ctrl+X)", onClick: () => gr(!0), disabled: !gc }, { type: "button", icon: Uc, text: "Cut compacted", title: "Cut selected contents, without indentation (Ctrl+Shift+X)", onClick: () => gr(!1), disabled: !gc }] }, { type: "dropdown-button", main: { type: "button", onClick: () => fi(!0), icon: Na, text: "Copy", title: "Copy selected contents, formatted with indentation (Ctrl+C)", disabled: !Au }, width: "12em", items: [{ type: "button", icon: Na, text: "Copy formatted", title: "Copy selected contents, formatted with indentation (Ctrl+C)", onClick: () => fi(!0), disabled: !Au }, { type: "button", icon: Na, text: "Copy compacted", title: "Copy selected contents, without indentation (Ctrl+Shift+C)", onClick: () => fi(!1), disabled: !Au }] }, { type: "button", onClick: () => or(), icon: VC, text: "Paste", title: "Paste clipboard contents (Ctrl+V)", disabled: !Pg }] }, { type: "separator" }, { type: "row", items: [{ type: "column", items: [{ type: "button", onClick: () => pi(), icon: YC, text: "Duplicate", title: "Duplicate selected contents (Ctrl+D)", disabled: !Rg }, { type: "button", onClick: () => Us(), icon: W6, text: "Extract", title: "Extract selected contents", disabled: !Ng }, { type: "button", onClick: () => mi(), icon: Ip, text: "Sort", title: "Sort array or object contents", disabled: jn || !qr }, { type: "button", onClick: () => gi(), icon: Np, text: "Transform", title: "Transform array or object contents (filter, sort, project)", disabled: jn || !qr }, { type: "button", onClick: () => kr(), icon: g0, text: "Remove", title: "Remove selected contents (Delete)", disabled: jn || !qr }] }, { type: "column", items: [{ type: "label", text: xl }, { type: "button", onClick: () => Ci("structure"), icon: ps ? Nd : $c, text: "Structure", title: xl + " structure like the first item in the array", disabled: !Xr }, { type: "button", onClick: () => Ci("object"), icon: ps ? Nd : $c, text: "Object", title: xl + " object", disabled: !Gi }, { type: "button", onClick: () => Ci("array"), icon: ps ? Nd : $c, text: "Array", title: xl + " array", disabled: !Mu }, { type: "button", onClick: () => Ci("value"), icon: ps ? Nd : $c, text: "Value", title: xl + " value", disabled: !Tu }] }] }, { type: "separator" }, { type: "row", items: [{ type: "button", onClick: () => ao(), icon: B6, text: "Insert before", title: "Select area before current entry to insert or paste contents", disabled: jn || !qr || co }, { type: "button", onClick: () => qo(), icon: P6, text: "Insert after", title: "Select area after current entry to insert or paste contents", disabled: jn || !qr || co }] }];
    })({ json: c(P), documentState: c(X), selection: c(K), readOnly: m(), onEditKey: Pt, onEditValue: an, onToggleEnforceString: yn, onCut: Xe, onCopy: Qt, onPaste: On, onRemove: Jr, onDuplicate: Yr, onExtract: zr, onInsertBefore: ln, onInsert: Ar, onInsertAfter: Nn, onConvert: Te, onSort: Jt, onTransform: ht }), ir = (se = B()(pn)) !== null && se !== void 0 ? se : pn;
    if (ir !== !1) {
      var Dt = { left: Je, top: Be, offsetTop: At, offsetLeft: nn, width: ze, height: _t, anchor: Ce, closeOnOuterClick: !0, onClose: () => {
        J = !1, Wt();
      } };
      J = !0;
      var jr = a(XA, { tip: Un ? "Tip: you can open this context menu via right-click or with Ctrl+Q" : void 0, items: ir, onRequestClose: () => l(jr) }, Dt);
    }
  }
  function Lt(I) {
    if (!oi(c(K))) if (I && (I.stopPropagation(), I.preventDefault()), I && I.type === "contextmenu" && I.target !== c(f)) cn({ left: I.clientX, top: I.clientY, width: ra, height: na, showTip: !1 });
    else {
      var se, Ce = (se = c(u)) === null || se === void 0 ? void 0 : se.querySelector(".jse-context-menu-pointer.jse-selected");
      if (Ce) cn({ anchor: Ce, offsetTop: 2, width: ra, height: na, showTip: !1 });
      else {
        var Je, Be = (Je = c(u)) === null || Je === void 0 ? void 0 : Je.getBoundingClientRect();
        Be && cn({ top: Be.top + 2, left: Be.left + 2, width: ra, height: na, showTip: !1 });
      }
    }
  }
  function In(I) {
    cn({ anchor: sA(I.target, "BUTTON"), offsetTop: 0, width: ra, height: na, showTip: !0 });
  }
  function ji() {
    return Et.apply(this, arguments);
  }
  function Et() {
    return (Et = Mt(function* () {
      if (r("apply pasted json", c(tt)), c(tt)) {
        var { onPasteAsJson: I } = c(tt);
        C(tt, void 0), I(), setTimeout(Wt);
      }
    })).apply(this, arguments);
  }
  function mr() {
    return Tn.apply(this, arguments);
  }
  function Tn() {
    return (Tn = Mt(function* () {
      r("apply pasted multiline text", c(Re)), c(Re) && (Gn(JSON.stringify(c(Re))), setTimeout(Wt));
    })).apply(this, arguments);
  }
  function tr() {
    r("clear pasted json"), C(tt, void 0), Wt();
  }
  function ct() {
    r("clear pasted multiline text"), C(Re, void 0), Wt();
  }
  function Vn() {
    te()(Hr.text);
  }
  function Lr(I) {
    C(K, I), Wt(), et(at(I));
  }
  function Wt() {
    r("focus"), c(f) && (c(f).focus(), c(f).select());
  }
  function so(I) {
    return (function(se, Ce, Je) {
      var Be = mn(Je), ze = [rn(Je)], _t = Ze(se, Be), At = _t ? Uv(_t, Ce, ze) : void 0;
      return At ? sn(Be.concat(At)) : fa(Je);
    })(c(P), c(X), I);
  }
  function Br(I) {
    c(n) && c(n).onDrag(I);
  }
  function Qr() {
    c(n) && c(n).onDragEnd();
  }
  var Wr = Q(void 0, !0);
  de(() => c(K), () => {
    var I;
    I = c(K), Zt(I, g()) || (r("onSelect", I), we()(I));
  }), de(() => (_(y()), _(k())), () => {
    C(Ae, fy({ escapeControlCharacters: y(), escapeUnicodeCharacters: k() }));
  }), de(() => c(pt), () => {
    (function(I) {
      c(u) && I && c(u).scrollTop === 0 && (bo(u, c(u).style.overflowAnchor = "none"), bo(u, c(u).scrollTop += of), setTimeout(() => {
        c(u) && bo(u, c(u).style.overflowAnchor = "");
      }));
    })(c(pt));
  }), de(() => _(v()), () => {
    un(v());
  }), de(() => _(g()), () => {
    (function(I) {
      Zt(c(K), I) || (r("applyExternalSelection", { selection: c(K), externalSelection: I }), Jf(I) && C(K, I));
    })(g());
  }), de(() => (c(P), _(M()), _(S()), _(N())), () => {
    ot(c(P), M(), S(), N());
  }), de(() => (c(u), rS), () => {
    C(n, c(u) ? rS(c(u)) : void 0);
  }), de(() => (_(m()), _(x()), _(S()), c(Ae), _(re()), _(ie())), () => {
    C(Wr, { mode: Hr.tree, readOnly: m(), truncateTextSize: x(), parser: S(), normalization: c(Ae), getJson: xt, getDocumentState: bn, getSelection: qn, findElement: Fn, findNextInside: so, focus: Wt, onPatch: Ft, onInsert: Zn, onExpand: Ue, onSelect: rt, onFind: Ut, onExpandSection: Dn, onPasteJson: wr, onRenderValue: re(), onContextMenu: cn, onClassName: ie() || (() => {
    }), onDrag: Br, onDragEnd: Qr });
  }), de(() => c(Wr), () => {
    r("context changed", c(Wr));
  }), Bn(), zt(!0);
  var ki = sW();
  Pe("mousedown", ca, function(I) {
    !Eu(I.target, (se) => se === c(d)) && oi(c(K)) && (r("click outside the editor, exit edit mode"), C(K, Ss(c(K))), h && c(f) && (c(f).focus(), c(f).blur()), r("blur (outside editor)"), c(f) && c(f).blur());
  });
  var q, he = wt(ki), $e = Y(he), He = (I) => {
    (function(se, Ce) {
      mt(Ce, !1);
      var Je = Q(void 0, !0), Be = Q(void 0, !0), ze = Q(void 0, !0), _t = E(Ce, "json", 9), At = E(Ce, "selection", 9), nn = E(Ce, "readOnly", 9), Un = E(Ce, "showSearch", 13, !1), pn = E(Ce, "history", 9), ir = E(Ce, "onExpandAll", 9), Dt = E(Ce, "onCollapseAll", 9), jr = E(Ce, "onUndo", 9), Yn = E(Ce, "onRedo", 9), dr = E(Ce, "onSort", 9), $n = E(Ce, "onTransform", 9), jt = E(Ce, "onContextMenu", 9), jn = E(Ce, "onCopy", 9), kt = E(Ce, "onRenderMenu", 9);
      function dt() {
        Un(!Un());
      }
      var Ht = Q(void 0, !0), gr = Q(void 0, !0), fi = Q(void 0, !0), or = Q(void 0, !0);
      de(() => _(_t()), () => {
        C(Je, _t() !== void 0);
      }), de(() => (c(Je), _(At()), _n), () => {
        C(Be, c(Je) && (nr(At()) || li(At()) || _n(At())));
      }), de(() => (_(ir()), _(_t())), () => {
        C(Ht, { type: "button", icon: hV, title: "Expand all", className: "jse-expand-all", onClick: ir(), disabled: !Or(_t()) });
      }), de(() => (_(Dt()), _(_t())), () => {
        C(gr, { type: "button", icon: pV, title: "Collapse all", className: "jse-collapse-all", onClick: Dt(), disabled: !Or(_t()) });
      }), de(() => _(_t()), () => {
        C(fi, { type: "button", icon: Km, title: "Search (Ctrl+F)", className: "jse-search", onClick: dt, disabled: _t() === void 0 });
      }), de(() => (_(nn()), c(Ht), c(gr), _(dr()), _(_t()), _($n()), c(fi), _(jt()), _(jr()), _(pn()), _(Yn()), _(jn()), c(Be)), () => {
        C(or, nn() ? [c(Ht), c(gr), { type: "separator" }, { type: "button", icon: Na, title: "Copy (Ctrl+C)", className: "jse-copy", onClick: jn(), disabled: !c(Be) }, { type: "separator" }, c(fi), { type: "space" }] : [c(Ht), c(gr), { type: "separator" }, { type: "button", icon: Ip, title: "Sort", className: "jse-sort", onClick: dr(), disabled: nn() || _t() === void 0 }, { type: "button", icon: Np, title: "Transform contents (filter, sort, project)", className: "jse-transform", onClick: $n(), disabled: nn() || _t() === void 0 }, c(fi), { type: "button", icon: GC, title: gy, className: "jse-contextmenu", onClick: jt() }, { type: "separator" }, { type: "button", icon: m1, title: "Undo (Ctrl+Z)", className: "jse-undo", onClick: jr(), disabled: !pn().canUndo }, { type: "button", icon: p1, title: "Redo (Ctrl+Shift+Z)", className: "jse-redo", onClick: Yn(), disabled: !pn().canRedo }, { type: "space" }]);
      }), de(() => (_(kt()), c(or)), () => {
        C(ze, kt()(c(or)) || c(or));
      }), Bn(), zt(!0), Eg(se, { get items() {
        return c(ze);
      } }), gt();
    })(I, { get json() {
      return c(P);
    }, get selection() {
      return c(K);
    }, get readOnly() {
      return m();
    }, get history() {
      return b();
    }, onExpandAll: Nt, onCollapseAll: dn, onUndo: Le, onRedo: We, onSort: Yt, onTransform: Gt, onContextMenu: In, onCopy: Qt, get onRenderMenu() {
      return G();
    }, get showSearch() {
      return c(pt);
    }, set showSearch(se) {
      C(pt, se);
    }, $$legacy: !0 });
  };
  xe($e, (I) => {
    w() && I(He);
  });
  var Ke = le($e, 2), it = (I) => {
    PV(I, { get json() {
      return c(P);
    }, get selection() {
      return c(K);
    }, onSelect: Lr, get onError() {
      return W();
    }, get pathParser() {
      return z();
    } });
  };
  xe(Ke, (I) => {
    j() && I(it);
  });
  var ut = le(Ke, 2), ft = (I) => {
    var se = iW(), Ce = wt(se), Je = Y(Ce);
    Je.readOnly = !0, pr(Je, (At) => C(f, At), () => c(f));
    var Be = le(Ce, 2), ze = (At) => {
      var nn = Er(), Un = wt(nn), pn = (Dt) => {
        (function(jr, Yn) {
          mt(Yn, !0);
          var dr = xV();
          dr.__click = [bV, Yn];
          var $n = le(Y(dr), 2), jt = le(Y($n), 2), jn = (kt) => {
            var dt = yV(), Ht = le(wt(dt), 2);
            Ln(Ht, "title", "Create an empty JSON object (press '{')"), Ht.__click = [gV, Yn];
            var gr = le(Ht, 2);
            Ln(gr, "title", "Create an empty JSON array (press '[')"), gr.__click = [vV, Yn], Z(kt, dt);
          };
          xe(jt, (kt) => {
            Yn.readOnly || kt(jn);
          }), Z(jr, dr), gt();
        })(Dt, { get readOnly() {
          return m();
        }, onCreateObject: () => {
          Wt(), er("{");
        }, onCreateArray: () => {
          Wt(), er("[");
        }, onClick: () => {
          Wt();
        } });
      }, ir = (Dt) => {
        var jr = tW(), Yn = wt(jr), dr = Oe(() => m() ? [] : [{ icon: Dp, text: "Repair manually", title: 'Open the document in "code" mode and repair it manually', onClick: Vn }]);
        jo(Yn, { type: "error", message: "The loaded JSON document is invalid and could not be repaired automatically.", get actions() {
          return c(dr);
        } }), QA(le(Yn, 2), { get text() {
          return c(V);
        }, get json() {
          return c(P);
        }, get indentation() {
          return L();
        }, get parser() {
          return S();
        } }), Z(Dt, jr);
      };
      xe(Un, (Dt) => {
        c(V) === "" || c(V) === void 0 ? Dt(pn) : Dt(ir, !1);
      }), Z(At, nn);
    }, _t = (At) => {
      var nn = rW(), Un = wt(nn);
      UA(Y(Un), { get json() {
        return c(P);
      }, get documentState() {
        return c(X);
      }, get parser() {
        return S();
      }, get showSearch() {
        return c(pt);
      }, get showReplace() {
        return c(Ge);
      }, get readOnly() {
        return m();
      }, columns: void 0, onSearch: $t, onFocus: A, onPatch: Ft, onClose: F });
      var pn = le(Un, 2);
      Ln(pn, "data-jsoneditor-scrollable-contents", !0);
      var ir = Y(pn), Dt = (kt) => {
        Z(kt, nW());
      };
      xe(ir, (kt) => {
        c(pt) && kt(Dt);
      }), zb(le(ir, 2), { get value() {
        return c(P);
      }, pointer: "", get state() {
        return c(X);
      }, get validationErrors() {
        return c(ge);
      }, get searchResults() {
        return c(qe);
      }, get selection() {
        return c(K);
      }, get context() {
        return c(Wr);
      }, get onDragSelectionStart() {
        return Zr;
      } }), pr(pn, (kt) => C(u, kt), () => c(u));
      var jr = le(pn, 2), Yn = (kt) => {
        var dt = Oe(() => (c(tt), ee(() => "You pasted a JSON ".concat(Array.isArray(c(tt).contents) ? "array" : "object", " as text")))), Ht = Oe(() => [{ icon: Xa, text: "Paste as JSON instead", title: "Replace the value with the pasted JSON", onMouseDown: ji }, { text: "Leave as is", title: "Keep the JSON embedded in the value", onClick: tr }]);
        jo(kt, { type: "info", get message() {
          return c(dt);
        }, get actions() {
          return c(Ht);
        } });
      };
      xe(jr, (kt) => {
        c(tt) && kt(Yn);
      });
      var dr = le(jr, 2), $n = (kt) => {
        var dt = Oe(() => [{ icon: Xa, text: "Paste as string instead", title: "Paste the clipboard data as a single string value instead of an array", onClick: mr }, { text: "Leave as is", title: "Keep the pasted array", onClick: ct }]);
        jo(kt, { type: "info", message: "Multiline text was pasted as array", get actions() {
          return c(dt);
        } });
      };
      xe(dr, (kt) => {
        c(Re) && kt($n);
      });
      var jt = le(dr, 2), jn = (kt) => {
        var dt = Oe(() => m() ? [] : [{ icon: g1, text: "Ok", title: "Accept the repaired document", onClick: Ot }, { icon: Dp, text: "Repair manually instead", title: "Leave the document unchanged and repair it manually instead", onClick: Vn }]);
        jo(kt, { type: "success", message: "The loaded JSON document was invalid but is successfully repaired.", get actions() {
          return c(dt);
        }, onClose: Wt });
      };
      xe(jt, (kt) => {
        c(Fe) && kt(jn);
      }), My(le(jt, 2), { get validationErrors() {
        return c(ye);
      }, selectError: oe }), Z(At, nn);
    };
    xe(Be, (At) => {
      c(P) === void 0 ? At(ze) : At(_t, !1);
    }), Pe("paste", Je, Kn), Z(I, se);
  }, Xt = (I) => {
    Z(I, oW());
  };
  xe(ut, (I) => {
    i ? I(Xt, !1) : I(ft);
  }), pr(he, (I) => C(d, I), () => c(d));
  var wn = le(he, 2), hn = (I) => {
    LA(I, { onClose: () => C(H, !1) });
  };
  xe(wn, (I) => {
    c(H) && I(hn);
  });
  var Wn = le(wn, 2), Si = (I) => {
    BA(I, Ga(() => c(ue), { onClose: () => {
      var se;
      (se = c(ue)) === null || se === void 0 || se.onClose(), C(ue, void 0);
    } }));
  };
  return xe(Wn, (I) => {
    c(ue) && I(Si);
  }), Ie((I) => q = It(he, 1, "jse-tree-mode svelte-vrx1dr", null, q, I), [() => ({ "no-main-menu": !w() })], Oe), Pe("keydown", he, function(I) {
    var se = ga(I), Ce = I.shiftKey;
    if (r("keydown", { combo: se, key: I.key }), se === "Ctrl+X" && (I.preventDefault(), Xe(!0)), se === "Ctrl+Shift+X" && (I.preventDefault(), Xe(!1)), se === "Ctrl+C" && (I.preventDefault(), Qt(!0)), se === "Ctrl+Shift+C" && (I.preventDefault(), Qt(!1)), se === "Ctrl+D" && (I.preventDefault(), Yr()), se !== "Delete" && se !== "Backspace" || (I.preventDefault(), Jr()), se === "Insert" && (I.preventDefault(), Zn("structure")), se === "Ctrl+A" && (I.preventDefault(), C(K, sn([]))), se === "Ctrl+Q" && Lt(I), se === "ArrowUp" || se === "Shift+ArrowUp") {
      I.preventDefault();
      var Je = c(K) ? Dk(c(P), c(X), c(K), Ce) || c(K) : kc(c(P), c(X));
      C(K, Je), Vt(at(Je));
    }
    if (se === "ArrowDown" || se === "Shift+ArrowDown") {
      I.preventDefault();
      var Be = c(K) ? (function(pn, ir, Dt) {
        var jr = arguments.length > 3 && arguments[3] !== void 0 && arguments[3];
        if (Dt) {
          var Yn = jr ? at(Dt) : Ya(pn, Dt), dr = Or(Ze(pn, Yn)) ? $k(pn, ir, Yn, !0) : ir, $n = Uv(pn, ir, Yn), jt = Uv(pn, dr, Yn);
          if (jr) return ti(Dt) ? $n !== void 0 ? Ri($n, $n) : void 0 : to(Dt) ? jt !== void 0 ? Ri(jt, jt) : void 0 : jt !== void 0 ? Ri(Fl(Dt), jt) : void 0;
          if (to(Dt)) return jt !== void 0 ? sn(jt) : void 0;
          if (ti(Dt) || _n(Dt)) return $n !== void 0 ? sn($n) : void 0;
          if (li(Dt)) {
            if ($n === void 0 || $n.length === 0) return;
            var jn = mn($n), kt = Ze(pn, jn);
            return Array.isArray(kt) ? sn($n) : va($n);
          }
          return nr(Dt) ? jt !== void 0 ? sn(jt) : $n !== void 0 ? sn($n) : void 0 : void 0;
        }
      })(c(P), c(X), c(K), Ce) || c(K) : kc(c(P), c(X));
      C(K, Be), Vt(at(Be));
    }
    if (se === "ArrowLeft" || se === "Shift+ArrowLeft") {
      I.preventDefault();
      var ze = c(K) ? (function(pn, ir, Dt) {
        var jr = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], Yn = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4];
        if (Dt) {
          var { caret: dr, previous: $n } = Ik(pn, ir, Dt, Yn);
          if (jr) return nr(Dt) ? void 0 : Ri(Dt.path, Dt.path);
          if (dr && $n) return Mb($n);
          var jt = mn(at(Dt)), jn = Ze(pn, jt);
          return _n(Dt) && Array.isArray(jn) ? Ri(Dt.path, Dt.path) : nr(Dt) && !Array.isArray(jn) ? va(Dt.focusPath) : void 0;
        }
      })(c(P), c(X), c(K), Ce, !m()) || c(K) : kc(c(P), c(X));
      C(K, ze), Vt(at(ze));
    }
    if (se === "ArrowRight" || se === "Shift+ArrowRight") {
      I.preventDefault();
      var _t = c(K) && c(P) !== void 0 ? (function(pn, ir, Dt) {
        var jr = arguments.length > 3 && arguments[3] !== void 0 && arguments[3], Yn = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4];
        if (Dt) {
          var { caret: dr, next: $n } = Ik(pn, ir, Dt, Yn);
          return jr ? nr(Dt) ? void 0 : Ri(Dt.path, Dt.path) : dr && $n ? Mb($n) : nr(Dt) ? sn(Dt.focusPath) : void 0;
        }
      })(c(P), c(X), c(K), Ce, !m()) || c(K) : kc(c(P), c(X));
      C(K, _t), Vt(at(_t));
    }
    if (se === "Enter" && c(K)) {
      if (jg(c(K))) {
        var At = c(K).focusPath, nn = Ze(c(P), mn(At));
        Array.isArray(nn) && (I.preventDefault(), C(K, sn(At)));
      }
      li(c(K)) && (I.preventDefault(), C(K, De(De({}, c(K)), {}, { edit: !0 }))), _n(c(K)) && (I.preventDefault(), Or(Ze(c(P), c(K).path)) ? Ue(c(K).path, !0) : C(K, De(De({}, c(K)), {}, { edit: !0 })));
    }
    if (se.replace(/^Shift\+/, "").length === 1 && c(K)) return I.preventDefault(), void er(I.key);
    if (se === "Enter" && (to(c(K)) || ti(c(K)))) return I.preventDefault(), void er("");
    if (se === "Ctrl+Enter" && _n(c(K))) {
      var Un = Ze(c(P), c(K).path);
      xg(Un) && window.open(String(Un), "_blank");
    }
    se === "Escape" && c(K) && (I.preventDefault(), C(K, void 0)), se === "Ctrl+F" && (I.preventDefault(), Ut(!1)), se === "Ctrl+H" && (I.preventDefault(), Ut(!0)), se === "Ctrl+Z" && (I.preventDefault(), Le()), se === "Ctrl+Shift+Z" && (I.preventDefault(), We());
  }), Pe("mousedown", he, function(I) {
    r("handleMouseDown", I);
    var se = I.target;
    oA(se, "BUTTON") || se.isContentEditable || (Wt(), c(K) || c(P) !== void 0 || c(V) !== "" && c(V) !== void 0 || (r("createDefaultSelection"), C(K, sn([]))));
  }), Pe("contextmenu", he, Lt), Z(t, ki), Ct(e, "expand", ve), Ct(e, "collapse", Ne), Ct(e, "validate", _e), Ct(e, "getJson", xt), Ct(e, "patch", qt), Ct(e, "acceptAutoRepair", Ot), Ct(e, "openTransformModal", fn), Ct(e, "scrollTo", et), Ct(e, "findElement", Fn), Ct(e, "findSearchResult", lr), Ct(e, "focus", Wt), gt({ expand: ve, collapse: Ne, validate: _e, getJson: xt, patch: qt, acceptAutoRepair: Ot, openTransformModal: fn, scrollTo: et, findElement: Fn, findSearchResult: lr, focus: Wt });
}
function ZA(t) {
  return typeof (e = t) != "object" || e === null ? t : new Proxy(t, { get: (n, r, i) => ZA(Reflect.get(n, r, i)), set: () => !1, deleteProperty: () => !1 });
  var e;
}
var op = ui("jsoneditor:History");
function e3() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = t.maxItems || 1e3, n = [], r = 0;
  function i() {
    return r < n.length;
  }
  function o() {
    return r > 0;
  }
  function s() {
    return { canUndo: i(), canRedo: o(), items: () => n.slice().reverse(), add: l, undo: f, redo: d, clear: u };
  }
  function a() {
    t.onChange && t.onChange(s());
  }
  function l(h) {
    op("add", h), n = [h].concat(n.slice(r)).slice(0, e), r = 0, a();
  }
  function u() {
    op("clear"), n = [], r = 0, a();
  }
  function f() {
    if (i()) {
      var h = n[r];
      return r += 1, op("undo", h), a(), h;
    }
  }
  function d() {
    if (o()) return op("redo", n[r -= 1]), a(), n[r];
  }
  return { get: s };
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-transform-modal-inner.svelte-rrrjnb {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-width: 0;
  min-height: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) {
  color: inherit;
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 0;
  overflow: auto;
  min-width: 0;
  min-height: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-actions:where(.svelte-rrrjnb) {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-top: var(--jse-padding, 10px);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-actions:where(.svelte-rrrjnb) button.jse-primary:where(.svelte-rrrjnb) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-actions:where(.svelte-rrrjnb) button.jse-primary:where(.svelte-rrrjnb):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-actions:where(.svelte-rrrjnb) button.jse-primary:where(.svelte-rrrjnb):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) {
  flex: 1;
  display: flex;
  gap: calc(2 * var(--jse-padding, 10px));
  min-height: 0;
  box-sizing: border-box;
  padding: 0 calc(2 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) {
  flex: 1;
  display: flex;
  flex-direction: column;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) .jse-description:where(.svelte-rrrjnb) p {
  margin: var(--jse-padding, 10px) 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) .jse-description:where(.svelte-rrrjnb) p:first-child {
  margin-top: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) .jse-description:where(.svelte-rrrjnb) p:last-child {
  margin-bottom: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) .jse-description:where(.svelte-rrrjnb) code {
  background: var(--jse-modal-code-background, rgba(0, 0, 0, 0.05));
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) .query-error:where(.svelte-rrrjnb) {
  color: var(--jse-error-color, #ee5341);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) textarea.jse-query:where(.svelte-rrrjnb) {
  flex: 1;
  outline: none;
  resize: vertical;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents:where(.svelte-rrrjnb) {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: calc(2 * var(--jse-padding, 10px));
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents:where(.svelte-rrrjnb) .jse-original-data:where(.svelte-rrrjnb) {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
  box-sizing: border-box;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents:where(.svelte-rrrjnb) .jse-original-data.jse-hide:where(.svelte-rrrjnb) {
  flex: none;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents:where(.svelte-rrrjnb) .jse-preview-data:where(.svelte-rrrjnb) {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
  box-sizing: border-box;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents.jse-hide-original-data:where(.svelte-rrrjnb) {
  flex-direction: column;
  gap: 0;
  margin-bottom: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-actions:where(.svelte-rrrjnb) {
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px)) calc(2 * var(--jse-padding, 10px));
}
@media screen and (max-width: 1200px) {
  .jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) {
    flex-direction: column;
    overflow: auto;
  }
  .jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-query-contents:where(.svelte-rrrjnb) textarea.jse-query:where(.svelte-rrrjnb) {
    min-height: 150px;
    flex: none;
  }
  .jse-transform-modal-inner.svelte-rrrjnb .jse-modal-contents:where(.svelte-rrrjnb) .jse-main-contents:where(.svelte-rrrjnb) .jse-data-contents:where(.svelte-rrrjnb) .jse-tree-mode {
    height: 300px;
    flex: none;
  }
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-label:where(.svelte-rrrjnb) {
  font-weight: bold;
  display: block;
  box-sizing: border-box;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-label:where(.svelte-rrrjnb) .jse-label-inner:where(.svelte-rrrjnb) {
  margin-top: calc(2 * var(--jse-padding, 10px));
  margin-bottom: calc(0.5 * var(--jse-padding, 10px));
  box-sizing: border-box;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-label:where(.svelte-rrrjnb) .jse-label-inner:where(.svelte-rrrjnb) button:where(.svelte-rrrjnb) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  font-weight: bold;
  padding: 0;
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-tree-mode {
  flex: 1;
  background: var(--jse-input-background-readonly, transparent);
  box-shadow: none;
  box-sizing: border-box;
  --jse-main-border: var(--jse-input-border, 1px solid #d8dbdf);
}
.jse-transform-modal-inner.svelte-rrrjnb input:where(.svelte-rrrjnb),
.jse-transform-modal-inner.svelte-rrrjnb textarea:where(.svelte-rrrjnb) {
  border: var(--jse-input-border, 1px solid #d8dbdf);
  outline: none;
  box-sizing: border-box;
  padding: calc(0.5 * var(--jse-padding, 10px));
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: inherit;
  background: var(--jse-input-background, var(--jse-background-color, #fff));
}
.jse-transform-modal-inner.svelte-rrrjnb input:where(.svelte-rrrjnb):focus,
.jse-transform-modal-inner.svelte-rrrjnb textarea:where(.svelte-rrrjnb):focus {
  border: var(--jse-input-border-focus, 1px solid var(--jse-input-border-focus, var(--jse-theme-color, #3883fa)));
}
.jse-transform-modal-inner.svelte-rrrjnb input:where(.svelte-rrrjnb):read-only,
.jse-transform-modal-inner.svelte-rrrjnb textarea:where(.svelte-rrrjnb):read-only {
  background: var(--jse-input-background-readonly, transparent);
}
.jse-transform-modal-inner.svelte-rrrjnb .jse-preview.jse-error:where(.svelte-rrrjnb) {
  flex: 1;
  background: var(--jse-input-background-readonly, transparent);
  border: var(--jse-input-border, 1px solid #d8dbdf);
  color: var(--jse-error-color, #ee5341);
  padding: calc(0.5 * var(--jse-padding, 10px));
}
.jse-transform-modal-inner.svelte-rrrjnb a {
  color: var(--jse-a-color, #156fc5);
}
.jse-transform-modal-inner.svelte-rrrjnb a:hover {
  color: var(--jse-a-color-highlight, #0f508d);
}`);
var Gu = yg(() => cF), Cc = yg(() => uF), aW = pe('<div class="query-error svelte-rrrjnb"> </div>'), lW = pe("<!> <!>", 1), cW = pe('<div class="jse-preview jse-error svelte-rrrjnb"> </div>'), uW = pe('<!> <div class="jse-modal-contents svelte-rrrjnb"><div class="jse-main-contents svelte-rrrjnb"><div class="jse-query-contents svelte-rrrjnb"><div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb">Language</div></div> <div class="jse-description svelte-rrrjnb"><!></div> <div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb">Path</div></div> <input class="jse-path svelte-rrrjnb" type="text" readonly="" title="Selected path"/> <div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb"><button type="button" class="svelte-rrrjnb"><!> Wizard</button></div></div> <!> <div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb">Query</div></div> <textarea class="jse-query svelte-rrrjnb" spellcheck="false"></textarea></div> <div><div><div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb"><button type="button" class="svelte-rrrjnb"><!> Original</button></div></div> <!></div> <div class="jse-preview-data svelte-rrrjnb"><div class="jse-label svelte-rrrjnb"><div class="jse-label-inner svelte-rrrjnb">Preview</div></div> <!></div></div></div> <div class="jse-actions svelte-rrrjnb"><button type="button" class="jse-primary svelte-rrrjnb">Transform</button></div></div>', 1), fW = pe('<div class="jse-transform-modal-inner svelte-rrrjnb"><!></div>');
function dW(t, e) {
  var n, r, i;
  mt(e, !1);
  var o = ui("jsoneditor:TransformModal"), s = E(e, "id", 25, () => "transform-modal-" + zc()), a = E(e, "json", 9), l = E(e, "rootPath", 25, () => []), u = E(e, "indentation", 9), f = E(e, "truncateTextSize", 9), d = E(e, "escapeControlCharacters", 9), h = E(e, "escapeUnicodeCharacters", 9), p = E(e, "parser", 9), m = E(e, "parseMemoizeOne", 9), v = E(e, "validationParser", 9), g = E(e, "pathParser", 9), b = E(e, "queryLanguages", 9), x = E(e, "queryLanguageId", 13), w = E(e, "onChangeQueryLanguage", 9), j = E(e, "onRenderValue", 9), y = E(e, "onRenderMenu", 9), k = E(e, "onRenderContextMenu", 9), S = E(e, "onClassName", 9), T = E(e, "onTransform", 9), M = E(e, "onClose", 9), N = Q(void 0, !0), z = Q(e3({ onChange: (X) => C(z, X) }).get(), !0), L = Q(void 0, !0), W = Q(void 0, !0), ce = Q(!1, !0), te = "".concat(s(), ":").concat(bt(l())), we = (n = Gu()[te]) !== null && n !== void 0 ? n : {}, Ee = Q(Cc().showWizard !== !1, !0), ae = Q(Cc().showOriginal !== !1, !0), re = Q((r = we.queryOptions) !== null && r !== void 0 ? r : {}, !0), G = Q(x() === we.queryLanguageId && we.query ? we.query : "", !0), B = Q((i = we.isManual) !== null && i !== void 0 && i, !0), ie = Q(void 0, !0), R = Q(void 0, !0), O = Q({ text: "" }, !0);
  function $(X) {
    var K;
    return (K = b().find((rt) => rt.id === X)) !== null && K !== void 0 ? K : b()[0];
  }
  function ne(X) {
    try {
      C(re, X), C(G, $(x()).createQuery(c(L), X)), C(ie, void 0), C(B, !1), o("updateQueryByWizard", { queryOptions: c(re), query: c(G), isManual: c(B) });
    } catch (K) {
      C(ie, String(K));
    }
  }
  function je(X) {
    C(G, X.target.value), C(B, !0), o("handleChangeQuery", { query: c(G), isManual: c(B) });
  }
  c(B) || ne(c(re)), Ti(() => {
    var X;
    (X = c(N)) === null || X === void 0 || X.focus();
  });
  var J = Rp(function(X, K) {
    if (X === void 0) return C(O, { text: "" }), void C(R, "Error: No JSON");
    if (K.trim() !== "") try {
      o("previewTransform", { query: K });
      var rt = $(x()).executeQuery(X, K, p());
      C(O, { json: rt }), C(R, void 0);
    } catch (Qe) {
      C(O, { text: "" }), C(R, String(Qe));
    }
    else C(O, { json: X });
  }, 300);
  function H() {
    if (c(L) === void 0) return C(O, { text: "" }), void C(R, "Error: No JSON");
    try {
      o("handleTransform", { query: c(G) });
      var X = $(x()).executeQuery(c(L), c(G), p());
      T()([{ op: "replace", path: bt(l()), value: X }]), M()();
    } catch (K) {
      console.error(K), C(O, { text: "" }), C(R, String(K));
    }
  }
  function ue() {
    C(Ee, !c(Ee)), Cc(Cc().showWizard = c(Ee));
  }
  function P() {
    C(ae, !c(ae)), Cc(Cc().showOriginal = c(ae));
  }
  function V(X) {
    X.focus();
  }
  function U(X) {
    o("handleChangeQueryLanguage", X), x(X), w()(X), ne(c(re));
  }
  function me() {
    c(ce) ? C(ce, !c(ce)) : M()();
  }
  de(() => (_(a()), _(l())), () => {
    C(L, ZA(Ze(a(), l())));
  }), de(() => c(L), () => {
    C(W, c(L) ? { json: c(L) } : { text: "" });
  }), de(() => (c(L), c(G)), () => {
    J(c(L), c(G));
  }), de(() => (Gu(), c(re), c(G), _(x()), c(B)), () => {
    Gu(Gu()[te] = { queryOptions: c(re), query: c(G), queryLanguageId: x(), isManual: c(B) }), o("store state in memory", te, Gu()[te]);
  }), Bn(), zt(!0), Zf(t, { get onClose() {
    return M();
  }, className: "jse-transform-modal", get fullscreen() {
    return c(ce);
  }, children: (X, K) => {
    var rt = fW();
    Cb(Y(rt), { children: (Qe, Ae) => {
      var tt = uW(), Re = wt(tt);
      (function(Xe, tn) {
        mt(tn, !1);
        var Qt, Hn = E(tn, "queryLanguages", 9), Kn = E(tn, "queryLanguageId", 9), On = E(tn, "fullscreen", 13), Vr = E(tn, "onChangeQueryLanguage", 9), Gn = E(tn, "onClose", 9), xr = Q(void 0, !0), { openAbsolutePopup: Jr, closeAbsolutePopup: Yr } = gl("absolute-popup");
        function zr() {
          var Zn = { queryLanguages: Hn(), queryLanguageId: Kn(), onChangeQueryLanguage: (Ar) => {
            Yr(Qt), Vr()(Ar);
          } };
          Qt = Jr(oU, Zn, { offsetTop: -2, offsetLeft: 0, anchor: c(xr), closeOnOuterClick: !0 });
        }
        zt(!0), Mm(Xe, { title: "Transform", fullScreenButton: !0, get onClose() {
          return Gn();
        }, get fullscreen() {
          return On();
        }, set fullscreen(Zn) {
          On(Zn);
        }, $$slots: { actions: (Zn, Ar) => {
          var Te, ln = lU();
          gn(Y(ln), { get data() {
            return K6;
          } }), pr(ln, (Nn) => C(xr, Nn), () => c(xr)), Ie((Nn) => Te = It(ln, 1, "jse-config svelte-1kpylsp", null, Te, Nn), [() => ({ hide: Hn().length <= 1 })], Oe), Pe("click", ln, zr), Z(Zn, ln);
        } }, $$legacy: !0 }), gt();
      })(Re, { get queryLanguages() {
        return b();
      }, get queryLanguageId() {
        return x();
      }, onChangeQueryLanguage: U, get onClose() {
        return M();
      }, get fullscreen() {
        return c(ce);
      }, set fullscreen(Xe) {
        C(ce, Xe);
      }, $$legacy: !0 });
      var qe = Y(le(Re, 2)), pt = Y(qe), Ge = le(Y(pt), 2);
      F_(Y(Ge), () => (_(x()), ee(() => $(x()).description)));
      var $t = le(Ge, 4), A = le($t, 2), D = Y(A), F = Y(D), oe = Y(F), ve = Oe(() => c(Ee) ? pa : kf);
      gn(oe, { get data() {
        return c(ve);
      } });
      var Ne = le(A, 2), Fe = (Xe) => {
        var tn = Er(), Qt = wt(tn), Hn = (On) => {
          var Vr = lW(), Gn = wt(Vr);
          nU(Gn, { get queryOptions() {
            return c(re);
          }, get json() {
            return c(L);
          }, onChange: ne });
          var xr = le(Gn, 2), Jr = (Yr) => {
            var zr = aW(), Zn = Y(zr);
            Ie(() => vt(Zn, c(ie))), Z(Yr, zr);
          };
          xe(xr, (Yr) => {
            c(ie) && Yr(Jr);
          }), Z(On, Vr);
        }, Kn = (On) => {
          Z(On, hi("(Only available for arrays, not for objects)"));
        };
        xe(Qt, (On) => {
          c(L), ee(() => Array.isArray(c(L))) ? On(Hn) : On(Kn, !1);
        }), Z(Xe, tn);
      };
      xe(Ne, (Xe) => {
        c(Ee) && Xe(Fe);
      });
      var ye = le(Ne, 4);
      pr(ye, (Xe) => C(N, Xe), () => c(N));
      var ge, yt, ot = le(pt, 2), _e = Y(ot), xt = Y(_e), bn = Y(xt), qn = Y(bn), un = Y(qn), en = Oe(() => c(ae) ? pa : kf);
      gn(un, { get data() {
        return c(en);
      } });
      var Rn = le(xt, 2), on = (Xe) => {
        Vb(Xe, { get externalContent() {
          return c(W);
        }, externalSelection: void 0, get history() {
          return c(z);
        }, readOnly: !0, get truncateTextSize() {
          return f();
        }, mainMenuBar: !1, navigationBar: !1, get indentation() {
          return u();
        }, get escapeControlCharacters() {
          return d();
        }, get escapeUnicodeCharacters() {
          return h();
        }, get parser() {
          return p();
        }, get parseMemoizeOne() {
          return m();
        }, get onRenderValue() {
          return j();
        }, get onRenderMenu() {
          return y();
        }, get onRenderContextMenu() {
          return k();
        }, onError: ee(() => console.error), get onChange() {
          return Zr;
        }, get onChangeMode() {
          return Zr;
        }, get onSelect() {
          return Zr;
        }, get onUndo() {
          return Zr;
        }, get onRedo() {
          return Zr;
        }, get onFocus() {
          return Zr;
        }, get onBlur() {
          return Zr;
        }, get onSortModal() {
          return Zr;
        }, get onTransformModal() {
          return Zr;
        }, get onJSONEditorModal() {
          return Zr;
        }, get onClassName() {
          return S();
        }, validator: void 0, get validationParser() {
          return v();
        }, get pathParser() {
          return g();
        } });
      };
      xe(Rn, (Xe) => {
        c(ae) && Xe(on);
      });
      var qt = le(_e, 2), Pt = le(Y(qt), 2), an = (Xe) => {
        Vb(Xe, { get externalContent() {
          return c(O);
        }, externalSelection: void 0, get history() {
          return c(z);
        }, readOnly: !0, get truncateTextSize() {
          return f();
        }, mainMenuBar: !1, navigationBar: !1, get indentation() {
          return u();
        }, get escapeControlCharacters() {
          return d();
        }, get escapeUnicodeCharacters() {
          return h();
        }, get parser() {
          return p();
        }, get parseMemoizeOne() {
          return m();
        }, get onRenderValue() {
          return j();
        }, get onRenderMenu() {
          return y();
        }, get onRenderContextMenu() {
          return k();
        }, onError: ee(() => console.error), get onChange() {
          return Zr;
        }, get onChangeMode() {
          return Zr;
        }, get onSelect() {
          return Zr;
        }, get onUndo() {
          return Zr;
        }, get onRedo() {
          return Zr;
        }, get onFocus() {
          return Zr;
        }, get onBlur() {
          return Zr;
        }, get onSortModal() {
          return Zr;
        }, get onTransformModal() {
          return Zr;
        }, get onJSONEditorModal() {
          return Zr;
        }, get onClassName() {
          return S();
        }, validator: void 0, get validationParser() {
          return v();
        }, get pathParser() {
          return g();
        } });
      }, yn = (Xe) => {
        var tn = cW(), Qt = Y(tn);
        Ie(() => vt(Qt, c(R))), Z(Xe, tn);
      };
      xe(Pt, (Xe) => {
        c(R) ? Xe(yn, !1) : Xe(an);
      });
      var Ot = Y(le(qe, 2));
      yi(() => Pe("click", Ot, H)), zi(Ot, (Xe) => V?.(Xe)), Ie((Xe, tn, Qt) => {
        ec($t, Xe), ec(ye, c(G)), ge = It(ot, 1, "jse-data-contents svelte-rrrjnb", null, ge, tn), yt = It(_e, 1, "jse-original-data svelte-rrrjnb", null, yt, Qt), Ot.disabled = !!c(R);
      }, [() => (_(Sn), _(l()), _(no), ee(() => Sn(l()) ? "(document root)" : no(l()))), () => ({ "jse-hide-original-data": !c(ae) }), () => ({ "jse-hide": !c(ae) })], Oe), Pe("click", F, ue), Pe("input", ye, je), Pe("click", qn, P), Z(Qe, tt);
    }, $$slots: { default: !0 } }), zi(rt, (Qe, Ae) => Tm?.(Qe, Ae), () => me), Z(X, rt);
  }, $$slots: { default: !0 } }), gt();
}
function Oo() {
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-status-bar.svelte-1ulj7zd {
  background: var(--jse-panel-background, #ebebeb);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  margin: 0;
  border-top: var(--jse-panel-border, var(--jse-main-border, 1px solid #d7d7d7));
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
  display: flex;
  gap: var(--jse-padding, 10px);
}
.jse-status-bar.svelte-1ulj7zd:last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-status-bar.svelte-1ulj7zd .jse-status-bar-info:where(.svelte-1ulj7zd) {
  padding: 2px;
}`);
var hW = pe('<div class="jse-status-bar-info svelte-1ulj7zd"> </div>'), pW = pe('<div class="jse-status-bar-info svelte-1ulj7zd"> </div>'), mW = pe('<div class="jse-status-bar-info svelte-1ulj7zd"> </div>'), gW = pe('<div class="jse-status-bar svelte-1ulj7zd"><!> <!> <!></div>'), $y = hd.define([{ tag: Ve.propertyName, color: "var(--internal-key-color)" }, { tag: Ve.number, color: "var(--internal-value-color-number)" }, { tag: Ve.bool, color: "var(--internal-value-color-boolean)" }, { tag: Ve.string, color: "var(--internal-value-color-string)" }, { tag: Ve.keyword, color: "var(--internal-value-color-null)" }]), vW = nE($y), bW = $y.style;
$y.style = (t) => bW(t || []);
var yW = [Gr.fromClass(class {
  constructor(t) {
    this.view = t, this.indentUnit = ol(t.state), this.initialPaddingLeft = null, this.isChrome = window?.navigator.userAgent.includes("Chrome"), this.generate(t.state);
  }
  update(t) {
    var e = ol(t.state);
    (e !== this.indentUnit || t.docChanged || t.viewportChanged) && (this.indentUnit = e, this.generate(t.state));
  }
  generate(t) {
    var e = new rs();
    this.initialPaddingLeft ? this.addStyleToBuilder(e, t, this.initialPaddingLeft) : this.view.requestMeasure({ read: (n) => {
      var r = n.contentDOM.querySelector(".cm-line");
      r && (this.initialPaddingLeft = window.getComputedStyle(r).getPropertyValue("padding-left"), this.addStyleToBuilder(e, n.state, this.initialPaddingLeft)), this.decorations = e.finish();
    } }), this.decorations = e.finish();
  }
  addStyleToBuilder(t, e, n) {
    var r = this.getVisibleLines(e);
    for (var i of r) {
      var { numColumns: o, containsTab: s } = this.numColumns(i.text, e.tabSize), a = "calc(".concat(o + this.indentUnit, "ch + ").concat(n, ")"), l = this.isChrome ? "calc(-".concat(o + this.indentUnit, "ch - ").concat(s ? 1 : 0, "px)") : "-".concat(o + this.indentUnit, "ch");
      t.add(i.from, i.from, Bt.line({ attributes: { style: "padding-left: ".concat(a, "; text-indent: ").concat(l, ";") } }));
    }
  }
  getVisibleLines(t) {
    var e = /* @__PURE__ */ new Set(), n = null;
    for (var { from: r, to: i } of this.view.visibleRanges) for (var o = r; o <= i; ) {
      var s = t.doc.lineAt(o);
      n !== s && (e.add(s), n = s), o = s.to + 1;
    }
    return e;
  }
  numColumns(t, e) {
    var n = 0, r = !1;
    e: for (var i = 0; i < t.length; i++) switch (t[i]) {
      case " ":
        n += 1;
        continue e;
      case "	":
        n += e - n % e, r = !0;
        continue e;
      case "\r":
        continue e;
      default:
        break e;
    }
    return { numColumns: n, containsTab: r };
  }
}, { decorations: (t) => t.decorations })];
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-text-mode.svelte-xt61xw {
  --internal-key-color: var(--jse-key-color, #1a1a1a);
  --internal-value-color-number: var(--jse-value-color-number, #ee422e);
  --internal-value-color-boolean: var(--jse-value-color-boolean, #ff8c00);
  --internal-value-color-string: var(--jse-value-color-string, #008000);
  --internal-value-color-null: var(--jse-value-color-null, #004ed0);
  flex: 1;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  background: var(--jse-background-color, #fff);
}
.jse-text-mode.no-main-menu.svelte-xt61xw {
  border-top: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) {
  flex: 1;
  display: flex;
  position: relative;
  flex-direction: column;
  overflow: hidden;
  min-width: 0;
  min-height: 0;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw):last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-text-mode.svelte-xt61xw .jse-contents.jse-hidden:where(.svelte-xt61xw) {
  visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor {
  flex: 1;
  overflow: hidden;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-scroller {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  line-height: var(--jse-line-height, calc(1em + 4px));
  color: var(--jse-delimiter-color, rgba(0, 0, 0, 0.38));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-gutters {
  background: var(--jse-panel-background, #ebebeb);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  border-right: var(--jse-panel-border, var(--jse-main-border, 1px solid #d7d7d7));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-activeLine,
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-activeLineGutter {
  background: var(--jse-active-line-background-color, rgba(0, 0, 0, 0.06));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-selectionBackground {
  background: var(--jse-selection-background-color, #d3d3d3);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-searchMatch {
  background-color: var(--jse-search-match-color, #ffe665);
  outline: var(--jse-search-match-outline, none);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-searchMatch.cm-searchMatch-selected {
  background-color: var(--jse-search-match-active-color, var(--jse-search-match-color, #ffe665));
  outline: var(--jse-search-match-outline, 2px solid #e0be00);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-selectionMatch {
  background-color: var(--jse-search-match-background-color, rgba(153, 255, 119, 0.5019607843));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-foldPlaceholder {
  background: var(--jse-tag-background, rgba(0, 0, 0, 0.2));
  color: var(--jse-tag-color, var(--jse-text-color-inverse, #fff));
  border: none;
  padding: 0 var(--jse-padding, 10px);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-tooltip {
  font-size: var(--jse-font-size, 16px);
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  color: var(--jse-tooltip-color, var(--jse-text-color, #4d4d4d));
  background: var(--jse-tooltip-background, var(--jse-modal-background, #f5f5f5));
  border: var(--jse-tooltip-border, var(--jse-main-border, 1px solid #d7d7d7));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-diagnosticAction {
  background: var(--jse-tooltip-action-button-color, var(--jse-text-color-inverse, #fff));
  background: var(--jse-tooltip-action-button-background, #4d4d4d);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-panels {
  border-bottom: var(--jse-panel-border, var(--jse-main-border, 1px solid #d7d7d7));
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search {
  background: var(--jse-panel-background, #ebebeb);
  color: var(--jse-panel-color, var(--jse-text-color, #4d4d4d));
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search input {
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size-text-mode-search, 80%);
  color: var(--jse-input-color, var(--jse-text-color, #4d4d4d));
  border: var(--jse-input-border, 1px solid #d8dbdf);
  background: var(--jse-input-background, var(--jse-background-color, #fff));
  margin-right: 2px;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search button {
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size-text-mode-search, 80%);
  color: var(--jse-panel-button-color, inherit);
  background: var(--jse-panel-button-background, transparent);
  border: none;
  cursor: pointer;
  text-transform: capitalize;
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px);
  margin: 0;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search button:hover {
  color: var(--panel-button-color-highlight, var(--jse-text-color, #4d4d4d));
  background: var(--jse-panel-button-background-highlight, #e0e0e0);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search label {
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size-text-mode-search, 80%);
  padding-left: var(--jse-padding, 10px);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search label input {
  margin-right: 2px;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-search button[name="close"] {
  width: 32px;
  height: 32px;
  font-size: 24px;
  line-height: 24px;
  padding: 0;
  right: 0;
  top: -4px;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .cm-editor .cm-cursor-primary {
  border-color: var(--jse-text-color, #4d4d4d);
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .jse-loading-space:where(.svelte-xt61xw) {
  flex: 1;
}
.jse-text-mode.svelte-xt61xw .jse-contents:where(.svelte-xt61xw) .jse-loading:where(.svelte-xt61xw) {
  flex: 2;
  text-align: center;
  color: var(--jse-panel-color-readonly, #b2b2b2);
  box-sizing: border-box;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
}
.jse-text-mode.svelte-xt61xw .jse-contents.jse-preview:where(.svelte-xt61xw) {
  flex: 1;
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: var(--jse-panel-color-readonly, #b2b2b2);
  overflow: auto;
  white-space: pre-wrap;
  word-break: break-word;
  padding: 2px;
}`);
var xW = pe('<!> <div class="jse-contents jse-preview svelte-xt61xw"> </div>', 1), wW = pe("<!> <!> <!> <!>", 1), jW = pe("<div></div> <!> <!>", 1), kW = pe('<div class="jse-contents svelte-xt61xw"><div class="jse-loading-space svelte-xt61xw"></div> <div class="jse-loading svelte-xt61xw">loading...</div></div>'), SW = pe("<div><!> <!></div>");
function CW(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = E(e, "readOnly", 9), o = E(e, "mainMenuBar", 9), s = E(e, "statusBar", 9), a = E(e, "askToFormat", 9), l = E(e, "externalContent", 9), u = E(e, "externalSelection", 9), f = E(e, "history", 9), d = E(e, "indentation", 9), h = E(e, "tabSize", 9), p = E(e, "escapeUnicodeCharacters", 9), m = E(e, "parser", 9), v = E(e, "validator", 9), g = E(e, "validationParser", 9), b = E(e, "onChange", 9), x = E(e, "onChangeMode", 9), w = E(e, "onSelect", 9), j = E(e, "onUndo", 9), y = E(e, "onRedo", 9), k = E(e, "onError", 9), S = E(e, "onFocus", 9), T = E(e, "onBlur", 9), M = E(e, "onRenderMenu", 9), N = E(e, "onSortModal", 9), z = E(e, "onTransformModal", 9), L = ui("jsoneditor:TextMode"), W = { key: "Mod-i", run: Re, shift: qe, preventDefault: !0 }, ce = typeof window > "u";
  L("isSSR:", ce);
  var te, we = Q(void 0, !0), Ee = Q(void 0, !0), ae = Q(void 0, !0), re = Q(!1, !0), G = Q(a(), !0), B = Q([], !0), ie = new Zs(), R = new Zs(), O = new Zs(), $ = new Zs(), ne = new Zs(), je = l(), J = Q(Sb(je, d(), m()), !0), H = hl.define(), ue = null;
  function P() {
    if (!ue || ue.length === 0) return !1;
    var be = ue[0].startState, Le = ue[ue.length - 1].state, We = ue.map((Jt) => Jt.changes).reduce((Jt, Yt) => Jt.compose(Yt)), Rt = { type: "text", undo: { changes: We.invert(be.doc).toJSON(), selection: Qt(be.selection) }, redo: { changes: We.toJSON(), selection: Qt(Le.selection) } };
    return L("add history item", Rt), f().add(Rt), ue = null, !0;
  }
  var V = Q(p(), !0);
  Ti(Mt(function* () {
    if (!ce) try {
      te = (function(be) {
        var { target: Le, initialText: We, readOnly: Rt, indentation: Jt } = be;
        L("Create CodeMirror editor", { readOnly: Rt, indentation: Jt });
        var Yt = (function(ht, Gt) {
          return Wv(ht) ? ht.ranges.every((et) => et.anchor < Gt.length && et.head < Gt.length) : !1;
        })(u(), We) ? en(u()) : void 0, fn = En.create({ doc: We, selection: Yt, extensions: [Kp.of([jz, W]), ie.of(ot()), Bz(), vI(), xI(), zD(), s7(), ED(), $D(), En.allowMultipleSelections.of(!0), YI(), nE(u7, { fallback: !0 }), v7(), tB(), dB(), YD(), ZD(), VD(), oL(), Kp.of([...oB, ...wz, ...CL, { key: "Mod-z", run: F, preventDefault: !0 }, { key: "Mod-y", mac: "Mod-Shift-z", run: oe, preventDefault: !0 }, { key: "Ctrl-Shift-z", run: oe, preventDefault: !0 }, ...n7, ...o_, ..._z]), vW, yB({ hideFirstIndent: !0 }), nt.domEventHandlers({ dblclick: yt }), nt.updateListener.of((ht) => {
          C(ae, ht.state), ht.docChanged && (ht.transactions.some((Gt) => !!Gt.annotation(H)) || (ue = [...ue ?? [], ht]), yn()), ht.selectionSet && tn();
        }), Zz(), pL({ top: !0 }), nt.lineWrapping, R.of(En.readOnly.of(Rt)), $.of(En.tabSize.of(h())), O.of(an(Jt)), ne.of(nt.theme({}, { dark: _e() }))] });
        return te = new nt({ state: fn, parent: Le }), Yt && te.dispatch(te.state.update({ selection: Yt.main, scrollIntoView: !0 })), te;
      })({ target: c(we), initialText: Hn(c(J), c(re)) ? "" : c(n).escapeValue(c(J)), readOnly: i(), indentation: d() });
    } catch (be) {
      console.error(be);
    }
  })), Io(() => {
    Ot(), te && (L("Destroy CodeMirror editor"), te.destroy());
  });
  var U = nu(), me = nu();
  function X() {
    te && (L("focus"), te.focus());
  }
  function K(be) {
    if (te) try {
      if (be && be.length > 0) {
        var { from: Le } = Dv(c(n).escapeValue(c(J)), be);
        Le !== void 0 && (te.dispatch({ selection: { anchor: Le, head: Le } }), K4(te));
      } else Y4(te);
    } catch (We) {
      k()(We);
    }
  }
  function rt(be) {
    var Le = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Ab;
    if (te) try {
      if (be && be.length > 0) {
        var { from: We } = Dv(c(n).escapeValue(c(J)), be);
        We !== void 0 && (te.dispatch({ selection: { anchor: We, head: We } }), G4(te));
      } else Q4(te);
      Le?.(be);
    } catch (Rt) {
      k()(Rt);
    }
  }
  var Qe = !1;
  function Ae(be) {
    return tt(be, !1);
  }
  function tt(be, Le) {
    L("handlePatch", be, Le);
    var We = m().parse(c(J)), Rt = Go(We, be), Jt = XS(We, be);
    return un({ text: m().stringify(Rt, null, d()) }, Le, !1), { json: Rt, previousJson: We, undo: Jt, redo: be };
  }
  function Re() {
    if (L("format"), i()) return !1;
    try {
      var be = m().parse(c(J));
      return un({ text: m().stringify(be, null, d()) }, !0, !1), C(G, a()), !0;
    } catch (Le) {
      k()(Le);
    }
    return !1;
  }
  function qe() {
    if (L("compact"), i()) return !1;
    try {
      var be = m().parse(c(J));
      return un({ text: m().stringify(be) }, !0, !1), C(G, !1), !0;
    } catch (Le) {
      k()(Le);
    }
    return !1;
  }
  function pt() {
    if (L("repair"), !i()) try {
      un({ text: _s(c(J)) }, !0, !1), C(Kn, Fv), C(On, void 0);
    } catch (be) {
      k()(be);
    }
  }
  function Ge() {
    var be;
    if (!i()) try {
      var Le = m().parse(c(J));
      Qe = !0, N()({ id: U, json: Le, rootPath: [], onSort: (be = Mt(function* (We) {
        var { operations: Rt } = We;
        L("onSort", Rt), tt(Rt, !0);
      }), function(We) {
        return be.apply(this, arguments);
      }), onClose: () => {
        Qe = !1, X();
      } });
    } catch (We) {
      k()(We);
    }
  }
  function $t(be) {
    var { id: Le, rootPath: We, onTransform: Rt, onClose: Jt } = be;
    try {
      var Yt = m().parse(c(J));
      Qe = !0, z()({ id: Le || me, json: Yt, rootPath: We || [], onTransform: (fn) => {
        Rt ? Rt({ operations: fn, json: Yt, transformedJson: Go(Yt, fn) }) : (L("onTransform", fn), tt(fn, !0));
      }, onClose: () => {
        Qe = !1, X(), Jt && Jt();
      } });
    } catch (fn) {
      k()(fn);
    }
  }
  function A() {
    i() || $t({ rootPath: [] });
  }
  function D() {
    te && (c(we) && c(we).querySelector(".cm-search") ? Y1(te) : J1(te));
  }
  function F() {
    if (i()) return !1;
    Ot();
    var be = f().undo();
    return L("undo", be), Mk(be) ? (te.dispatch({ annotations: H.of("undo"), changes: si.fromJSON(be.undo.changes), selection: Me.fromJSON(be.undo.selection), scrollIntoView: !0 }), !0) : (j()(be), !1);
  }
  function oe() {
    if (i()) return !1;
    Ot();
    var be = f().redo();
    return L("redo", be), Mk(be) ? (te.dispatch({ annotations: H.of("redo"), changes: si.fromJSON(be.redo.changes), selection: Me.fromJSON(be.redo.selection), scrollIntoView: !0 }), !0) : (y()(be), !1);
  }
  function ve() {
    C(re, !0), un(l(), !0, !0);
  }
  function Ne() {
    x()(Hr.tree);
  }
  function Fe() {
    qt();
  }
  function ye(be) {
    L("select validation error", be);
    var { from: Le, to: We } = xt(be);
    Le !== void 0 && We !== void 0 && (ge(Le, We), X());
  }
  function ge(be, Le) {
    L("setSelection", { anchor: be, head: Le }), te && te.dispatch(te.state.update({ selection: { anchor: be, head: Le }, scrollIntoView: !0 }));
  }
  function yt(be, Le) {
    if (Le.state.selection.ranges.length === 1) {
      var We = Le.state.selection.ranges[0], Rt = c(J).slice(We.from, We.to);
      if (Rt === "{" || Rt === "[") {
        var Jt = rC.parse(c(J)), Yt = Object.keys(Jt.pointers).find((ht) => {
          var Gt;
          return ((Gt = Jt.pointers[ht].value) === null || Gt === void 0 ? void 0 : Gt.pos) === We.from;
        }), fn = Jt.pointers[Yt];
        Yt && fn && fn.value && fn.valueEnd && (L("pointer found, selecting inner contents of path:", Yt, fn), ge(fn.value.pos + 1, fn.valueEnd.pos - 1));
      }
    }
  }
  function ot() {
    return Tz(Vr, { delay: 300 });
  }
  function _e() {
    return !!c(we) && getComputedStyle(c(we)).getPropertyValue("--jse-theme").includes("dark");
  }
  function xt(be) {
    var { path: Le, message: We, severity: Rt } = be, { line: Jt, column: Yt, from: fn, to: ht } = Dv(c(n).escapeValue(c(J)), Le);
    return { path: Le, line: Jt, column: Yt, from: fn, to: ht, message: We, severity: Rt, actions: [] };
  }
  function bn(be, Le) {
    var { line: We, column: Rt, position: Jt, message: Yt } = be;
    return { path: [], line: We, column: Rt, from: Jt, to: Jt, severity: Xo.error, message: Yt, actions: Le && !i() ? [{ name: "Auto repair", apply: () => pt() }] : void 0 };
  }
  function qn(be) {
    return { from: be.from || 0, to: be.to || 0, message: be.message || "", actions: be.actions, severity: be.severity };
  }
  function un(be, Le, We) {
    var Rt = Sb(be, d(), m()), Jt = !Zt(be, je), Yt = je;
    L("setCodeMirrorContent", { isChanged: Jt, emitChange: Le, forceUpdate: We }), te && (Jt || We) && (je = be, C(J, Rt), Hn(c(J), c(re)) || te.dispatch({ changes: { from: 0, to: te.state.doc.length, insert: c(n).escapeValue(c(J)) } }), P(), Jt && Le && Xe(je, Yt));
  }
  function en(be) {
    return Wv(be) ? Me.fromJSON(be) : void 0;
  }
  function Rn() {
    return on.apply(this, arguments);
  }
  function on() {
    return on = Mt(function* () {
      L("refresh"), yield (function() {
        return Pt.apply(this, arguments);
      })();
    }), on.apply(this, arguments);
  }
  function qt() {
    if (te) {
      var be = te ? c(n).unescapeValue(te.state.doc.toString()) : "", Le = be !== c(J);
      if (L("onChangeCodeMirrorValue", { isChanged: Le }), Le) {
        var We = je;
        C(J, be), je = { text: c(J) }, P(), Xe(je, We), fr(), tn();
      }
    }
  }
  function Pt() {
    return (Pt = Mt(function* () {
      if (fr(), te) {
        var be = _e();
        return L("updateTheme", { dark: be }), te.dispatch({ effects: [ne.reconfigure(nt.theme({}, { dark: be }))] }), new Promise((Le) => setTimeout(Le));
      }
      return Promise.resolve();
    })).apply(this, arguments);
  }
  function an(be) {
    var Le = ig.of(typeof be == "number" ? " ".repeat(be) : be);
    return be === "	" ? [Le] : [Le, yW];
  }
  Ay({ onMount: Ti, onDestroy: Io, getWindow: () => kd(c(Ee)), hasFocus: () => Qe && document.hasFocus() || hy(c(Ee)), onFocus: S(), onBlur: () => {
    Ot(), T()();
  } });
  var yn = Rp(qt, 300);
  function Ot() {
    yn.flush();
  }
  function Xe(be, Le) {
    b() && b()(be, Le, { contentErrors: Gn(), patchResult: void 0 });
  }
  function tn() {
    w()(Qt(c(ae).selection));
  }
  function Qt(be) {
    return De({ type: Qn.text }, be.toJSON());
  }
  function Hn(be, Le) {
    return !!be && be.length > Bv && !Le;
  }
  var Kn = Q(Fv, !0), On = Q(void 0, !0);
  function Vr() {
    if (Hn(c(J), c(re))) return [];
    var be = Gn();
    if (Ak(be)) {
      var { parseError: Le, isRepairable: We } = be;
      return [qn(bn(Le, We))];
    }
    return qq(be) ? be.validationErrors.map(xt).map(qn) : [];
  }
  function Gn() {
    L("validate:start"), Ot();
    var be = xr(c(n).escapeValue(c(J)), v(), m(), g());
    return Ak(be) ? (C(Kn, be.isRepairable ? Sk : "invalid"), C(On, be.parseError), C(B, [])) : (C(Kn, Fv), C(On, void 0), C(B, be?.validationErrors || [])), L("validate:end"), be;
  }
  var xr = Sf(fU);
  function Jr() {
    c(On) && (function(be) {
      L("select parse error", be);
      var Le = bn(be, !1);
      ge(Le.from != null ? Le.from : 0, Le.to != null ? Le.to : 0), X();
    })(c(On));
  }
  var Yr = { icon: q6, text: "Show me", title: "Move to the parse error location", onClick: Jr };
  de(() => _(p()), () => {
    C(n, fy({ escapeControlCharacters: !1, escapeUnicodeCharacters: p() }));
  }), de(() => _(l()), () => {
    un(l(), !1, !1);
  }), de(() => _(u()), () => {
    (function(be) {
      if (Wv(be)) {
        var Le = en(be);
        !te || !Le || c(ae) && c(ae).selection.eq(Le) || (L("applyExternalSelection", Le), te.dispatch({ selection: Le }));
      }
    })(u());
  }), de(() => _(v()), () => {
    (function(be) {
      L("updateLinter", be), te && te.dispatch({ effects: ie.reconfigure(ot()) });
    })(v());
  }), de(() => _(d()), () => {
    (function(be) {
      te && (L("updateIndentation", be), te.dispatch({ effects: O.reconfigure(an(be)) }));
    })(d());
  }), de(() => _(h()), () => {
    (function(be) {
      te && (L("updateTabSize", be), te.dispatch({ effects: $.reconfigure(En.tabSize.of(be)) }));
    })(h());
  }), de(() => _(i()), () => {
    (function(be) {
      te && (L("updateReadOnly", be), te.dispatch({ effects: [R.reconfigure(En.readOnly.of(be))] }));
    })(i());
  }), de(() => (c(V), _(p())), () => {
    c(V) !== p() && (C(V, p()), L("forceUpdateText", { escapeUnicodeCharacters: p() }), te && te.dispatch({ changes: { from: 0, to: te.state.doc.length, insert: c(n).escapeValue(c(J)) } }));
  }), de(() => (c(Kn), _(i()), Xa), () => {
    C(r, c(Kn) !== Sk || i() ? [Yr] : [{ icon: Xa, text: "Auto repair", title: "Automatically repair JSON", onClick: pt }, Yr]);
  }), Bn(), zt(!0);
  var zr, Zn = SW(), Ar = Y(Zn), Te = (be) => {
    var Le = Oe(() => (c(J), ee(() => c(J).length === 0))), We = Oe(() => !c(Le)), Rt = Oe(() => !c(Le)), Jt = Oe(() => !c(Le)), Yt = Oe(() => !c(Le));
    (function(fn, ht) {
      mt(ht, !1);
      var Gt = Q(void 0, !0), et = E(ht, "readOnly", 9, !1), Mn = E(ht, "onFormat", 9), Fn = E(ht, "onCompact", 9), lr = E(ht, "onSort", 9), Vt = E(ht, "onTransform", 9), xn = E(ht, "onToggleSearch", 9), Ft = E(ht, "onUndo", 9), fe = E(ht, "onRedo", 9), ke = E(ht, "canUndo", 9), Ue = E(ht, "canRedo", 9), Nt = E(ht, "canFormat", 9), dn = E(ht, "canCompact", 9), Ut = E(ht, "canSort", 9), Dn = E(ht, "canTransform", 9), wr = E(ht, "onRenderMenu", 9), Jn = { type: "button", icon: Km, title: "Search (Ctrl+F)", className: "jse-search", onClick: xn() }, cn = Q(void 0, !0);
      de(() => (_(et()), _(Mn()), _(Nt()), _(Fn()), _(dn()), _(lr()), _(Ut()), _(Vt()), _(Dn()), _(Ft()), _(ke()), _(fe()), _(Ue())), () => {
        C(cn, et() ? [Jn, { type: "space" }] : [{ type: "button", icon: oS, title: "Format JSON: add proper indentation and new lines (Ctrl+I)", className: "jse-format", onClick: Mn(), disabled: et() || !Nt() }, { type: "button", icon: mV, title: "Compact JSON: remove all white spacing and new lines (Ctrl+Shift+I)", className: "jse-compact", onClick: Fn(), disabled: et() || !dn() }, { type: "separator" }, { type: "button", icon: Ip, title: "Sort", className: "jse-sort", onClick: lr(), disabled: et() || !Ut() }, { type: "button", icon: Np, title: "Transform contents (filter, sort, project)", className: "jse-transform", onClick: Vt(), disabled: et() || !Dn() }, Jn, { type: "separator" }, { type: "button", icon: m1, title: "Undo (Ctrl+Z)", className: "jse-undo", onClick: Ft(), disabled: !ke() }, { type: "button", icon: p1, title: "Redo (Ctrl+Shift+Z)", className: "jse-redo", onClick: fe(), disabled: !Ue() }, { type: "space" }]);
      }), de(() => (_(wr()), c(cn)), () => {
        C(Gt, wr()(c(cn)) || c(cn));
      }), Bn(), zt(!0), Eg(fn, { get items() {
        return c(Gt);
      } }), gt();
    })(be, { get readOnly() {
      return i();
    }, onFormat: Re, onCompact: qe, onSort: Ge, onTransform: A, onToggleSearch: D, onUndo: F, onRedo: oe, get canFormat() {
      return c(We);
    }, get canCompact() {
      return c(Rt);
    }, get canSort() {
      return c(Jt);
    }, get canTransform() {
      return c(Yt);
    }, get canUndo() {
      return _(f()), ee(() => f().canUndo);
    }, get canRedo() {
      return _(f()), ee(() => f().canRedo);
    }, get onRenderMenu() {
      return M();
    } });
  };
  xe(Ar, (be) => {
    o() && be(Te);
  });
  var ln = le(Ar, 2), Nn = (be) => {
    var Le, We = jW(), Rt = Oe(() => (c(J), c(re), ee(() => Hn(c(J), c(re))))), Jt = wt(We);
    pr(Jt, (et) => C(we, et), () => c(we));
    var Yt = le(Jt, 2), fn = (et) => {
      var Mn = xW(), Fn = wt(Mn), lr = Oe(() => (_(Cp), _(Bv), c(J), ee(() => "The JSON document is larger than ".concat(Cp(Bv), ", ") + "and may crash your browser when loading it in text mode. Actual size: ".concat(Cp(c(J).length), "."))));
      jo(Fn, { get icon() {
        return Hl;
      }, type: "error", get message() {
        return c(lr);
      }, actions: [{ text: "Open anyway", title: "Open the document in text mode. This may freeze or crash your browser.", onClick: ve }, { text: "Open in tree mode", title: "Open the document in tree mode. Tree mode can handle large documents.", onClick: Ne }, { text: "Cancel", title: "Cancel opening this large document.", onClick: Fe }], onClose: X });
      var Vt = Y(le(Fn, 2));
      Ie((xn) => vt(Vt, xn), [() => (_(ta), c(J), _(ym), ee(() => ta(c(J) || "", ym)))], Oe), Z(et, Mn);
    };
    xe(Yt, (et) => {
      c(Rt) && et(fn);
    });
    var ht = le(Yt, 2), Gt = (et) => {
      var Mn = wW(), Fn = wt(Mn), lr = (ke) => {
        (function(Ue, Nt) {
          mt(Nt, !1);
          var dn = E(Nt, "editorState", 8), Ut = Q(), Dn = Q(), wr = Q(), Jn = Q(), cn = Q();
          de(() => _(dn()), () => {
            var ct;
            C(Ut, (ct = dn()) === null || ct === void 0 || (ct = ct.selection) === null || ct === void 0 || (ct = ct.main) === null || ct === void 0 ? void 0 : ct.head);
          }), de(() => (c(Ut), _(dn())), () => {
            var ct;
            C(Dn, c(Ut) !== void 0 ? (ct = dn()) === null || ct === void 0 || (ct = ct.doc) === null || ct === void 0 ? void 0 : ct.lineAt(c(Ut)) : void 0);
          }), de(() => c(Dn), () => {
            C(wr, c(Dn) !== void 0 ? c(Dn).number : void 0);
          }), de(() => (c(Dn), c(Ut)), () => {
            C(Jn, c(Dn) !== void 0 && c(Ut) !== void 0 ? c(Ut) - c(Dn).from + 1 : void 0);
          }), de(() => _(dn()), () => {
            var ct;
            C(cn, (ct = dn()) === null || ct === void 0 || (ct = ct.selection) === null || ct === void 0 || (ct = ct.ranges) === null || ct === void 0 ? void 0 : ct.reduce((Vn, Lr) => Vn + Lr.to - Lr.from, 0));
          }), Bn(), zt();
          var Lt = gW(), In = Y(Lt), ji = (ct) => {
            var Vn = hW(), Lr = Y(Vn);
            Ie(() => {
              var Wt;
              return vt(Lr, "Line: ".concat((Wt = c(wr)) !== null && Wt !== void 0 ? Wt : ""));
            }), Z(ct, Vn);
          };
          xe(In, (ct) => {
            c(wr) !== void 0 && ct(ji);
          });
          var Et = le(In, 2), mr = (ct) => {
            var Vn = pW(), Lr = Y(Vn);
            Ie(() => {
              var Wt;
              return vt(Lr, "Column: ".concat((Wt = c(Jn)) !== null && Wt !== void 0 ? Wt : ""));
            }), Z(ct, Vn);
          };
          xe(Et, (ct) => {
            c(Jn) !== void 0 && ct(mr);
          });
          var Tn = le(Et, 2), tr = (ct) => {
            var Vn = mW(), Lr = Y(Vn);
            Ie(() => {
              var Wt;
              return vt(Lr, "Selection: ".concat((Wt = c(cn)) !== null && Wt !== void 0 ? Wt : "", " characters"));
            }), Z(ct, Vn);
          };
          xe(Tn, (ct) => {
            c(cn) !== void 0 && c(cn) > 0 && ct(tr);
          }), Z(Ue, Lt), gt();
        })(ke, { get editorState() {
          return c(ae);
        } });
      };
      xe(Fn, (ke) => {
        s() && ke(lr);
      });
      var Vt = le(Fn, 2), xn = (ke) => {
        jo(ke, { type: "error", get icon() {
          return Hl;
        }, get message() {
          return c(On), ee(() => c(On).message);
        }, get actions() {
          return c(r);
        }, onClick: Jr, onClose: X });
      };
      xe(Vt, (ke) => {
        c(On) && ke(xn);
      });
      var Ft = le(Vt, 2), fe = (ke) => {
        var Ue = Oe(() => [{ icon: oS, text: "Format", title: "Format JSON: add proper indentation and new lines (Ctrl+I)", onClick: Re }, { icon: Gm, text: "No thanks", title: "Close this message", onClick: () => C(G, !1) }]);
        jo(ke, { type: "success", message: "Do you want to format the JSON?", get actions() {
          return c(Ue);
        }, onClose: X });
      };
      xe(Ft, (ke) => {
        c(On), c(G), _(jk), c(J), ee(() => !c(On) && c(G) && jk(c(J))) && ke(fe);
      }), My(le(Ft, 2), { get validationErrors() {
        return c(B);
      }, selectError: ye }), Z(et, Mn);
    };
    xe(ht, (et) => {
      c(Rt) || et(Gt);
    }), Ie((et) => Le = It(Jt, 1, "jse-contents svelte-xt61xw", null, Le, et), [() => ({ "jse-hidden": c(Rt) })], Oe), Z(be, We);
  }, er = (be) => {
    Z(be, kW());
  };
  return xe(ln, (be) => {
    ce ? be(er, !1) : be(Nn);
  }), pr(Zn, (be) => C(Ee, be), () => c(Ee)), Ie((be) => zr = It(Zn, 1, "jse-text-mode svelte-xt61xw", null, zr, be), [() => ({ "no-main-menu": !o() })], Oe), Z(t, Zn), Ct(e, "focus", X), Ct(e, "collapse", K), Ct(e, "expand", rt), Ct(e, "patch", Ae), Ct(e, "handlePatch", tt), Ct(e, "openTransformModal", $t), Ct(e, "refresh", Rn), Ct(e, "flush", Ot), Ct(e, "validate", Gn), gt({ focus: X, collapse: K, expand: rt, patch: Ae, handlePatch: tt, openTransformModal: $t, refresh: Rn, flush: Ot, validate: Gn });
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-inline-value.svelte-h57m0p {
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  line-height: var(--jse-line-height, calc(1em + 4px));
  border: none;
  padding: 0 calc(0.5 * var(--jse-padding, 10px));
  background: transparent;
  color: inherit;
  cursor: inherit;
}
.jse-inline-value.jse-highlight.svelte-h57m0p {
  background-color: var(--jse-search-match-color, #ffe665);
  outline: var(--jse-search-match-outline, none);
}
.jse-inline-value.jse-highlight.jse-active.svelte-h57m0p {
  background-color: var(--jse-search-match-active-color, var(--jse-search-match-color, #ffe665));
  outline: var(--jse-search-match-outline, 2px solid #e0be00);
}`);
var OW = pe('<button type="button"> </button>');
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-column-header.svelte-2i3vdx {
  background: none;
  border: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  display: flex;
  gap: var(--jse-padding, 10px);
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px) calc(0.5 * var(--jse-padding, 10px)) calc(0.5 * var(--jse-padding, 10px));
  width: 100%;
}
.jse-column-header.svelte-2i3vdx:hover {
  background: var(--jse-table-header-background-highlight, #e8e8e8);
}
.jse-column-header.svelte-2i3vdx:not(.jse-column-header.jse-readonly) {
  cursor: pointer;
}
.jse-column-header.svelte-2i3vdx span.jse-column-sort-icon:where(.svelte-2i3vdx) {
  height: 1em;
}`);
var EW = pe('<span class="jse-column-sort-icon svelte-2i3vdx"><!></span>'), _W = pe('<button type="button"><span class="jse-column-name"> </span> <!></button>');
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-table-mode-welcome.svelte-17xl1jx {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: auto;
  align-items: center;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-table-mode-welcome.svelte-17xl1jx:last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-space.jse-before:where(.svelte-17xl1jx) {
  flex: 1;
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) {
  display: flex;
  flex-direction: column;
  gap: var(--jse-padding, 10px);
  max-width: 400px;
  margin: 2em var(--jse-padding, 10px);
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) .jse-nested-arrays-info:where(.svelte-17xl1jx) {
  color: var(--jse-panel-color-readonly, #b2b2b2);
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) .jse-nested-property:where(.svelte-17xl1jx) {
  display: flex;
  align-items: center;
  gap: var(--jse-padding, 10px);
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) .jse-nested-property:where(.svelte-17xl1jx) .jse-nested-property-path:where(.svelte-17xl1jx) {
  flex: 1;
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) .jse-nested-property:where(.svelte-17xl1jx) .jse-nested-property-path:where(.svelte-17xl1jx) .jse-nested-property-count:where(.svelte-17xl1jx) {
  opacity: 0.5;
  white-space: nowrap;
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) button.jse-nested-array-action:where(.svelte-17xl1jx) {
  text-align: left;
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) button.jse-nested-array-action:where(.svelte-17xl1jx):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-nested-arrays:where(.svelte-17xl1jx) button.jse-nested-array-action:where(.svelte-17xl1jx):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}
.jse-table-mode-welcome.svelte-17xl1jx .jse-space.jse-after:where(.svelte-17xl1jx) {
  flex: 2;
}`);
var AW = (t, e) => e.onClick(), MW = pe(`An empty document cannot be opened in table mode. You can go to tree mode instead, or paste
        a JSON Array using <b>Ctrl+V</b>.`, 1), TW = (t, e, n) => e.openJSONEditorModal(c(n)), $W = (t, e, n) => e.extractPath(c(n)), PW = pe('<button type="button" class="jse-nested-array-action svelte-17xl1jx">Extract</button>'), RW = pe('<div class="jse-nested-property svelte-17xl1jx"><div class="jse-nested-property-path svelte-17xl1jx"> <span class="jse-nested-property-count svelte-17xl1jx"> </span></div> <button type="button" class="jse-nested-array-action svelte-17xl1jx"> </button> <!></div>'), NW = (t, e) => e.onChangeMode(Hr.tree), DW = pe('<div class="jse-table-mode-welcome svelte-17xl1jx" role="none"><div class="jse-space jse-before svelte-17xl1jx"></div> <div class="jse-nested-arrays svelte-17xl1jx"><div class="jse-nested-arrays-title"> </div> <div class="jse-nested-arrays-info svelte-17xl1jx"><!></div> <!> <button type="button" class="jse-nested-array-action svelte-17xl1jx">Switch to tree mode</button></div> <div class="jse-space jse-after svelte-17xl1jx"></div></div>');
function IW(t, e) {
  mt(e, !0);
  var n = eo(() => e.json ? (function(v) {
    var g = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2, b = [];
    return (function x(w, j) {
      Ur(w) && j.length < g && Object.keys(w).forEach((y) => {
        x(w[y], j.concat(y));
      }), Dr(w) && b.push(j);
    })(v, []), b;
  })(e.json).slice(0, 99).filter((v) => v.length > 0) : []), r = eo(() => !Sn(c(n))), i = eo(() => e.json === void 0 && (e.text === "" || e.text === void 0)), o = eo(() => c(r) ? "Object with nested arrays" : c(i) ? "An empty document" : Ur(e.json) ? "An object" : Dr(e.json) ? "An empty array" : "A ".concat(uy(e.json, e.parser))), s = DW();
  s.__click = [AW, e];
  var a = le(Y(s), 2), l = Y(a), u = Y(l), f = le(l, 2), d = Y(f), h = (v) => {
    Z(v, hi(`An object cannot be opened in table mode. You can open a nested array instead, or open the
        document in tree mode.`));
  }, p = (v, g) => {
    var b = (w) => {
      Z(w, MW());
    }, x = (w) => {
      var j = hi();
      Ie(() => {
        var y;
        return vt(j, "".concat((y = c(o)) !== null && y !== void 0 ? y : "", " cannot be opened in table mode. You can open the document in tree mode instead."));
      }), Z(w, j);
    };
    xe(v, (w) => {
      c(i) && !e.readOnly ? w(b) : w(x, !1);
    }, g);
  };
  xe(d, (v) => {
    c(r) ? v(h) : v(p, !1);
  });
  var m = le(f, 2);
  Ir(m, 17, () => c(n), Kr, (v, g) => {
    var b = RW(), x = eo(() => (function(N) {
      return Ze(e.json, N).length;
    })(c(g))), w = Y(b), j = Y(w), y = Y(le(j)), k = le(w, 2);
    k.__click = [TW, e, g];
    var S = Y(k), T = le(k, 2), M = (N) => {
      var z = PW();
      z.__click = [$W, e, g], Z(N, z);
    };
    xe(T, (N) => {
      e.readOnly || N(M);
    }), Ie((N) => {
      var z;
      vt(j, '"'.concat(N ?? "", '" ')), vt(y, "(".concat((z = c(x)) !== null && z !== void 0 ? z : "", " ").concat(c(x) !== 1 ? "items" : "item", ")")), vt(S, e.readOnly ? "View" : "Edit");
    }, [() => no(c(g))]), Z(v, b);
  }), le(m, 2).__click = [NW, e], Ie(() => vt(u, c(o))), Z(t, s), gt();
}
xd(["click"]);
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-column-header.svelte-fzj761 {
  background: none;
  border: none;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  display: flex;
  gap: var(--jse-padding, 10px);
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px) calc(0.5 * var(--jse-padding, 10px)) calc(0.5 * var(--jse-padding, 10px));
  width: 100%;
}
.jse-column-header.svelte-fzj761:hover {
  background: var(--jse-table-header-background-highlight, #e8e8e8);
}
.jse-column-header.svelte-fzj761:not(.jse-column-header.jse-readonly) {
  cursor: pointer;
}`);
var zW = pe('<button type="button"><!></button>');
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-table-mode.svelte-u14cgx {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative;
  background: var(--jse-background-color, #fff);
  min-width: 0;
  min-height: 0;
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: var(--jse-text-color, #4d4d4d);
  line-height: var(--jse-line-height, calc(1em + 4px));
}
.jse-table-mode.no-main-menu.svelte-u14cgx {
  border-top: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-table-mode.svelte-u14cgx .jse-search-box-container:where(.svelte-u14cgx) {
  position: relative;
  height: 0;
  top: calc(var(--jse-line-height, calc(1em + 4px)) + 2 * var(--jse-padding, 10px));
  margin-right: calc(var(--jse-padding, 10px) + 20px);
  margin-left: var(--jse-padding, 10px);
  text-align: right;
  z-index: 3;
}
.jse-table-mode.svelte-u14cgx .jse-hidden-input-label:where(.svelte-u14cgx) {
  position: fixed;
  right: 0;
  top: 0;
  width: 0;
  height: 0;
}
.jse-table-mode.svelte-u14cgx .jse-hidden-input-label:where(.svelte-u14cgx) .jse-hidden-input:where(.svelte-u14cgx) {
  width: 0;
  height: 0;
  padding: 0;
  border: 0;
  outline: none;
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) {
  flex: 1;
  align-items: flex-start;
  flex-direction: column;
  display: flex;
  overflow: auto;
  overflow-anchor: none;
  scrollbar-gutter: stable;
  border-left: var(--jse-main-border, 1px solid #d7d7d7);
  border-right: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx):last-child {
  border-bottom: var(--jse-main-border, 1px solid #d7d7d7);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) {
  border-collapse: collapse;
  border-spacing: 0;
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-invisible-start-section:where(.svelte-u14cgx) td:where(.svelte-u14cgx),
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-invisible-end-section:where(.svelte-u14cgx) td:where(.svelte-u14cgx) {
  margin: 0;
  padding: 0;
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-search-box-background:where(.svelte-u14cgx) {
  background: var(--jse-table-header-background, #f5f5f5);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-invisible-end-section:where(.svelte-u14cgx) td:where(.svelte-u14cgx) {
  padding-bottom: var(--jse-padding, 10px);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx):hover {
  background-color: var(--jse-table-row-odd-background, rgba(0, 0, 0, 0.05));
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell:where(.svelte-u14cgx) {
  padding: 0 var(--jse-padding, 10px) 0 0;
  vertical-align: top;
  white-space: nowrap;
  height: var(--jse-line-height, calc(1em + 4px));
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell.jse-table-cell-header:where(.svelte-u14cgx), .jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell.jse-table-cell-gutter:where(.svelte-u14cgx) {
  font-weight: normal;
  text-align: left;
  color: var(--jse-text-readonly, #8d8d8d);
  background: var(--jse-table-header-background, #f5f5f5);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell.jse-table-cell-header:where(.svelte-u14cgx) {
  padding: 0;
  position: sticky;
  top: 0;
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell.jse-table-cell-header:where(.svelte-u14cgx) .jse-table-root-error:where(.svelte-u14cgx) {
  padding: calc(0.5 * var(--jse-padding, 10px)) var(--jse-padding, 10px) calc(0.5 * var(--jse-padding, 10px)) calc(0.5 * var(--jse-padding, 10px));
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell.jse-table-cell-gutter:where(.svelte-u14cgx) {
  padding: 0 var(--jse-padding, 10px) 0 calc(0.5 * var(--jse-padding, 10px));
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell:where(.svelte-u14cgx) .jse-value-outer:where(.svelte-u14cgx) {
  display: inline-block;
  cursor: var(--jse-contents-cursor, pointer);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell:where(.svelte-u14cgx) .jse-value-outer:where(.svelte-u14cgx):hover {
  background: var(--jse-hover-background-color, rgba(0, 0, 0, 0.06));
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell:where(.svelte-u14cgx) .jse-value-outer.jse-selected-value:where(.svelte-u14cgx) {
  background: var(--jse-selection-background-color, #d3d3d3);
}
.jse-table-mode.svelte-u14cgx .jse-contents:where(.svelte-u14cgx) table.jse-table-main:where(.svelte-u14cgx) .jse-table-row:where(.svelte-u14cgx) .jse-table-cell:where(.svelte-u14cgx) .jse-context-menu-anchor:where(.svelte-u14cgx) {
  display: inline-flex;
  position: relative;
  vertical-align: top;
}
.jse-table-mode.svelte-u14cgx .jse-contents.jse-contents-loading:where(.svelte-u14cgx) {
  align-items: unset;
}
.jse-table-mode.svelte-u14cgx .jse-contents.jse-contents-loading:where(.svelte-u14cgx) .jse-loading-space:where(.svelte-u14cgx) {
  flex: 1;
}
.jse-table-mode.svelte-u14cgx .jse-contents.jse-contents-loading:where(.svelte-u14cgx) .jse-loading:where(.svelte-u14cgx) {
  flex: 2;
  text-align: center;
  color: var(--jse-panel-color-readonly, #b2b2b2);
  box-sizing: border-box;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
}`);
var LW = pe('<div class="jse-table-root-error svelte-u14cgx"><!></div>'), BW = pe('<th class="jse-table-cell jse-table-cell-header svelte-u14cgx"><!></th>'), qW = pe('<th class="jse-table-cell jse-table-cell-header svelte-u14cgx"><!></th>'), FW = pe('<th class="jse-table-cell jse-table-cell-gutter svelte-u14cgx"> <!></th>'), UW = pe('<div class="jse-context-menu-anchor svelte-u14cgx"><!></div>'), VW = pe('<td class="jse-table-cell svelte-u14cgx"><div><!><!></div> <!></td>'), WW = pe('<td class="jse-table-cell svelte-u14cgx"></td>'), HW = pe('<tr class="jse-table-row svelte-u14cgx"><!><!><!></tr>'), KW = pe('<div class="jse-search-box-container svelte-u14cgx"><!></div> <div class="jse-contents svelte-u14cgx"><table class="jse-table-main svelte-u14cgx"><tbody><tr class="jse-table-row jse-table-row-header svelte-u14cgx"><th class="jse-table-cell jse-table-cell-header svelte-u14cgx"><!></th><!><!></tr><tr><td class="svelte-u14cgx"></td></tr><!><tr class="jse-table-invisible-end-section svelte-u14cgx"><td class="svelte-u14cgx"></td></tr></tbody></table></div> <!> <!> <!> <!>', 1), GW = pe("<!> <!>", 1), JW = pe('<label class="jse-hidden-input-label svelte-u14cgx"><input type="text" tabindex="-1" class="jse-hidden-input svelte-u14cgx"/></label> <!>', 1), YW = pe('<div class="jse-contents jse-contents-loading svelte-u14cgx"><div class="jse-loading-space svelte-u14cgx"></div> <div class="jse-loading svelte-u14cgx">loading...</div></div>'), QW = pe('<div role="table"><!> <!></div> <!> <!>', 1);
function XW(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = Q(void 0, !0), i = Q(void 0, !0), o = ui("jsoneditor:TableMode"), { openAbsolutePopup: s, closeAbsolutePopup: a } = gl("absolute-popup"), l = IA(), u = nu(), f = nu(), d = typeof window > "u";
  o("isSSR:", d);
  var h = E(e, "readOnly", 9), p = E(e, "externalContent", 9), m = E(e, "externalSelection", 9), v = E(e, "history", 9), g = E(e, "truncateTextSize", 9), b = E(e, "mainMenuBar", 9), x = E(e, "escapeControlCharacters", 9), w = E(e, "escapeUnicodeCharacters", 9), j = E(e, "flattenColumns", 9), y = E(e, "parser", 9), k = E(e, "parseMemoizeOne", 9), S = E(e, "validator", 9), T = E(e, "validationParser", 9), M = E(e, "indentation", 9), N = E(e, "onChange", 9), z = E(e, "onChangeMode", 9), L = E(e, "onSelect", 9), W = E(e, "onUndo", 9), ce = E(e, "onRedo", 9), te = E(e, "onRenderValue", 9), we = E(e, "onRenderMenu", 9), Ee = E(e, "onRenderContextMenu", 9), ae = E(e, "onFocus", 9), re = E(e, "onBlur", 9), G = E(e, "onSortModal", 9), B = E(e, "onTransformModal", 9), ie = E(e, "onJSONEditorModal", 9), R = Q(void 0, !0), O = Q(void 0, !0), $ = Q(void 0, !0), ne = Q(void 0, !0), je = Q(void 0, !0);
  Ay({ onMount: Ti, onDestroy: Io, getWindow: () => kd(c(O)), hasFocus: () => Ge && document.hasFocus() || hy(c(O)), onFocus: () => {
    $t = !0, ae() && ae()();
  }, onBlur: () => {
    $t = !1, re() && re()();
  } });
  var J, H = Q(void 0, !0), ue = Q(void 0, !0), P = Q(void 0, !0), V = Q(void 0, !0), U = Q(void 0, !0), me = Q(void 0, !0), X = Q(!1, !0), K = Q(!1, !0);
  function rt(q) {
    C(me, (J = q) ? SA(c(H), J.items) : void 0);
  }
  function Qe(q) {
    return Ae.apply(this, arguments);
  }
  function Ae() {
    return (Ae = Mt(function* (q) {
      C(ge, void 0), yield Kn(q);
    })).apply(this, arguments);
  }
  function tt() {
    C(X, !1), C(K, !1), Xe();
  }
  var Re = Q(1e4, !0), qe = Q([], !0), pt = Q(void 0, !0), Ge = !1, $t = !1, A = Q(!1, !0), D = Q({}, !0), F = Q(600, !0), oe = Q(0, !0), ve = 18;
  function Ne(q) {
    C(ge, q);
  }
  function Fe(q) {
    c(ge) && q !== void 0 && (ro(q, Fl(c(ge))) && ro(q, at(c(ge))) || (o("clearing selection: path does not exist anymore", c(ge)), C(ge, void 0)));
  }
  var ye = Q(c(H) !== void 0 ? _b({ json: c(H) }) : void 0, !0), ge = Q(Jf(m()) ? m() : void 0, !0), yt = Q(void 0, !0), ot = Q(!1, !0);
  function _e(q) {
    if (!h()) {
      o("onSortByHeader", q);
      var he = q.sortDirection === Eo.desc ? -1 : 1;
      qt(FA(c(H), [], q.path, he), ($e, He) => ({ state: He, sortedColumn: q }));
    }
  }
  Ti(() => {
    c(ge) && Vr(at(c(ge)));
  });
  var xt = Q(void 0, !0);
  function bn(q) {
    if (q.json !== void 0 || q.text !== void 0) {
      var he = c(H) !== void 0 && q.json !== void 0;
      v().add({ type: "tree", undo: { patch: he ? [{ op: "replace", path: "", value: q.json }] : void 0, json: q.json, text: q.text, documentState: q.documentState, textIsRepaired: q.textIsRepaired, selection: Ss(q.selection), sortedColumn: q.sortedColumn }, redo: { patch: he ? [{ op: "replace", path: "", value: c(H) }] : void 0, json: c(H), text: c(ue), documentState: c(ye), textIsRepaired: c(ot), selection: Ss(c(ge)), sortedColumn: c(yt) } });
    }
  }
  var qn = Q([], !0), un = Sf(zA);
  function en(q, he, $e, He) {
    qc(() => {
      var Ke;
      try {
        Ke = un(q, he, $e, He);
      } catch (it) {
        Ke = [{ path: [], message: "Failed to validate: " + it.message, severity: Xo.warning }];
      }
      Zt(Ke, c(qn)) || (o("validationErrors changed:", Ke), C(qn, Ke));
    }, (Ke) => o("validationErrors updated in ".concat(Ke, " ms")));
  }
  function Rn() {
    return o("validate"), c(P) ? { parseError: c(P), isRepairable: !1 } : (en(c(H), S(), y(), T()), Sn(c(qn)) ? void 0 : { validationErrors: c(qn) });
  }
  function on(q, he) {
    if (o("patch", q, he), c(H) === void 0) throw new Error("Cannot apply patch: no JSON");
    var $e = c(H), He = { json: void 0, text: c(ue), documentState: c(ye), selection: Ss(c(ge)), sortedColumn: c(yt), textIsRepaired: c(ot) }, Ke = kA(c(H), q), it = fA(c(H), c(ye), q), ut = qV(c(yt), q, c(qe)), ft = typeof he == "function" ? he(it.json, it.documentState, c(ge)) : void 0;
    return C(H, ft?.json !== void 0 ? ft.json : it.json), C(ye, ft?.state !== void 0 ? ft.state : it.documentState), C(ge, ft?.selection !== void 0 ? ft.selection : c(ge)), C(yt, ft?.sortedColumn !== void 0 ? ft.sortedColumn : ut), C(ue, void 0), C(ot, !1), C(V, void 0), C(U, void 0), C(P, void 0), v().add({ type: "tree", undo: De({ patch: Ke }, He), redo: { patch: q, json: void 0, text: void 0, documentState: c(ye), selection: Ss(c(ge)), sortedColumn: c(yt), textIsRepaired: c(ot) } }), { json: c(H), previousJson: $e, undo: Ke, redo: q };
  }
  function qt(q, he) {
    o("handlePatch", q, he);
    var $e = { json: c(H), text: c(ue) }, He = on(q, he);
    return Pt($e, He), He;
  }
  function Pt(q, he) {
    if ((q.json !== void 0 || q?.text !== void 0) && N()) {
      if (c(ue) !== void 0) {
        var $e = { text: c(ue), json: void 0 };
        N()($e, q, { contentErrors: Rn(), patchResult: he });
      } else if (c(H) !== void 0) {
        var He = { text: void 0, json: c(H) };
        N()(He, q, { contentErrors: Rn(), patchResult: he });
      }
    }
  }
  function an(q) {
    o("pasted json as text", q), C(V, q);
  }
  function yn(q) {
    o("pasted multiline text", { pastedText: q }), C(U, q);
  }
  function Ot(q) {
    var he = parseInt(q[0], 10), $e = [String(he + 1), ...q.slice(1)];
    return ro(c(H), $e) ? sn($e) : sn(q);
  }
  function Xe() {
    o("focus"), c(ne) && (c(ne).focus(), c(ne).select());
  }
  function tn(q) {
    C(oe, q.target.scrollTop);
  }
  function Qt() {
    c(ge) || C(ge, (function() {
      if (Dr(c(H)) && !Sn(c(H)) && !Sn(c(qe))) return sn(["0", ...c(qe)[0]]);
    })());
  }
  function Hn() {
    if (c(ot) && c(H) !== void 0) {
      var q = { json: c(H), text: c(ue) }, he = { json: c(H), documentState: c(ye), selection: c(ge), sortedColumn: c(yt), text: c(ue), textIsRepaired: c(ot) };
      C(ue, void 0), C(ot, !1), Fe(c(H)), bn(he), Pt(q, void 0);
    }
    return { json: c(H), text: c(ue) };
  }
  function Kn(q) {
    var { scrollToWhenVisible: he = !0 } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, $e = c(X) ? of : 0, He = aS(q, c(qe), D, ve), Ke = He - c(oe) + $e + ve, it = Gn(q);
    if (o("scrollTo", { path: q, top: He, scrollTop: c(oe), elem: it }), !c($)) return Promise.resolve();
    var ut = c($).getBoundingClientRect();
    if (it && !he) {
      var ft = it.getBoundingClientRect();
      if (ft.bottom > ut.top && ft.top < ut.bottom) return Promise.resolve();
    }
    var Xt = -Math.max($e + 2 * ve, ut.height / 4);
    return new Promise(it ? (wn) => {
      l(it, { container: c($), offset: Xt, duration: 300, callback: () => {
        On(q), wn();
      } });
    } : (wn) => {
      l(Ke, { container: c($), offset: Xt, duration: 300, callback: () => {
        fr(), On(q), wn();
      } });
    });
  }
  function On(q) {
    var he = Gn(q);
    if (he && c($)) {
      var $e = c($).getBoundingClientRect(), He = he.getBoundingClientRect();
      if (He.right > $e.right) {
        var Ke = He.right - $e.right;
        bo($, c($).scrollLeft += Ke);
      }
      if (He.left < $e.left) {
        var it = $e.left - He.left;
        bo($, c($).scrollLeft -= it);
      }
    }
  }
  function Vr(q) {
    (function(he) {
      if (c($)) {
        var { rowIndex: $e } = Co(he, c(qe)), He = aS(he, c(qe), D, ve), Ke = He + (D[$e] || ve), it = ve, ut = c($).getBoundingClientRect(), ft = c(oe), Xt = c(oe) + ut.height - it;
        if (Ke > Xt) {
          var wn = Ke - Xt;
          bo($, c($).scrollTop += wn);
        }
        if (He < ft) {
          var hn = ft - He;
          bo($, c($).scrollTop -= hn);
        }
      }
    })(q), On(q);
  }
  function Gn(q) {
    var he, $e, He = c(qe).find((it) => Ts(q.slice(1), it)), Ke = He ? q.slice(0, 1).concat(He) : q;
    return (he = ($e = c($)) === null || $e === void 0 ? void 0 : $e.querySelector('td[data-path="'.concat(kp(Ke), '"]'))) !== null && he !== void 0 ? he : void 0;
  }
  function xr(q) {
    var he, { anchor: $e, left: He, top: Ke, width: it, height: ut, offsetTop: ft, offsetLeft: Xt, showTip: wn } = q, hn = (function(se) {
      var { json: Ce, documentState: Je, selection: Be, readOnly: ze, onEditValue: _t, onEditRow: At, onToggleEnforceString: nn, onCut: Un, onCopy: pn, onPaste: ir, onRemove: Dt, onDuplicateRow: jr, onInsertBeforeRow: Yn, onInsertAfterRow: dr, onRemoveRow: $n } = se, jt = Ce !== void 0, jn = !!Be, kt = Ce !== void 0 && Be ? Ze(Ce, at(Be)) : void 0, dt = jt && (nr(Be) || li(Be) || _n(Be)), Ht = !ze && jt && Be !== void 0 && jm(Be), gr = Ht && !Or(kt), fi = !ze && dt, or = Be !== void 0 && Es(Ce, Je, at(Be));
      return [{ type: "separator" }, { type: "row", items: [{ type: "column", items: [{ type: "label", text: "Table cell:" }, { type: "dropdown-button", main: { type: "button", onClick: () => _t(), icon: Vc, text: "Edit", title: "Edit the value (Double-click on the value)", disabled: !Ht }, width: "11em", items: [{ type: "button", icon: Vc, text: "Edit", title: "Edit the value (Double-click on the value)", onClick: () => _t(), disabled: !Ht }, { type: "button", icon: or ? WC : KC, text: "Enforce string", title: "Enforce keeping the value as string when it contains a numeric value", onClick: () => nn(), disabled: !gr }] }, { type: "dropdown-button", main: { type: "button", onClick: () => Un(!0), icon: Uc, text: "Cut", title: "Cut selected contents, formatted with indentation (Ctrl+X)", disabled: !fi }, width: "10em", items: [{ type: "button", icon: Uc, text: "Cut formatted", title: "Cut selected contents, formatted with indentation (Ctrl+X)", onClick: () => Un(!0), disabled: ze || !dt }, { type: "button", icon: Uc, text: "Cut compacted", title: "Cut selected contents, without indentation (Ctrl+Shift+X)", onClick: () => Un(!1), disabled: ze || !dt }] }, { type: "dropdown-button", main: { type: "button", onClick: () => pn(!0), icon: Na, text: "Copy", title: "Copy selected contents, formatted with indentation (Ctrl+C)", disabled: !dt }, width: "12em", items: [{ type: "button", icon: Na, text: "Copy formatted", title: "Copy selected contents, formatted with indentation (Ctrl+C)", onClick: () => pn(!1), disabled: !dt }, { type: "button", icon: Na, text: "Copy compacted", title: "Copy selected contents, without indentation (Ctrl+Shift+C)", onClick: () => pn(!1), disabled: !dt }] }, { type: "button", onClick: () => ir(), icon: VC, text: "Paste", title: "Paste clipboard contents (Ctrl+V)", disabled: ze || !jn }, { type: "button", onClick: () => Dt(), icon: g0, text: "Remove", title: "Remove selected contents (Delete)", disabled: ze || !dt }] }, { type: "column", items: [{ type: "label", text: "Table row:" }, { type: "button", onClick: () => At(), icon: Vc, text: "Edit row", title: "Edit the current row", disabled: ze || !jn || !jt }, { type: "button", onClick: () => jr(), icon: YC, text: "Duplicate row", title: "Duplicate the current row (Ctrl+D)", disabled: ze || !jn || !jt }, { type: "button", onClick: () => Yn(), icon: $c, text: "Insert before", title: "Insert a row before the current row", disabled: ze || !jn || !jt }, { type: "button", onClick: () => dr(), icon: $c, text: "Insert after", title: "Insert a row after the current row", disabled: ze || !jn || !jt }, { type: "button", onClick: () => $n(), icon: g0, text: "Remove row", title: "Remove current row", disabled: ze || !jn || !jt }] }] }];
    })({ json: c(H), documentState: c(ye), selection: c(ge), readOnly: h(), onEditValue: zr, onEditRow: Zn, onToggleEnforceString: Ar, onCut: Yt, onCopy: ht, onPaste: Nn, onRemove: et, onDuplicateRow: Fn, onInsertBeforeRow: lr, onInsertAfterRow: Vt, onRemoveRow: xn }), Wn = (he = Ee()(hn)) !== null && he !== void 0 ? he : hn;
    if (Wn !== !1) {
      var Si = { left: He, top: Ke, offsetTop: ft, offsetLeft: Xt, width: it, height: ut, anchor: $e, closeOnOuterClick: !0, onClose: () => {
        Ge = !1, Xe();
      } };
      Ge = !0;
      var I = s(XA, { tip: wn ? "Tip: you can open this context menu via right-click or with Ctrl+Q" : void 0, items: Wn, onRequestClose() {
        a(I), Xe();
      } }, Si);
    }
  }
  function Jr(q) {
    if (!oi(c(ge))) if (q && (q.stopPropagation(), q.preventDefault()), q && q.type === "contextmenu" && q.target !== c(ne)) xr({ left: q.clientX, top: q.clientY, width: ra, height: na, showTip: !1 });
    else {
      var he, $e = (he = c($)) === null || he === void 0 ? void 0 : he.querySelector(".jse-table-cell.jse-selected-value");
      if ($e) xr({ anchor: $e, offsetTop: 2, width: ra, height: na, showTip: !1 });
      else {
        var He, Ke = (He = c($)) === null || He === void 0 ? void 0 : He.getBoundingClientRect();
        Ke && xr({ top: Ke.top + 2, left: Ke.left + 2, width: ra, height: na, showTip: !1 });
      }
    }
  }
  function Yr(q) {
    xr({ anchor: sA(q.target, "BUTTON"), offsetTop: 0, width: ra, height: na, showTip: !0 });
  }
  function zr() {
    if (!h() && c(ge)) {
      var q = at(c(ge));
      Or(Ze(c(H), q)) ? Dn(q) : C(ge, sn(q));
    }
  }
  function Zn() {
    !h() && c(ge) && Dn(at(c(ge)).slice(0, 1));
  }
  function Ar() {
    if (!h() && _n(c(ge))) {
      var q = c(ge).path, he = bt(q), $e = Ze(c(H), q), He = !Es(c(H), c(ye), q), Ke = He ? String($e) : Ou(String($e), y());
      o("handleToggleEnforceString", { enforceString: He, value: $e, updatedValue: Ke }), qt([{ op: "replace", path: he, value: Ke }], (it, ut) => ({ state: wg(c(H), ut, q, { type: "value", enforceString: He }) }));
    }
  }
  function Te() {
    return ln.apply(this, arguments);
  }
  function ln() {
    return (ln = Mt(function* () {
      if (o("apply pasted json", c(V)), c(V)) {
        var { onPasteAsJson: q } = c(V);
        q(), setTimeout(Xe);
      }
    })).apply(this, arguments);
  }
  function Nn() {
    return er.apply(this, arguments);
  }
  function er() {
    return (er = Mt(function* () {
      try {
        ke(yield navigator.clipboard.readText());
      } catch (q) {
        console.error(q), C(A, !0);
      }
    })).apply(this, arguments);
  }
  function be() {
    return Le.apply(this, arguments);
  }
  function Le() {
    return (Le = Mt(function* () {
      o("apply pasted multiline text", c(U)), c(U) && (ke(JSON.stringify(c(U))), setTimeout(Xe));
    })).apply(this, arguments);
  }
  function We() {
    o("clear pasted json"), C(V, void 0), Xe();
  }
  function Rt() {
    o("clear pasted multiline text"), C(U, void 0), Xe();
  }
  function Jt() {
    z()(Hr.text);
  }
  function Yt(q) {
    return fn.apply(this, arguments);
  }
  function fn() {
    return (fn = Mt(function* (q) {
      yield HA({ json: c(H), selection: c(ge), indentation: q ? M() : void 0, readOnly: h(), parser: y(), onPatch: qt });
    })).apply(this, arguments);
  }
  function ht() {
    return Gt.apply(this, arguments);
  }
  function Gt() {
    return Gt = Mt(function* () {
      var q = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0];
      c(H) !== void 0 && (yield KA({ json: c(H), selection: c(ge), indentation: q ? M() : void 0, parser: y() }));
    }), Gt.apply(this, arguments);
  }
  function et() {
    JA({ json: c(H), text: c(ue), selection: c(ge), keepSelection: !0, readOnly: h(), onChange: N(), onPatch: qt });
  }
  function Mn(q) {
    h() || (o("extract", { path: q }), qt(xA(c(H), sn(q))));
  }
  function Fn() {
    (function(q) {
      var { json: he, selection: $e, columns: He, readOnly: Ke, onPatch: it } = q;
      if (!Ke && he !== void 0 && $e && Lc($e)) {
        var { rowIndex: ut, columnIndex: ft } = Co(at($e), He);
        Di("duplicate row", { rowIndex: ut });
        var Xt = [String(ut)];
        it(yA(he, [Xt]), (wn, hn) => ({ state: hn, selection: sn(_l({ rowIndex: ut < he.length ? ut + 1 : ut, columnIndex: ft }, He)) }));
      }
    })({ json: c(H), selection: c(ge), columns: c(qe), readOnly: h(), onPatch: qt });
  }
  function lr() {
    (function(q) {
      var { json: he, selection: $e, columns: He, readOnly: Ke, onPatch: it } = q;
      if (!Ke && he !== void 0 && $e && Lc($e)) {
        var { rowIndex: ut } = Co(at($e), He);
        Di("insert before row", { rowIndex: ut }), it(Bc(he, [String(ut)], [{ key: "", value: Ur(he[0]) ? {} : "" }]));
      }
    })({ json: c(H), selection: c(ge), columns: c(qe), readOnly: h(), onPatch: qt });
  }
  function Vt() {
    (function(q) {
      var { json: he, selection: $e, columns: He, readOnly: Ke, onPatch: it } = q;
      if (!Ke && he !== void 0 && $e && Lc($e)) {
        var { rowIndex: ut, columnIndex: ft } = Co(at($e), He);
        Di("insert after row", { rowIndex: ut });
        var Xt = ut + 1, wn = [String(Xt)], hn = [{ key: "", value: Ur(he[0]) ? {} : "" }];
        it(Xt < he.length ? Bc(he, wn, hn) : Tb(he, [], hn), (Wn, Si) => ({ state: Si, selection: sn(_l({ rowIndex: Xt, columnIndex: ft }, He)) }));
      }
    })({ json: c(H), selection: c(ge), columns: c(qe), readOnly: h(), onPatch: qt });
  }
  function xn() {
    (function(q) {
      var { json: he, selection: $e, columns: He, readOnly: Ke, onPatch: it } = q;
      if (!Ke && he !== void 0 && $e && Lc($e)) {
        var { rowIndex: ut, columnIndex: ft } = Co(at($e), He);
        Di("remove row", { rowIndex: ut }), it(Sm([[String(ut)]]), (Xt, wn) => {
          var hn = ut < Xt.length ? ut : ut > 0 ? ut - 1 : void 0, Wn = hn !== void 0 ? sn(_l({ rowIndex: hn, columnIndex: ft }, He)) : void 0;
          return Di("remove row new selection", { rowIndex: ut, newRowIndex: hn, newSelection: Wn }), { state: wn, selection: Wn };
        });
      }
    })({ json: c(H), selection: c(ge), columns: c(qe), readOnly: h(), onPatch: qt });
  }
  function Ft() {
    return (Ft = Mt(function* (q) {
      yield YA({ char: q, selectInside: !1, json: c(H), selection: c(ge), readOnly: h(), parser: y(), onPatch: qt, onReplaceJson: Ue, onSelect: Ne });
    })).apply(this, arguments);
  }
  function fe(q) {
    var he;
    q.preventDefault(), ke((he = q.clipboardData) === null || he === void 0 ? void 0 : he.getData("text/plain"));
  }
  function ke(q) {
    q !== void 0 && GA({ clipboardText: q, json: c(H), selection: c(ge), readOnly: h(), parser: y(), onPatch: qt, onChangeText: Nt, onPasteMultilineText: yn, openRepairModal: wr });
  }
  function Ue(q, he) {
    var $e = { json: c(H), text: c(ue) }, He = { json: c(H), documentState: c(ye), selection: c(ge), sortedColumn: c(yt), text: c(ue), textIsRepaired: c(ot) }, Ke = go(q, c(ye)), it = typeof he == "function" ? he(q, Ke, c(ge)) : void 0;
    C(H, it?.json !== void 0 ? it.json : q), C(ye, it?.state !== void 0 ? it.state : Ke), C(ge, it?.selection !== void 0 ? it.selection : c(ge)), C(yt, void 0), C(ue, void 0), C(ot, !1), C(P, void 0), Fe(c(H)), bn(He), Pt($e, void 0);
  }
  function Nt(q, he) {
    o("handleChangeText");
    var $e = { json: c(H), text: c(ue) }, He = { json: c(H), documentState: c(ye), selection: c(ge), sortedColumn: c(yt), text: c(ue), textIsRepaired: c(ot) };
    try {
      C(H, k()(q)), C(ye, go(c(H), c(ye))), C(ue, void 0), C(ot, !1), C(P, void 0);
    } catch (it) {
      try {
        C(H, k()(_s(q))), C(ye, go(c(H), c(ye))), C(ue, q), C(ot, !0), C(P, void 0);
      } catch {
        C(H, void 0), C(ye, void 0), C(ue, q), C(ot, !1), C(P, c(ue) !== "" ? du(c(ue), it.message || String(it)) : void 0);
      }
    }
    if (typeof he == "function") {
      var Ke = he(c(H), c(ye), c(ge));
      C(H, Ke?.json !== void 0 ? Ke.json : c(H)), C(ye, Ke?.state !== void 0 ? Ke.state : c(ye)), C(ge, Ke?.selection !== void 0 ? Ke.selection : c(ge));
    }
    Fe(c(H)), bn(He), Pt($e, void 0);
  }
  function dn(q) {
    o("select validation error", q), C(ge, sn(q.path)), Kn(q.path);
  }
  function Ut(q) {
    if (c(H) !== void 0) {
      var { id: he, onTransform: $e, onClose: He } = q, Ke = q.rootPath || [];
      Ge = !0, B()({ id: he || f, json: c(H), rootPath: Ke || [], onTransform: (it) => {
        $e ? $e({ operations: it, json: c(H), transformedJson: Go(c(H), it) }) : (o("onTransform", Ke, it), qt(it));
      }, onClose: () => {
        Ge = !1, setTimeout(Xe), He && He();
      } });
    }
  }
  function Dn(q) {
    o("openJSONEditorModal", { path: q }), Ge = !0, ie()({ content: { json: Ze(c(H), q) }, path: q, onPatch: qt, onClose: () => {
      Ge = !1, setTimeout(Xe);
    } });
  }
  function wr(q, he) {
    C(je, { text: q, onParse: ($e) => jd($e, (He) => wd(He, y())), onRepair: Q_, onApply: he, onClose: Xe });
  }
  function Jn() {
    (function(q) {
      h() || c(H) === void 0 || (Ge = !0, G()({ id: u, json: c(H), rootPath: q, onSort: (he) => {
        var { operations: $e, itemPath: He, direction: Ke } = he;
        o("onSort", $e, q, He, Ke), qt($e, (it, ut) => ({ state: ut, sortedColumn: { path: He, sortDirection: Ke === -1 ? Eo.desc : Eo.asc } }));
      }, onClose: () => {
        Ge = !1, setTimeout(Xe);
      } }));
    })([]);
  }
  function cn() {
    Ut({ rootPath: [] });
  }
  function Lt(q) {
    o("openFind", { findAndReplace: q }), C(X, !1), C(K, !1), fr(), C(X, !0), C(K, q);
  }
  function In() {
    if (!h() && v().canUndo) {
      var q = v().undo();
      if (wm(q)) {
        var he = { json: c(H), text: c(ue) };
        C(H, q.undo.patch ? Go(c(H), q.undo.patch) : q.undo.json), C(ye, q.undo.documentState), C(ge, q.undo.selection), C(yt, q.undo.sortedColumn), C(ue, q.undo.text), C(ot, q.undo.textIsRepaired), C(P, void 0), o("undo", { item: q, json: c(H) }), Pt(he, q.undo.patch && q.redo.patch ? { json: c(H), previousJson: he.json, redo: q.undo.patch, undo: q.redo.patch } : void 0), Xe(), c(ge) && Kn(at(c(ge)), { scrollToWhenVisible: !1 });
      } else W()(q);
    }
  }
  function ji() {
    if (!h() && v().canRedo) {
      var q = v().redo();
      if (wm(q)) {
        var he = { json: c(H), text: c(ue) };
        C(H, q.redo.patch ? Go(c(H), q.redo.patch) : q.redo.json), C(ye, q.redo.documentState), C(ge, q.redo.selection), C(yt, q.redo.sortedColumn), C(ue, q.redo.text), C(ot, q.redo.textIsRepaired), C(P, void 0), o("redo", { item: q, json: c(H) }), Pt(he, q.undo.patch && q.redo.patch ? { json: c(H), previousJson: he.json, redo: q.redo.patch, undo: q.undo.patch } : void 0), Xe(), c(ge) && Kn(at(c(ge)), { scrollToWhenVisible: !1 });
      } else ce()(q);
    }
  }
  function Et(q) {
    C(F, q.getBoundingClientRect().height);
  }
  de(() => (_(x()), _(w())), () => {
    C(R, fy({ escapeControlCharacters: x(), escapeUnicodeCharacters: w() }));
  }), de(() => c(X), () => {
    (function(q) {
      if (c($)) {
        var he = q ? of : -100;
        c($).scrollTo({ top: bo($, c($).scrollTop += he), left: c($).scrollLeft });
      }
    })(c(X));
  }), de(() => _(p()), () => {
    (function(q) {
      var he = { json: c(H) }, $e = Vf(q) ? q.text !== c(ue) : !Zt(he.json, q.json);
      if (o("update external content", { isChanged: $e }), $e) {
        var He = { json: c(H), documentState: c(ye), selection: c(ge), sortedColumn: c(yt), text: c(ue), textIsRepaired: c(ot) };
        if (Vf(q)) try {
          C(H, k()(q.text)), C(ye, go(c(H), c(ye))), C(ue, q.text), C(ot, !1), C(P, void 0);
        } catch (Ke) {
          try {
            C(H, k()(_s(q.text))), C(ye, go(c(H), c(ye))), C(ue, q.text), C(ot, !0), C(P, void 0);
          } catch {
            C(H, void 0), C(ye, void 0), C(ue, q.text), C(ot, !1), C(P, c(ue) !== "" ? du(c(ue), Ke.message || String(Ke)) : void 0);
          }
        }
        else C(H, q.json), C(ye, go(c(H), c(ye))), C(ue, void 0), C(ot, !1), C(P, void 0);
        Fe(c(H)), C(yt, void 0), bn(He);
      }
    })(p());
  }), de(() => _(m()), () => {
    (function(q) {
      Zt(c(ge), q) || (o("applyExternalSelection", { selection: c(ge), externalSelection: q }), Jf(q) && C(ge, q));
    })(m());
  }), de(() => (c(qe), c(H), _(j()), c(Re)), () => {
    C(qe, Dr(c(H)) ? (function(q, he) {
      var $e = new Set(he.map(bt)), He = new Set(q.map(bt));
      for (var Ke of $e) He.has(Ke) || $e.delete(Ke);
      for (var it of He) $e.has(it) || $e.add(it);
      return [...$e].map(io);
    })(IV(c(H), j(), c(Re)), c(qe)) : []);
  }), de(() => (c(H), c(qe)), () => {
    C(pt, !(!c(H) || Sn(c(qe))));
  }), de(() => (c(H), c(Re)), () => {
    C(n, Array.isArray(c(H)) && c(H).length > c(Re));
  }), de(() => (c(oe), c(F), c(H), c(X), of), () => {
    C(r, zV(c(oe), c(F), c(H), D, ve, c(X) ? of : 0));
  }), de(() => c(H), () => {
    c(H), c($) && c($).scrollTo({ top: c($).scrollTop, left: c($).scrollLeft });
  }), de(() => c(ge), () => {
    var q;
    q = c(ge), Zt(q, m()) || (o("onSelect", q), L()(q));
  }), de(() => (_(h()), _(g()), _(y()), c(R), c(H), c(ye), _(te())), () => {
    C(xt, { mode: Hr.table, readOnly: h(), truncateTextSize: g(), parser: y(), normalization: c(R), getJson: () => c(H), getDocumentState: () => c(ye), findElement: Gn, findNextInside: Ot, focus: Xe, onPatch: (q, he) => qt((function($e, He) {
      return $e.flatMap((Ke) => {
        if (Zb(Ke)) {
          var it = io(Ke.path);
          if (it.length > 0) {
            for (var ut = [Ke], ft = mn(it); ft.length > 0 && !ro(He, ft); ) ut.unshift({ op: "add", path: bt(ft), value: {} }), ft = mn(ft);
            return ut;
          }
        }
        return Ke;
      });
    })(q, c(H)), he), onSelect: Ne, onFind: Lt, onPasteJson: an, onRenderValue: te() });
  }), de(() => (c(H), _(S()), _(y()), _(T())), () => {
    en(c(H), S(), y(), T());
  }), de(() => (c(qn), c(qe)), () => {
    C(i, LV(c(qn), c(qe)));
  }), Bn(), zt(!0);
  var mr = QW();
  Pe("mousedown", ca, function(q) {
    !Eu(q.target, (he) => he === c(O)) && oi(c(ge)) && (o("click outside the editor, exit edit mode"), C(ge, Ss(c(ge))), $t && c(ne) && (c(ne).focus(), c(ne).blur()), o("blur (outside editor)"), c(ne) && c(ne).blur());
  });
  var Tn, tr = wt(mr), ct = Y(tr), Vn = (q) => {
    (function(he, $e) {
      mt($e, !1);
      var He = E($e, "containsValidArray", 9), Ke = E($e, "readOnly", 9), it = E($e, "showSearch", 13, !1), ut = E($e, "history", 9), ft = E($e, "onSort", 9), Xt = E($e, "onTransform", 9), wn = E($e, "onContextMenu", 9), hn = E($e, "onUndo", 9), Wn = E($e, "onRedo", 9), Si = E($e, "onRenderMenu", 9);
      function I() {
        it(!it());
      }
      var se = Q(void 0, !0), Ce = Q(void 0, !0);
      de(() => (_(Ke()), _(ft()), _(He()), _(Xt()), _(wn()), _(hn()), _(ut()), _(Wn())), () => {
        C(se, Ke() ? [{ type: "space" }] : [{ type: "button", icon: Ip, title: "Sort", className: "jse-sort", onClick: ft(), disabled: Ke() || !He() }, { type: "button", icon: Np, title: "Transform contents (filter, sort, project)", className: "jse-transform", onClick: Xt(), disabled: Ke() || !He() }, { type: "button", icon: Km, title: "Search (Ctrl+F)", className: "jse-search", onClick: I, disabled: !He() }, { type: "button", icon: GC, title: gy, className: "jse-contextmenu", onClick: wn() }, { type: "separator" }, { type: "button", icon: m1, title: "Undo (Ctrl+Z)", className: "jse-undo", onClick: hn(), disabled: !ut().canUndo }, { type: "button", icon: p1, title: "Redo (Ctrl+Shift+Z)", className: "jse-redo", onClick: Wn(), disabled: !ut().canRedo }, { type: "space" }]);
      }), de(() => (_(Si()), c(se)), () => {
        C(Ce, Si()(c(se)) || c(se));
      }), Bn(), zt(!0), Eg(he, { get items() {
        return c(Ce);
      } }), gt();
    })(q, { get containsValidArray() {
      return c(pt);
    }, get readOnly() {
      return h();
    }, get history() {
      return v();
    }, onSort: Jn, onTransform: cn, onUndo: In, onRedo: ji, onContextMenu: Yr, get onRenderMenu() {
      return we();
    }, get showSearch() {
      return c(X);
    }, set showSearch(he) {
      C(X, he);
    }, $$legacy: !0 });
  };
  xe(ct, (q) => {
    b() && q(Vn);
  });
  var Lr = le(ct, 2), Wt = (q) => {
    var he = JW(), $e = wt(he), He = Y($e);
    He.readOnly = !0, pr(He, (ft) => C(ne, ft), () => c(ne));
    var Ke = le($e, 2), it = (ft) => {
      var Xt = KW(), wn = wt(Xt);
      UA(Y(wn), { get json() {
        return c(H);
      }, get documentState() {
        return c(ye);
      }, get parser() {
        return y();
      }, get showSearch() {
        return c(X);
      }, get showReplace() {
        return c(K);
      }, get readOnly() {
        return h();
      }, get columns() {
        return c(qe);
      }, onSearch: rt, onFocus: Qe, onPatch: qt, onClose: tt });
      var hn = le(wn, 2), Wn = Y(hn), Si = Y(Wn), I = Y(Si), se = Y(I), Ce = Y(se), Je = (dt) => {
        var Ht = Er(), gr = Oe(() => (_(Sc), c(i), ee(() => {
          var kr;
          return Sc([], (kr = c(i)) === null || kr === void 0 ? void 0 : kr.root);
        }))), fi = wt(Ht), or = (kr) => {
          var pi = LW();
          eu(Y(pi), { get validationError() {
            return c(gr);
          }, get onExpand() {
            return Oo;
          } }), Z(kr, pi);
        };
        xe(fi, (kr) => {
          c(gr) && kr(or);
        }), Z(dt, Ht);
      };
      xe(Ce, (dt) => {
        _(Sn), c(i), ee(() => {
          var Ht;
          return !Sn((Ht = c(i)) === null || Ht === void 0 ? void 0 : Ht.root);
        }) && dt(Je);
      });
      var Be = le(se);
      Ir(Be, 1, () => c(qe), Kr, (dt, Ht) => {
        var gr = BW();
        (function(fi, or) {
          mt(or, !1);
          var kr = Q(void 0, !0), pi = Q(void 0, !0), Us = Q(void 0, !0), ao = E(or, "path", 9), Bo = E(or, "sortedColumn", 9), ds = E(or, "readOnly", 9), qo = E(or, "onSort", 9);
          de(() => (_(ao()), no), () => {
            C(kr, Sn(ao()) ? "values" : no(ao()));
          }), de(() => (_(Bo()), _(ao())), () => {
            var cr;
            C(pi, Bo() && Zt(ao(), (cr = Bo()) === null || cr === void 0 ? void 0 : cr.path) ? Bo().sortDirection : void 0);
          }), de(() => (c(pi), Ck), () => {
            C(Us, c(pi) ? Ck[c(pi)] : void 0);
          }), Bn(), zt(!0);
          var mi, gi = _W(), lo = Y(gi), Vs = Y(lo), co = le(lo, 2), Mr = (cr) => {
            var qr = EW(), hs = Y(qr), pc = Oe(() => (c(pi), _(Eo), _(pa), _(zx), ee(() => c(pi) === Eo.asc ? pa : zx)));
            gn(hs, { get data() {
              return c(pc);
            } }), Ie(() => Ln(qr, "title", "Currently sorted in ".concat(c(Us), " order"))), Z(cr, qr);
          };
          xe(co, (cr) => {
            c(pi) !== void 0 && cr(Mr);
          }), Ie((cr, qr) => {
            mi = It(gi, 1, "jse-column-header svelte-2i3vdx", null, mi, cr), Ln(gi, "title", ds() ? c(kr) : c(kr) + " (Click to sort the data by this column)"), vt(Vs, qr);
          }, [() => ({ "jse-readonly": ds() }), () => (_(ta), c(kr), _(50), ee(() => ta(c(kr), 50)))], Oe), Pe("click", gi, function() {
            ds() || qo()({ path: ao(), sortDirection: c(pi) === Eo.asc ? Eo.desc : Eo.asc });
          }), Z(fi, gi), gt();
        })(Y(gr), { get path() {
          return c(Ht);
        }, get sortedColumn() {
          return c(yt);
        }, get readOnly() {
          return h();
        }, onSort: _e }), Z(dt, gr);
      });
      var ze = le(Be), _t = (dt) => {
        var Ht = qW(), gr = Y(Ht), fi = Oe(() => (c(H), ee(() => Array.isArray(c(H)) ? c(H).length : 0)));
        (function(or, kr) {
          mt(kr, !1);
          var pi = E(kr, "count", 9), Us = E(kr, "maxSampleCount", 9), ao = E(kr, "readOnly", 9), Bo = E(kr, "onRefresh", 9);
          zt(!0);
          var ds, qo = zW();
          gn(Y(qo), { get data() {
            return eR;
          } }), Ie((mi) => {
            ds = It(qo, 1, "jse-column-header svelte-fzj761", null, ds, mi), Ln(qo, "title", "The Columns are created by sampling ".concat(Us(), " items out of ").concat(pi(), ". ") + "If you're missing a column, click here to sample all of the items instead of a subset. This is slower.");
          }, [() => ({ "jse-readonly": ao() })], Oe), Pe("click", qo, () => Bo()()), Z(or, qo), gt();
        })(gr, { get count() {
          return c(fi);
        }, get maxSampleCount() {
          return c(Re);
        }, get readOnly() {
          return h();
        }, onRefresh: () => C(Re, 1 / 0) }), Z(dt, Ht);
      };
      xe(ze, (dt) => {
        c(n) && dt(_t);
      });
      var At, nn, Un = le(I), pn = Y(Un), ir = le(Un);
      Ir(ir, 1, () => (c(r), ee(() => c(r).visibleItems)), Kr, (dt, Ht, gr) => {
        var fi = HW(), or = Oe(() => (c(r), ee(() => c(r).startIndex + gr))), kr = Oe(() => (c(i), _(c(or)), ee(() => c(i).rows[c(or)]))), pi = Oe(() => (_(Sc), _(c(or)), _(c(kr)), ee(() => {
          var mi;
          return Sc([String(c(or))], (mi = c(kr)) === null || mi === void 0 ? void 0 : mi.row);
        }))), Us = Oe(() => (_(ys), c(H), c(me), _(c(or)), ee(() => ys(c(H), c(me), [String(c(or))])))), ao = Y(fi);
        q_(ao, () => c(or), (mi) => {
          var gi = FW(), lo = Y(gi), Vs = le(lo), co = (Mr) => {
            eu(Mr, { get validationError() {
              return c(pi);
            }, get onExpand() {
              return Oo;
            } });
          };
          xe(Vs, (Mr) => {
            c(pi) && Mr(co);
          }), zi(gi, (Mr, cr) => ip?.(Mr, cr), () => (Mr) => (function(cr, qr) {
            D[qr] = cr.getBoundingClientRect().height;
          })(Mr, c(or))), Ie(() => {
            var Mr;
            return vt(lo, "".concat((Mr = c(or)) !== null && Mr !== void 0 ? Mr : "", " "));
          }), Z(mi, gi);
        });
        var Bo = le(ao);
        Ir(Bo, 1, () => c(qe), Kr, (mi, gi, lo, Vs) => {
          var co, Mr = VW(), cr = Oe(() => (_(c(or)), c(gi), ee(() => [String(c(or))].concat(c(gi))))), qr = Oe(() => (_(Ze), c(Ht), c(gi), ee(() => Ze(c(Ht), c(gi))))), hs = Oe(() => (_(_n), c(ge), _(Ts), _(c(cr)), ee(() => _n(c(ge)) && Ts(c(ge).path, c(cr))))), pc = Oe(() => (_(c(kr)), ee(() => {
            var Xr;
            return (Xr = c(kr)) === null || Xr === void 0 ? void 0 : Xr.columns[lo];
          }))), mc = Oe(() => (_(Sc), _(c(cr)), _(c(pc)), ee(() => Sc(c(cr), c(pc))))), _u = Y(Mr), gc = Y(_u), Au = (Xr) => {
            var Gi = Oe(() => (_(Cm), _(ys), c(Ht), _(c(Us)), c(gi), ee(() => Cm(ys(c(Ht), c(Us), c(gi)))))), Mu = Oe(() => (_(c(Gi)), ee(() => !!c(Gi) && c(Gi).some((wl) => wl.active)))), Tu = Oe(() => (_(Sn), _(c(Gi)), ee(() => !Sn(c(Gi)))));
            (function(wl, Ci) {
              mt(Ci, !1);
              var $u = E(Ci, "path", 9), Ky = E(Ci, "value", 9), Gy = E(Ci, "parser", 9), T3 = E(Ci, "isSelected", 9), $3 = E(Ci, "containsSearchResult", 9), P3 = E(Ci, "containsActiveSearchResult", 9), R3 = E(Ci, "onEdit", 9);
              zt(!0);
              var Jy, _d = OW(), N3 = Y(_d);
              Ie((Pu, D3) => {
                Jy = It(_d, 1, "jse-inline-value svelte-h57m0p", null, Jy, Pu), vt(N3, D3);
              }, [() => ({ "jse-selected": T3(), "jse-highlight": $3(), "jse-active": P3() }), () => (_(ta), _(Gy()), _(Ky()), _(50), ee(() => {
                var Pu;
                return ta((Pu = Gy().stringify(Ky())) !== null && Pu !== void 0 ? Pu : "", 50);
              }))], Oe), Pe("dblclick", _d, () => R3()($u())), Z(wl, _d), gt();
            })(Xr, { get path() {
              return c(cr);
            }, get value() {
              return c(qr);
            }, get parser() {
              return y();
            }, get isSelected() {
              return c(hs);
            }, get containsSearchResult() {
              return c(Tu);
            }, get containsActiveSearchResult() {
              return c(Mu);
            }, onEdit: Dn });
          }, Pg = (Xr) => {
            var Gi = Oe(() => (_(ys), c(H), c(me), _(c(cr)), ee(() => {
              var Ci;
              return (Ci = ys(c(H), c(me), c(cr))) === null || Ci === void 0 ? void 0 : Ci.searchResults;
            }))), Mu = Oe(() => c(qr) !== void 0 ? c(qr) : ""), Tu = Oe(() => (_(Es), c(H), c(ye), _(c(cr)), ee(() => Es(c(H), c(ye), c(cr))))), wl = Oe(() => c(hs) ? c(ge) : void 0);
            qA(Xr, { get path() {
              return c(cr);
            }, get value() {
              return c(Mu);
            }, get enforceString() {
              return c(Tu);
            }, get selection() {
              return c(wl);
            }, get searchResultItems() {
              return c(Gi);
            }, get context() {
              return c(xt);
            } });
          };
          xe(gc, (Xr) => {
            _(Or), _(c(qr)), ee(() => Or(c(qr))) ? Xr(Au) : Xr(Pg, !1);
          });
          var Rg = le(gc), Ng = (Xr) => {
            var Gi = UW();
            Ea(Y(Gi), { selected: !0, onContextMenu: xr }), Z(Xr, Gi);
          };
          xe(Rg, (Xr) => {
            _(h()), _(c(hs)), _(oi), c(ge), ee(() => !h() && c(hs) && !oi(c(ge))) && Xr(Ng);
          });
          var ps = le(_u, 2), xl = (Xr) => {
            eu(Xr, { get validationError() {
              return c(mc);
            }, get onExpand() {
              return Oo;
            } });
          };
          xe(ps, (Xr) => {
            c(mc) && Xr(xl);
          }), Ie((Xr, Gi) => {
            Ln(Mr, "data-path", Xr), co = It(_u, 1, "jse-value-outer svelte-u14cgx", null, co, Gi);
          }, [() => (_(kp), _(c(cr)), ee(() => kp(c(cr)))), () => ({ "jse-selected-value": c(hs) })], Oe), Z(mi, Mr);
        });
        var ds = le(Bo), qo = (mi) => {
          Z(mi, WW());
        };
        xe(ds, (mi) => {
          c(n) && mi(qo);
        }), Z(dt, fi);
      });
      var Dt, jr = Y(le(ir));
      pr(hn, (dt) => C($, dt), () => c($)), zi(hn, (dt, Ht) => ip?.(dt, Ht), () => Et), yi(() => Pe("scroll", hn, tn));
      var Yn = le(hn, 2), dr = (dt) => {
        var Ht = Oe(() => (c(V), ee(() => "You pasted a JSON ".concat(Array.isArray(c(V).contents) ? "array" : "object", " as text")))), gr = Oe(() => [{ icon: Xa, text: "Paste as JSON instead", title: "Paste the text as JSON instead of a single value", onMouseDown: Te }, { text: "Leave as is", title: "Keep the pasted content as a single value", onClick: We }]);
        jo(dt, { type: "info", get message() {
          return c(Ht);
        }, get actions() {
          return c(gr);
        } });
      };
      xe(Yn, (dt) => {
        c(V) && dt(dr);
      });
      var $n = le(Yn, 2), jt = (dt) => {
        var Ht = Oe(() => [{ icon: Xa, text: "Paste as string instead", title: "Paste the clipboard data as a single string value instead of an array", onClick: be }, { text: "Leave as is", title: "Keep the pasted array", onClick: Rt }]);
        jo(dt, { type: "info", message: "Multiline text was pasted as array", get actions() {
          return c(Ht);
        } });
      };
      xe($n, (dt) => {
        c(U) && dt(jt);
      });
      var jn = le($n, 2), kt = (dt) => {
        var Ht = Oe(() => h() ? [] : [{ icon: g1, text: "Ok", title: "Accept the repaired document", onClick: Hn }, { icon: Dp, text: "Repair manually instead", title: "Leave the document unchanged and repair it manually instead", onClick: Jt }]);
        jo(dt, { type: "success", message: "The loaded JSON document was invalid but is successfully repaired.", get actions() {
          return c(Ht);
        }, onClose: Xe });
      };
      xe(jn, (dt) => {
        c(ot) && dt(kt);
      }), My(le(jn, 2), { get validationErrors() {
        return c(qn);
      }, selectError: dn }), Ie((dt, Ht, gr) => {
        At = It(Un, 1, "jse-table-invisible-start-section svelte-u14cgx", null, At, dt), Ln(pn, "colspan", (c(qe), ee(() => c(qe).length))), nn = Qo(pn, "", nn, Ht), Ln(jr, "colspan", (c(qe), ee(() => c(qe).length))), Dt = Qo(jr, "", Dt, gr);
      }, [() => ({ "jse-search-box-background": c(X) }), () => ({ height: (c(r), ee(() => c(r).startHeight + "px")) }), () => ({ height: (c(r), ee(() => c(r).endHeight + "px")) })], Oe), Z(ft, Xt);
    }, ut = (ft, Xt) => {
      var wn = (Wn) => {
        var Si = GW(), I = wt(Si), se = Oe(() => h() ? [] : [{ icon: Dp, text: "Repair manually", title: 'Open the document in "code" mode and repair it manually', onClick: Jt }]);
        jo(I, { type: "error", message: "The loaded JSON document is invalid and could not be repaired automatically.", get actions() {
          return c(se);
        } }), QA(le(I, 2), { get text() {
          return c(ue);
        }, get json() {
          return c(H);
        }, get indentation() {
          return M();
        }, get parser() {
          return y();
        } }), Z(Wn, Si);
      }, hn = (Wn) => {
        IW(Wn, { get text() {
          return c(ue);
        }, get json() {
          return c(H);
        }, get readOnly() {
          return h();
        }, get parser() {
          return y();
        }, openJSONEditorModal: Dn, extractPath: Mn, get onChangeMode() {
          return z();
        }, onClick: () => {
          Xe();
        } });
      };
      xe(ft, (Wn) => {
        c(P) && c(ue) !== void 0 && c(ue) !== "" ? Wn(wn) : Wn(hn, !1);
      }, Xt);
    };
    xe(Ke, (ft) => {
      c(pt) ? ft(it) : ft(ut, !1);
    }), Pe("paste", He, fe), Z(q, he);
  }, so = (q) => {
    Z(q, YW());
  };
  xe(Lr, (q) => {
    d ? q(so, !1) : q(Wt);
  }), pr(tr, (q) => C(O, q), () => c(O));
  var Br = le(tr, 2), Qr = (q) => {
    LA(q, { onClose: () => C(A, !1) });
  };
  xe(Br, (q) => {
    c(A) && q(Qr);
  });
  var Wr = le(Br, 2), ki = (q) => {
    BA(q, Ga(() => c(je), { onClose: () => {
      var he;
      (he = c(je)) === null || he === void 0 || he.onClose(), C(je, void 0);
    } }));
  };
  return xe(Wr, (q) => {
    c(je) && q(ki);
  }), Ie((q) => Tn = It(tr, 1, "jse-table-mode svelte-u14cgx", null, Tn, q), [() => ({ "no-main-menu": !b() })], Oe), Pe("mousedown", tr, function(q) {
    if (q.buttons === 1 || q.buttons === 2) {
      var he = q.target;
      he.isContentEditable || Xe();
      var $e = aA(he);
      if ($e) {
        if (oi(c(ge)) && Yf(c(H), c(ge), $e)) return;
        C(ge, sn($e)), q.preventDefault();
      }
    }
  }), Pe("keydown", tr, function(q) {
    var he = ga(q);
    if (o("keydown", { combo: he, key: q.key }), he === "Ctrl+X" && (q.preventDefault(), Yt(!0)), he === "Ctrl+Shift+X" && (q.preventDefault(), Yt(!1)), he === "Ctrl+C" && (q.preventDefault(), ht(!0)), he === "Ctrl+Shift+C" && (q.preventDefault(), ht(!1)), he === "Ctrl+D" && (q.preventDefault(), Fn()), he !== "Delete" && he !== "Backspace" || (q.preventDefault(), et()), he === "Insert" && q.preventDefault(), he === "Ctrl+A" && q.preventDefault(), he === "Ctrl+Q" && Jr(q), he === "ArrowLeft" && (q.preventDefault(), Qt(), c(ge))) {
      var $e = (function(Xt, wn) {
        var { rowIndex: hn, columnIndex: Wn } = Co(at(wn), Xt);
        return Wn > 0 ? sn(_l({ rowIndex: hn, columnIndex: Wn - 1 }, Xt)) : wn;
      })(c(qe), c(ge));
      C(ge, $e), Vr(at($e));
    }
    if (he === "ArrowRight" && (q.preventDefault(), Qt(), c(ge))) {
      var He = (function(Xt, wn) {
        var { rowIndex: hn, columnIndex: Wn } = Co(at(wn), Xt);
        return Wn < Xt.length - 1 ? sn(_l({ rowIndex: hn, columnIndex: Wn + 1 }, Xt)) : wn;
      })(c(qe), c(ge));
      C(ge, He), Vr(at(He));
    }
    if (he === "ArrowUp" && (q.preventDefault(), Qt(), c(ge))) {
      var Ke = (function(Xt, wn) {
        var { rowIndex: hn, columnIndex: Wn } = Co(at(wn), Xt);
        return hn > 0 ? sn(_l({ rowIndex: hn - 1, columnIndex: Wn }, Xt)) : wn;
      })(c(qe), c(ge));
      C(ge, Ke), Vr(at(Ke));
    }
    if (he === "ArrowDown" && (q.preventDefault(), Qt(), c(ge))) {
      var it = (function(Xt, wn, hn) {
        var { rowIndex: Wn, columnIndex: Si } = Co(at(hn), wn);
        return Wn < Xt.length - 1 ? sn(_l({ rowIndex: Wn + 1, columnIndex: Si }, wn)) : hn;
      })(c(H), c(qe), c(ge));
      C(ge, it), Vr(at(it));
    }
    if (he === "Enter" && c(ge) && _n(c(ge))) {
      q.preventDefault();
      var ut = c(ge).path;
      Or(Ze(c(H), ut)) ? Dn(ut) : h() || C(ge, De(De({}, c(ge)), {}, { edit: !0 }));
    }
    if (he.replace(/^Shift\+/, "").length === 1 && c(ge)) return q.preventDefault(), void (function(Xt) {
      Ft.apply(this, arguments);
    })(q.key);
    if (he === "Ctrl+Enter" && _n(c(ge))) {
      q.preventDefault();
      var ft = Ze(c(H), c(ge).path);
      xg(ft) && window.open(String(ft), "_blank");
    }
    he === "Escape" && c(ge) && (q.preventDefault(), C(ge, void 0)), he === "Ctrl+F" && (q.preventDefault(), Lt(!1)), he === "Ctrl+H" && (q.preventDefault(), Lt(!0)), he === "Ctrl+Z" && (q.preventDefault(), In()), he === "Ctrl+Shift+Z" && (q.preventDefault(), ji());
  }), Pe("contextmenu", tr, Jr), Z(t, mr), Ct(e, "validate", Rn), Ct(e, "patch", on), Ct(e, "focus", Xe), Ct(e, "acceptAutoRepair", Hn), Ct(e, "scrollTo", Kn), Ct(e, "findElement", Gn), Ct(e, "openTransformModal", Ut), gt({ validate: Rn, patch: on, focus: Xe, acceptAutoRepair: Hn, scrollTo: Kn, findElement: Gn, openTransformModal: Ut });
}
function lS(t, e) {
  mt(e, !1);
  var n = E(e, "content", 8), r = E(e, "selection", 12), i = E(e, "readOnly", 8), o = E(e, "indentation", 8), s = E(e, "tabSize", 8), a = E(e, "truncateTextSize", 8), l = E(e, "externalMode", 8), u = E(e, "mainMenuBar", 8), f = E(e, "navigationBar", 8), d = E(e, "statusBar", 8), h = E(e, "askToFormat", 8), p = E(e, "escapeControlCharacters", 8), m = E(e, "escapeUnicodeCharacters", 8), v = E(e, "flattenColumns", 8), g = E(e, "parser", 8), b = E(e, "parseMemoizeOne", 8), x = E(e, "validator", 8), w = E(e, "validationParser", 8), j = E(e, "pathParser", 8), y = E(e, "insideModal", 8), k = E(e, "onChange", 8), S = E(e, "onChangeMode", 8), T = E(e, "onSelect", 8), M = E(e, "onRenderValue", 8), N = E(e, "onClassName", 8), z = E(e, "onRenderMenu", 8), L = E(e, "onRenderContextMenu", 8), W = E(e, "onError", 8), ce = E(e, "onFocus", 8), te = E(e, "onBlur", 8), we = E(e, "onSortModal", 8), Ee = E(e, "onTransformModal", 8), ae = E(e, "onJSONEditorModal", 8), re = Q(), G = Q(), B = Q(), ie = ui("jsoneditor:JSONEditorRoot"), R = Q(e3({ onChange: (A) => C(R, A) }).get()), O = Q(l());
  function $(A) {
    if (Tk(A)) {
      C(O, A.undo.mode);
      var D = c(R).items(), F = D.findIndex((ve) => ve === A), oe = F !== -1 ? D[F - 1] : void 0;
      ie("handleUndo", { index: F, item: A, items: D, prevItem: oe }), oe && r(oe.redo.selection), S()(c(O));
    }
  }
  function ne(A) {
    if (Tk(A)) {
      C(O, A.redo.mode);
      var D = c(R).items(), F = D.findIndex((ve) => ve === A), oe = F !== -1 ? D[F + 1] : void 0;
      ie("handleRedo", { index: F, item: A, items: D, nextItem: oe }), oe && r(oe.undo.selection), S()(c(O));
    }
  }
  var je = Q(), J = { type: "separator" }, H = Q(), ue = Q();
  function P(A) {
    if (c(re)) return c(re).patch(A);
    if (c(G)) return c(G).patch(A);
    if (c(B)) return c(B).patch(A);
    throw new Error('Method patch is not available in mode "'.concat(c(O), '"'));
  }
  function V(A, D) {
    if (c(re)) return c(re).expand(A, D);
    if (c(B)) return c(B).expand(A, D);
    throw new Error('Method expand is not available in mode "'.concat(c(O), '"'));
  }
  function U(A, D) {
    if (c(re)) return c(re).collapse(A, D);
    if (c(B)) return c(B).collapse(A);
    throw new Error('Method collapse is not available in mode "'.concat(c(O), '"'));
  }
  function me(A) {
    if (c(B)) c(B).openTransformModal(A);
    else if (c(re)) c(re).openTransformModal(A);
    else {
      if (!c(G)) throw new Error('Method transform is not available in mode "'.concat(c(O), '"'));
      c(G).openTransformModal(A);
    }
  }
  function X() {
    if (c(B)) return c(B).validate();
    if (c(re)) return c(re).validate();
    if (c(G)) return c(G).validate();
    throw new Error('Method validate is not available in mode "'.concat(c(O), '"'));
  }
  function K() {
    return c(re) ? c(re).acceptAutoRepair() : n();
  }
  function rt(A) {
    if (c(re)) return c(re).scrollTo(A);
    if (c(G)) return c(G).scrollTo(A);
    throw new Error('Method scrollTo is not available in mode "'.concat(c(O), '"'));
  }
  function Qe(A) {
    if (c(re)) return c(re).findElement(A);
    if (c(G)) return c(G).findElement(A);
    throw new Error('Method findElement is not available in mode "'.concat(c(O), '"'));
  }
  function Ae() {
    c(B) ? c(B).focus() : c(re) ? c(re).focus() : c(G) && c(G).focus();
  }
  function tt() {
    return Re.apply(this, arguments);
  }
  function Re() {
    return (Re = Mt(function* () {
      c(B) && (yield c(B).refresh());
    })).apply(this, arguments);
  }
  de(() => _(l()), () => {
    (function(A) {
      if (A !== c(O)) {
        var D = { type: "mode", undo: { mode: c(O), selection: void 0 }, redo: { mode: A, selection: void 0 } };
        c(O) === "text" && c(B) && c(B).flush(), ie("add history item", D), c(R).add(D), C(O, A);
      }
    })(l());
  }), de(() => (c(O), _(S())), () => {
    C(je, [{ type: "button", text: "text", title: "Switch to text mode (current mode: ".concat(c(O), ")"), className: "jse-group-button jse-first" + (c(O) === Hr.text ? " jse-selected" : ""), onClick: () => S()(Hr.text) }, { type: "button", text: "tree", title: "Switch to tree mode (current mode: ".concat(c(O), ")"), className: "jse-group-button " + (c(O) === Hr.tree ? " jse-selected" : ""), onClick: () => S()(Hr.tree) }, { type: "button", text: "table", title: "Switch to table mode (current mode: ".concat(c(O), ")"), className: "jse-group-button jse-last" + (c(O) === Hr.table ? " jse-selected" : ""), onClick: () => S()(Hr.table) }]);
  }), de(() => (c(je), _(z()), c(O), _(y()), _(i())), () => {
    C(H, (A) => {
      var D = Eb(A[0]) ? c(je).concat(A) : c(je).concat(J, A), F = p0(D);
      return z()(D, { mode: c(O), modal: y(), readOnly: i() }) || F;
    });
  }), de(() => (_(L()), c(O), _(y()), _(i()), _(r())), () => {
    C(ue, (A) => {
      var D, F = p0(A);
      return (D = L()(A, { mode: c(O), modal: y(), readOnly: i(), selection: r() })) !== null && D !== void 0 ? D : !i() && F;
    });
  }), Bn(), zt();
  var qe = Er(), pt = wt(qe), Ge = (A) => {
    pr(CW(A, { get externalContent() {
      return n();
    }, get externalSelection() {
      return r();
    }, get history() {
      return c(R);
    }, get readOnly() {
      return i();
    }, get indentation() {
      return o();
    }, get tabSize() {
      return s();
    }, get mainMenuBar() {
      return u();
    }, get statusBar() {
      return d();
    }, get askToFormat() {
      return h();
    }, get escapeUnicodeCharacters() {
      return m();
    }, get parser() {
      return g();
    }, get validator() {
      return x();
    }, get validationParser() {
      return w();
    }, get onChange() {
      return k();
    }, get onChangeMode() {
      return S();
    }, get onSelect() {
      return T();
    }, onUndo: $, onRedo: ne, get onError() {
      return W();
    }, get onFocus() {
      return ce();
    }, get onBlur() {
      return te();
    }, get onRenderMenu() {
      return c(H);
    }, get onSortModal() {
      return we();
    }, get onTransformModal() {
      return Ee();
    }, $$legacy: !0 }), (D) => C(B, D), () => c(B));
  }, $t = (A, D) => {
    var F = (ve) => {
      pr(XW(ve, { get externalContent() {
        return n();
      }, get externalSelection() {
        return r();
      }, get history() {
        return c(R);
      }, get readOnly() {
        return i();
      }, get truncateTextSize() {
        return a();
      }, get mainMenuBar() {
        return u();
      }, get escapeControlCharacters() {
        return p();
      }, get escapeUnicodeCharacters() {
        return m();
      }, get flattenColumns() {
        return v();
      }, get parser() {
        return g();
      }, get parseMemoizeOne() {
        return b();
      }, get validator() {
        return x();
      }, get validationParser() {
        return w();
      }, get indentation() {
        return o();
      }, get onChange() {
        return k();
      }, get onChangeMode() {
        return S();
      }, get onSelect() {
        return T();
      }, onUndo: $, onRedo: ne, get onRenderValue() {
        return M();
      }, get onFocus() {
        return ce();
      }, get onBlur() {
        return te();
      }, get onRenderMenu() {
        return c(H);
      }, get onRenderContextMenu() {
        return c(ue);
      }, get onSortModal() {
        return we();
      }, get onTransformModal() {
        return Ee();
      }, get onJSONEditorModal() {
        return ae();
      }, $$legacy: !0 }), (Ne) => C(G, Ne), () => c(G));
    }, oe = (ve) => {
      pr(Vb(ve, { get externalContent() {
        return n();
      }, get externalSelection() {
        return r();
      }, get history() {
        return c(R);
      }, get readOnly() {
        return i();
      }, get indentation() {
        return o();
      }, get truncateTextSize() {
        return a();
      }, get mainMenuBar() {
        return u();
      }, get navigationBar() {
        return f();
      }, get escapeControlCharacters() {
        return p();
      }, get escapeUnicodeCharacters() {
        return m();
      }, get parser() {
        return g();
      }, get parseMemoizeOne() {
        return b();
      }, get validator() {
        return x();
      }, get validationParser() {
        return w();
      }, get pathParser() {
        return j();
      }, get onError() {
        return W();
      }, get onChange() {
        return k();
      }, get onChangeMode() {
        return S();
      }, get onSelect() {
        return T();
      }, onUndo: $, onRedo: ne, get onRenderValue() {
        return M();
      }, get onClassName() {
        return N();
      }, get onFocus() {
        return ce();
      }, get onBlur() {
        return te();
      }, get onRenderMenu() {
        return c(H);
      }, get onRenderContextMenu() {
        return c(ue);
      }, get onSortModal() {
        return we();
      }, get onTransformModal() {
        return Ee();
      }, get onJSONEditorModal() {
        return ae();
      }, $$legacy: !0 }), (Ne) => C(re, Ne), () => c(re));
    };
    xe(A, (ve) => {
      c(O), _(Hr), ee(() => c(O) === Hr.table) ? ve(F) : ve(oe, !1);
    }, D);
  };
  return xe(pt, (A) => {
    c(O), _(Hr), ee(() => c(O) === Hr.text || String(c(O)) === "code") ? A(Ge) : A($t, !1);
  }), Z(t, qe), Ct(e, "patch", P), Ct(e, "expand", V), Ct(e, "collapse", U), Ct(e, "transform", me), Ct(e, "validate", X), Ct(e, "acceptAutoRepair", K), Ct(e, "scrollTo", rt), Ct(e, "findElement", Qe), Ct(e, "focus", Ae), Ct(e, "refresh", tt), gt({ patch: P, expand: V, collapse: U, transform: me, validate: X, acceptAutoRepair: K, scrollTo: rt, findElement: Qe, focus: Ae, refresh: tt });
}
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-modal-wrapper.svelte-v0el4e {
  flex: 1;
  display: flex;
  min-width: 0;
  min-height: 0;
  flex-direction: column;
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 20px;
  overflow: auto;
  min-width: 0;
  min-height: 0;
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-actions:where(.svelte-v0el4e) {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-top: var(--jse-padding, 10px);
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-actions:where(.svelte-v0el4e) button.jse-primary:where(.svelte-v0el4e) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-actions:where(.svelte-v0el4e) button.jse-primary:where(.svelte-v0el4e):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-actions:where(.svelte-v0el4e) button.jse-primary:where(.svelte-v0el4e):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-label:where(.svelte-v0el4e) {
  font-weight: bold;
  display: block;
  box-sizing: border-box;
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-label:where(.svelte-v0el4e) .jse-label-inner:where(.svelte-v0el4e) {
  margin-top: calc(2 * var(--jse-padding, 10px));
  margin-bottom: calc(0.5 * var(--jse-padding, 10px));
  box-sizing: border-box;
}
.jse-modal-wrapper.svelte-v0el4e .jse-modal-contents:where(.svelte-v0el4e) .jse-modal-inline-editor:where(.svelte-v0el4e) {
  flex: 1;
  min-height: 150px;
  min-width: 0;
  max-width: 100%;
  display: flex;
  --jse-theme-color: var(--jse-modal-editor-theme-color, #707070);
  --jse-theme-color-highlight: var(--jse-modal-editor-theme-color-highlight, #646464);
}
.jse-modal-wrapper.svelte-v0el4e .jse-actions:where(.svelte-v0el4e) {
  gap: var(--jse-padding, 10px);
  align-items: center;
}
.jse-modal-wrapper.svelte-v0el4e .jse-actions:where(.svelte-v0el4e) .jse-error:where(.svelte-v0el4e) {
  flex: 1;
  color: var(--jse-error-color, #ee5341);
}
.jse-modal-wrapper.svelte-v0el4e .jse-actions:where(.svelte-v0el4e) button.jse-secondary:where(.svelte-v0el4e) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-secondary-background, #d3d3d3);
  color: var(--jse-button-secondary-color, var(--jse-text-color, #4d4d4d));
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-modal-wrapper.svelte-v0el4e .jse-actions:where(.svelte-v0el4e) button.jse-secondary:where(.svelte-v0el4e):hover {
  background: var(--jse-button-secondary-background-highlight, #e1e1e1);
}
.jse-modal-wrapper.svelte-v0el4e .jse-actions:where(.svelte-v0el4e) button.jse-secondary:where(.svelte-v0el4e):disabled {
  background: var(--jse-button-secondary-background-disabled, #9d9d9d);
}
.jse-modal-wrapper.svelte-v0el4e input:where(.svelte-v0el4e) {
  border: var(--jse-input-border, 1px solid #d8dbdf);
  outline: none;
  box-sizing: border-box;
  padding: calc(0.5 * var(--jse-padding, 10px));
  font-family: var(--jse-font-family-mono, consolas, menlo, monaco, "Ubuntu Mono", "source-code-pro", monospace);
  font-size: var(--jse-font-size-mono, 14px);
  color: inherit;
  background: var(--jse-input-background, var(--jse-background-color, #fff));
}
.jse-modal-wrapper.svelte-v0el4e input:where(.svelte-v0el4e):focus {
  border: var(--jse-input-border-focus, 1px solid var(--jse-input-border-focus, var(--jse-theme-color, #3883fa)));
}
.jse-modal-wrapper.svelte-v0el4e input:where(.svelte-v0el4e):read-only {
  background: var(--jse-input-background-readonly, transparent);
}`);
var ZW = pe('<div class="jse-error svelte-v0el4e"> </div>'), eH = pe('<button type="button" class="jse-secondary svelte-v0el4e"><!> Back</button>'), tH = pe('<button type="button" class="jse-primary svelte-v0el4e">Apply</button>'), nH = pe('<button type="button" class="jse-primary svelte-v0el4e">Close</button>'), rH = pe('<!> <div class="jse-modal-contents svelte-v0el4e"><div class="jse-label svelte-v0el4e"><div class="jse-label-inner svelte-v0el4e">Path</div></div> <input class="jse-path svelte-v0el4e" type="text" readonly="" title="Selected path"/> <div class="jse-label svelte-v0el4e"><div class="jse-label-inner svelte-v0el4e">Contents</div></div> <div class="jse-modal-inline-editor svelte-v0el4e"><!></div> <div class="jse-actions svelte-v0el4e"><!> <!> <!></div></div>', 1), iH = pe('<div class="jse-modal-wrapper svelte-v0el4e"><!></div>'), oH = {};
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-modal-contents.svelte-1v9c92j {
  flex: 1;
  display: flex;
  flex-direction: column;
  padding: 20px;
  overflow: auto;
  min-width: 0;
  min-height: 0;
}
.jse-modal-contents.svelte-1v9c92j .jse-actions:where(.svelte-1v9c92j) {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-top: var(--jse-padding, 10px);
}
.jse-modal-contents.svelte-1v9c92j .jse-actions:where(.svelte-1v9c92j) button.jse-primary:where(.svelte-1v9c92j) {
  border: none;
  background: transparent;
  color: inherit;
  cursor: pointer;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  padding: 5px;
  margin: 0;
  background: var(--jse-button-primary-background, var(--jse-theme-color, #3883fa));
  color: var(--jse-button-primary-color, #fff);
  padding: var(--jse-padding, 10px) calc(2 * var(--jse-padding, 10px));
  border-radius: 3px;
}
.jse-modal-contents.svelte-1v9c92j .jse-actions:where(.svelte-1v9c92j) button.jse-primary:where(.svelte-1v9c92j):hover {
  background: var(--jse-button-primary-background-highlight, var(--jse-theme-color-highlight, #5f9dff));
}
.jse-modal-contents.svelte-1v9c92j .jse-actions:where(.svelte-1v9c92j) button.jse-primary:where(.svelte-1v9c92j):disabled {
  background: var(--jse-button-primary-background-disabled, #9d9d9d);
}
.jse-modal-contents.svelte-1v9c92j table:where(.svelte-1v9c92j) {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}
.jse-modal-contents.svelte-1v9c92j table:where(.svelte-1v9c92j) th:where(.svelte-1v9c92j),
.jse-modal-contents.svelte-1v9c92j table:where(.svelte-1v9c92j) td:where(.svelte-1v9c92j) {
  text-align: left;
  vertical-align: middle;
  font-weight: normal;
  padding-bottom: var(--jse-padding, 10px);
}
.jse-modal-contents.svelte-1v9c92j input.jse-path:where(.svelte-1v9c92j) {
  width: 100%;
  box-sizing: border-box;
  padding: 5px 10px;
  border: var(--jse-input-border, 1px solid #d8dbdf);
  border-radius: var(--jse-input-radius, 3px);
  font-family: inherit;
  font-size: inherit;
  background: inherit;
  background: var(--jse-input-background-readonly, transparent);
  color: inherit;
  outline: none;
}
.jse-modal-contents.svelte-1v9c92j .svelte-select input {
  box-sizing: border-box;
}
.jse-modal-contents.svelte-1v9c92j .jse-space:where(.svelte-1v9c92j) {
  height: 200px;
}
.jse-modal-contents.svelte-1v9c92j .jse-space:where(.svelte-1v9c92j) .jse-error:where(.svelte-1v9c92j) {
  color: var(--jse-error-color, #ee5341);
}`);
var Oc = yg(() => oH), sH = pe('<tr><th class="svelte-1v9c92j">Property</th><td class="svelte-1v9c92j"><!></td></tr>'), aH = pe('<div class="jse-error svelte-1v9c92j"> </div>'), lH = pe('<!> <div class="jse-modal-contents svelte-1v9c92j"><table class="svelte-1v9c92j"><colgroup><col width="25%"/><col width="75%"/></colgroup><tbody><tr><th class="svelte-1v9c92j">Path</th><td class="svelte-1v9c92j"><input class="jse-path svelte-1v9c92j" type="text" readonly="" title="Selected path"/></td></tr><!><tr><th class="svelte-1v9c92j">Direction</th><td class="svelte-1v9c92j"><!></td></tr></tbody></table> <div class="jse-space svelte-1v9c92j"><!></div> <div class="jse-actions svelte-1v9c92j"><button type="button" class="jse-primary svelte-1v9c92j">Sort</button></div></div>', 1);
Tt(`/* over all fonts, sizes, and colors */
/* "consolas" for Windows, "menlo" for Mac with fallback to "monaco", 'Ubuntu Mono' for Ubuntu */
/* (at Mac this font looks too large at 14px, but 13px is too small for the font on Windows) */
/* main, menu, modal */
/* jsoneditor modal */
/* tooltip in text mode */
/* panels: navigation bar, gutter, search box */
/* navigation-bar */
/* context menu */
/* contents: json key and values */
/* contents: selected or hovered */
/* contents: section of collapsed items in an array */
/* contents: highlighting of search matches */
/* contents: inline tags inside the JSON document */
/* contents: table */
/* controls in modals: inputs, buttons, and \`a\` */
/* messages */
/* svelte-select */
/* color picker */
.jse-main.svelte-57bmz4 {
  width: 100%;
  height: 100%;
  min-width: 0;
  min-height: 150px;
  font-family: var(--jse-font-family, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif);
  font-size: var(--jse-font-size, 16px);
  line-height: normal;
  position: relative;
  display: flex;
  flex-direction: row;
}
.jse-main.svelte-57bmz4:not(.jse-focus) {
  --jse-selection-background-color: var(--jse-selection-background-inactive-color, #e8e8e8);
  --jse-context-menu-pointer-background: var(--jse-context-menu-pointer-hover-background, #b2b2b2);
}`);
var cH = pe('<div role="none"><!></div> <!> <!> <!>', 1);
function uH(t, e) {
  mt(e, !1);
  var n = Q(void 0, !0), r = ui("jsoneditor:JSONEditor"), i = { text: "" }, o = void 0, s = !1, a = Hr.tree, l = !0, u = !0, f = !0, d = !0, h = !1, p = !1, m = !0, v = JSON, g = void 0, b = JSON, x = { parse: aF, stringify: no }, w = [Oq], j = w[0].id, y = Oo, k = void 0, S = void 0, T = sF, M = Oo, N = Oo, z = Oo, L = Oo, W = (Te) => {
    console.error(Te), alert(Te.toString());
  }, ce = Oo, te = Oo, we = E(e, "content", 13, i), Ee = E(e, "selection", 13, o), ae = E(e, "readOnly", 13, s), re = E(e, "indentation", 13, 2), G = E(e, "tabSize", 13, 4), B = E(e, "truncateTextSize", 13, 1e3), ie = E(e, "mode", 13, a), R = E(e, "mainMenuBar", 13, l), O = E(e, "navigationBar", 13, u), $ = E(e, "statusBar", 13, f), ne = E(e, "askToFormat", 13, d), je = E(e, "escapeControlCharacters", 13, h), J = E(e, "escapeUnicodeCharacters", 13, p), H = E(e, "flattenColumns", 13, m), ue = E(e, "parser", 13, v), P = E(e, "validator", 13, g), V = E(e, "validationParser", 13, b), U = E(e, "pathParser", 13, x), me = E(e, "queryLanguages", 13, w), X = E(e, "queryLanguageId", 13, j), K = E(e, "onChangeQueryLanguage", 13, y), rt = E(e, "onChange", 13, k), Qe = E(e, "onSelect", 13, S), Ae = E(e, "onRenderValue", 13, T), tt = E(e, "onClassName", 13, M), Re = E(e, "onRenderMenu", 13, N), qe = E(e, "onRenderContextMenu", 13, z), pt = E(e, "onChangeMode", 13, L), Ge = E(e, "onError", 13, W), $t = E(e, "onFocus", 13, ce), A = E(e, "onBlur", 13, te), D = Q(zc(), !0), F = Q(!1, !0), oe = Q(void 0, !0), ve = Q(void 0, !0), Ne = Q(void 0, !0), Fe = Q(void 0, !0), ye = Q(ue(), !0);
  function ge() {
    return we();
  }
  function yt(Te) {
    r("set");
    var ln = Iv(Te);
    if (ln) throw new Error(ln);
    C(D, zc()), we(Te), fr();
  }
  function ot(Te) {
    r("update");
    var ln = Iv(Te);
    if (ln) throw new Error(ln);
    we(Te), fr();
  }
  function _e(Te) {
    var ln = c(oe).patch(Te);
    return fr(), ln;
  }
  function xt(Te) {
    Ee(Te), fr();
  }
  function bn(Te, ln) {
    c(oe).expand(Te, ln), fr();
  }
  function qn(Te) {
    var ln = arguments.length > 1 && arguments[1] !== void 0 && arguments[1];
    c(oe).collapse(Te, ln), fr();
  }
  function un() {
    var Te = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    c(oe).transform(Te), fr();
  }
  function en() {
    return c(oe).validate();
  }
  function Rn() {
    var Te = c(oe).acceptAutoRepair();
    return fr(), Te;
  }
  function on(Te) {
    return qt.apply(this, arguments);
  }
  function qt() {
    return (qt = Mt(function* (Te) {
      yield c(oe).scrollTo(Te);
    })).apply(this, arguments);
  }
  function Pt(Te) {
    return c(oe).findElement(Te);
  }
  function an() {
    c(oe).focus(), fr();
  }
  function yn() {
    return Ot.apply(this, arguments);
  }
  function Ot() {
    return (Ot = Mt(function* () {
      yield c(oe).refresh();
    })).apply(this, arguments);
  }
  function Xe(Te) {
    var ln, Nn, er, be, Le, We, Rt, Jt, Yt, fn, ht, Gt, et, Mn, Fn, lr, Vt, xn, Ft, fe, ke, Ue, Nt, dn, Ut, Dn, wr, Jn, cn, Lt, In, ji = Object.keys(Te);
    for (var Et of ji) switch (Et) {
      case "content":
        we((ln = Te[Et]) !== null && ln !== void 0 ? ln : i);
        break;
      case "selection":
        Ee((Nn = Te[Et]) !== null && Nn !== void 0 ? Nn : o);
        break;
      case "readOnly":
        ae((er = Te[Et]) !== null && er !== void 0 ? er : s);
        break;
      case "indentation":
        re((be = Te[Et]) !== null && be !== void 0 ? be : 2);
        break;
      case "tabSize":
        G((Le = Te[Et]) !== null && Le !== void 0 ? Le : 4);
        break;
      case "truncateTextSize":
        B((We = Te[Et]) !== null && We !== void 0 ? We : 1e3);
        break;
      case "mode":
        ie((Rt = Te[Et]) !== null && Rt !== void 0 ? Rt : a);
        break;
      case "mainMenuBar":
        R((Jt = Te[Et]) !== null && Jt !== void 0 ? Jt : l);
        break;
      case "navigationBar":
        O((Yt = Te[Et]) !== null && Yt !== void 0 ? Yt : u);
        break;
      case "statusBar":
        $((fn = Te[Et]) !== null && fn !== void 0 ? fn : f);
        break;
      case "askToFormat":
        ne((ht = Te[Et]) !== null && ht !== void 0 ? ht : d);
        break;
      case "escapeControlCharacters":
        je((Gt = Te[Et]) !== null && Gt !== void 0 ? Gt : h);
        break;
      case "escapeUnicodeCharacters":
        J((et = Te[Et]) !== null && et !== void 0 ? et : p);
        break;
      case "flattenColumns":
        H((Mn = Te[Et]) !== null && Mn !== void 0 ? Mn : m);
        break;
      case "parser":
        ue((Fn = Te[Et]) !== null && Fn !== void 0 ? Fn : v);
        break;
      case "validator":
        P((lr = Te[Et]) !== null && lr !== void 0 ? lr : g);
        break;
      case "validationParser":
        V((Vt = Te[Et]) !== null && Vt !== void 0 ? Vt : b);
        break;
      case "pathParser":
        U((xn = Te[Et]) !== null && xn !== void 0 ? xn : x);
        break;
      case "queryLanguages":
        me((Ft = Te[Et]) !== null && Ft !== void 0 ? Ft : w);
        break;
      case "queryLanguageId":
        X((fe = Te[Et]) !== null && fe !== void 0 ? fe : j);
        break;
      case "onChangeQueryLanguage":
        K((ke = Te[Et]) !== null && ke !== void 0 ? ke : y);
        break;
      case "onChange":
        rt((Ue = Te[Et]) !== null && Ue !== void 0 ? Ue : k);
        break;
      case "onRenderValue":
        Ae((Nt = Te[Et]) !== null && Nt !== void 0 ? Nt : T);
        break;
      case "onClassName":
        tt((dn = Te[Et]) !== null && dn !== void 0 ? dn : M);
        break;
      case "onRenderMenu":
        Re((Ut = Te[Et]) !== null && Ut !== void 0 ? Ut : N);
        break;
      case "onRenderContextMenu":
        qe((Dn = Te[Et]) !== null && Dn !== void 0 ? Dn : z);
        break;
      case "onChangeMode":
        pt((wr = Te[Et]) !== null && wr !== void 0 ? wr : L);
        break;
      case "onSelect":
        Qe((Jn = Te[Et]) !== null && Jn !== void 0 ? Jn : S);
        break;
      case "onError":
        Ge((cn = Te[Et]) !== null && cn !== void 0 ? cn : W);
        break;
      case "onFocus":
        $t((Lt = Te[Et]) !== null && Lt !== void 0 ? Lt : ce);
        break;
      case "onBlur":
        A((In = Te[Et]) !== null && In !== void 0 ? In : te);
        break;
      default:
        mr(Et);
    }
    function mr(Tn) {
      r('Unknown property "'.concat(Tn, '"'));
    }
    me().some((Tn) => Tn.id === X()) || X(me()[0].id), fr();
  }
  function tn() {
    return Qt.apply(this, arguments);
  }
  function Qt() {
    return (Qt = Mt(function* () {
      throw new Error("class method destroy() is deprecated. It is replaced with a method destroy() in the vanilla library.");
    })).apply(this, arguments);
  }
  function Hn(Te, ln, Nn) {
    we(Te), rt() && rt()(Te, ln, Nn);
  }
  function Kn(Te) {
    Ee(Te), Qe() && Qe()(p0(Te));
  }
  function On() {
    C(F, !0), $t() && $t()();
  }
  function Vr() {
    C(F, !1), A() && A()();
  }
  function Gn(Te) {
    return xr.apply(this, arguments);
  }
  function xr() {
    return (xr = Mt(function* (Te) {
      ie() !== Te && (ie(Te), fr(), an(), pt()(Te));
    })).apply(this, arguments);
  }
  function Jr(Te) {
    r("handleChangeQueryLanguage", Te), X(Te), K()(Te);
  }
  function Yr(Te) {
    var { id: ln, json: Nn, rootPath: er, onTransform: be, onClose: Le } = Te;
    ae() || C(Fe, { id: ln, json: Nn, rootPath: er, indentation: re(), truncateTextSize: B(), escapeControlCharacters: je(), escapeUnicodeCharacters: J(), parser: ue(), parseMemoizeOne: c(n), validationParser: V(), pathParser: U(), queryLanguages: me(), queryLanguageId: X(), onChangeQueryLanguage: Jr, onRenderValue: Ae(), onRenderMenu: (We) => Re()(We, { mode: ie(), modal: !0, readOnly: ae() }), onRenderContextMenu: (We) => qe()(We, { mode: ie(), modal: !0, readOnly: ae(), selection: Ee() }), onClassName: tt(), onTransform: be, onClose: Le });
  }
  function zr(Te) {
    ae() || C(Ne, Te);
  }
  function Zn(Te) {
    var { content: ln, path: Nn, onPatch: er, onClose: be } = Te;
    r("onJSONEditorModal", { content: ln, path: Nn }), C(ve, { content: ln, path: Nn, onPatch: er, readOnly: ae(), indentation: re(), tabSize: G(), truncateTextSize: B(), mainMenuBar: R(), navigationBar: O(), statusBar: $(), askToFormat: ne(), escapeControlCharacters: je(), escapeUnicodeCharacters: J(), flattenColumns: H(), parser: ue(), validator: void 0, validationParser: V(), pathParser: U(), onRenderValue: Ae(), onClassName: tt(), onRenderMenu: Re(), onRenderContextMenu: qe(), onSortModal: zr, onTransformModal: Yr, onClose: be });
  }
  function Ar(Te) {
    Te.stopPropagation();
  }
  return de(() => (_(ue()), c(ye), _(we()), zc), () => {
    if (!Z_(ue(), c(ye))) {
      if (r("parser changed, recreate editor"), Wf(we())) {
        var Te = c(ye).stringify(we().json);
        we({ json: Te !== void 0 ? ue().parse(Te) : void 0 });
      }
      C(ye, ue()), C(D, zc());
    }
  }), de(() => _(we()), () => {
    var Te = Iv(we());
    Te && console.error("Error: " + Te);
  }), de(() => _(Ee()), () => {
    Ee() === null && console.warn("selection is invalid: it is null but should be undefined");
  }), de(() => _(ue()), () => {
    C(n, Sf(ue().parse));
  }), de(() => _(ie()), () => {
    r("mode changed to", ie());
  }), Bn(), zt(!0), Cb(t, { children: (Te, ln) => {
    var Nn, er = cH(), be = wt(er);
    q_(Y(be), () => c(D), (ht) => {
      pr(lS(ht, { get externalMode() {
        return ie();
      }, get content() {
        return we();
      }, get selection() {
        return Ee();
      }, get readOnly() {
        return ae();
      }, get indentation() {
        return re();
      }, get tabSize() {
        return G();
      }, get truncateTextSize() {
        return B();
      }, get statusBar() {
        return $();
      }, get askToFormat() {
        return ne();
      }, get mainMenuBar() {
        return R();
      }, get navigationBar() {
        return O();
      }, get escapeControlCharacters() {
        return je();
      }, get escapeUnicodeCharacters() {
        return J();
      }, get flattenColumns() {
        return H();
      }, get parser() {
        return ue();
      }, get parseMemoizeOne() {
        return c(n);
      }, get validator() {
        return P();
      }, get validationParser() {
        return V();
      }, get pathParser() {
        return U();
      }, insideModal: !1, get onError() {
        return Ge();
      }, onChange: Hn, onChangeMode: Gn, onSelect: Kn, get onRenderValue() {
        return Ae();
      }, get onClassName() {
        return tt();
      }, onFocus: On, onBlur: Vr, get onRenderMenu() {
        return Re();
      }, get onRenderContextMenu() {
        return qe();
      }, onSortModal: zr, onTransformModal: Yr, onJSONEditorModal: Zn, $$legacy: !0 }), (Gt) => C(oe, Gt), () => c(oe));
    });
    var Le = le(be, 2), We = (ht) => {
      (function(Gt, et) {
        var Mn, Fn;
        mt(et, !1);
        var lr = Q(void 0, !0), Vt = Q(void 0, !0), xn = Q(void 0, !0), Ft = Q(void 0, !0), fe = ui("jsoneditor:SortModal"), ke = E(et, "id", 9), Ue = E(et, "json", 9), Nt = E(et, "rootPath", 9), dn = E(et, "onSort", 9), Ut = E(et, "onClose", 9), Dn = { value: 1, label: "ascending" }, wr = [Dn, { value: -1, label: "descending" }], Jn = "".concat(ke(), ":").concat(bt(Nt())), cn = Q((Mn = Oc()[Jn]) === null || Mn === void 0 ? void 0 : Mn.selectedProperty, !0), Lt = Q(((Fn = Oc()[Jn]) === null || Fn === void 0 ? void 0 : Fn.selectedDirection) || Dn, !0), In = Q(void 0, !0);
        function ji() {
          try {
            var mr, Tn, tr;
            C(In, void 0);
            var ct = ((mr = c(cn)) === null || mr === void 0 ? void 0 : mr.value) || ((Tn = c(Ft)) === null || Tn === void 0 || (Tn = Tn[0]) === null || Tn === void 0 ? void 0 : Tn.value) || [], Vn = (tr = c(Lt)) === null || tr === void 0 ? void 0 : tr.value, Lr = FA(Ue(), Nt(), ct, Vn);
            dn() !== void 0 && Nt() !== void 0 && dn()({ operations: Lr, rootPath: Nt(), itemPath: ct, direction: Vn }), Ut()();
          } catch (Wt) {
            C(In, String(Wt));
          }
        }
        function Et(mr) {
          mr.focus();
        }
        de(() => (_(Ue()), _(Nt())), () => {
          C(lr, Ze(Ue(), Nt()));
        }), de(() => c(lr), () => {
          C(Vt, Array.isArray(c(lr)));
        }), de(() => (c(Vt), c(lr)), () => {
          C(xn, c(Vt) ? kb(c(lr)) : void 0);
        }), de(() => (c(xn), Pa), () => {
          C(Ft, c(xn) ? c(xn).map(Pa) : void 0);
        }), de(() => (Oc(), c(cn), c(Lt)), () => {
          Oc(Oc()[Jn] = { selectedProperty: c(cn), selectedDirection: c(Lt) }), fe("store state in memory", Jn, Oc()[Jn]);
        }), Bn(), zt(!0), Zf(Gt, { get onClose() {
          return Ut();
        }, className: "jse-sort-modal", children: (mr, Tn) => {
          var tr = lH(), ct = wt(tr), Vn = Oe(() => c(Vt) ? "Sort array items" : "Sort object keys");
          Mm(ct, { get title() {
            return c(Vn);
          }, get onClose() {
            return Ut();
          } });
          var Lr = Y(le(ct, 2)), Wt = le(Y(Lr)), so = Y(Wt), Br = le(Y(so)), Qr = Y(Br), Wr = le(so), ki = (ut) => {
            var ft = sH(), Xt = le(Y(ft));
            $l(Y(Xt), { showChevron: !0, get items() {
              return c(Ft);
            }, get value() {
              return c(cn);
            }, set value(wn) {
              C(cn, wn);
            }, $$legacy: !0 }), Z(ut, ft);
          };
          xe(Wr, (ut) => {
            c(Vt), c(Ft), ee(() => {
              var ft;
              return c(Vt) && c(Ft) && ((ft = c(Ft)) === null || ft === void 0 ? void 0 : ft.length) > 1;
            }) && ut(ki);
          });
          var q = le(Wr), he = le(Y(q));
          $l(Y(he), { showChevron: !0, clearable: !1, get items() {
            return wr;
          }, get value() {
            return c(Lt);
          }, set value(ut) {
            C(Lt, ut);
          }, $$legacy: !0 });
          var $e = le(Lr, 2), He = Y($e), Ke = (ut) => {
            var ft = aH(), Xt = Y(ft);
            Ie(() => vt(Xt, c(In))), Z(ut, ft);
          };
          xe(He, (ut) => {
            c(In) && ut(Ke);
          });
          var it = Y(le($e, 2));
          yi(() => Pe("click", it, ji)), zi(it, (ut) => Et?.(ut)), Ie((ut) => {
            ec(Qr, ut), it.disabled = (c(Vt), c(Ft), c(cn), ee(() => {
              var ft;
              return !!(c(Vt) && c(Ft) && ((ft = c(Ft)) === null || ft === void 0 ? void 0 : ft.length) > 1) && !c(cn);
            }));
          }, [() => (_(Nt()), _(Sn), _(no), ee(() => Nt() && !Sn(Nt()) ? no(Nt()) : "(document root)"))], Oe), Z(mr, tr);
        }, $$slots: { default: !0 } }), gt();
      })(ht, Ga(() => c(Ne), { onClose: () => {
        var Gt;
        (Gt = c(Ne)) === null || Gt === void 0 || Gt.onClose(), C(Ne, void 0);
      } }));
    };
    xe(Le, (ht) => {
      c(Ne) && ht(We);
    });
    var Rt = le(Le, 2), Jt = (ht) => {
      dW(ht, Ga(() => c(Fe), { onClose: () => {
        var Gt;
        (Gt = c(Fe)) === null || Gt === void 0 || Gt.onClose(), C(Fe, void 0);
      } }));
    };
    xe(Rt, (ht) => {
      c(Fe) && ht(Jt);
    });
    var Yt = le(Rt, 2), fn = (ht) => {
      (function(Gt, et) {
        mt(et, !1);
        var Mn = Q(void 0, !0), Fn = Q(void 0, !0), lr = Q(void 0, !0), Vt = Q(void 0, !0), xn = ui("jsoneditor:JSONEditorModal"), Ft = E(et, "content", 9), fe = E(et, "path", 9), ke = E(et, "onPatch", 9), Ue = E(et, "readOnly", 9), Nt = E(et, "indentation", 9), dn = E(et, "tabSize", 9), Ut = E(et, "truncateTextSize", 9), Dn = E(et, "mainMenuBar", 9), wr = E(et, "navigationBar", 9), Jn = E(et, "statusBar", 9), cn = E(et, "askToFormat", 9), Lt = E(et, "escapeControlCharacters", 9), In = E(et, "escapeUnicodeCharacters", 9), ji = E(et, "flattenColumns", 9), Et = E(et, "parser", 9), mr = E(et, "validator", 9), Tn = E(et, "validationParser", 9), tr = E(et, "pathParser", 9), ct = E(et, "onRenderValue", 9), Vn = E(et, "onClassName", 9), Lr = E(et, "onRenderMenu", 9), Wt = E(et, "onRenderContextMenu", 9), so = E(et, "onSortModal", 9), Br = E(et, "onTransformModal", 9), Qr = E(et, "onClose", 9), Wr = Q(void 0, !0), ki = Q(void 0, !0), q = { mode: He(Ft()), content: Ft(), selection: void 0, relativePath: fe() }, he = Q([q], !0), $e = Q(void 0, !0);
        function He(se) {
          return Wf(se) && Dr(se.json) ? Hr.table : Hr.tree;
        }
        function Ke() {
          var se, Ce = (se = rn(c(he))) === null || se === void 0 ? void 0 : se.selection;
          Jf(Ce) && c(Wr).scrollTo(at(Ce));
        }
        function it() {
          if (xn("handleApply"), !Ue()) try {
            C($e, void 0);
            var se = c(Mn).relativePath, Ce = c(Mn).content, Je = [{ op: "replace", path: bt(se), value: xk(Ce, Et()).json }];
            if (c(he).length > 1) {
              var Be = xk(c(he)[c(he).length - 2].content, Et()).json, ze = { json: Go(Be, Je) }, _t = De(De({}, c(he)[c(he).length - 2] || q), {}, { content: ze });
              C(he, [...c(he).slice(0, c(he).length - 2), _t]), fr(), Ke();
            } else ke()(Je), Qr()();
          } catch (At) {
            C($e, String(At));
          }
        }
        function ut() {
          if (xn("handleClose"), c(ki)) C(ki, !1);
          else if (c(he).length > 1) {
            var se;
            C(he, mn(c(he))), fr(), (se = c(Wr)) === null || se === void 0 || se.focus(), Ke(), C($e, void 0);
          } else Qr()();
        }
        function ft(se) {
          xn("handleChange", se), hn((Ce) => De(De({}, Ce), {}, { content: se }));
        }
        function Xt(se) {
          xn("handleChangeSelection", se), hn((Ce) => De(De({}, Ce), {}, { selection: se }));
        }
        function wn(se) {
          xn("handleChangeMode", se), hn((Ce) => De(De({}, Ce), {}, { mode: se }));
        }
        function hn(se) {
          var Ce = se(rn(c(he)));
          C(he, [...mn(c(he)), Ce]);
        }
        function Wn(se) {
          C($e, se.toString()), console.error(se);
        }
        function Si(se) {
          var Ce, { content: Je, path: Be } = se;
          xn("handleJSONEditorModal", { content: Je, path: Be });
          var ze = { mode: He(Je), content: Je, selection: void 0, relativePath: Be };
          C(he, [...c(he), ze]), fr(), (Ce = c(Wr)) === null || Ce === void 0 || Ce.focus();
        }
        function I(se) {
          se.focus();
        }
        Ti(() => {
          var se;
          (se = c(Wr)) === null || se === void 0 || se.focus();
        }), de(() => c(he), () => {
          C(Mn, rn(c(he)) || q);
        }), de(() => c(he), () => {
          C(Fn, c(he).flatMap((se) => se.relativePath));
        }), de(() => (c(Fn), no), () => {
          C(lr, Sn(c(Fn)) ? "(document root)" : no(c(Fn)));
        }), de(() => _(Et()), () => {
          C(Vt, Sf(Et().parse));
        }), Bn(), zt(!0), Zf(Gt, { onClose: ut, className: "jse-jsoneditor-modal", get fullscreen() {
          return c(ki);
        }, children: (se, Ce) => {
          var Je = iH();
          Cb(Y(Je), { children: (Be, ze) => {
            var _t = rH(), At = wt(_t), nn = Oe(() => (c(he), ee(() => c(he).length > 1 ? " (".concat(c(he).length, ")") : "")));
            Mm(At, { get title() {
              var kt;
              return "Edit nested content ".concat((kt = c(nn)) !== null && kt !== void 0 ? kt : "");
            }, fullScreenButton: !0, onClose: ut, get fullscreen() {
              return c(ki);
            }, set fullscreen(kt) {
              C(ki, kt);
            }, $$legacy: !0 });
            var Un = le(At, 2), pn = le(Y(Un), 2), ir = le(pn, 4);
            pr(lS(Y(ir), { get externalMode() {
              return c(Mn), ee(() => c(Mn).mode);
            }, get content() {
              return c(Mn), ee(() => c(Mn).content);
            }, get selection() {
              return c(Mn), ee(() => c(Mn).selection);
            }, get readOnly() {
              return Ue();
            }, get indentation() {
              return Nt();
            }, get tabSize() {
              return dn();
            }, get truncateTextSize() {
              return Ut();
            }, get statusBar() {
              return Jn();
            }, get askToFormat() {
              return cn();
            }, get mainMenuBar() {
              return Dn();
            }, get navigationBar() {
              return wr();
            }, get escapeControlCharacters() {
              return Lt();
            }, get escapeUnicodeCharacters() {
              return In();
            }, get flattenColumns() {
              return ji();
            }, get parser() {
              return Et();
            }, get parseMemoizeOne() {
              return c(Vt);
            }, get validator() {
              return mr();
            }, get validationParser() {
              return Tn();
            }, get pathParser() {
              return tr();
            }, insideModal: !0, onError: Wn, onChange: ft, onChangeMode: wn, onSelect: Xt, get onRenderValue() {
              return ct();
            }, get onClassName() {
              return Vn();
            }, get onFocus() {
              return Oo;
            }, get onBlur() {
              return Oo;
            }, get onRenderMenu() {
              return Lr();
            }, get onRenderContextMenu() {
              return Wt();
            }, get onSortModal() {
              return so();
            }, get onTransformModal() {
              return Br();
            }, onJSONEditorModal: Si, $$legacy: !0 }), (kt) => C(Wr, kt), () => c(Wr));
            var Dt = Y(le(ir, 2)), jr = (kt) => {
              var dt = ZW(), Ht = Y(dt);
              Ie(() => vt(Ht, c($e))), Z(kt, dt);
            };
            xe(Dt, (kt) => {
              c($e) && kt(jr);
            });
            var Yn = le(Dt, 2), dr = (kt) => {
              var dt = eH();
              gn(Y(dt), { get data() {
                return R6;
              } }), Pe("click", dt, ut), Z(kt, dt);
            };
            xe(Yn, (kt) => {
              c(he), ee(() => c(he).length > 1) && kt(dr);
            });
            var $n = le(Yn, 2), jt = (kt) => {
              var dt = tH();
              yi(() => Pe("click", dt, it)), zi(dt, (Ht) => I?.(Ht)), Z(kt, dt);
            }, jn = (kt) => {
              var dt = nH();
              Pe("click", dt, ut), Z(kt, dt);
            };
            xe($n, (kt) => {
              Ue() ? kt(jn, !1) : kt(jt);
            }), Ie(() => ec(pn, c(lr))), Z(Be, _t);
          }, $$slots: { default: !0 } }), Z(se, Je);
        }, $$slots: { default: !0 } }), gt();
      })(ht, Ga(() => c(ve), { onClose: () => {
        var Gt;
        (Gt = c(ve)) === null || Gt === void 0 || Gt.onClose(), C(ve, void 0);
      } }));
    };
    xe(Yt, (ht) => {
      c(ve) && ht(fn);
    }), Ie((ht) => Nn = It(be, 1, "jse-main svelte-57bmz4", null, Nn, ht), [() => ({ "jse-focus": c(F) })], Oe), Pe("keydown", be, Ar), Z(Te, er);
  }, $$slots: { default: !0 } }), Ct(e, "get", ge), Ct(e, "set", yt), Ct(e, "update", ot), Ct(e, "patch", _e), Ct(e, "select", xt), Ct(e, "expand", bn), Ct(e, "collapse", qn), Ct(e, "transform", un), Ct(e, "validate", en), Ct(e, "acceptAutoRepair", Rn), Ct(e, "scrollTo", on), Ct(e, "findElement", Pt), Ct(e, "focus", an), Ct(e, "refresh", yn), Ct(e, "updateProps", Xe), Ct(e, "destroy", tn), gt({ get: ge, set: yt, update: ot, patch: _e, select: xt, expand: bn, collapse: qn, transform: un, validate: en, acceptAutoRepair: Rn, scrollTo: on, findElement: Pt, focus: an, refresh: yn, updateProps: Xe, destroy: tn });
}
function fH(t) {
  var { target: e, props: n } = t, r = VB(uH, { target: e, props: n });
  return r.destroy = Mt(function* () {
    return (function(i, o) {
      var s = xb.get(i);
      return s ? (xb.delete(i), s(o)) : Promise.resolve();
    })(r);
  }), fr(), r;
}
const dH = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/, hH = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/, pH = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function mH(t, e) {
  if (t === "__proto__" || t === "constructor" && e && typeof e == "object" && "prototype" in e) {
    gH(t);
    return;
  }
  return e;
}
function gH(t) {
  console.warn(`[destr] Dropping "${t}" key to prevent prototype pollution.`);
}
function Ep(t, e = {}) {
  if (typeof t != "string")
    return t;
  const n = t.trim();
  if (
    // eslint-disable-next-line unicorn/prefer-at
    t[0] === '"' && t.endsWith('"') && !t.includes("\\")
  )
    return n.slice(1, -1);
  if (n.length <= 9) {
    const r = n.toLowerCase();
    if (r === "true")
      return !0;
    if (r === "false")
      return !1;
    if (r === "undefined")
      return;
    if (r === "null")
      return null;
    if (r === "nan")
      return Number.NaN;
    if (r === "infinity")
      return Number.POSITIVE_INFINITY;
    if (r === "-infinity")
      return Number.NEGATIVE_INFINITY;
  }
  if (!pH.test(t)) {
    if (e.strict)
      throw new SyntaxError("[destr] Invalid JSON");
    return t;
  }
  try {
    if (dH.test(t) || hH.test(t)) {
      if (e.strict)
        throw new Error("[destr] Possible prototype pollution");
      return JSON.parse(t, mH);
    }
    return JSON.parse(t);
  } catch (r) {
    if (e.strict)
      throw r;
    return t;
  }
}
function vH(t, e = {}) {
  return Ep(t, { ...e, strict: !0 });
}
var bH = typeof global == "object" && global && global.Object === Object && global, yH = typeof self == "object" && self && self.Object === Object && self, t3 = bH || yH || Function("return this")(), Pm = t3.Symbol, n3 = Object.prototype, xH = n3.hasOwnProperty, wH = n3.toString, Ju = Pm ? Pm.toStringTag : void 0;
function jH(t) {
  var e = xH.call(t, Ju), n = t[Ju];
  try {
    t[Ju] = void 0;
    var r = !0;
  } catch {
  }
  var i = wH.call(t);
  return r && (e ? t[Ju] = n : delete t[Ju]), i;
}
var kH = Object.prototype, SH = kH.toString;
function CH(t) {
  return SH.call(t);
}
var OH = "[object Null]", EH = "[object Undefined]", cS = Pm ? Pm.toStringTag : void 0;
function _H(t) {
  return t == null ? t === void 0 ? EH : OH : cS && cS in Object(t) ? jH(t) : CH(t);
}
function AH(t) {
  return t != null && typeof t == "object";
}
var MH = "[object Symbol]";
function TH(t) {
  return typeof t == "symbol" || AH(t) && _H(t) == MH;
}
var $H = /\s/;
function PH(t) {
  for (var e = t.length; e-- && $H.test(t.charAt(e)); )
    ;
  return e;
}
var RH = /^\s+/;
function NH(t) {
  return t && t.slice(0, PH(t) + 1).replace(RH, "");
}
function Wb(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
var uS = NaN, DH = /^[-+]0x[0-9a-f]+$/i, IH = /^0b[01]+$/i, zH = /^0o[0-7]+$/i, LH = parseInt;
function fS(t) {
  if (typeof t == "number")
    return t;
  if (TH(t))
    return uS;
  if (Wb(t)) {
    var e = typeof t.valueOf == "function" ? t.valueOf() : t;
    t = Wb(e) ? e + "" : e;
  }
  if (typeof t != "string")
    return t === 0 ? t : +t;
  t = NH(t);
  var n = IH.test(t);
  return n || zH.test(t) ? LH(t.slice(2), n ? 2 : 8) : DH.test(t) ? uS : +t;
}
var e0 = function() {
  return t3.Date.now();
}, BH = "Expected a function", qH = Math.max, FH = Math.min;
function UH(t, e, n) {
  var r, i, o, s, a, l, u = 0, f = !1, d = !1, h = !0;
  if (typeof t != "function")
    throw new TypeError(BH);
  e = fS(e) || 0, Wb(n) && (f = !!n.leading, d = "maxWait" in n, o = d ? qH(fS(n.maxWait) || 0, e) : o, h = "trailing" in n ? !!n.trailing : h);
  function p(k) {
    var S = r, T = i;
    return r = i = void 0, u = k, s = t.apply(T, S), s;
  }
  function m(k) {
    return u = k, a = setTimeout(b, e), f ? p(k) : s;
  }
  function v(k) {
    var S = k - l, T = k - u, M = e - S;
    return d ? FH(M, o - T) : M;
  }
  function g(k) {
    var S = k - l, T = k - u;
    return l === void 0 || S >= e || S < 0 || d && T >= o;
  }
  function b() {
    var k = e0();
    if (g(k))
      return x(k);
    a = setTimeout(b, v(k));
  }
  function x(k) {
    return a = void 0, h && r ? p(k) : (r = i = void 0, s);
  }
  function w() {
    a !== void 0 && clearTimeout(a), u = 0, r = l = i = a = void 0;
  }
  function j() {
    return a === void 0 ? s : x(e0());
  }
  function y() {
    var k = e0(), S = g(k);
    if (r = arguments, i = this, l = k, S) {
      if (a === void 0)
        return m(l);
      if (d)
        return clearTimeout(a), a = setTimeout(b, e), p(l);
    }
    return a === void 0 && (a = setTimeout(b, e)), s;
  }
  return y.cancel = w, y.flush = j, y;
}
var r3 = typeof global == "object" && global && global.Object === Object && global, VH = typeof self == "object" && self && self.Object === Object && self, qs = r3 || VH || Function("return this")(), zs = qs.Symbol, i3 = Object.prototype, WH = i3.hasOwnProperty, HH = i3.toString, Yu = zs ? zs.toStringTag : void 0;
function KH(t) {
  var e = WH.call(t, Yu), n = t[Yu];
  try {
    t[Yu] = void 0;
    var r = !0;
  } catch {
  }
  var i = HH.call(t);
  return r && (e ? t[Yu] = n : delete t[Yu]), i;
}
var GH = Object.prototype, JH = GH.toString;
function YH(t) {
  return JH.call(t);
}
var QH = "[object Null]", XH = "[object Undefined]", dS = zs ? zs.toStringTag : void 0;
function fc(t) {
  return t == null ? t === void 0 ? XH : QH : dS && dS in Object(t) ? KH(t) : YH(t);
}
function Ls(t) {
  return t != null && typeof t == "object";
}
var ZH = "[object Symbol]";
function Py(t) {
  return typeof t == "symbol" || Ls(t) && fc(t) == ZH;
}
function eK(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = Array(r); ++n < r; )
    i[n] = e(t[n], n, t);
  return i;
}
var zo = Array.isArray, hS = zs ? zs.prototype : void 0, pS = hS ? hS.toString : void 0;
function o3(t) {
  if (typeof t == "string")
    return t;
  if (zo(t))
    return eK(t, o3) + "";
  if (Py(t))
    return pS ? pS.call(t) : "";
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
function Fs(t) {
  var e = typeof t;
  return t != null && (e == "object" || e == "function");
}
function Ry(t) {
  return t;
}
var tK = "[object AsyncFunction]", nK = "[object Function]", rK = "[object GeneratorFunction]", iK = "[object Proxy]";
function Ny(t) {
  if (!Fs(t))
    return !1;
  var e = fc(t);
  return e == nK || e == rK || e == tK || e == iK;
}
var t0 = qs["__core-js_shared__"], mS = (function() {
  var t = /[^.]+$/.exec(t0 && t0.keys && t0.keys.IE_PROTO || "");
  return t ? "Symbol(src)_1." + t : "";
})();
function oK(t) {
  return !!mS && mS in t;
}
var sK = Function.prototype, aK = sK.toString;
function dc(t) {
  if (t != null) {
    try {
      return aK.call(t);
    } catch {
    }
    try {
      return t + "";
    } catch {
    }
  }
  return "";
}
var lK = /[\\^$.*+?()[\]{}|]/g, cK = /^\[object .+?Constructor\]$/, uK = Function.prototype, fK = Object.prototype, dK = uK.toString, hK = fK.hasOwnProperty, pK = RegExp(
  "^" + dK.call(hK).replace(lK, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function mK(t) {
  if (!Fs(t) || oK(t))
    return !1;
  var e = Ny(t) ? pK : cK;
  return e.test(dc(t));
}
function gK(t, e) {
  return t?.[e];
}
function hc(t, e) {
  var n = gK(t, e);
  return mK(n) ? n : void 0;
}
var Hb = hc(qs, "WeakMap"), gS = Object.create, vK = /* @__PURE__ */ (function() {
  function t() {
  }
  return function(e) {
    if (!Fs(e))
      return {};
    if (gS)
      return gS(e);
    t.prototype = e;
    var n = new t();
    return t.prototype = void 0, n;
  };
})();
function bK(t, e, n) {
  switch (n.length) {
    case 0:
      return t.call(e);
    case 1:
      return t.call(e, n[0]);
    case 2:
      return t.call(e, n[0], n[1]);
    case 3:
      return t.call(e, n[0], n[1], n[2]);
  }
  return t.apply(e, n);
}
function yK(t, e) {
  var n = -1, r = t.length;
  for (e || (e = Array(r)); ++n < r; )
    e[n] = t[n];
  return e;
}
var xK = 800, wK = 16, jK = Date.now;
function kK(t) {
  var e = 0, n = 0;
  return function() {
    var r = jK(), i = wK - (r - n);
    if (n = r, i > 0) {
      if (++e >= xK)
        return arguments[0];
    } else
      e = 0;
    return t.apply(void 0, arguments);
  };
}
function SK(t) {
  return function() {
    return t;
  };
}
var Rm = (function() {
  try {
    var t = hc(Object, "defineProperty");
    return t({}, "", {}), t;
  } catch {
  }
})(), CK = Rm ? function(t, e) {
  return Rm(t, "toString", {
    configurable: !0,
    enumerable: !1,
    value: SK(e),
    writable: !0
  });
} : Ry, OK = kK(CK);
function EK(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r && e(t[n], n, t) !== !1; )
    ;
  return t;
}
var _K = 9007199254740991, AK = /^(?:0|[1-9]\d*)$/;
function Dy(t, e) {
  var n = typeof t;
  return e = e ?? _K, !!e && (n == "number" || n != "symbol" && AK.test(t)) && t > -1 && t % 1 == 0 && t < e;
}
function _g(t, e, n) {
  e == "__proto__" && Rm ? Rm(t, e, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : t[e] = n;
}
function Ed(t, e) {
  return t === e || t !== t && e !== e;
}
var MK = Object.prototype, TK = MK.hasOwnProperty;
function s3(t, e, n) {
  var r = t[e];
  (!(TK.call(t, e) && Ed(r, n)) || n === void 0 && !(e in t)) && _g(t, e, n);
}
function a3(t, e, n, r) {
  var i = !n;
  n || (n = {});
  for (var o = -1, s = e.length; ++o < s; ) {
    var a = e[o], l = r ? r(n[a], t[a], a, n, t) : void 0;
    l === void 0 && (l = t[a]), i ? _g(n, a, l) : s3(n, a, l);
  }
  return n;
}
var vS = Math.max;
function $K(t, e, n) {
  return e = vS(e === void 0 ? t.length - 1 : e, 0), function() {
    for (var r = arguments, i = -1, o = vS(r.length - e, 0), s = Array(o); ++i < o; )
      s[i] = r[e + i];
    i = -1;
    for (var a = Array(e + 1); ++i < e; )
      a[i] = r[i];
    return a[e] = n(s), bK(t, this, a);
  };
}
function PK(t, e) {
  return OK($K(t, e, Ry), t + "");
}
var RK = 9007199254740991;
function Iy(t) {
  return typeof t == "number" && t > -1 && t % 1 == 0 && t <= RK;
}
function Ag(t) {
  return t != null && Iy(t.length) && !Ny(t);
}
function NK(t, e, n) {
  if (!Fs(n))
    return !1;
  var r = typeof e;
  return (r == "number" ? Ag(n) && Dy(e, n.length) : r == "string" && e in n) ? Ed(n[e], t) : !1;
}
function l3(t) {
  return PK(function(e, n) {
    var r = -1, i = n.length, o = i > 1 ? n[i - 1] : void 0, s = i > 2 ? n[2] : void 0;
    for (o = t.length > 3 && typeof o == "function" ? (i--, o) : void 0, s && NK(n[0], n[1], s) && (o = i < 3 ? void 0 : o, i = 1), e = Object(e); ++r < i; ) {
      var a = n[r];
      a && t(e, a, r, o);
    }
    return e;
  });
}
var DK = Object.prototype;
function zy(t) {
  var e = t && t.constructor, n = typeof e == "function" && e.prototype || DK;
  return t === n;
}
function IK(t, e) {
  for (var n = -1, r = Array(t); ++n < t; )
    r[n] = e(n);
  return r;
}
var zK = "[object Arguments]";
function bS(t) {
  return Ls(t) && fc(t) == zK;
}
var c3 = Object.prototype, LK = c3.hasOwnProperty, BK = c3.propertyIsEnumerable, Nm = bS(/* @__PURE__ */ (function() {
  return arguments;
})()) ? bS : function(t) {
  return Ls(t) && LK.call(t, "callee") && !BK.call(t, "callee");
};
function qK() {
  return !1;
}
var u3 = typeof exports == "object" && exports && !exports.nodeType && exports, yS = u3 && typeof module == "object" && module && !module.nodeType && module, FK = yS && yS.exports === u3, xS = FK ? qs.Buffer : void 0, UK = xS ? xS.isBuffer : void 0, td = UK || qK, VK = "[object Arguments]", WK = "[object Array]", HK = "[object Boolean]", KK = "[object Date]", GK = "[object Error]", JK = "[object Function]", YK = "[object Map]", QK = "[object Number]", XK = "[object Object]", ZK = "[object RegExp]", eG = "[object Set]", tG = "[object String]", nG = "[object WeakMap]", rG = "[object ArrayBuffer]", iG = "[object DataView]", oG = "[object Float32Array]", sG = "[object Float64Array]", aG = "[object Int8Array]", lG = "[object Int16Array]", cG = "[object Int32Array]", uG = "[object Uint8Array]", fG = "[object Uint8ClampedArray]", dG = "[object Uint16Array]", hG = "[object Uint32Array]", $r = {};
$r[oG] = $r[sG] = $r[aG] = $r[lG] = $r[cG] = $r[uG] = $r[fG] = $r[dG] = $r[hG] = !0;
$r[VK] = $r[WK] = $r[rG] = $r[HK] = $r[iG] = $r[KK] = $r[GK] = $r[JK] = $r[YK] = $r[QK] = $r[XK] = $r[ZK] = $r[eG] = $r[tG] = $r[nG] = !1;
function pG(t) {
  return Ls(t) && Iy(t.length) && !!$r[fc(t)];
}
function Ly(t) {
  return function(e) {
    return t(e);
  };
}
var f3 = typeof exports == "object" && exports && !exports.nodeType && exports, bf = f3 && typeof module == "object" && module && !module.nodeType && module, mG = bf && bf.exports === f3, n0 = mG && r3.process, bu = (function() {
  try {
    var t = bf && bf.require && bf.require("util").types;
    return t || n0 && n0.binding && n0.binding("util");
  } catch {
  }
})(), wS = bu && bu.isTypedArray, By = wS ? Ly(wS) : pG, gG = Object.prototype, vG = gG.hasOwnProperty;
function d3(t, e) {
  var n = zo(t), r = !n && Nm(t), i = !n && !r && td(t), o = !n && !r && !i && By(t), s = n || r || i || o, a = s ? IK(t.length, String) : [], l = a.length;
  for (var u in t)
    (e || vG.call(t, u)) && !(s && // Safari 9 has enumerable `arguments.length` in strict mode.
    (u == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (u == "offset" || u == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    o && (u == "buffer" || u == "byteLength" || u == "byteOffset") || // Skip index properties.
    Dy(u, l))) && a.push(u);
  return a;
}
function h3(t, e) {
  return function(n) {
    return t(e(n));
  };
}
var bG = h3(Object.keys, Object), yG = Object.prototype, xG = yG.hasOwnProperty;
function wG(t) {
  if (!zy(t))
    return bG(t);
  var e = [];
  for (var n in Object(t))
    xG.call(t, n) && n != "constructor" && e.push(n);
  return e;
}
function qy(t) {
  return Ag(t) ? d3(t) : wG(t);
}
function jG(t) {
  var e = [];
  if (t != null)
    for (var n in Object(t))
      e.push(n);
  return e;
}
var kG = Object.prototype, SG = kG.hasOwnProperty;
function CG(t) {
  if (!Fs(t))
    return jG(t);
  var e = zy(t), n = [];
  for (var r in t)
    r == "constructor" && (e || !SG.call(t, r)) || n.push(r);
  return n;
}
function Fy(t) {
  return Ag(t) ? d3(t, !0) : CG(t);
}
var OG = l3(function(t, e, n, r) {
  a3(e, Fy(e), t, r);
}), EG = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, _G = /^\w*$/;
function Uy(t, e) {
  if (zo(t))
    return !1;
  var n = typeof t;
  return n == "number" || n == "symbol" || n == "boolean" || t == null || Py(t) ? !0 : _G.test(t) || !EG.test(t) || e != null && t in Object(e);
}
var nd = hc(Object, "create");
function AG() {
  this.__data__ = nd ? nd(null) : {}, this.size = 0;
}
function MG(t) {
  var e = this.has(t) && delete this.__data__[t];
  return this.size -= e ? 1 : 0, e;
}
var TG = "__lodash_hash_undefined__", $G = Object.prototype, PG = $G.hasOwnProperty;
function RG(t) {
  var e = this.__data__;
  if (nd) {
    var n = e[t];
    return n === TG ? void 0 : n;
  }
  return PG.call(e, t) ? e[t] : void 0;
}
var NG = Object.prototype, DG = NG.hasOwnProperty;
function IG(t) {
  var e = this.__data__;
  return nd ? e[t] !== void 0 : DG.call(e, t);
}
var zG = "__lodash_hash_undefined__";
function LG(t, e) {
  var n = this.__data__;
  return this.size += this.has(t) ? 0 : 1, n[t] = nd && e === void 0 ? zG : e, this;
}
function oc(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
oc.prototype.clear = AG;
oc.prototype.delete = MG;
oc.prototype.get = RG;
oc.prototype.has = IG;
oc.prototype.set = LG;
function BG() {
  this.__data__ = [], this.size = 0;
}
function Mg(t, e) {
  for (var n = t.length; n--; )
    if (Ed(t[n][0], e))
      return n;
  return -1;
}
var qG = Array.prototype, FG = qG.splice;
function UG(t) {
  var e = this.__data__, n = Mg(e, t);
  if (n < 0)
    return !1;
  var r = e.length - 1;
  return n == r ? e.pop() : FG.call(e, n, 1), --this.size, !0;
}
function VG(t) {
  var e = this.__data__, n = Mg(e, t);
  return n < 0 ? void 0 : e[n][1];
}
function WG(t) {
  return Mg(this.__data__, t) > -1;
}
function HG(t, e) {
  var n = this.__data__, r = Mg(n, t);
  return r < 0 ? (++this.size, n.push([t, e])) : n[r][1] = e, this;
}
function wa(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
wa.prototype.clear = BG;
wa.prototype.delete = UG;
wa.prototype.get = VG;
wa.prototype.has = WG;
wa.prototype.set = HG;
var rd = hc(qs, "Map");
function KG() {
  this.size = 0, this.__data__ = {
    hash: new oc(),
    map: new (rd || wa)(),
    string: new oc()
  };
}
function GG(t) {
  var e = typeof t;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? t !== "__proto__" : t === null;
}
function Tg(t, e) {
  var n = t.__data__;
  return GG(e) ? n[typeof e == "string" ? "string" : "hash"] : n.map;
}
function JG(t) {
  var e = Tg(this, t).delete(t);
  return this.size -= e ? 1 : 0, e;
}
function YG(t) {
  return Tg(this, t).get(t);
}
function QG(t) {
  return Tg(this, t).has(t);
}
function XG(t, e) {
  var n = Tg(this, t), r = n.size;
  return n.set(t, e), this.size += n.size == r ? 0 : 1, this;
}
function ja(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.clear(); ++e < n; ) {
    var r = t[e];
    this.set(r[0], r[1]);
  }
}
ja.prototype.clear = KG;
ja.prototype.delete = JG;
ja.prototype.get = YG;
ja.prototype.has = QG;
ja.prototype.set = XG;
var ZG = "Expected a function";
function Vy(t, e) {
  if (typeof t != "function" || e != null && typeof e != "function")
    throw new TypeError(ZG);
  var n = function() {
    var r = arguments, i = e ? e.apply(this, r) : r[0], o = n.cache;
    if (o.has(i))
      return o.get(i);
    var s = t.apply(this, r);
    return n.cache = o.set(i, s) || o, s;
  };
  return n.cache = new (Vy.Cache || ja)(), n;
}
Vy.Cache = ja;
var eJ = 500;
function tJ(t) {
  var e = Vy(t, function(r) {
    return n.size === eJ && n.clear(), r;
  }), n = e.cache;
  return e;
}
var nJ = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, rJ = /\\(\\)?/g, iJ = tJ(function(t) {
  var e = [];
  return t.charCodeAt(0) === 46 && e.push(""), t.replace(nJ, function(n, r, i, o) {
    e.push(i ? o.replace(rJ, "$1") : r || n);
  }), e;
});
function oJ(t) {
  return t == null ? "" : o3(t);
}
function p3(t, e) {
  return zo(t) ? t : Uy(t, e) ? [t] : iJ(oJ(t));
}
function $g(t) {
  if (typeof t == "string" || Py(t))
    return t;
  var e = t + "";
  return e == "0" && 1 / t == -1 / 0 ? "-0" : e;
}
function m3(t, e) {
  e = p3(e, t);
  for (var n = 0, r = e.length; t != null && n < r; )
    t = t[$g(e[n++])];
  return n && n == r ? t : void 0;
}
function sJ(t, e, n) {
  var r = t == null ? void 0 : m3(t, e);
  return r === void 0 ? n : r;
}
function aJ(t, e) {
  for (var n = -1, r = e.length, i = t.length; ++n < r; )
    t[i + n] = e[n];
  return t;
}
var g3 = h3(Object.getPrototypeOf, Object), lJ = "[object Object]", cJ = Function.prototype, uJ = Object.prototype, v3 = cJ.toString, fJ = uJ.hasOwnProperty, dJ = v3.call(Object);
function hJ(t) {
  if (!Ls(t) || fc(t) != lJ)
    return !1;
  var e = g3(t);
  if (e === null)
    return !0;
  var n = fJ.call(e, "constructor") && e.constructor;
  return typeof n == "function" && n instanceof n && v3.call(n) == dJ;
}
function pJ() {
  this.__data__ = new wa(), this.size = 0;
}
function mJ(t) {
  var e = this.__data__, n = e.delete(t);
  return this.size = e.size, n;
}
function gJ(t) {
  return this.__data__.get(t);
}
function vJ(t) {
  return this.__data__.has(t);
}
var bJ = 200;
function yJ(t, e) {
  var n = this.__data__;
  if (n instanceof wa) {
    var r = n.__data__;
    if (!rd || r.length < bJ - 1)
      return r.push([t, e]), this.size = ++n.size, this;
    n = this.__data__ = new ja(r);
  }
  return n.set(t, e), this.size = n.size, this;
}
function ns(t) {
  var e = this.__data__ = new wa(t);
  this.size = e.size;
}
ns.prototype.clear = pJ;
ns.prototype.delete = mJ;
ns.prototype.get = gJ;
ns.prototype.has = vJ;
ns.prototype.set = yJ;
var b3 = typeof exports == "object" && exports && !exports.nodeType && exports, jS = b3 && typeof module == "object" && module && !module.nodeType && module, xJ = jS && jS.exports === b3, kS = xJ ? qs.Buffer : void 0, SS = kS ? kS.allocUnsafe : void 0;
function y3(t, e) {
  if (e)
    return t.slice();
  var n = t.length, r = SS ? SS(n) : new t.constructor(n);
  return t.copy(r), r;
}
function wJ(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length, i = 0, o = []; ++n < r; ) {
    var s = t[n];
    e(s, n, t) && (o[i++] = s);
  }
  return o;
}
function jJ() {
  return [];
}
var kJ = Object.prototype, SJ = kJ.propertyIsEnumerable, CS = Object.getOwnPropertySymbols, CJ = CS ? function(t) {
  return t == null ? [] : (t = Object(t), wJ(CS(t), function(e) {
    return SJ.call(t, e);
  }));
} : jJ;
function OJ(t, e, n) {
  var r = e(t);
  return zo(t) ? r : aJ(r, n(t));
}
function Kb(t) {
  return OJ(t, qy, CJ);
}
var Gb = hc(qs, "DataView"), Jb = hc(qs, "Promise"), Yb = hc(qs, "Set"), OS = "[object Map]", EJ = "[object Object]", ES = "[object Promise]", _S = "[object Set]", AS = "[object WeakMap]", MS = "[object DataView]", _J = dc(Gb), AJ = dc(rd), MJ = dc(Jb), TJ = dc(Yb), $J = dc(Hb), Wo = fc;
(Gb && Wo(new Gb(new ArrayBuffer(1))) != MS || rd && Wo(new rd()) != OS || Jb && Wo(Jb.resolve()) != ES || Yb && Wo(new Yb()) != _S || Hb && Wo(new Hb()) != AS) && (Wo = function(t) {
  var e = fc(t), n = e == EJ ? t.constructor : void 0, r = n ? dc(n) : "";
  if (r)
    switch (r) {
      case _J:
        return MS;
      case AJ:
        return OS;
      case MJ:
        return ES;
      case TJ:
        return _S;
      case $J:
        return AS;
    }
  return e;
});
var PJ = Object.prototype, RJ = PJ.hasOwnProperty;
function NJ(t) {
  var e = t.length, n = new t.constructor(e);
  return e && typeof t[0] == "string" && RJ.call(t, "index") && (n.index = t.index, n.input = t.input), n;
}
var Dm = qs.Uint8Array;
function Wy(t) {
  var e = new t.constructor(t.byteLength);
  return new Dm(e).set(new Dm(t)), e;
}
function DJ(t, e) {
  var n = Wy(t.buffer);
  return new t.constructor(n, t.byteOffset, t.byteLength);
}
var IJ = /\w*$/;
function zJ(t) {
  var e = new t.constructor(t.source, IJ.exec(t));
  return e.lastIndex = t.lastIndex, e;
}
var TS = zs ? zs.prototype : void 0, $S = TS ? TS.valueOf : void 0;
function LJ(t) {
  return $S ? Object($S.call(t)) : {};
}
function x3(t, e) {
  var n = e ? Wy(t.buffer) : t.buffer;
  return new t.constructor(n, t.byteOffset, t.length);
}
var BJ = "[object Boolean]", qJ = "[object Date]", FJ = "[object Map]", UJ = "[object Number]", VJ = "[object RegExp]", WJ = "[object Set]", HJ = "[object String]", KJ = "[object Symbol]", GJ = "[object ArrayBuffer]", JJ = "[object DataView]", YJ = "[object Float32Array]", QJ = "[object Float64Array]", XJ = "[object Int8Array]", ZJ = "[object Int16Array]", eY = "[object Int32Array]", tY = "[object Uint8Array]", nY = "[object Uint8ClampedArray]", rY = "[object Uint16Array]", iY = "[object Uint32Array]";
function oY(t, e, n) {
  var r = t.constructor;
  switch (e) {
    case GJ:
      return Wy(t);
    case BJ:
    case qJ:
      return new r(+t);
    case JJ:
      return DJ(t);
    case YJ:
    case QJ:
    case XJ:
    case ZJ:
    case eY:
    case tY:
    case nY:
    case rY:
    case iY:
      return x3(t, n);
    case FJ:
      return new r();
    case UJ:
    case HJ:
      return new r(t);
    case VJ:
      return zJ(t);
    case WJ:
      return new r();
    case KJ:
      return LJ(t);
  }
}
function w3(t) {
  return typeof t.constructor == "function" && !zy(t) ? vK(g3(t)) : {};
}
var sY = "[object Map]";
function aY(t) {
  return Ls(t) && Wo(t) == sY;
}
var PS = bu && bu.isMap, lY = PS ? Ly(PS) : aY, cY = "[object Set]";
function uY(t) {
  return Ls(t) && Wo(t) == cY;
}
var RS = bu && bu.isSet, fY = RS ? Ly(RS) : uY, dY = 1, j3 = "[object Arguments]", hY = "[object Array]", pY = "[object Boolean]", mY = "[object Date]", gY = "[object Error]", k3 = "[object Function]", vY = "[object GeneratorFunction]", bY = "[object Map]", yY = "[object Number]", S3 = "[object Object]", xY = "[object RegExp]", wY = "[object Set]", jY = "[object String]", kY = "[object Symbol]", SY = "[object WeakMap]", CY = "[object ArrayBuffer]", OY = "[object DataView]", EY = "[object Float32Array]", _Y = "[object Float64Array]", AY = "[object Int8Array]", MY = "[object Int16Array]", TY = "[object Int32Array]", $Y = "[object Uint8Array]", PY = "[object Uint8ClampedArray]", RY = "[object Uint16Array]", NY = "[object Uint32Array]", Cr = {};
Cr[j3] = Cr[hY] = Cr[CY] = Cr[OY] = Cr[pY] = Cr[mY] = Cr[EY] = Cr[_Y] = Cr[AY] = Cr[MY] = Cr[TY] = Cr[bY] = Cr[yY] = Cr[S3] = Cr[xY] = Cr[wY] = Cr[jY] = Cr[kY] = Cr[$Y] = Cr[PY] = Cr[RY] = Cr[NY] = !0;
Cr[gY] = Cr[k3] = Cr[SY] = !1;
function _p(t, e, n, r, i, o) {
  var s, a = e & dY;
  if (s !== void 0)
    return s;
  if (!Fs(t))
    return t;
  var l = zo(t);
  if (l)
    s = NJ(t);
  else {
    var u = Wo(t), f = u == k3 || u == vY;
    if (td(t))
      return y3(t, a);
    if (u == S3 || u == j3 || f && !i)
      s = f ? {} : w3(t);
    else {
      if (!Cr[u])
        return i ? t : {};
      s = oY(t, u, a);
    }
  }
  o || (o = new ns());
  var d = o.get(t);
  if (d)
    return d;
  o.set(t, s), fY(t) ? t.forEach(function(m) {
    s.add(_p(m, e, n, m, t, o));
  }) : lY(t) && t.forEach(function(m, v) {
    s.set(v, _p(m, e, n, v, t, o));
  });
  var h = Kb, p = l ? void 0 : h(t);
  return EK(p || t, function(m, v) {
    p && (v = m, m = t[v]), s3(s, v, _p(m, e, n, v, t, o));
  }), s;
}
var DY = 1, IY = 4;
function zY(t) {
  return _p(t, DY | IY);
}
var LY = "__lodash_hash_undefined__";
function BY(t) {
  return this.__data__.set(t, LY), this;
}
function qY(t) {
  return this.__data__.has(t);
}
function Im(t) {
  var e = -1, n = t == null ? 0 : t.length;
  for (this.__data__ = new ja(); ++e < n; )
    this.add(t[e]);
}
Im.prototype.add = Im.prototype.push = BY;
Im.prototype.has = qY;
function FY(t, e) {
  for (var n = -1, r = t == null ? 0 : t.length; ++n < r; )
    if (e(t[n], n, t))
      return !0;
  return !1;
}
function UY(t, e) {
  return t.has(e);
}
var VY = 1, WY = 2;
function C3(t, e, n, r, i, o) {
  var s = n & VY, a = t.length, l = e.length;
  if (a != l && !(s && l > a))
    return !1;
  var u = o.get(t), f = o.get(e);
  if (u && f)
    return u == e && f == t;
  var d = -1, h = !0, p = n & WY ? new Im() : void 0;
  for (o.set(t, e), o.set(e, t); ++d < a; ) {
    var m = t[d], v = e[d];
    if (r)
      var g = s ? r(v, m, d, e, t, o) : r(m, v, d, t, e, o);
    if (g !== void 0) {
      if (g)
        continue;
      h = !1;
      break;
    }
    if (p) {
      if (!FY(e, function(b, x) {
        if (!UY(p, x) && (m === b || i(m, b, n, r, o)))
          return p.push(x);
      })) {
        h = !1;
        break;
      }
    } else if (!(m === v || i(m, v, n, r, o))) {
      h = !1;
      break;
    }
  }
  return o.delete(t), o.delete(e), h;
}
function HY(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r, i) {
    n[++e] = [i, r];
  }), n;
}
function KY(t) {
  var e = -1, n = Array(t.size);
  return t.forEach(function(r) {
    n[++e] = r;
  }), n;
}
var GY = 1, JY = 2, YY = "[object Boolean]", QY = "[object Date]", XY = "[object Error]", ZY = "[object Map]", eQ = "[object Number]", tQ = "[object RegExp]", nQ = "[object Set]", rQ = "[object String]", iQ = "[object Symbol]", oQ = "[object ArrayBuffer]", sQ = "[object DataView]", NS = zs ? zs.prototype : void 0, r0 = NS ? NS.valueOf : void 0;
function aQ(t, e, n, r, i, o, s) {
  switch (n) {
    case sQ:
      if (t.byteLength != e.byteLength || t.byteOffset != e.byteOffset)
        return !1;
      t = t.buffer, e = e.buffer;
    case oQ:
      return !(t.byteLength != e.byteLength || !o(new Dm(t), new Dm(e)));
    case YY:
    case QY:
    case eQ:
      return Ed(+t, +e);
    case XY:
      return t.name == e.name && t.message == e.message;
    case tQ:
    case rQ:
      return t == e + "";
    case ZY:
      var a = HY;
    case nQ:
      var l = r & GY;
      if (a || (a = KY), t.size != e.size && !l)
        return !1;
      var u = s.get(t);
      if (u)
        return u == e;
      r |= JY, s.set(t, e);
      var f = C3(a(t), a(e), r, i, o, s);
      return s.delete(t), f;
    case iQ:
      if (r0)
        return r0.call(t) == r0.call(e);
  }
  return !1;
}
var lQ = 1, cQ = Object.prototype, uQ = cQ.hasOwnProperty;
function fQ(t, e, n, r, i, o) {
  var s = n & lQ, a = Kb(t), l = a.length, u = Kb(e), f = u.length;
  if (l != f && !s)
    return !1;
  for (var d = l; d--; ) {
    var h = a[d];
    if (!(s ? h in e : uQ.call(e, h)))
      return !1;
  }
  var p = o.get(t), m = o.get(e);
  if (p && m)
    return p == e && m == t;
  var v = !0;
  o.set(t, e), o.set(e, t);
  for (var g = s; ++d < l; ) {
    h = a[d];
    var b = t[h], x = e[h];
    if (r)
      var w = s ? r(x, b, h, e, t, o) : r(b, x, h, t, e, o);
    if (!(w === void 0 ? b === x || i(b, x, n, r, o) : w)) {
      v = !1;
      break;
    }
    g || (g = h == "constructor");
  }
  if (v && !g) {
    var j = t.constructor, y = e.constructor;
    j != y && "constructor" in t && "constructor" in e && !(typeof j == "function" && j instanceof j && typeof y == "function" && y instanceof y) && (v = !1);
  }
  return o.delete(t), o.delete(e), v;
}
var dQ = 1, DS = "[object Arguments]", IS = "[object Array]", sp = "[object Object]", hQ = Object.prototype, zS = hQ.hasOwnProperty;
function pQ(t, e, n, r, i, o) {
  var s = zo(t), a = zo(e), l = s ? IS : Wo(t), u = a ? IS : Wo(e);
  l = l == DS ? sp : l, u = u == DS ? sp : u;
  var f = l == sp, d = u == sp, h = l == u;
  if (h && td(t)) {
    if (!td(e))
      return !1;
    s = !0, f = !1;
  }
  if (h && !f)
    return o || (o = new ns()), s || By(t) ? C3(t, e, n, r, i, o) : aQ(t, e, l, n, r, i, o);
  if (!(n & dQ)) {
    var p = f && zS.call(t, "__wrapped__"), m = d && zS.call(e, "__wrapped__");
    if (p || m) {
      var v = p ? t.value() : t, g = m ? e.value() : e;
      return o || (o = new ns()), i(v, g, n, r, o);
    }
  }
  return h ? (o || (o = new ns()), fQ(t, e, n, r, i, o)) : !1;
}
function Hy(t, e, n, r, i) {
  return t === e ? !0 : t == null || e == null || !Ls(t) && !Ls(e) ? t !== t && e !== e : pQ(t, e, n, r, Hy, i);
}
var mQ = 1, gQ = 2;
function vQ(t, e, n, r) {
  var i = n.length, o = i;
  if (t == null)
    return !o;
  for (t = Object(t); i--; ) {
    var s = n[i];
    if (s[2] ? s[1] !== t[s[0]] : !(s[0] in t))
      return !1;
  }
  for (; ++i < o; ) {
    s = n[i];
    var a = s[0], l = t[a], u = s[1];
    if (s[2]) {
      if (l === void 0 && !(a in t))
        return !1;
    } else {
      var f = new ns(), d;
      if (!(d === void 0 ? Hy(u, l, mQ | gQ, r, f) : d))
        return !1;
    }
  }
  return !0;
}
function O3(t) {
  return t === t && !Fs(t);
}
function bQ(t) {
  for (var e = qy(t), n = e.length; n--; ) {
    var r = e[n], i = t[r];
    e[n] = [r, i, O3(i)];
  }
  return e;
}
function E3(t, e) {
  return function(n) {
    return n == null ? !1 : n[t] === e && (e !== void 0 || t in Object(n));
  };
}
function yQ(t) {
  var e = bQ(t);
  return e.length == 1 && e[0][2] ? E3(e[0][0], e[0][1]) : function(n) {
    return n === t || vQ(n, t, e);
  };
}
function xQ(t, e) {
  return t != null && e in Object(t);
}
function wQ(t, e, n) {
  e = p3(e, t);
  for (var r = -1, i = e.length, o = !1; ++r < i; ) {
    var s = $g(e[r]);
    if (!(o = t != null && n(t, s)))
      break;
    t = t[s];
  }
  return o || ++r != i ? o : (i = t == null ? 0 : t.length, !!i && Iy(i) && Dy(s, i) && (zo(t) || Nm(t)));
}
function jQ(t, e) {
  return t != null && wQ(t, e, xQ);
}
var kQ = 1, SQ = 2;
function CQ(t, e) {
  return Uy(t) && O3(e) ? E3($g(t), e) : function(n) {
    var r = sJ(n, t);
    return r === void 0 && r === e ? jQ(n, t) : Hy(e, r, kQ | SQ);
  };
}
function OQ(t) {
  return function(e) {
    return e?.[t];
  };
}
function EQ(t) {
  return function(e) {
    return m3(e, t);
  };
}
function _Q(t) {
  return Uy(t) ? OQ($g(t)) : EQ(t);
}
function AQ(t) {
  return typeof t == "function" ? t : t == null ? Ry : typeof t == "object" ? zo(t) ? CQ(t[0], t[1]) : yQ(t) : _Q(t);
}
function MQ(t) {
  return function(e, n, r) {
    for (var i = -1, o = Object(e), s = r(e), a = s.length; a--; ) {
      var l = s[++i];
      if (n(o[l], l, o) === !1)
        break;
    }
    return e;
  };
}
var _3 = MQ();
function TQ(t, e) {
  return t && _3(t, e, qy);
}
function Qb(t, e, n) {
  (n !== void 0 && !Ed(t[e], n) || n === void 0 && !(e in t)) && _g(t, e, n);
}
function $Q(t) {
  return Ls(t) && Ag(t);
}
function Xb(t, e) {
  if (!(e === "constructor" && typeof t[e] == "function") && e != "__proto__")
    return t[e];
}
function PQ(t) {
  return a3(t, Fy(t));
}
function RQ(t, e, n, r, i, o, s) {
  var a = Xb(t, n), l = Xb(e, n), u = s.get(l);
  if (u) {
    Qb(t, n, u);
    return;
  }
  var f = o ? o(a, l, n + "", t, e, s) : void 0, d = f === void 0;
  if (d) {
    var h = zo(l), p = !h && td(l), m = !h && !p && By(l);
    f = l, h || p || m ? zo(a) ? f = a : $Q(a) ? f = yK(a) : p ? (d = !1, f = y3(l, !0)) : m ? (d = !1, f = x3(l, !0)) : f = [] : hJ(l) || Nm(l) ? (f = a, Nm(a) ? f = PQ(a) : (!Fs(a) || Ny(a)) && (f = w3(l))) : d = !1;
  }
  d && (s.set(l, f), i(f, l, r, o, s), s.delete(l)), Qb(t, n, f);
}
function A3(t, e, n, r, i) {
  t !== e && _3(e, function(o, s) {
    if (i || (i = new ns()), Fs(o))
      RQ(t, e, s, n, A3, r, i);
    else {
      var a = r ? r(Xb(t, s), o, s + "", t, e, i) : void 0;
      a === void 0 && (a = o), Qb(t, s, a);
    }
  }, Fy);
}
var NQ = l3(function(t, e, n, r) {
  A3(t, e, n, r);
});
function DQ(t, e) {
  var n = {};
  return e = AQ(e), TQ(t, function(r, i, o) {
    _g(n, e(r, i, o), r);
  }), n;
}
const IQ = new RegExp("([\\p{Ll}\\d])(\\p{Lu})", "gu"), zQ = new RegExp("(\\p{Lu})([\\p{Lu}][\\p{Ll}])", "gu"), LQ = new RegExp("(\\d)\\p{Ll}|(\\p{L})\\d", "u"), BQ = /[^\p{L}\d]+/giu, LS = "$1\0$2", BS = "";
function M3(t) {
  let e = t.trim();
  e = e.replace(IQ, LS).replace(zQ, LS), e = e.replace(BQ, "\0");
  let n = 0, r = e.length;
  for (; e.charAt(n) === "\0"; )
    n++;
  if (n === r)
    return [];
  for (; e.charAt(r - 1) === "\0"; )
    r--;
  return e.slice(n, r).split(/\0/g);
}
function qQ(t) {
  const e = M3(t);
  for (let n = 0; n < e.length; n++) {
    const r = e[n], i = LQ.exec(r);
    if (i) {
      const o = i.index + (i[1] ?? i[2]).length;
      e.splice(n, 1, r.slice(0, o), r.slice(o));
    }
  }
  return e;
}
function FQ(t, e) {
  const [n, r, i] = HQ(t, e), o = UQ(void 0), s = VQ(void 0), a = WQ(o, s);
  return n + r.map((l, u) => u === 0 ? o(l) : a(l, u)).join("") + i;
}
function UQ(t) {
  return (e) => e.toLocaleLowerCase(t);
}
function VQ(t) {
  return (e) => e.toLocaleUpperCase(t);
}
function WQ(t, e) {
  return (n, r) => {
    const i = n[0];
    return (r > 0 && i >= "0" && i <= "9" ? "_" + i : e(i)) + t(n.slice(1));
  };
}
function HQ(t, e = {}) {
  const n = e.split ?? (e.separateNumbers ? qQ : M3), r = e.prefixCharacters ?? BS, i = e.suffixCharacters ?? BS;
  let o = 0, s = t.length;
  for (; o < t.length; ) {
    const a = t.charAt(o);
    if (!r.includes(a))
      break;
    o++;
  }
  for (; s > o; ) {
    const a = s - 1, l = t.charAt(a);
    if (!i.includes(l))
      break;
    s = a;
  }
  return [
    t.slice(0, o),
    n(t.slice(o, s)),
    t.slice(s)
  ];
}
const yf = (t) => /.+-.+/.test(t) ? FQ(t) : t, KQ = (t) => Object.prototype.toString.call(t).slice(8, -1) === "Object";
function GQ(t, e) {
  const n = /* @__PURE__ */ Object.create(null), r = t.split(",");
  for (let i = 0; i < r.length; i++)
    n[r[i]] = !0;
  return (i) => !!n[i];
}
const JQ = /* @__PURE__ */ GQ("String,Number,Boolean,Function,Symbol,BigInt");
function YQ(t) {
  const e = t?.toString().match(/^\s*function (\w+)/);
  return e ? e[1] : t === null ? "null" : "";
}
function QQ(t, e) {
  let n;
  const r = YQ(e);
  if (JQ(r)) {
    const i = typeof t;
    n = i === r.toLowerCase(), !n && i === "object" && (n = t instanceof e);
  } else r === "Object" ? n = Fs(t) : r === "Array" ? n = Array.isArray(t) : r === "null" ? n = t === null : n = t instanceof e;
  return {
    valid: n,
    expectedType: r
  };
}
function XQ({
  prop: t,
  type: e,
  validator: n
}) {
  if (![void 0, null].includes(t) && e) {
    let r = !1;
    const i = Array.isArray(e) ? e : [e], o = [];
    for (let s = 0; s < i.length && !r; s++) {
      const { valid: a, expectedType: l } = QQ(t, i[s]);
      o.push(l || ""), r = a;
    }
    if (!r)
      throw new TypeError(
        `Invalid prop: type check failed, expecting [${o.join(
          ", "
        )}], receiving: ${t}`
      );
  }
  if (n && !n(t))
    throw new Error(`Invalid prop: validator check failed, receiving: ${t}`);
}
function ZQ(t, {
  mergeObject: e,
  mergeObjectCustomizer: n,
  mergeFunction: r
}) {
  const i = [];
  for (let s = t.length - 1; s >= 0; s--)
    i.push(t[s]);
  const o = n || (r ? (s, a) => typeof s == "function" && typeof a == "function" ? r?.(a, s) : void 0 : void 0);
  return e === "deep" ? NQ(...i, o) : OG(...i, o);
}
function eX(t, {
  mergeFunction: e
}) {
  return t.reduce(e, () => {
  });
}
function _a(t, e = {}) {
  const {
    type: n,
    default: r,
    defaultIsDynamic: i = !1,
    required: o = !1,
    validator: s,
    camelizeObjectKeys: a = !1,
    mergeObjectApplyOnlyToDefault: l = !1,
    mergeFunctionApplyOnlyToDefault: u = !0
  } = e;
  let { mergeObject: f = "deep", mergeObjectCustomizer: d, mergeFunction: h = !1 } = e;
  const p = [];
  let m, v = !1, g = !1;
  const b = (x) => {
    if (x !== void 0) {
      XQ({ type: n, prop: x, validator: s });
      const w = KQ(x), j = typeof x == "function";
      return v = w, g = j, w ? (x = zY(x), a ? DQ(x, (y, k) => yf(k)) : x) : x;
    }
  };
  for (const x of t)
    p.push(b(x));
  if (!i)
    p.push(b(r));
  else if (typeof r != "function")
    throw new TypeError(
      `Invalid option: options.default should be Function when options.defaultIsDynamic enabled, receiving: ${r}`
    );
  v || (f = !1, g || (h = !1));
  for (let x = 0; x < p.length; x++) {
    const w = p[x];
    if (w !== void 0) {
      x === p.length - 1 ? m = w : f ? m = ZQ(
        l ? [w, r] : p,
        {
          mergeObject: f,
          mergeObjectCustomizer: d,
          mergeFunction: h
        }
      ) : h ? m = eX(
        u ? [w, r] : p,
        {
          mergeFunction: h
        }
      ) : m = w;
      break;
    }
  }
  if (o && [void 0, null].includes(m))
    throw new Error("Missing required prop");
  return i ? _a(t, {
    ...e,
    default: r(m),
    defaultIsDynamic: !1
  }) : m;
}
function qS(t) {
  const e = Array.from(yf(t));
  return e[0] = e[0].toUpperCase(), e.unshift("o", "n"), e.join("");
}
function tX(t, {
  props: e = [],
  camelizePropNames: n = !1
} = {}) {
  const r = {
    props: {},
    attrs: {},
    listeners: {},
    hooks: {},
    slots: {}
  };
  let i;
  if (Array.isArray(e))
    i = n ? e.map((o) => yf(o)) : e;
  else if (n) {
    i = [];
    for (const o in e)
      i.push(yf(o));
  } else
    i = Object.keys(e);
  for (const o in t)
    if (o.startsWith("@")) {
      const s = o.substring(1);
      if (s.startsWith("vue:"))
        r.hooks[qS(s.replace("vue:", "vnode-"))] = t[o];
      else {
        if (s.startsWith("vnode"))
          throw new Error("@vnode-* hooks are no longer supported. Use the vue: prefix instead. For example, @vnode-mounted should be changed to @vue:mounted. @vnode-* hooks support has been removed in Vue 3.4.");
        r.listeners[qS(s)] = t[o];
      }
    } else if (o.startsWith("#")) {
      const s = o.substring(1);
      s && (r.slots[s] = t[o]);
    } else {
      const s = n ? yf(o) : o;
      i.includes(s) ? r.props[s] = t[o] : r.attrs[o] = t[o];
    }
  return r;
}
const FS = "JsonEditorVue", Ap = [
  "mainMenuBar",
  "navigationBar",
  "statusBar",
  "askToFormat",
  "readOnly",
  "escapeControlCharacters",
  "escapeUnicodeCharacters",
  "flattenColumns"
], Ca = {}, US = {}, Mp = "modelValue", VS = "update:modelValue", WS = {
  [Mp]: {},
  mode: {
    type: String
  },
  debounce: {
    type: Number
  },
  stringified: {
    type: Boolean,
    default: void 0
  },
  ...Object.fromEntries(
    Ap.map((t) => [
      t,
      {
        type: Boolean,
        default: void 0
      }
    ])
  )
}, nX = z3({
  name: FS,
  install(t, e) {
    const n = tX(e || {}, { props: WS });
    Object.assign(Ca, n.props), Object.assign(US, n.attrs), t.component(FS, this);
  },
  props: WS,
  emits: {
    [VS](t) {
      return !0;
    },
    "update:mode": function(t) {
      return !0;
    }
  },
  setup(t, { attrs: e, emit: n, expose: r }) {
    var i;
    const o = (i = L3()) == null ? void 0 : i.proxy, s = Ig(), a = Ig(!1), l = Ig();
    B3(() => {
      var b;
      l.value = _a([t.mode, Ca.mode], {
        type: String
      }), (b = s.value) == null || b.updateProps({
        mode: l.value || Hr.tree
      });
    });
    const u = (b) => {
      n("update:mode", b);
    };
    Ca.mode !== void 0 && t.mode === void 0 && u(Ca.mode);
    const f = Qy(() => _a([t.debounce, Ca.debounce, 300], {
      type: Number
    })), d = Qy(() => _a([t.stringified, Ca.stringified, !0], {
      type: Boolean
    }));
    let h = Ep;
    const p = (b) => {
      a.value = !0, !d.value && b.text && (s.value && !s.value.validate() && (b.json = h(b.text)), b.text = void 0), n(
        VS,
        b.text === void 0 ? b.json : b.text
      );
    }, m = UH(p, f.value), v = (b) => {
      l.value === "text" ? m(b) : p(b);
    }, g = (b, x) => (...w) => {
      b(...w), x(...w);
    };
    return r?.({ jsonEditor: s }), F3(() => {
      var b;
      (b = s.value) == null || b.destroy();
    }), U3(() => {
      const b = _a([t[Mp], Ca[Mp]]), x = Object.fromEntries(
        Array.from(Ap, (j) => [j, _a([t[j], Ca[j]])]).filter(
          ([, j]) => j !== void 0
        )
      ), w = _a(
        [
          x,
          e,
          US
        ],
        {
          camelizeObjectKeys: !0,
          defaultIsDynamic: !0,
          default: (j) => {
            var y;
            return h = ((y = j.parser) == null ? void 0 : y.parse) || Ep, {
              onChange: v,
              onChangeMode: u,
              mode: l.value,
              // Can not just pass one of parse and stringify
              parser: {
                // SafeDestr is used by default so that it will not affect the result of jsonEditor.value.validate()
                // When stringified is disabled, destr is used by default for better performance (destr is only called when JSON is valid)
                parse: vH,
                stringify: JSON.stringify
              },
              ...b !== void 0 && {
                content: {
                  [typeof b == "string" && l.value === "text" && d.value ? "text" : "json"]: b
                }
              }
            };
          },
          mergeFunction: g,
          mergeObject: "shallow",
          type: Object
        }
      );
      s.value = fH({
        target: o?.$refs.jsonEditorRef,
        props: w
      }), zg(
        () => t[Mp],
        (j) => {
          if (a.value) {
            a.value = !1;
            return;
          }
          s.value && s.value.set(
            [void 0, ""].includes(j) ? {
              text: ""
            } : {
              [typeof j == "string" && l.value === "text" && d.value ? "text" : "json"]: j
            }
          );
        },
        {
          deep: !0
        }
      ), zg(
        () => Array.from(Ap, (j) => t[j]),
        (j) => {
          var y;
          (y = s.value) == null || y.updateProps(
            Object.fromEntries(Array.from(j, (k, S) => [Ap[S], k]).filter(([, k]) => k !== void 0))
          );
        }
      ), zg(
        () => e,
        (j) => {
          var y, k;
          const S = {};
          (j.onChange || j["on-change"]) && (S.onChange = v), (j.onChangeMode || j["on-change-mode"]) && (S.onChangeMode = u), h = ((y = j.parser) == null ? void 0 : y.parse) || Ep, (k = s.value) == null || k.updateProps(
            Object.getOwnPropertyNames(S).length > 0 ? _a([j, S], {
              camelizeObjectKeys: !0,
              mergeFunction: g,
              mergeObject: "shallow",
              type: Object
            }) : j
          );
        },
        {
          deep: !0
        }
      ), r || (r = (j) => {
        for (const y in j)
          o[y] = V3(j[y]);
      }, r({ jsonEditor: s }));
    }), () => q3("div", { ref: "jsonEditorRef" });
  }
}), rX = {
  array: () => [],
  object: () => ({})
}, iX = {
  components: {
    JsonEditorVue: nX
  },
  props: {
    component: {
      type: Object,
      required: !0
    }
  },
  emits: ["update-prop", "toggle-slot", "edit-slot"],
  computed: {
    argTypes: function() {
      return {
        ...this.component.canvasData.definition.argTypes || {},
        ...this.component.canvasData.argTypes || {}
      };
    }
  },
  methods: {
    updateJson: function(t, e) {
      const n = JSON.parse(e);
      this.$emit("update-prop", t, n);
    },
    defaultJsonValue: function(t) {
      return rX[t]();
    },
    updateFiles: async function(t, e) {
      const n = e.target.files, r = Object.keys(n).map((o) => new Promise((s) => {
        const a = n[o];
        var l = new FileReader();
        l.onload = function() {
          s(l.result);
        }, l.readAsDataURL(a);
      })), i = await Promise.all(r);
      this.$emit("update-prop", t, i);
    },
    updateCheckboxes: function(t, e) {
      const n = Array.from(
        e.target.closest(".fieldset").querySelectorAll("input:checked")
      ).map((r) => r.value);
      this.$emit("update-prop", t, n);
    },
    updateCheckbox: function(t, e) {
      this.$emit("update-prop", t, e.target.checked);
    },
    updateProp: function(t, e) {
      this.$emit("update-prop", t, e.target.value);
    },
    controlType: function(t) {
      return t.control.type || t.control;
    },
    toggleSlot: function(t) {
      this.$emit("toggle-slot", t);
    },
    toggleCta: function(t) {
      return this.slotEnabled(t) ? "Disable" : "Enable";
    },
    slotEnabled: function(t) {
      return this.component.canvasData.slots?.[t];
    },
    editSlot: function(t) {
      this.$emit("edit-slot", t);
    }
  }
}, oX = { class: "config" }, sX = { key: 0 }, aX = ["for"], lX = ["name", "checked", "onChange"], cX = ["name", "onChange"], uX = ["name", "value", "onChange"], fX = ["for"], dX = ["name", "value", "onChange"], hX = ["for"], pX = ["name", "multiple", "onChange"], mX = ["value", "selected"], gX = ["name", "value", "min", "max", "step", "onChange"], vX = ["name", "value", "min", "max", "step", "onChange"], bX = ["name", "value", "onChange"], yX = ["name", "value", "onChange"], xX = ["name", "value", "onKeyup"], wX = ["onClick"], jX = ["onClick"];
function kX(t, e, n, r, i, o) {
  const s = Fc("JsonEditorVue");
  return St(), Kt("div", oX, [
    Object.keys(o.argTypes).length === 0 ? (St(), Kt("div", sX, "No controls")) : ri("", !0),
    (St(!0), Kt(vo, null, Mo(Object.entries(o.argTypes), ([a, l]) => (St(), Kt("div", {
      key: a,
      class: "row"
    }, [
      $i("label", {
        for: `${a}-config`
      }, Aa(a), 9, aX),
      $i("div", null, [
        o.controlType(l) === "boolean" ? (St(), Kt("input", {
          key: 0,
          type: "checkbox",
          name: `${a}-config`,
          checked: n.component.props[a],
          onChange: () => o.updateCheckbox(a, t.e)
        }, null, 40, lX)) : ri("", !0),
        o.controlType(l) === "object" || o.controlType(l) === "array" ? (St(), Va(s, {
          key: 1,
          mode: "text",
          "main-menu-bar": !1,
          "navigation-bar": !1,
          "status-bar": !1,
          "model-value": n.component.props[a] || o.defaultJsonValue(o.controlType(l)),
          "onUpdate:modelValue": (u) => o.updateJson(a, u)
        }, null, 8, ["model-value", "onUpdate:modelValue"])) : ri("", !0),
        o.controlType(l) === "file" ? (St(), Kt("input", {
          key: 2,
          type: "file",
          name: `${a}-config`,
          multiple: "",
          accept: "image/*",
          onChange: (u) => o.updateFiles(a, u)
        }, null, 40, cX)) : ri("", !0),
        o.controlType(l) === "radio" || o.controlType(l) === "inline-radio" ? (St(), Kt("div", {
          key: 3,
          class: Xs(["fieldset", { inline: o.controlType(l) === "inline-radio" }])
        }, [
          (St(!0), Kt(vo, null, Mo(l.options, (u) => (St(), Kt("div", { key: u }, [
            $i("input", {
              type: "radio",
              name: `${a}-config`,
              value: u,
              onChange: (f) => o.updateProp(a, f)
            }, null, 40, uX),
            $i("label", {
              for: `${a}-config`
            }, Aa(u), 9, fX)
          ]))), 128))
        ], 2)) : ri("", !0),
        o.controlType(l) === "check" || o.controlType(l) === "inline-check" ? (St(), Kt("div", {
          key: 4,
          class: Xs(["fieldset", { inline: o.controlType(l) === "inline-check" }])
        }, [
          (St(!0), Kt(vo, null, Mo(l.options, (u) => (St(), Kt("div", { key: u }, [
            $i("input", {
              type: "checkbox",
              name: `${a}-config`,
              value: u,
              onChange: (f) => o.updateCheckboxes(a, f)
            }, null, 40, dX),
            $i("label", {
              for: `${a}-config`
            }, Aa(u), 9, hX)
          ]))), 128))
        ], 2)) : ri("", !0),
        o.controlType(l) === "select" || o.controlType(l) === "multi-select" ? (St(), Kt("select", {
          key: 5,
          name: `${a}-config`,
          multiple: o.controlType(l) === "multi-select",
          onChange: (u) => o.updateProp(a, u)
        }, [
          (St(!0), Kt(vo, null, Mo(l.options, (u) => (St(), Kt("option", {
            key: u,
            value: u,
            selected: u === n.component.props[a]
          }, Aa(u), 9, mX))), 128))
        ], 40, pX)) : ri("", !0),
        o.controlType(l) === "number" ? (St(), Kt("input", {
          key: 6,
          name: `${a}-config`,
          type: "number",
          value: n.component.props[a],
          min: l.control.min,
          max: l.control.max,
          step: l.control.step,
          onChange: (u) => o.updateProp(a, u)
        }, null, 40, gX)) : ri("", !0),
        o.controlType(l) === "range" ? (St(), Kt("input", {
          key: 7,
          name: `${a}-config`,
          type: "range",
          value: n.component.props[a],
          min: l.control.min,
          max: l.control.max,
          step: l.control.step,
          onChange: (u) => o.updateProp(a, u)
        }, null, 40, vX)) : ri("", !0),
        o.controlType(l) === "color" ? (St(), Kt("input", {
          key: 8,
          name: `${a}-config`,
          type: "color",
          value: n.component.props[a],
          onChange: (u) => o.updateProp(a, u)
        }, null, 40, bX)) : ri("", !0),
        o.controlType(l) === "date" ? (St(), Kt("input", {
          key: 9,
          name: `${a}-config`,
          type: "date",
          value: n.component.props[a],
          onChange: (u) => o.updateProp(a, u)
        }, null, 40, yX)) : ri("", !0),
        o.controlType(l) === "text" ? (St(), Kt("textarea", {
          key: 10,
          name: `${a}-config`,
          value: n.component.props[a],
          onKeyup: (u) => o.updateProp(a, u)
        }, null, 40, xX)) : ri("", !0)
      ])
    ]))), 128)),
    (St(!0), Kt(vo, null, Mo(n.component.canvasData.availableSlots, (a) => (St(), Kt("div", { key: a }, [
      W3(Aa(a) + " slot: ", 1),
      $i("button", {
        onClick: () => o.toggleSlot(a)
      }, Aa(o.toggleCta(a)), 9, wX),
      o.slotEnabled(a) ? (St(), Kt("button", {
        key: 0,
        onClick: () => o.editSlot(a)
      }, " Edit ", 8, jX)) : ri("", !0)
    ]))), 128))
  ]);
}
const SX = /* @__PURE__ */ id(iX, [["render", kX], ["__scopeId", "data-v-0d9bea0d"]]), CX = {
  name: "ToolCategory",
  props: {
    name: {
      type: String,
      required: !0
    },
    subTree: {
      type: Object,
      required: !0
    },
    activeTool: {
      type: String,
      default: ""
    },
    topLevel: {
      type: Boolean,
      default: !0
    }
  },
  emits: ["select-tool"],
  data: function() {
    return {
      expanded: this.topLevel
    };
  },
  methods: {
    isActive: function(t) {
      return this.activeTool === t;
    },
    selectTool: function(t) {
      this.topLevel ? this.$emit("select-tool", t) : this.$emit("select-tool", `${this.name}/${t}`);
    }
  }
}, OX = { key: 0 }, EX = { key: 1 }, _X = {
  key: 0,
  class: "sub-tree"
}, AX = ["onClick"];
function MX(t, e, n, r, i, o) {
  const s = Fc("tool-category");
  return St(), Kt(vo, null, [
    $i("div", {
      class: "title",
      onClick: e[0] || (e[0] = (a) => t.expanded = !t.expanded)
    }, [
      $i("div", null, Aa(n.name), 1),
      t.expanded ? (St(), Kt("div", OX, "^")) : (St(), Kt("div", EX, "v"))
    ]),
    t.expanded ? (St(), Kt("div", _X, [
      (St(!0), Kt(vo, null, Mo(Object.entries(n.subTree), ([a, l]) => (St(), Kt(vo, { key: a }, [
        l.isStory ? (St(), Kt("button", {
          key: 0,
          class: Xs(["tool", { active: o.isActive(a), [a]: !0 }]),
          onClick: (u) => o.selectTool(a)
        }, Aa(a), 11, AX)) : (St(), Va(s, {
          key: 1,
          name: a,
          "top-level": !1,
          "sub-tree": l,
          "active-tool": n.activeTool,
          onSelectTool: o.selectTool
        }, null, 8, ["name", "sub-tree", "active-tool", "onSelectTool"]))
      ], 64))), 128))
    ])) : ri("", !0)
  ], 64);
}
const TX = /* @__PURE__ */ id(CX, [["render", MX], ["__scopeId", "data-v-9835c2ec"]]), $X = ["mouse", "mover"], PX = {
  components: {
    ToolCategory: TX
  },
  props: {
    stories: {
      type: Array,
      required: !0
    },
    activeTool: {
      type: String,
      default: ""
    }
  },
  emits: ["select-tool", "update-tools", "mounted"],
  data: function() {
    return {
      mouseTools: $X
    };
  },
  computed: {
    tools: function() {
      return Object.fromEntries(
        this.stories.flatMap(
          (t) => Object.entries(t).filter(([e]) => e !== "default").map(([e, n]) => [
            `${t.default.title}/${e}`,
            { ...n, definition: t.default, isStory: !0 }
          ])
        )
      );
    },
    indexedTools: function() {
      const t = {};
      return Object.entries(this.tools).forEach(([e, n]) => {
        const r = e.split("/");
        this.indexStory(t, r, n);
      }), t;
    }
  },
  mounted: function() {
    this.$emit("mounted", this.tools);
  },
  methods: {
    isActive: function(t) {
      return this.activeTool === t;
    },
    selectTool: function(t) {
      this.$emit("select-tool", t);
    },
    indexStory: function(t, e, n) {
      e.length === 1 ? t[e[0]] = n : (t[e[0]] ||= {}, this.indexStory(t[e[0]], e.splice(1), n));
    }
  }
}, RX = { class: "tools" }, NX = { class: "mouse-tools" }, DX = ["onClick"];
function IX(t, e, n, r, i, o) {
  const s = Fc("tool-category");
  return St(), Kt("div", RX, [
    $i("div", NX, [
      (St(!0), Kt(vo, null, Mo(t.mouseTools, (a) => (St(), Kt("button", {
        key: a,
        class: Xs(["tool", { active: o.isActive(a), [a]: !0 }]),
        onClick: (l) => o.selectTool(a)
      }, [...e[0] || (e[0] = [
        $i("div", { class: "icon" }, null, -1)
      ])], 10, DX))), 128))
    ]),
    HS(s, {
      name: "All",
      "sub-tree": o.indexedTools,
      "active-tool": n.activeTool,
      onSelectTool: o.selectTool
    }, null, 8, ["sub-tree", "active-tool", "onSelectTool"])
  ]);
}
const zX = /* @__PURE__ */ id(PX, [["render", IX], ["__scopeId", "data-v-5a4a320c"]]), LX = {
  components: {
    EmbeddedComponent: rM,
    ComponentConfig: SX,
    Tools: zX
  },
  props: {
    stories: {
      type: Array,
      required: !0
    }
  },
  data: function() {
    return {
      tools: [],
      activeTool: "",
      floatingComp: null,
      rafId: null,
      embeddedComponents: [],
      selectedEmbeddedIndex: -1,
      moving: !1,
      moveOffset: { x: 0, y: 0 },
      resizingCorner: "",
      slotInEditMode: "",
      canvasScale: 1,
      canvasOffset: { x: 0, y: 0 },
      spacePressed: !1,
      panning: !1,
      panStart: { x: 0, y: 0 },
      panStartOffset: { x: 0, y: 0 },
      clickEnabled: !0
    };
  },
  computed: {
    selectedComponent: function() {
      return this.embeddedComponents[this.selectedEmbeddedIndex];
    }
  },
  mounted() {
    document.addEventListener("keydown", this.onKeyDown), document.addEventListener("keyup", this.onKeyUp);
  },
  beforeUnmount() {
    document.removeEventListener("keydown", this.onKeyDown), document.removeEventListener("keyup", this.onKeyUp);
  },
  methods: {
    wrapperOffset: function() {
      const t = this.$refs.canvasWrapper.getBoundingClientRect();
      return {
        x: t.x,
        y: t.y
      };
    },
    selectTool: function(t) {
      this.activeTool === "mover" && t !== "mover" && (this.selectedEmbeddedIndex = -1), this.activeTool = t;
    },
    onEnter: function() {
      const t = this.tools[this.activeTool];
      t?.render ? this.floatingComp = H3(
        t.render(this.initialStoryProps(t))
      ) : this.floatingComp = null;
    },
    onMove: function(t) {
      if (this.panning)
        return this.panCanvas(t);
      if (this.resizingCorner)
        return this.slotInEditMode ? this.resizeSlot(t) : this.resizeSelected(t);
      if (this.moving && !this.slotInEditMode)
        return this.moveSelected(t);
      if (this.floatingComp)
        return this.moveFloatingComp(t);
    },
    resizeSelected: function(t) {
      if (!this.selectedComponent) return;
      const n = this.selectedComponent.el.getBoundingClientRect(), r = this.wrapperOffset();
      let { width: i, height: o, transform: s } = this.selectedComponent.canvasData, a, l;
      const u = (t.clientX - r.x - this.canvasOffset.x) / this.canvasScale, f = (t.clientY - r.y - this.canvasOffset.y) / this.canvasScale, d = (n.x - r.x - this.canvasOffset.x) / this.canvasScale, h = (n.y - r.y - this.canvasOffset.y) / this.canvasScale, p = n.width / this.canvasScale, m = n.height / this.canvasScale;
      switch (this.resizingCorner) {
        case "top-left":
          i = p + d - u, o = m + h - f, a = u + "px", l = f + "px", s = `translate(${a}, ${l})`;
          break;
        case "top-center":
          o = m + h - f, a = d + "px", l = f + "px", s = `translate(${a}, ${l})`;
          break;
        case "top-right":
          i = u - d, o = m + h - f, a = d + "px", l = f + "px", s = `translate(${a}, ${l})`;
          break;
        case "center-right":
          i = u - d;
          break;
        case "bottom-right":
          i = u - d, o = f - h;
          break;
        case "bottom-center":
          o = f - h;
          break;
        case "bottom-left":
          i = p + d - u, o = f - h, a = u + "px", l = h + "px", s = `translate(${a}, ${l})`;
          break;
        case "center-left":
          i = p + d - u, a = u + "px", l = h + "px", s = `translate(${a}, ${l})`;
          break;
      }
      this.selectedComponent.canvasData = {
        ...this.selectedComponent.canvasData,
        width: i,
        height: o,
        transform: s
      };
    },
    resizeSlot: function(t) {
      if (!this.slotInEditMode) return;
      const e = this.selectedComponent.canvasData.slots[this.slotInEditMode], r = this.selectedComponent.instance.$refs[`slot:${this.slotInEditMode}`].getBoundingClientRect(), i = this.wrapperOffset();
      let { width: o, height: s } = e.canvasData;
      const a = (t.clientX - i.x - this.canvasOffset.x) / this.canvasScale, l = (t.clientY - i.y - this.canvasOffset.y) / this.canvasScale, u = (r.x - i.x - this.canvasOffset.x) / this.canvasScale, f = (r.y - i.y - this.canvasOffset.y) / this.canvasScale;
      switch (this.resizingCorner) {
        case "center-right":
          o = a - u;
          break;
        case "bottom-right":
          o = a - u, s = l - f;
          break;
        case "bottom-center":
          s = l - f;
          break;
      }
      e.canvasData = {
        ...e.canvasData,
        width: o,
        height: s
      };
    },
    moveSelected: function(t) {
      this.selectedComponent && (this.selectedComponent.canvasData.transform = this.componentTransform(t));
    },
    moveFloatingComp: function(t) {
      const e = this.$refs.floatingCompRef;
      e && (cancelAnimationFrame(this.rafId), this.rafId = requestAnimationFrame(() => {
        e.style.transform = this.componentTransform(t);
      }));
    },
    onClick: function(t) {
      if (this.panning) return;
      if (!this.clickEnabled) {
        this.clickEnabled = !0;
        return;
      }
      if (this.activeTool === "mover" && t.target === this.$refs.canvasWrapper && (this.selectedEmbeddedIndex = -1, this.slotInEditMode = ""), !this.floatingComp) return;
      const e = this.tools[this.activeTool];
      this.embeddedComponents.push({
        render: e.render,
        props: this.initialStoryProps(e),
        canvasData: {
          definition: e.definition,
          argTypes: e.argTypes,
          availableSlots: e.availableSlots,
          transform: this.componentTransform(t),
          width: "auto",
          height: "auto"
        }
      });
    },
    onMouseDown: function(t) {
      this.spacePressed && (this.startPan(t), this.clickEnabled = !1);
    },
    componentTransform: function(t) {
      const e = this.wrapperOffset(), n = (t.clientX - e.x - this.canvasOffset.x) / this.canvasScale, r = (t.clientY - e.y - this.canvasOffset.y) / this.canvasScale, i = {};
      return this.moving ? (i.x = -(this.moveOffset.x + 2) + "px", i.y = -(this.moveOffset.y + 2) + "px") : (i.x = "-50%", i.y = "-50%"), `translate(${i.x}, ${i.y}) translate(${n}px, ${r}px)`;
    },
    onLeave: function() {
      this.floatingComp = null, this.moving = !1, this.resizingCorner = "", this.panning = !1;
    },
    onMouseDownEmbedded: function(t, e) {
      if (this.spacePressed) {
        this.startPan(e);
        return;
      }
      this.activeTool === "mover" && (this.selectedEmbeddedIndex = t, this.moving = !0, this.moveOffset = { x: e.offsetX, y: e.offsetY });
    },
    onMouseUp: function() {
      if (this.panning) {
        this.stopPan();
        return;
      }
      this.activeTool === "mover" && (this.moving = !1, this.resizingCorner = "");
    },
    onResize: function(t, e) {
      this.resizingCorner = e, this.clickEnabled = !1;
    },
    updateEmbeddedComponentAfterMount: function(t, e) {
      const n = this.embeddedComponents[t], r = e.$refs.wrapper;
      n.instance = e, n.el = r;
      const i = r.getBoundingClientRect(), o = this.wrapperOffset(), s = (i.x - o.x - this.canvasOffset.x) / this.canvasScale + "px", a = (i.y - o.y - this.canvasOffset.y) / this.canvasScale + "px";
      this.embeddedComponents[t].canvasData.transform = `translate(${s}, ${a})`;
    },
    updateToolsAfterMount: function(t) {
      this.tools = t;
    },
    updateProp: function(t, e) {
      this.selectedComponent.props[t] = e;
    },
    toggleSlot: function(t) {
      this.selectedComponent.canvasData.slots?.[t] ? delete this.selectedComponent.canvasData.slots[t] : (this.selectedComponent.canvasData.slots ||= {}, this.selectedComponent.canvasData.slots[t] = {
        canvasData: {
          width: "auto",
          height: "auto"
        },
        render: () => ({
          template: `<div data-slot-name="${t}"></div>`
        })
      });
    },
    editSlot: function(t) {
      this.slotInEditMode = t;
    },
    onWheel: function(t) {
      t.preventDefault();
      const e = this.$refs.canvasWrapper.getBoundingClientRect(), n = t.clientX - e.left, r = t.clientY - e.top, i = (n - this.canvasOffset.x) / this.canvasScale, o = (r - this.canvasOffset.y) / this.canvasScale, s = 1.1;
      this.canvasScale *= t.deltaY < 0 ? s : 1 / s, this.canvasScale = Math.min(Math.max(0.1, this.canvasScale), 20), this.canvasOffset.x = n - i * this.canvasScale, this.canvasOffset.y = r - o * this.canvasScale, this.$refs.canvas.style.transform = `translate(${this.canvasOffset.x}px, ${this.canvasOffset.y}px) scale(${this.canvasScale})`;
    },
    onKeyDown: function(t) {
      ["INPUT", "TEXTAREA", "SELECT", "OPTION"].includes(t.target.tagName) || (t.code === "Space" ? (t.preventDefault(), this.spacePressed = !0, this.$refs.canvasWrapper.style.cursor = "grab") : t.code === "Delete" && this.selectedComponent && (this.embeddedComponents.splice(this.selectedEmbeddedIndex, 1), this.selectedEmbeddedIndex = -1));
    },
    onKeyUp: function(t) {
      ["INPUT", "TEXTAREA", "SELECT", "OPTION"].includes(t.target.tagName) || t.code === "Space" && (t.preventDefault(), this.spacePressed = !1, this.panning = !1, this.$refs.canvasWrapper.style.cursor = "");
    },
    startPan: function(t) {
      this.panning = !0, this.panStart = { x: t.clientX, y: t.clientY }, this.panStartOffset = { ...this.canvasOffset }, this.$refs.canvasWrapper.style.cursor = "grabbing";
    },
    stopPan: function() {
      this.panning = !1, this.$refs.canvasWrapper.style.cursor = "grab";
    },
    panCanvas: function(t) {
      if (!this.panning) return;
      const e = t.clientX - this.panStart.x, n = t.clientY - this.panStart.y;
      this.canvasOffset.x = this.panStartOffset.x + e, this.canvasOffset.y = this.panStartOffset.y + n, this.$refs.canvas.style.transform = `translate(${this.canvasOffset.x}px, ${this.canvasOffset.y}px) scale(${this.canvasScale})`;
    },
    initialStoryProps: function(t) {
      return { ...t.definition.args || {}, ...t.args || {} };
    }
  }
}, BX = {
  ref: "canvas",
  class: "canvas"
}, qX = {
  ref: "floatingCompRef",
  class: "floating-component-wrapper"
}, FX = {
  key: 0,
  class: "floating-comp"
};
function UX(t, e, n, r, i, o) {
  const s = Fc("tools"), a = Fc("embedded-component"), l = Fc("component-config");
  return St(), Kt("div", {
    class: "wrapper",
    onMouseup: e[8] || (e[8] = (...u) => o.onMouseUp && o.onMouseUp(...u))
  }, [
    HS(s, {
      stories: n.stories,
      "active-tool": t.activeTool,
      onSelectTool: o.selectTool,
      onMounted: o.updateToolsAfterMount
    }, null, 8, ["stories", "active-tool", "onSelectTool", "onMounted"]),
    $i("div", {
      ref: "canvasWrapper",
      class: "canvas-wrapper",
      onWheel: e[0] || (e[0] = (...u) => o.onWheel && o.onWheel(...u)),
      onMouseenter: e[1] || (e[1] = (...u) => o.onEnter && o.onEnter(...u)),
      onFocus: e[2] || (e[2] = (...u) => o.onEnter && o.onEnter(...u)),
      onMousemove: e[3] || (e[3] = (...u) => o.onMove && o.onMove(...u)),
      onMouseleave: e[4] || (e[4] = (...u) => o.onLeave && o.onLeave(...u)),
      onBlur: e[5] || (e[5] = (...u) => o.onLeave && o.onLeave(...u)),
      onClick: e[6] || (e[6] = (...u) => o.onClick && o.onClick(...u)),
      onMousedown: e[7] || (e[7] = (...u) => o.onMouseDown && o.onMouseDown(...u))
    }, [
      $i("div", BX, [
        $i("div", qX, [
          t.floatingComp ? (St(), Kt("div", FX, [
            (St(), Va(ap(t.floatingComp)))
          ])) : ri("", !0)
        ], 512),
        (St(!0), Kt(vo, null, Mo(t.embeddedComponents, (u, f) => (St(), Va(a, {
          key: f,
          "embedded-component": u,
          selected: f === t.selectedEmbeddedIndex,
          interactable: t.activeTool === "mouse",
          "canvas-scale": t.canvasScale,
          "slot-in-edit-mode": t.slotInEditMode,
          onMounted: (d) => o.updateEmbeddedComponentAfterMount(f, d),
          onResize: o.onResize,
          onMousedown: (d) => o.onMouseDownEmbedded(f, d)
        }, null, 8, ["embedded-component", "selected", "interactable", "canvas-scale", "slot-in-edit-mode", "onMounted", "onResize", "onMousedown"]))), 128))
      ], 512)
    ], 544),
    o.selectedComponent ? (St(), Va(l, {
      key: 0,
      component: o.selectedComponent,
      onUpdateProp: o.updateProp,
      onToggleSlot: o.toggleSlot,
      onEditSlot: o.editSlot
    }, null, 8, ["component", "onUpdateProp", "onToggleSlot", "onEditSlot"])) : ri("", !0)
  ], 32);
}
const GX = /* @__PURE__ */ id(LX, [["render", UX], ["__scopeId", "data-v-46f34669"]]);
export {
  GX as default
};
